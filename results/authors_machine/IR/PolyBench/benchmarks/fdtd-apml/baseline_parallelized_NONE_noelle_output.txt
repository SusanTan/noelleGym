make[1]: Entering directory '/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/PolyBench/benchmarks/fdtd-apml'
./runEnablers.sh fdtd-apml fdtd-apml.bc large "-lm -lstdc++ -lpthread -L/usr/lib64 -L/usr/lib" -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier
/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/PolyBench/benchmarks/fdtd-apml /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/PolyBench/benchmarks/fdtd-apml
Cloning https://github.com/scampanoni/virgil.git
Cloning into 'threadpool'...
/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/PolyBench/benchmarks/fdtd-apml
The IR has already been transformed for enabling parallelization
noelle-parallelizer baseline_with_metadata.bc -o baseline_parallelized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
noelle-meta-loop-embed baseline_with_metadata.bc -o afterLoopMetadata.bc
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopMetadata.so -LoopMetadata baseline_with_metadata.bc -o afterLoopMetadata.bc
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopMetadata.so -LoopMetadata baseline_with_metadata.bc -o afterLoopMetadata.bc
noelle-parallelization-planner afterLoopMetadata.bc -o baseline_with_parallel_plan.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
noelle-parallel-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Planner.so -planner afterLoopMetadata.bc -o baseline_with_parallel_plan.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Planner.so -planner afterLoopMetadata.bc -o baseline_with_parallel_plan.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Planner.so -planner afterLoopMetadata.bc -o baseline_with_parallel_plan.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
Planner: Start
Planner:  Fetching the program loops
Noelle: Filter out cold code
Noelle:  Function "main"
Noelle:  Function "kernel_fdtd_apml"
Noelle:     Loop "  %exitcond12 = icmp eq i64 %indvars.iv10, 512, !noelle.pdg.inst.id !67" (7.892764e+01%)
Noelle:     Loop "  %exitcond9 = icmp eq i64 %indvars.iv7, 512, !noelle.pdg.inst.id !105" (7.892750e+01%)
Noelle:     Loop "  %exitcond = icmp eq i64 %indvars.iv, 512, !noelle.pdg.inst.id !122" (3.893338e+01%)
Noelle:     Loop "  %exitcond6 = icmp eq i64 %indvars.iv4, 512, !noelle.pdg.inst.id !204" (3.988284e+01%)
Noelle:  Function "init_array"
Noelle:     Loop "  %exitcond20 = icmp eq i64 %indvars.iv18, 513, !noelle.pdg.inst.id !55" (5.445581e-05%)
Noelle:  Disable loop "4" as cold code
Noelle:     Loop "  %exitcond17 = icmp eq i64 %indvars.iv15, 513, !noelle.pdg.inst.id !73" (5.445581e-05%)
Noelle:  Disable loop "5" as cold code
Noelle:     Loop "  %exitcond14 = icmp eq i64 %indvars.iv12, 513, !noelle.pdg.inst.id !90" (5.445581e-05%)
Noelle:  Disable loop "6" as cold code
Noelle:     Loop "  %exitcond11 = icmp eq i64 %indvars.iv9, 513, !noelle.pdg.inst.id !107" (2.107220e+01%)
Noelle:     Loop "  %exitcond8 = icmp eq i64 %indvars.iv6, 513, !noelle.pdg.inst.id !115" (2.107217e+01%)
Noelle:     Loop "  %exitcond = icmp eq i64 %indvars.iv, 513, !noelle.pdg.inst.id !146" (2.101631e+01%)
Noelle:  Function "polybench_alloc_data"
Noelle:  Disable "polybench_alloc_data" as cold function
Noelle:  Function "xmalloc"
Noelle:  Disable "xmalloc" as cold function
Noelle:  Function "polybench_prepare_instruments"
Noelle:  Disable "polybench_prepare_instruments" as cold function
Noelle:  Function "polybench_timer_print"
Noelle:  Disable "polybench_timer_print" as cold function
Noelle:  Function "polybench_timer_stop"
Noelle:  Disable "polybench_timer_stop" as cold function
Noelle:  Function "polybench_timer_start"
Noelle:  Disable "polybench_timer_start" as cold function
Noelle:  Function "polybench_flush_cache"
Noelle:  Disable "polybench_flush_cache" as cold function
Noelle:  Function "print_array"
Noelle:  Disable "print_array" as cold function
Planner:    There are 7 loops in the program we are going to consider
Planner:  Filter out loops not worth considering
Planner:  There are 2 loop nesting trees in the program
Planner:    ID: 3 (1)
Planner:      Function: "init_array"
Planner:      Loop: "  %exitcond11 = icmp eq i64 %indvars.iv9, 513, !noelle.pdg.inst.id !107"
Planner:      Loop nesting level: 1
Planner:      Hotness = 2.107220e+01 %
Planner:      Average instructions per invocation = 2.978815e+09 %
Planner:      Average iterations per invocation = 5.130000e+02 %
Planner:    
Planner:      ID: 4 (2)
Planner:        Function: "init_array"
Planner:        Loop: "  %exitcond8 = icmp eq i64 %indvars.iv6, 513, !noelle.pdg.inst.id !115"
Planner:        Loop nesting level: 2
Planner:        Hotness = 2.107217e+01 %
Planner:        Average instructions per invocation = 5.806649e+06 %
Planner:        Average iterations per invocation = 5.139981e+02 %
Planner:      
Planner:        ID: 5 (3)
Planner:          Function: "init_array"
Planner:          Loop: "  %exitcond = icmp eq i64 %indvars.iv, 513, !noelle.pdg.inst.id !146"
Planner:          Loop nesting level: 3
Planner:          Hotness = 2.101631e+01 %
Planner:          Average instructions per invocation = 1.128900e+04 %
Planner:          Average iterations per invocation = 5.139999e+02 %
Planner:        
Planner:    ID: 6 (1)
Planner:      Function: "kernel_fdtd_apml"
Planner:      Loop: "  %exitcond12 = icmp eq i64 %indvars.iv10, 512, !noelle.pdg.inst.id !67"
Planner:      Loop nesting level: 1
Planner:      Hotness = 7.892764e+01 %
Planner:      Average instructions per invocation = 1.115739e+10 %
Planner:      Average iterations per invocation = 5.120000e+02 %
Planner:    
Planner:      ID: 7 (2)
Planner:        Function: "kernel_fdtd_apml"
Planner:        Loop: "  %exitcond9 = icmp eq i64 %indvars.iv7, 512, !noelle.pdg.inst.id !105"
Planner:        Loop nesting level: 2
Planner:        Hotness = 7.892750e+01 %
Planner:        Average instructions per invocation = 2.179175e+07 %
Planner:        Average iterations per invocation = 5.129980e+02 %
Planner:      
Planner:        ID: 8 (3)
Planner:          Function: "kernel_fdtd_apml"
Planner:          Loop: "  %exitcond = icmp eq i64 %indvars.iv, 512, !noelle.pdg.inst.id !122"
Planner:          Loop nesting level: 3
Planner:          Hotness = 3.893338e+01 %
Planner:          Average instructions per invocation = 2.099500e+04 %
Planner:          Average iterations per invocation = 5.130000e+02 %
Planner:        
Planner:        ID: 9 (3)
Planner:          Function: "kernel_fdtd_apml"
Planner:          Loop: "  %exitcond6 = icmp eq i64 %indvars.iv4, 512, !noelle.pdg.inst.id !204"
Planner:          Loop nesting level: 3
Planner:          Hotness = 3.988284e+01 %
Planner:          Average instructions per invocation = 2.150700e+04 %
Planner:          Average iterations per invocation = 5.130000e+02 %
Planner:        
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
Planner: LoopSelector: Start
Planner: LoopSelector:   Order of loops and their maximum savings
Planner: LoopSelector:    Loop 3
Planner: LoopSelector:      Function: "init_array"
Planner: LoopSelector:      Loop nesting level: 1
Planner: LoopSelector:      "  %exitcond11 = icmp eq i64 %indvars.iv9, 513, !noelle.pdg.inst.id !107"
Planner: LoopSelector:      Coverage: 2.107220e+01%
Planner: LoopSelector:      Whole-program savings = 2.107220e+01%
Planner: LoopSelector:      Loop savings = 1.000000e+02%
Planner: LoopSelector:    Loop 4
Planner: LoopSelector:      Function: "init_array"
Planner: LoopSelector:      Loop nesting level: 2
Planner: LoopSelector:      "  %exitcond8 = icmp eq i64 %indvars.iv6, 513, !noelle.pdg.inst.id !115"
Planner: LoopSelector:      Coverage: 2.107217e+01%
Planner: LoopSelector:      Whole-program savings = 2.107217e+01%
Planner: LoopSelector:      Loop savings = 1.000000e+02%
Planner: LoopSelector:    Loop 5
Planner: LoopSelector:      Function: "init_array"
Planner: LoopSelector:      Loop nesting level: 3
Planner: LoopSelector:      "  %exitcond = icmp eq i64 %indvars.iv, 513, !noelle.pdg.inst.id !146"
Planner: LoopSelector:      Coverage: 2.101631e+01%
Planner: LoopSelector:      Whole-program savings = 2.101631e+01%
Planner: LoopSelector:      Loop savings = 1.000000e+02%
Planner: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
Planner: LoopSelector: Start
Planner: LoopSelector:   Order of loops and their maximum savings
Planner: LoopSelector:    Loop 6
Planner: LoopSelector:      Function: "kernel_fdtd_apml"
Planner: LoopSelector:      Loop nesting level: 1
Planner: LoopSelector:      "  %exitcond12 = icmp eq i64 %indvars.iv10, 512, !noelle.pdg.inst.id !67"
Planner: LoopSelector:      Coverage: 7.892764e+01%
Planner: LoopSelector:      Whole-program savings = 7.892764e+01%
Planner: LoopSelector:      Loop savings = 1.000000e+02%
Planner: LoopSelector:    Loop 7
Planner: LoopSelector:      Function: "kernel_fdtd_apml"
Planner: LoopSelector:      Loop nesting level: 2
Planner: LoopSelector:      "  %exitcond9 = icmp eq i64 %indvars.iv7, 512, !noelle.pdg.inst.id !105"
Planner: LoopSelector:      Coverage: 7.892750e+01%
Planner: LoopSelector:      Whole-program savings = 7.892750e+01%
Planner: LoopSelector:      Loop savings = 1.000000e+02%
Planner: LoopSelector:    Loop 9
Planner: LoopSelector:      Function: "kernel_fdtd_apml"
Planner: LoopSelector:      Loop nesting level: 3
Planner: LoopSelector:      "  %exitcond6 = icmp eq i64 %indvars.iv4, 512, !noelle.pdg.inst.id !204"
Planner: LoopSelector:      Coverage: 3.988284e+01%
Planner: LoopSelector:      Whole-program savings = 3.988284e+01%
Planner: LoopSelector:      Loop savings = 1.000000e+02%
Planner: LoopSelector:    Loop 8
Planner: LoopSelector:      Function: "kernel_fdtd_apml"
Planner: LoopSelector:      Loop nesting level: 3
Planner: LoopSelector:      "  %exitcond = icmp eq i64 %indvars.iv, 512, !noelle.pdg.inst.id !122"
Planner: LoopSelector:      Coverage: 3.893338e+01%
Planner: LoopSelector:      Whole-program savings = 3.893338e+01%
Planner: LoopSelector:      Loop savings = 1.000000e+02%
Planner: LoopSelector: End
Planner:   Maximum time saved = 9.999983e+01% (14136208703)
Planner:   Maximum time saved with DOALL only = 9.999983e+01% (14136208703)
Planner: Exit
noelle-rm-function -function-name=SIMONE_CAMPANONI_IS_GOING_TO_REMOVE_THIS_FUNCTION code_with_prototypes.bc -o code_to_parallelize.bc
NOELLE: DeadFunctions: Start
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/RemoveFunction.so -noelle-rm-function -function-name=SIMONE_CAMPANONI_IS_GOING_TO_REMOVE_THIS_FUNCTION code_with_prototypes.bc -o code_to_parallelize.bc
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/RemoveFunction.so -noelle-rm-function -function-name=SIMONE_CAMPANONI_IS_GOING_TO_REMOVE_THIS_FUNCTION code_with_prototypes.bc -o code_to_parallelize.bc
RemoveFunction: Start
RemoveFunction:   Check if function "SIMONE_CAMPANONI_IS_GOING_TO_REMOVE_THIS_FUNCTION" exists
RemoveFunction:     The function exists
RemoveFunction:   Remove the function
RemoveFunction: Exit
NOELLE: DeadFunctions: Exit
noelle-parallelizer-loop code_to_parallelize.bc -o parallelized_unoptimized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
noelle-parallel-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Parallelizer.so -parallelizer code_to_parallelize.bc -o parallelized_unoptimized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Parallelizer.so -parallelizer code_to_parallelize.bc -o parallelized_unoptimized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Parallelizer.so -parallelizer code_to_parallelize.bc -o parallelized_unoptimized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
Parallelizer: Start
Parallelizer:  Analyzing the module code_to_parallelize.bc
Parallelizer:  Fetching the program loops
Noelle: Filter out cold code
Noelle:  Function "main"
Noelle:  Function "kernel_fdtd_apml"
Noelle:     Loop "  %exitcond12 = icmp eq i64 %indvars.iv10, 512, !noelle.pdg.inst.id !69" (7.892764e+01%)
Noelle:     Loop "  %exitcond9 = icmp eq i64 %indvars.iv7, 512, !noelle.pdg.inst.id !108" (7.892750e+01%)
Noelle:     Loop "  %exitcond = icmp eq i64 %indvars.iv, 512, !noelle.pdg.inst.id !126" (3.893338e+01%)
Noelle:     Loop "  %exitcond6 = icmp eq i64 %indvars.iv4, 512, !noelle.pdg.inst.id !208" (3.988284e+01%)
Noelle:  Function "init_array"
Noelle:     Loop "  %exitcond20 = icmp eq i64 %indvars.iv18, 513, !noelle.pdg.inst.id !57" (5.445581e-05%)
Noelle:  Disable loop "4" as cold code
Noelle:     Loop "  %exitcond17 = icmp eq i64 %indvars.iv15, 513, !noelle.pdg.inst.id !75" (5.445581e-05%)
Noelle:  Disable loop "5" as cold code
Noelle:     Loop "  %exitcond14 = icmp eq i64 %indvars.iv12, 513, !noelle.pdg.inst.id !92" (5.445581e-05%)
Noelle:  Disable loop "6" as cold code
Noelle:     Loop "  %exitcond11 = icmp eq i64 %indvars.iv9, 513, !noelle.pdg.inst.id !109" (2.107220e+01%)
Noelle:     Loop "  %exitcond8 = icmp eq i64 %indvars.iv6, 513, !noelle.pdg.inst.id !117" (2.107217e+01%)
Noelle:     Loop "  %exitcond = icmp eq i64 %indvars.iv, 513, !noelle.pdg.inst.id !148" (2.101631e+01%)
Noelle:  Function "polybench_alloc_data"
Noelle:  Disable "polybench_alloc_data" as cold function
Noelle:  Function "xmalloc"
Noelle:  Disable "xmalloc" as cold function
Noelle:  Function "polybench_flush_cache"
Noelle:  Disable "polybench_flush_cache" as cold function
Noelle:  Function "polybench_prepare_instruments"
Noelle:  Disable "polybench_prepare_instruments" as cold function
Noelle:  Function "polybench_timer_start"
Noelle:  Disable "polybench_timer_start" as cold function
Noelle:  Function "polybench_timer_stop"
Noelle:  Disable "polybench_timer_stop" as cold function
Noelle:  Function "polybench_timer_print"
Noelle:  Disable "polybench_timer_print" as cold function
Noelle:  Function "print_array"
Noelle:  Disable "print_array" as cold function
Parallelizer:    There are 7 loops in the program we are going to consider
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
Parallelizer: parallelizerLoop: Start
Parallelizer: parallelizerLoop:   Function = "init_array"
Parallelizer: parallelizerLoop:   Loop 3 = "  %exitcond11 = icmp eq i64 %indvars.iv9, 513, !noelle.pdg.inst.id !109"
Parallelizer: parallelizerLoop:   Nesting level = 1
Parallelizer: parallelizerLoop:   Number of threads to extract = 8
Parallelizer: parallelizerLoop:   Environment: live-in and live-out values
Parallelizer: parallelizerLoop:   Environment:   Live-in 0 = [513 x double]* %5
Parallelizer: parallelizerLoop:   Environment:   Live-in 1 = [513 x double]* %6
Parallelizer: parallelizerLoop:   Environment:   Live-in 2 = [513 x [513 x double]]* %7
Parallelizer: parallelizerLoop:   Environment:   Live-in 3 = [513 x [513 x double]]* %8
Parallelizer: parallelizerLoop:   Environment:   Live-in 4 = [513 x [513 x double]]* %9
Parallelizer: parallelizerLoop:   The loop has not been parallelized
Parallelizer: parallelizerLoop: Exit
Parallelizer: parallelizerLoop: Start
Parallelizer: parallelizerLoop:   Function = "init_array"
Parallelizer: parallelizerLoop:   Loop 4 = "  %exitcond8 = icmp eq i64 %indvars.iv6, 513, !noelle.pdg.inst.id !117"
Parallelizer: parallelizerLoop:   Nesting level = 2
Parallelizer: parallelizerLoop:   Number of threads to extract = 8
Parallelizer: parallelizerLoop:   Environment: live-in and live-out values
Parallelizer: parallelizerLoop:   Environment:   Live-in 0 = [513 x double]* %5
Parallelizer: parallelizerLoop:   Environment:   Live-in 1 = [513 x double]* %6
Parallelizer: parallelizerLoop:   Environment:   Live-in 2 = [513 x [513 x double]]* %7
Parallelizer: parallelizerLoop:   Environment:   Live-in 3 = [513 x [513 x double]]* %8
Parallelizer: parallelizerLoop:   Environment:   Live-in 4 = [513 x [513 x double]]* %9
Parallelizer: parallelizerLoop:   Environment:   Live-in 5 =   %indvars.iv9 = phi i64 [ %indvars.iv.next10, %87 ], [ 0, %.preheader.preheader ], !noelle.pdg.inst.id !108
Parallelizer: parallelizerLoop:   Environment:   Live-in 6 =   %47 = sitofp i32 %46 to double, !noelle.pdg.inst.id !113
Parallelizer: parallelizerLoop:   The loop has not been parallelized
Parallelizer: parallelizerLoop: Exit
Parallelizer: parallelizerLoop: Start
Parallelizer: parallelizerLoop:   Function = "init_array"
Parallelizer: parallelizerLoop:   Loop 5 = "  %exitcond = icmp eq i64 %indvars.iv, 513, !noelle.pdg.inst.id !148"
Parallelizer: parallelizerLoop:   Nesting level = 3
Parallelizer: parallelizerLoop:   Number of threads to extract = 8
Parallelizer: parallelizerLoop:   Environment: live-in and live-out values
Parallelizer: parallelizerLoop:   Environment:   Live-in 0 = [513 x [513 x double]]* %7
Parallelizer: parallelizerLoop:   Environment:   Live-in 1 = [513 x [513 x double]]* %8
Parallelizer: parallelizerLoop:   Environment:   Live-in 2 = [513 x [513 x double]]* %9
Parallelizer: parallelizerLoop:   Environment:   Live-in 3 =   %indvars.iv9 = phi i64 [ %indvars.iv.next10, %87 ], [ 0, %.preheader.preheader ], !noelle.pdg.inst.id !108
Parallelizer: parallelizerLoop:   Environment:   Live-in 4 =   %indvars.iv6 = phi i64 [ 0, %45 ], [ %indvars.iv.next7, %.loopexit.loopexit ], !noelle.pdg.inst.id !116
Parallelizer: parallelizerLoop:   Environment:   Live-in 5 =   %64 = fmul double %47, %63, !noelle.pdg.inst.id !139
Parallelizer: parallelizerLoop:   Environment:   Live-in 6 =   %67 = fmul double %47, %66, !noelle.pdg.inst.id !142
Parallelizer: parallelizerLoop:   Environment:   Live-in 7 =   %70 = fmul double %47, %69, !noelle.pdg.inst.id !145
Parallelizer: parallelizerLoop:   The loop has not been parallelized
Parallelizer: parallelizerLoop: Exit
Parallelizer: parallelizerLoop: Start
Parallelizer: parallelizerLoop:   Function = "kernel_fdtd_apml"
Parallelizer: parallelizerLoop:   Loop 6 = "  %exitcond12 = icmp eq i64 %indvars.iv10, 512, !noelle.pdg.inst.id !69"
Parallelizer: parallelizerLoop:   Nesting level = 1
Parallelizer: parallelizerLoop:   Number of threads to extract = 8
Parallelizer: parallelizerLoop:   Environment: live-in and live-out values
Parallelizer: parallelizerLoop:   Environment:   Live-in 0 =   %25 = load double, double* %21, align 8, !tbaa !56, !noelle.pdg.inst.id !61
Parallelizer: parallelizerLoop:   Environment:   Live-in 1 =   %26 = fdiv double %24, %25, !noelle.pdg.inst.id !62
Parallelizer: parallelizerLoop:   Environment:   Live-in 2 =   %27 = load double, double* %22, align 8, !tbaa !56, !noelle.pdg.inst.id !63
Parallelizer: parallelizerLoop:   Environment:   Live-in 3 =   %29 = fdiv double %27, %28, !noelle.pdg.inst.id !65
Parallelizer: parallelizerLoop:   Environment:   Live-in 4 =   %30 = fdiv double %4, %28, !noelle.pdg.inst.id !66
Parallelizer: parallelizerLoop:   Environment:   Live-in 5 = double %3
Parallelizer: parallelizerLoop:   Environment:   Live-in 6 = double %4
Parallelizer: parallelizerLoop:   Environment:   Live-in 7 = [513 x double]* %5
Parallelizer: parallelizerLoop:   Environment:   Live-in 8 = [513 x double]* %6
Parallelizer: parallelizerLoop:   Environment:   Live-in 9 = [513 x double]* %7
Parallelizer: parallelizerLoop:   Environment:   Live-in 10 = [513 x double]* %8
Parallelizer: parallelizerLoop:   Environment:   Live-in 11 = [513 x [513 x double]]* %9
Parallelizer: parallelizerLoop:   Environment:   Live-in 12 = [513 x [513 x double]]* %10
Parallelizer: parallelizerLoop:   Environment:   Live-in 13 = [513 x [513 x double]]* %11
Parallelizer: parallelizerLoop:   Environment:   Live-in 14 = [513 x [513 x double]]* %12
Parallelizer: parallelizerLoop:   Environment:   Live-in 15 = double* %13
Parallelizer: parallelizerLoop:   Environment:   Live-in 16 = double* %14
Parallelizer: parallelizerLoop:   Environment:   Live-in 17 = double* %15
Parallelizer: parallelizerLoop:   Environment:   Live-in 18 = double* %16
Parallelizer: parallelizerLoop:   Environment:   Live-in 19 = double* %17
Parallelizer: parallelizerLoop:   Environment:   Live-in 20 = double* %18
Parallelizer: parallelizerLoop:   The loop has not been parallelized
Parallelizer: parallelizerLoop: Exit
Parallelizer: parallelizerLoop: Start
Parallelizer: parallelizerLoop:   Function = "kernel_fdtd_apml"
Parallelizer: parallelizerLoop:   Loop 7 = "  %exitcond9 = icmp eq i64 %indvars.iv7, 512, !noelle.pdg.inst.id !108"
Parallelizer: parallelizerLoop:   Nesting level = 2
Parallelizer: parallelizerLoop:   Number of threads to extract = 8
Parallelizer: parallelizerLoop:   Environment: live-in and live-out values
Parallelizer: parallelizerLoop:   Environment:   Live-in 0 =   %26 = fdiv double %24, %25, !noelle.pdg.inst.id !62
Parallelizer: parallelizerLoop:   Environment:   Live-in 1 =   %27 = load double, double* %22, align 8, !tbaa !56, !noelle.pdg.inst.id !63
Parallelizer: parallelizerLoop:   Environment:   Live-in 2 = double %4
Parallelizer: parallelizerLoop:   Environment:   Live-in 3 = [513 x double]* %5
Parallelizer: parallelizerLoop:   Environment:   Live-in 4 = [513 x double]* %6
Parallelizer: parallelizerLoop:   Environment:   Live-in 5 = [513 x double]* %7
Parallelizer: parallelizerLoop:   Environment:   Live-in 6 = [513 x double]* %8
Parallelizer: parallelizerLoop:   Environment:   Live-in 7 = [513 x [513 x double]]* %9
Parallelizer: parallelizerLoop:   Environment:   Live-in 8 = [513 x [513 x double]]* %10
Parallelizer: parallelizerLoop:   Environment:   Live-in 9 = [513 x [513 x double]]* %11
Parallelizer: parallelizerLoop:   Environment:   Live-in 10 = [513 x [513 x double]]* %12
Parallelizer: parallelizerLoop:   Environment:   Live-in 11 = double* %15
Parallelizer: parallelizerLoop:   Environment:   Live-in 12 = double* %16
Parallelizer: parallelizerLoop:   Environment:   Live-in 13 = double* %17
Parallelizer: parallelizerLoop:   Environment:   Live-in 14 = double* %18
Parallelizer: parallelizerLoop:   Environment:   Live-in 15 =   %indvars.iv10 = phi i64 [ %indvars.iv.next11, %183 ], [ 0, %19 ], !noelle.pdg.inst.id !68
Parallelizer: parallelizerLoop:   Environment:   Live-in 16 =   %40 = getelementptr inbounds [513 x [513 x double]], [513 x [513 x double]]* %12, i64 %indvars.iv10, i64 512, i64 512, !noelle.pdg.inst.id !81
Parallelizer: parallelizerLoop:   Environment:   Live-in 17 =   %41 = bitcast double* %39 to i64*, !noelle.pdg.inst.id !82
Parallelizer: parallelizerLoop:   Environment:   Live-in 18 =   %43 = fmul double %42, %3, !noelle.pdg.inst.id !84
Parallelizer: parallelizerLoop:   Environment:   Live-in 19 =   %45 = fmul double %44, %3, !noelle.pdg.inst.id !86
Parallelizer: parallelizerLoop:   Environment:   Live-in 20 =   %46 = fdiv double %43, %25, !noelle.pdg.inst.id !87
Parallelizer: parallelizerLoop:   Environment:   Live-in 21 =   %47 = fdiv double %45, %25, !noelle.pdg.inst.id !88
Parallelizer: parallelizerLoop:   Environment:   Live-in 22 =   %54 = fsub double %52, %53, !noelle.pdg.inst.id !95
Parallelizer: parallelizerLoop:   Environment:   Live-in 23 =   %58 = fsub double %56, %57, !noelle.pdg.inst.id !99
Parallelizer: parallelizerLoop:   Environment:   Live-in 24 =   %64 = fsub double %62, %63, !noelle.pdg.inst.id !105
Parallelizer: parallelizerLoop:   The loop has not been parallelized
Parallelizer: parallelizerLoop: Exit
Parallelizer: parallelizerLoop: Start
Parallelizer: parallelizerLoop:   Function = "kernel_fdtd_apml"
Parallelizer: parallelizerLoop:   Loop 9 = "  %exitcond6 = icmp eq i64 %indvars.iv4, 512, !noelle.pdg.inst.id !208"
Parallelizer: parallelizerLoop:   Nesting level = 3
Parallelizer: parallelizerLoop:   Number of threads to extract = 8
Parallelizer: parallelizerLoop:   Environment: live-in and live-out values
Parallelizer: parallelizerLoop:   Environment:   Live-in 0 =   %143 = fdiv double %27, %142, !noelle.pdg.inst.id !203
Parallelizer: parallelizerLoop:   Environment:   Live-in 1 =   %144 = fdiv double %4, %142, !noelle.pdg.inst.id !204
Parallelizer: parallelizerLoop:   Environment:   Live-in 2 =   %145 = load i64, i64* %71, align 8, !tbaa !56, !noelle.pdg.inst.id !205
Parallelizer: parallelizerLoop:   Environment:   Live-in 3 =   %indvars.iv7 = phi i64 [ %indvars.iv.next8, %181 ], [ 0, %32 ], !noelle.pdg.inst.id !107
Parallelizer: parallelizerLoop:   Environment:   Live-in 4 = [513 x double]* %5
Parallelizer: parallelizerLoop:   Environment:   Live-in 5 = [513 x [513 x double]]* %9
Parallelizer: parallelizerLoop:   Environment:   Live-in 6 = [513 x [513 x double]]* %10
Parallelizer: parallelizerLoop:   Environment:   Live-in 7 = [513 x [513 x double]]* %11
Parallelizer: parallelizerLoop:   Environment:   Live-in 8 = [513 x [513 x double]]* %12
Parallelizer: parallelizerLoop:   Environment:   Live-in 9 = double* %15
Parallelizer: parallelizerLoop:   Environment:   Live-in 10 = double* %16
Parallelizer: parallelizerLoop:   Environment:   Live-in 11 =   %indvars.iv10 = phi i64 [ %indvars.iv.next11, %183 ], [ 0, %19 ], !noelle.pdg.inst.id !68
Parallelizer: parallelizerLoop:   Environment:   Live-in 12 =   %43 = fmul double %42, %3, !noelle.pdg.inst.id !84
Parallelizer: parallelizerLoop:   Environment:   Live-in 13 =   %45 = fmul double %44, %3, !noelle.pdg.inst.id !86
Parallelizer: parallelizerLoop:   Environment:   Live-in 14 =   %67 = getelementptr inbounds [513 x double], [513 x double]* %7, i64 %indvars.iv10, i64 %indvars.iv7, !noelle.pdg.inst.id !114
Parallelizer: parallelizerLoop:   Environment:   Live-in 15 =   %70 = getelementptr inbounds [513 x double], [513 x double]* %8, i64 %indvars.iv10, i64 %indvars.iv7, !noelle.pdg.inst.id !117
Parallelizer: parallelizerLoop:   The loop has not been parallelized
Parallelizer: parallelizerLoop: Exit
Parallelizer: parallelizerLoop: Start
Parallelizer: parallelizerLoop:   Function = "kernel_fdtd_apml"
Parallelizer: parallelizerLoop:   Loop 8 = "  %exitcond = icmp eq i64 %indvars.iv, 512, !noelle.pdg.inst.id !126"
Parallelizer: parallelizerLoop:   Nesting level = 3
Parallelizer: parallelizerLoop:   Number of threads to extract = 8
Parallelizer: parallelizerLoop:   Environment: live-in and live-out values
Parallelizer: parallelizerLoop:   Environment:   Live-in 0 =   %indvars.iv7 = phi i64 [ %indvars.iv.next8, %181 ], [ 0, %32 ], !noelle.pdg.inst.id !107
Parallelizer: parallelizerLoop:   Environment:   Live-in 1 = [513 x [513 x double]]* %9
Parallelizer: parallelizerLoop:   Environment:   Live-in 2 = [513 x [513 x double]]* %10
Parallelizer: parallelizerLoop:   Environment:   Live-in 3 = [513 x [513 x double]]* %11
Parallelizer: parallelizerLoop:   Environment:   Live-in 4 = [513 x [513 x double]]* %12
Parallelizer: parallelizerLoop:   Environment:   Live-in 5 = double* %15
Parallelizer: parallelizerLoop:   Environment:   Live-in 6 = double* %16
Parallelizer: parallelizerLoop:   Environment:   Live-in 7 =   %indvars.iv10 = phi i64 [ %indvars.iv.next11, %183 ], [ 0, %19 ], !noelle.pdg.inst.id !68
Parallelizer: parallelizerLoop:   Environment:   Live-in 8 =   %43 = fmul double %42, %3, !noelle.pdg.inst.id !84
Parallelizer: parallelizerLoop:   Environment:   Live-in 9 =   %45 = fmul double %44, %3, !noelle.pdg.inst.id !86
Parallelizer: parallelizerLoop:   Environment:   Live-in 10 =   %indvars.iv.next8 = add nuw nsw i64 %indvars.iv7, 1, !noelle.pdg.inst.id !113
Parallelizer: parallelizerLoop:   Environment:   Live-in 11 =   %67 = getelementptr inbounds [513 x double], [513 x double]* %7, i64 %indvars.iv10, i64 %indvars.iv7, !noelle.pdg.inst.id !114
Parallelizer: parallelizerLoop:   Environment:   Live-in 12 =   %70 = getelementptr inbounds [513 x double], [513 x double]* %8, i64 %indvars.iv10, i64 %indvars.iv7, !noelle.pdg.inst.id !117
Parallelizer: parallelizerLoop:   Environment:   Live-in 13 =   %74 = fdiv double %72, %73, !noelle.pdg.inst.id !121
Parallelizer: parallelizerLoop:   Environment:   Live-in 14 =   %75 = fdiv double %4, %73, !noelle.pdg.inst.id !122
Parallelizer: parallelizerLoop:   Environment:   Live-in 15 =   %76 = load i64, i64* %71, align 8, !tbaa !56, !noelle.pdg.inst.id !123
Parallelizer: parallelizerLoop:   The loop has not been parallelized
Parallelizer: parallelizerLoop: Exit
Parallelizer: Exit
noelle-meta-clean parallelized_unoptimized.bc parallelized_unoptimized.bc
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CleanMetadata.so -CleanMetadata -clean-loop-metadata=true -clean-prof-metadata=true -clean-pdg-metadata=true parallelized_unoptimized.bc -o parallelized_unoptimized.bc
noelle/core/Clean Loop Metadata
noelle/core/Clean PDG Metadata
noelle/core/Clean profiler metadata
opt --strip-named-metadata parallelized_unoptimized.bc -o parallelized_unoptimized.bc
clang -O3 -c -emit-llvm parallelized_unoptimized.bc -o baseline_parallelized.bc
clang -O3 -c -emit-llvm baseline_parallelized.bc -o baseline_parallelized.bc
cp baseline_parallelized.bc fdtd-apml.bc
make[1]: Leaving directory '/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/PolyBench/benchmarks/fdtd-apml'
