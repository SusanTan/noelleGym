make[1]: Entering directory '/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/PolyBench/benchmarks/adi'
./runEnablers.sh adi adi.bc large "-lm -lstdc++ -lpthread -L/usr/lib64 -L/usr/lib" -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier
/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/PolyBench/benchmarks/adi /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/PolyBench/benchmarks/adi
Cloning https://github.com/scampanoni/virgil.git
Cloning into 'threadpool'...
/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/PolyBench/benchmarks/adi
The IR has already been transformed for enabling parallelization
noelle-parallelizer baseline_with_metadata.bc -o baseline_parallelized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
noelle-meta-loop-embed baseline_with_metadata.bc -o afterLoopMetadata.bc
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopMetadata.so -LoopMetadata baseline_with_metadata.bc -o afterLoopMetadata.bc
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopMetadata.so -LoopMetadata baseline_with_metadata.bc -o afterLoopMetadata.bc
noelle-parallelization-planner afterLoopMetadata.bc -o baseline_with_parallel_plan.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
noelle-parallel-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Planner.so -planner afterLoopMetadata.bc -o baseline_with_parallel_plan.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Planner.so -planner afterLoopMetadata.bc -o baseline_with_parallel_plan.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Planner.so -planner afterLoopMetadata.bc -o baseline_with_parallel_plan.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
Planner: Start
Planner:  Fetching the program loops
Noelle: Filter out cold code
Noelle:  Function "main"
Noelle:  Function "kernel_adi"
Noelle:     Loop "  %exitcond43 = icmp eq i32 %.06, 50, !noelle.pdg.inst.id !38" (9.938280e+01%)
Noelle:     Loop "  %exitcond18 = icmp eq i64 %indvars.iv16, 2000, !noelle.pdg.inst.id !44" (2.970148e+01%)
Noelle:     Loop "  %exitcond = icmp eq i64 %indvars.iv, 2000, !noelle.pdg.inst.id !51" (2.969805e+01%)
Noelle:     Loop "  %exitcond21 = icmp eq i64 %indvars.iv19, 2000, !noelle.pdg.inst.id !85" (6.285916e-03%)
Noelle:  Disable loop "3" as cold code
Noelle:     Loop "  %exitcond27 = icmp eq i64 %indvars.iv25, 2000, !noelle.pdg.inst.id !98" (2.169546e+01%)
Noelle:     Loop "  %exitcond24 = icmp eq i64 %indvars.iv22, 1998, !noelle.pdg.inst.id !104" (2.169203e+01%)
Noelle:     Loop "  %exitcond33 = icmp eq i64 %indvars.iv31, 2000, !noelle.pdg.inst.id !127" (2.855988e+01%)
Noelle:     Loop "  %exitcond30 = icmp eq i64 %indvars.iv28, 2000, !noelle.pdg.inst.id !135" (2.855588e+01%)
Noelle:     Loop "  %exitcond36 = icmp eq i64 %indvars.iv34, 2000, !noelle.pdg.inst.id !164" (6.285916e-03%)
Noelle:  Disable loop "8" as cold code
Noelle:     Loop "  %exitcond42 = icmp eq i64 %indvars.iv40, 1998, !noelle.pdg.inst.id !177" (1.941340e+01%)
Noelle:     Loop "  %exitcond39 = icmp eq i64 %indvars.iv37, 2000, !noelle.pdg.inst.id !185" (1.940884e+01%)
Noelle:  Function "init_array"
Noelle:     Loop "  %exitcond5 = icmp eq i64 %indvars.iv3, 2000, !noelle.pdg.inst.id !37" (6.172046e-01%)
Noelle:     Loop "  %exitcond = icmp eq i64 %indvars.iv, 2000, !noelle.pdg.inst.id !45" (6.171132e-01%)
Noelle:  Function "polybench_alloc_data"
Noelle:  Disable "polybench_alloc_data" as cold function
Noelle:  Function "xmalloc"
Noelle:  Disable "xmalloc" as cold function
Noelle:  Function "polybench_prepare_instruments"
Noelle:  Disable "polybench_prepare_instruments" as cold function
Noelle:  Function "polybench_timer_print"
Noelle:  Disable "polybench_timer_print" as cold function
Noelle:  Function "polybench_timer_stop"
Noelle:  Disable "polybench_timer_stop" as cold function
Noelle:  Function "polybench_timer_start"
Noelle:  Disable "polybench_timer_start" as cold function
Noelle:  Function "polybench_flush_cache"
Noelle:  Disable "polybench_flush_cache" as cold function
Noelle:  Function "print_array"
Noelle:  Disable "print_array" as cold function
Planner:    There are 11 loops in the program we are going to consider
Planner:  Filter out loops not worth considering
Planner:  There are 2 loop nesting trees in the program
Planner:    ID: 0 (1)
Planner:      Function: "init_array"
Planner:      Loop: "  %exitcond5 = icmp eq i64 %indvars.iv3, 2000, !noelle.pdg.inst.id !37"
Planner:      Loop nesting level: 1
Planner:      Hotness = 6.172046e-01 %
Planner:      Average instructions per invocation = 1.080221e+08 %
Planner:      Average iterations per invocation = 2.000000e+03 %
Planner:    
Planner:      ID: 1 (2)
Planner:        Function: "init_array"
Planner:        Loop: "  %exitcond = icmp eq i64 %indvars.iv, 2000, !noelle.pdg.inst.id !45"
Planner:        Loop nesting level: 2
Planner:        Hotness = 6.171132e-01 %
Planner:        Average instructions per invocation = 5.400303e+04 %
Planner:        Average iterations per invocation = 2.001001e+03 %
Planner:      
Planner:    ID: 2 (1)
Planner:      Function: "kernel_adi"
Planner:      Loop: "  %exitcond43 = icmp eq i32 %.06, 50, !noelle.pdg.inst.id !38"
Planner:      Loop nesting level: 1
Planner:      Hotness = 9.938280e+01 %
Planner:      Average instructions per invocation = 1.739380e+10 %
Planner:      Average iterations per invocation = 5.000000e+01 %
Planner:    
Planner:      ID: 8 (2)
Planner:        Function: "kernel_adi"
Planner:        Loop: "  %exitcond33 = icmp eq i64 %indvars.iv31, 2000, !noelle.pdg.inst.id !127"
Planner:        Loop nesting level: 2
Planner:        Hotness = 2.855988e+01 %
Planner:        Average instructions per invocation = 9.997000e+07 %
Planner:        Average iterations per invocation = 1.999980e+03 %
Planner:      
Planner:        ID: 9 (3)
Planner:          Function: "kernel_adi"
Planner:          Loop: "  %exitcond30 = icmp eq i64 %indvars.iv28, 2000, !noelle.pdg.inst.id !135"
Planner:          Loop nesting level: 3
Planner:          Hotness = 2.855588e+01 %
Planner:          Average instructions per invocation = 5.000300e+04 %
Planner:          Average iterations per invocation = 2.001000e+03 %
Planner:        
Planner:      ID: 11 (2)
Planner:        Function: "kernel_adi"
Planner:        Loop: "  %exitcond42 = icmp eq i64 %indvars.iv40, 1998, !noelle.pdg.inst.id !177"
Planner:        Loop nesting level: 2
Planner:        Hotness = 1.941340e+01 %
Planner:        Average instructions per invocation = 6.795399e+07 %
Planner:        Average iterations per invocation = 1.998980e+03 %
Planner:      
Planner:        ID: 12 (3)
Planner:          Function: "kernel_adi"
Planner:          Loop: "  %exitcond39 = icmp eq i64 %indvars.iv37, 2000, !noelle.pdg.inst.id !185"
Planner:          Loop nesting level: 3
Planner:          Hotness = 1.940884e+01 %
Planner:          Average instructions per invocation = 3.400301e+04 %
Planner:          Average iterations per invocation = 2.001000e+03 %
Planner:        
Planner:      ID: 6 (2)
Planner:        Function: "kernel_adi"
Planner:        Loop: "  %exitcond27 = icmp eq i64 %indvars.iv25, 2000, !noelle.pdg.inst.id !98"
Planner:        Loop nesting level: 2
Planner:        Hotness = 2.169546e+01 %
Planner:        Average instructions per invocation = 7.594202e+07 %
Planner:        Average iterations per invocation = 2.000980e+03 %
Planner:      
Planner:        ID: 7 (3)
Planner:          Function: "kernel_adi"
Planner:          Loop: "  %exitcond24 = icmp eq i64 %indvars.iv22, 1998, !noelle.pdg.inst.id !104"
Planner:          Loop nesting level: 3
Planner:          Hotness = 2.169203e+01 %
Planner:          Average instructions per invocation = 3.796501e+04 %
Planner:          Average iterations per invocation = 1.999000e+03 %
Planner:        
Planner:      ID: 3 (2)
Planner:        Function: "kernel_adi"
Planner:        Loop: "  %exitcond18 = icmp eq i64 %indvars.iv16, 2000, !noelle.pdg.inst.id !44"
Planner:        Loop nesting level: 2
Planner:        Hotness = 2.970148e+01 %
Planner:        Average instructions per invocation = 1.039660e+08 %
Planner:        Average iterations per invocation = 2.000980e+03 %
Planner:      
Planner:        ID: 4 (3)
Planner:          Function: "kernel_adi"
Planner:          Loop: "  %exitcond = icmp eq i64 %indvars.iv, 2000, !noelle.pdg.inst.id !51"
Planner:          Loop nesting level: 3
Planner:          Hotness = 2.969805e+01 %
Planner:          Average instructions per invocation = 5.197700e+04 %
Planner:          Average iterations per invocation = 2.000000e+03 %
Planner:        
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
Planner: LoopSelector:  Loop 0 saves only 6.172046e-01 when parallelized. Skip it
Planner: LoopSelector:  Loop 1 saves only 6.171132e-01 when parallelized. Skip it
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
Planner: LoopSelector: Start
Planner: LoopSelector:   Order of loops and their maximum savings
Planner: LoopSelector:    Loop 2
Planner: LoopSelector:      Function: "kernel_adi"
Planner: LoopSelector:      Loop nesting level: 1
Planner: LoopSelector:      "  %exitcond43 = icmp eq i32 %.06, 50, !noelle.pdg.inst.id !38"
Planner: LoopSelector:      Coverage: 9.938280e+01%
Planner: LoopSelector:      Whole-program savings = 9.938280e+01%
Planner: LoopSelector:      Loop savings = 1.000000e+02%
Planner: LoopSelector:    Loop 3
Planner: LoopSelector:      Function: "kernel_adi"
Planner: LoopSelector:      Loop nesting level: 2
Planner: LoopSelector:      "  %exitcond18 = icmp eq i64 %indvars.iv16, 2000, !noelle.pdg.inst.id !44"
Planner: LoopSelector:      Coverage: 2.970148e+01%
Planner: LoopSelector:      Whole-program savings = 2.970148e+01%
Planner: LoopSelector:      Loop savings = 1.000000e+02%
Planner: LoopSelector:    Loop 4
Planner: LoopSelector:      Function: "kernel_adi"
Planner: LoopSelector:      Loop nesting level: 3
Planner: LoopSelector:      "  %exitcond = icmp eq i64 %indvars.iv, 2000, !noelle.pdg.inst.id !51"
Planner: LoopSelector:      Coverage: 2.969805e+01%
Planner: LoopSelector:      Whole-program savings = 2.969805e+01%
Planner: LoopSelector:      Loop savings = 1.000000e+02%
Planner: LoopSelector:    Loop 8
Planner: LoopSelector:      Function: "kernel_adi"
Planner: LoopSelector:      Loop nesting level: 2
Planner: LoopSelector:      "  %exitcond33 = icmp eq i64 %indvars.iv31, 2000, !noelle.pdg.inst.id !127"
Planner: LoopSelector:      Coverage: 2.855988e+01%
Planner: LoopSelector:      Whole-program savings = 2.855988e+01%
Planner: LoopSelector:      Loop savings = 1.000000e+02%
Planner: LoopSelector:    Loop 9
Planner: LoopSelector:      Function: "kernel_adi"
Planner: LoopSelector:      Loop nesting level: 3
Planner: LoopSelector:      "  %exitcond30 = icmp eq i64 %indvars.iv28, 2000, !noelle.pdg.inst.id !135"
Planner: LoopSelector:      Coverage: 2.855588e+01%
Planner: LoopSelector:      Whole-program savings = 2.855588e+01%
Planner: LoopSelector:      Loop savings = 1.000000e+02%
Planner: LoopSelector:    Loop 6
Planner: LoopSelector:      Function: "kernel_adi"
Planner: LoopSelector:      Loop nesting level: 2
Planner: LoopSelector:      "  %exitcond27 = icmp eq i64 %indvars.iv25, 2000, !noelle.pdg.inst.id !98"
Planner: LoopSelector:      Coverage: 2.169546e+01%
Planner: LoopSelector:      Whole-program savings = 2.169546e+01%
Planner: LoopSelector:      Loop savings = 1.000000e+02%
Planner: LoopSelector:    Loop 7
Planner: LoopSelector:      Function: "kernel_adi"
Planner: LoopSelector:      Loop nesting level: 3
Planner: LoopSelector:      "  %exitcond24 = icmp eq i64 %indvars.iv22, 1998, !noelle.pdg.inst.id !104"
Planner: LoopSelector:      Coverage: 2.169203e+01%
Planner: LoopSelector:      Whole-program savings = 2.169203e+01%
Planner: LoopSelector:      Loop savings = 1.000000e+02%
Planner: LoopSelector:    Loop 11
Planner: LoopSelector:      Function: "kernel_adi"
Planner: LoopSelector:      Loop nesting level: 2
Planner: LoopSelector:      "  %exitcond42 = icmp eq i64 %indvars.iv40, 1998, !noelle.pdg.inst.id !177"
Planner: LoopSelector:      Coverage: 1.941340e+01%
Planner: LoopSelector:      Whole-program savings = 1.941340e+01%
Planner: LoopSelector:      Loop savings = 1.000000e+02%
Planner: LoopSelector:    Loop 12
Planner: LoopSelector:      Function: "kernel_adi"
Planner: LoopSelector:      Loop nesting level: 3
Planner: LoopSelector:      "  %exitcond39 = icmp eq i64 %indvars.iv37, 2000, !noelle.pdg.inst.id !185"
Planner: LoopSelector:      Coverage: 1.940884e+01%
Planner: LoopSelector:      Whole-program savings = 1.940884e+01%
Planner: LoopSelector:      Loop savings = 1.000000e+02%
Planner: LoopSelector: End
Planner:   Maximum time saved = 9.938280e+01% (17393801311)
Planner:   Maximum time saved with DOALL only = 9.938280e+01% (17393801311)
Planner: Exit
noelle-rm-function -function-name=SIMONE_CAMPANONI_IS_GOING_TO_REMOVE_THIS_FUNCTION code_with_prototypes.bc -o code_to_parallelize.bc
NOELLE: DeadFunctions: Start
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/RemoveFunction.so -noelle-rm-function -function-name=SIMONE_CAMPANONI_IS_GOING_TO_REMOVE_THIS_FUNCTION code_with_prototypes.bc -o code_to_parallelize.bc
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/RemoveFunction.so -noelle-rm-function -function-name=SIMONE_CAMPANONI_IS_GOING_TO_REMOVE_THIS_FUNCTION code_with_prototypes.bc -o code_to_parallelize.bc
RemoveFunction: Start
RemoveFunction:   Check if function "SIMONE_CAMPANONI_IS_GOING_TO_REMOVE_THIS_FUNCTION" exists
RemoveFunction:     The function exists
RemoveFunction:   Remove the function
RemoveFunction: Exit
NOELLE: DeadFunctions: Exit
noelle-parallelizer-loop code_to_parallelize.bc -o parallelized_unoptimized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
noelle-parallel-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Parallelizer.so -parallelizer code_to_parallelize.bc -o parallelized_unoptimized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Parallelizer.so -parallelizer code_to_parallelize.bc -o parallelized_unoptimized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Parallelizer.so -parallelizer code_to_parallelize.bc -o parallelized_unoptimized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
Parallelizer: Start
Parallelizer:  Analyzing the module code_to_parallelize.bc
Parallelizer:  Fetching the program loops
Noelle: Filter out cold code
Noelle:  Function "main"
Noelle:  Function "kernel_adi"
Noelle:     Loop "  %exitcond43 = icmp eq i32 %.06, 50, !noelle.pdg.inst.id !40" (9.938280e+01%)
Noelle:     Loop "  %exitcond18 = icmp eq i64 %indvars.iv16, 2000, !noelle.pdg.inst.id !47" (2.970148e+01%)
Noelle:     Loop "  %exitcond = icmp eq i64 %indvars.iv, 2000, !noelle.pdg.inst.id !55" (2.969805e+01%)
Noelle:     Loop "  %exitcond21 = icmp eq i64 %indvars.iv19, 2000, !noelle.pdg.inst.id !89" (6.285916e-03%)
Noelle:  Disable loop "3" as cold code
Noelle:     Loop "  %exitcond27 = icmp eq i64 %indvars.iv25, 2000, !noelle.pdg.inst.id !102" (2.169546e+01%)
Noelle:     Loop "  %exitcond24 = icmp eq i64 %indvars.iv22, 1998, !noelle.pdg.inst.id !108" (2.169203e+01%)
Noelle:     Loop "  %exitcond33 = icmp eq i64 %indvars.iv31, 2000, !noelle.pdg.inst.id !131" (2.855988e+01%)
Noelle:     Loop "  %exitcond30 = icmp eq i64 %indvars.iv28, 2000, !noelle.pdg.inst.id !139" (2.855588e+01%)
Noelle:     Loop "  %exitcond36 = icmp eq i64 %indvars.iv34, 2000, !noelle.pdg.inst.id !168" (6.285916e-03%)
Noelle:  Disable loop "8" as cold code
Noelle:     Loop "  %exitcond42 = icmp eq i64 %indvars.iv40, 1998, !noelle.pdg.inst.id !181" (1.941340e+01%)
Noelle:     Loop "  %exitcond39 = icmp eq i64 %indvars.iv37, 2000, !noelle.pdg.inst.id !189" (1.940884e+01%)
Noelle:  Function "init_array"
Noelle:     Loop "  %exitcond5 = icmp eq i64 %indvars.iv3, 2000, !noelle.pdg.inst.id !39" (6.172046e-01%)
Noelle:     Loop "  %exitcond = icmp eq i64 %indvars.iv, 2000, !noelle.pdg.inst.id !47" (6.171132e-01%)
Noelle:  Function "polybench_alloc_data"
Noelle:  Disable "polybench_alloc_data" as cold function
Noelle:  Function "xmalloc"
Noelle:  Disable "xmalloc" as cold function
Noelle:  Function "polybench_flush_cache"
Noelle:  Disable "polybench_flush_cache" as cold function
Noelle:  Function "polybench_prepare_instruments"
Noelle:  Disable "polybench_prepare_instruments" as cold function
Noelle:  Function "polybench_timer_start"
Noelle:  Disable "polybench_timer_start" as cold function
Noelle:  Function "polybench_timer_stop"
Noelle:  Disable "polybench_timer_stop" as cold function
Noelle:  Function "polybench_timer_print"
Noelle:  Disable "polybench_timer_print" as cold function
Noelle:  Function "print_array"
Noelle:  Disable "print_array" as cold function
Parallelizer:    There are 11 loops in the program we are going to consider
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
Parallelizer: parallelizerLoop: Start
Parallelizer: parallelizerLoop:   Function = "kernel_adi"
Parallelizer: parallelizerLoop:   Loop 2 = "  %exitcond43 = icmp eq i32 %.06, 50, !noelle.pdg.inst.id !40"
Parallelizer: parallelizerLoop:   Nesting level = 1
Parallelizer: parallelizerLoop:   Number of threads to extract = 8
Parallelizer: parallelizerLoop:   Environment: live-in and live-out values
Parallelizer: parallelizerLoop:   Environment:   Live-in 0 = [2000 x double]* %2
Parallelizer: parallelizerLoop:   Environment:   Live-in 1 = [2000 x double]* %3
Parallelizer: parallelizerLoop:   Environment:   Live-in 2 = [2000 x double]* %4
Parallelizer: parallelizerLoop:   The loop has not been parallelized
Parallelizer: parallelizerLoop: Exit
Parallelizer: parallelizerLoop: Start
Parallelizer: parallelizerLoop:   Function = "kernel_adi"
Parallelizer: parallelizerLoop:   Loop 3 = "  %exitcond18 = icmp eq i64 %indvars.iv16, 2000, !noelle.pdg.inst.id !47"
Parallelizer: parallelizerLoop:   Nesting level = 2
Parallelizer: parallelizerLoop:   Number of threads to extract = 8
Parallelizer: parallelizerLoop:   Environment: live-in and live-out values
Parallelizer: parallelizerLoop:   Environment:   Live-in 0 = [2000 x double]* %2
Parallelizer: parallelizerLoop:   Environment:   Live-in 1 = [2000 x double]* %3
Parallelizer: parallelizerLoop:   Environment:   Live-in 2 = [2000 x double]* %4
Parallelizer: parallelizerLoop:   The loop has not been parallelized
Parallelizer: parallelizerLoop: Exit
Parallelizer: parallelizerLoop: Start
Parallelizer: parallelizerLoop:   Function = "kernel_adi"
Parallelizer: parallelizerLoop:   Loop 4 = "  %exitcond = icmp eq i64 %indvars.iv, 2000, !noelle.pdg.inst.id !55"
Parallelizer: parallelizerLoop:   Nesting level = 3
Parallelizer: parallelizerLoop:   Number of threads to extract = 8
Parallelizer: parallelizerLoop:   Environment: live-in and live-out values
Parallelizer: parallelizerLoop:   Environment:   Live-in 0 =   %indvars.iv16 = phi i64 [ %indvars.iv.next17, %27 ], [ 0, %.preheader11.preheader ], !noelle.pdg.inst.id !46
Parallelizer: parallelizerLoop:   Environment:   Live-in 1 = [2000 x double]* %2
Parallelizer: parallelizerLoop:   Environment:   Live-in 2 = [2000 x double]* %3
Parallelizer: parallelizerLoop:   Environment:   Live-in 3 = [2000 x double]* %4
Parallelizer: parallelizerLoop:   The loop has not been parallelized
Parallelizer: parallelizerLoop: Exit
Parallelizer: parallelizerLoop: Start
Parallelizer: parallelizerLoop:   Function = "kernel_adi"
Parallelizer: parallelizerLoop:   Loop 8 = "  %exitcond33 = icmp eq i64 %indvars.iv31, 2000, !noelle.pdg.inst.id !131"
Parallelizer: parallelizerLoop:   Nesting level = 2
Parallelizer: parallelizerLoop:   Number of threads to extract = 8
Parallelizer: parallelizerLoop:   Environment: live-in and live-out values
Parallelizer: parallelizerLoop:   Environment:   Live-in 0 = [2000 x double]* %2
Parallelizer: parallelizerLoop:   Environment:   Live-in 1 = [2000 x double]* %3
Parallelizer: parallelizerLoop:   Environment:   Live-in 2 = [2000 x double]* %4
Parallelizer: parallelizerLoop:   The loop has not been parallelized
Parallelizer: parallelizerLoop: Exit
Parallelizer: parallelizerLoop: Start
Parallelizer: parallelizerLoop:   Function = "kernel_adi"
Parallelizer: parallelizerLoop:   Loop 9 = "  %exitcond30 = icmp eq i64 %indvars.iv28, 2000, !noelle.pdg.inst.id !139"
Parallelizer: parallelizerLoop:   Nesting level = 3
Parallelizer: parallelizerLoop:   Number of threads to extract = 8
Parallelizer: parallelizerLoop:   Environment: live-in and live-out values
Parallelizer: parallelizerLoop:   Environment:   Live-in 0 =   %indvars.iv31 = phi i64 [ %indvars.iv.next32, %71 ], [ 1, %.preheader8.preheader ], !noelle.pdg.inst.id !130
Parallelizer: parallelizerLoop:   Environment:   Live-in 1 =   %50 = add nsw i64 %indvars.iv31, -1, !noelle.pdg.inst.id !136
Parallelizer: parallelizerLoop:   Environment:   Live-in 2 = [2000 x double]* %2
Parallelizer: parallelizerLoop:   Environment:   Live-in 3 = [2000 x double]* %3
Parallelizer: parallelizerLoop:   Environment:   Live-in 4 = [2000 x double]* %4
Parallelizer: parallelizerLoop:   The loop has not been parallelized
Parallelizer: parallelizerLoop: Exit
Parallelizer: parallelizerLoop: Start
Parallelizer: parallelizerLoop:   Function = "kernel_adi"
Parallelizer: parallelizerLoop:   Loop 6 = "  %exitcond27 = icmp eq i64 %indvars.iv25, 2000, !noelle.pdg.inst.id !102"
Parallelizer: parallelizerLoop:   Nesting level = 2
Parallelizer: parallelizerLoop:   Number of threads to extract = 8
Parallelizer: parallelizerLoop:   Environment: live-in and live-out values
Parallelizer: parallelizerLoop:   Environment:   Live-in 0 = [2000 x double]* %2
Parallelizer: parallelizerLoop:   Environment:   Live-in 1 = [2000 x double]* %3
Parallelizer: parallelizerLoop:   Environment:   Live-in 2 = [2000 x double]* %4
Parallelizer: parallelizerLoop:   The loop has not been parallelized
Parallelizer: parallelizerLoop: Exit
Parallelizer: parallelizerLoop: Start
Parallelizer: parallelizerLoop:   Function = "kernel_adi"
Parallelizer: parallelizerLoop:   Loop 7 = "  %exitcond24 = icmp eq i64 %indvars.iv22, 1998, !noelle.pdg.inst.id !108"
Parallelizer: parallelizerLoop:   Nesting level = 3
Parallelizer: parallelizerLoop:   Number of threads to extract = 8
Parallelizer: parallelizerLoop:   Environment: live-in and live-out values
Parallelizer: parallelizerLoop:   Environment:   Live-in 0 =   %indvars.iv25 = phi i64 [ %indvars.iv.next26, %48 ], [ 0, %.preheader9.preheader ], !noelle.pdg.inst.id !101
Parallelizer: parallelizerLoop:   Environment:   Live-in 1 = [2000 x double]* %2
Parallelizer: parallelizerLoop:   Environment:   Live-in 2 = [2000 x double]* %3
Parallelizer: parallelizerLoop:   Environment:   Live-in 3 = [2000 x double]* %4
Parallelizer: parallelizerLoop:   The loop has not been parallelized
Parallelizer: parallelizerLoop: Exit
Parallelizer: parallelizerLoop: Start
Parallelizer: parallelizerLoop:   Function = "kernel_adi"
Parallelizer: parallelizerLoop:   Loop 11 = "  %exitcond42 = icmp eq i64 %indvars.iv40, 1998, !noelle.pdg.inst.id !181"
Parallelizer: parallelizerLoop:   Nesting level = 2
Parallelizer: parallelizerLoop:   Number of threads to extract = 8
Parallelizer: parallelizerLoop:   Environment: live-in and live-out values
Parallelizer: parallelizerLoop:   Environment:   Live-in 0 = [2000 x double]* %2
Parallelizer: parallelizerLoop:   Environment:   Live-in 1 = [2000 x double]* %3
Parallelizer: parallelizerLoop:   Environment:   Live-in 2 = [2000 x double]* %4
Parallelizer: parallelizerLoop:   The loop has not been parallelized
Parallelizer: parallelizerLoop: Exit
Parallelizer: parallelizerLoop: Start
Parallelizer: parallelizerLoop:   Function = "kernel_adi"
Parallelizer: parallelizerLoop:   Loop 12 = "  %exitcond39 = icmp eq i64 %indvars.iv37, 2000, !noelle.pdg.inst.id !189"
Parallelizer: parallelizerLoop:   Nesting level = 3
Parallelizer: parallelizerLoop:   Number of threads to extract = 8
Parallelizer: parallelizerLoop:   Environment: live-in and live-out values
Parallelizer: parallelizerLoop:   Environment:   Live-in 0 = [2000 x double]* %2
Parallelizer: parallelizerLoop:   Environment:   Live-in 1 = [2000 x double]* %3
Parallelizer: parallelizerLoop:   Environment:   Live-in 2 = [2000 x double]* %4
Parallelizer: parallelizerLoop:   Environment:   Live-in 3 =   %79 = sub nuw nsw i64 1998, %indvars.iv40, !noelle.pdg.inst.id !185
Parallelizer: parallelizerLoop:   Environment:   Live-in 4 =   %80 = sub nsw i64 1997, %indvars.iv40, !noelle.pdg.inst.id !186
Parallelizer: parallelizerLoop:   The loop has not been parallelized
Parallelizer: parallelizerLoop: Exit
Parallelizer: Exit
noelle-meta-clean parallelized_unoptimized.bc parallelized_unoptimized.bc
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CleanMetadata.so -CleanMetadata -clean-loop-metadata=true -clean-prof-metadata=true -clean-pdg-metadata=true parallelized_unoptimized.bc -o parallelized_unoptimized.bc
noelle/core/Clean Loop Metadata
noelle/core/Clean PDG Metadata
noelle/core/Clean profiler metadata
opt --strip-named-metadata parallelized_unoptimized.bc -o parallelized_unoptimized.bc
clang -O3 -c -emit-llvm parallelized_unoptimized.bc -o baseline_parallelized.bc
clang -O3 -c -emit-llvm baseline_parallelized.bc -o baseline_parallelized.bc
cp baseline_parallelized.bc adi.bc
make[1]: Leaving directory '/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/PolyBench/benchmarks/adi'
