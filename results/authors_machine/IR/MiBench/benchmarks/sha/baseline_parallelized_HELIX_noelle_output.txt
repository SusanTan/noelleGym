make[1]: Entering directory '/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/sha'
./runEnablers.sh sha sha.bc large "-lm -lstdc++ -lpthread -ltermcap" -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier
/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/sha /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/sha
Cloning https://github.com/scampanoni/virgil.git
Cloning into 'threadpool'...
/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/sha
The IR has already been transformed for enabling parallelization
noelle-parallelizer baseline_with_metadata.bc -o baseline_parallelized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-dswp
noelle-meta-loop-embed baseline_with_metadata.bc -o afterLoopMetadata.bc
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopMetadata.so -LoopMetadata baseline_with_metadata.bc -o afterLoopMetadata.bc
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopMetadata.so -LoopMetadata baseline_with_metadata.bc -o afterLoopMetadata.bc
noelle-parallelization-planner afterLoopMetadata.bc -o baseline_with_parallel_plan.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-dswp
noelle-parallel-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Planner.so -planner afterLoopMetadata.bc -o baseline_with_parallel_plan.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-dswp
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Planner.so -planner afterLoopMetadata.bc -o baseline_with_parallel_plan.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-dswp
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Planner.so -planner afterLoopMetadata.bc -o baseline_with_parallel_plan.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-dswp
Planner: Start
Planner:  Fetching the program loops
Noelle: Filter out cold code
Noelle:  Function "main"
Noelle:     Loop "  %13 = add nsw i32 %.0, -1, !noelle.pdg.inst.id !201" (1.000000e+02%)
Noelle:  Function "sha_stream"
Noelle:     Loop "  %17 = call i64 @fread(i8* nonnull %5, i64 1, i64 8192, %struct._IO_FILE* %1) #7, !noelle.pdg.inst.id !42" (1.000000e+02%)
Noelle:     Loop "  %33 = icmp sgt i32 %.0.i, 63, !noelle.pdg.inst.id !982" (9.999505e+01%)
Noelle:     Loop "  %exitcond.i.i = icmp eq i32 %.01.i.i, 8, !noelle.pdg.inst.id !989" (3.904788e+00%)
Noelle:     Loop "  %exitcond38.i.i = icmp eq i64 %indvars.iv36.i.i, 16, !noelle.pdg.inst.id !1003" (3.878404e+00%)
Noelle:     Loop "  %exitcond35.i.i = icmp eq i64 %indvars.iv33.i.i, 80, !noelle.pdg.inst.id !1014" (3.722740e+01%)
Noelle:     Loop "  %exitcond32.i.i = icmp eq i64 %indvars.iv30.i.i, 20, !noelle.pdg.inst.id !1039" (1.393059e+01%)
Noelle:     Loop "  %exitcond29.i.i = icmp eq i64 %indvars.iv27.i.i, 40, !noelle.pdg.inst.id !1072" (1.287525e+01%)
Noelle:     Loop "  %exitcond26.i.i = icmp eq i64 %indvars.iv24.i.i, 60, !noelle.pdg.inst.id !1102" (1.393059e+01%)
Noelle:     Loop "  %exitcond.i2.i = icmp eq i64 %indvars.iv.i.i, 80, !noelle.pdg.inst.id !1134" (1.287525e+01%)
Noelle:  Function "sha_final"
Noelle:  Disable "sha_final" as cold function
Noelle:  Function "sha_transform"
Noelle:  Disable "sha_transform" as cold function
Noelle:  Function "byte_reverse"
Noelle:  Disable "byte_reverse" as cold function
Noelle:  Function "sha_init"
Noelle:  Disable "sha_init" as cold function
Noelle:  Function "sha_update"
Noelle:  Disable "sha_update" as cold function
Noelle:  Function "sha_print"
Noelle:  Disable "sha_print" as cold function
Planner:    There are 10 loops in the program we are going to consider
Planner:  Filter out loops not worth considering
Planner:    Loop 21 has 5.280000e+02 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 23 has 5.280000e+02 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 22 has 4.880000e+02 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 24 has 4.880000e+02 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 20 has 1.411000e+03 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 18 has 1.480000e+02 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 19 has 1.470000e+02 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 0 has 1.000000e+00 number of iterations on average per loop invocation
Planner:      It is too low. The threshold is 12
Planner:  There are 1 loop nesting trees in the program
Planner:    ID: 16 (1)
Planner:      Function: "sha_stream"
Planner:      Loop: "  %17 = call i64 @fread(i8* nonnull %5, i64 1, i64 8192, %struct._IO_FILE* %1) #7, !noelle.pdg.inst.id !42"
Planner:      Loop nesting level: 1
Planner:      Hotness = 1.000000e+02 %
Planner:      Average instructions per invocation = 1.922228e+12 %
Planner:      Average iterations per invocation = 3.962147e+06 %
Planner:    
Planner:      ID: 17 (2)
Planner:        Function: "sha_stream"
Planner:        Loop: "  %33 = icmp sgt i32 %.0.i, 63, !noelle.pdg.inst.id !982"
Planner:        Loop nesting level: 2
Planner:        Hotness = 9.999505e+01 %
Planner:        Average instructions per invocation = 4.851240e+05 %
Planner:        Average iterations per invocation = 1.290000e+02 %
Planner:      
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [8192 x i8], align 16, !noelle.pdg.inst.id !941
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %4 = alloca [8192 x i8], align 16, !noelle.pdg.inst.id !941 can be cloned
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [80 x i64], align 16, !noelle.pdg.inst.id !940
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %3 = alloca [80 x i64], align 16, !noelle.pdg.inst.id !940 can be cloned
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [8192 x i8], align 16, !noelle.pdg.inst.id !941
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %4 = alloca [8192 x i8], align 16, !noelle.pdg.inst.id !941 can be cloned
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [80 x i64], align 16, !noelle.pdg.inst.id !940
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %3 = alloca [80 x i64], align 16, !noelle.pdg.inst.id !940 can be cloned
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [8192 x i8], align 16, !noelle.pdg.inst.id !941
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [80 x i64], align 16, !noelle.pdg.inst.id !940
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %3 = alloca [80 x i64], align 16, !noelle.pdg.inst.id !940 can be cloned
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [8192 x i8], align 16, !noelle.pdg.inst.id !941
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [80 x i64], align 16, !noelle.pdg.inst.id !940
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %3 = alloca [80 x i64], align 16, !noelle.pdg.inst.id !940 can be cloned
MemoryCloningAnalysis: Exit
Planner: LoopSelector: Start
Planner: LoopSelector:   Order of loops and their maximum savings
Planner: LoopSelector:    Loop 17
Planner: LoopSelector:      Function: "sha_stream"
Planner: LoopSelector:      Loop nesting level: 2
Planner: LoopSelector:      "  %33 = icmp sgt i32 %.0.i, 63, !noelle.pdg.inst.id !982"
Planner: LoopSelector:      Coverage: 9.999505e+01%
Planner: LoopSelector:      Whole-program savings = 5.841434e+01%
Planner: LoopSelector:      Loop savings = 5.841723e+01%
Planner: LoopSelector:    Loop 16
Planner: LoopSelector:      Function: "sha_stream"
Planner: LoopSelector:      Loop nesting level: 1
Planner: LoopSelector:      "  %17 = call i64 @fread(i8* nonnull %5, i64 1, i64 8192, %struct._IO_FILE* %1) #7, !noelle.pdg.inst.id !42"
Planner: LoopSelector:      Coverage: 1.000000e+02%
Planner: LoopSelector:      Whole-program savings = 5.541196e+00%
Planner: LoopSelector:      Loop savings = 5.541196e+00%
Planner: LoopSelector: End
Planner:   Maximum time saved = 5.841434e+01% (1122856533104)
Planner:   Maximum time saved with DOALL only = 0.000000e+00% (0)
Planner: Exit
noelle-rm-function -function-name=SIMONE_CAMPANONI_IS_GOING_TO_REMOVE_THIS_FUNCTION code_with_prototypes.bc -o code_to_parallelize.bc
NOELLE: DeadFunctions: Start
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/RemoveFunction.so -noelle-rm-function -function-name=SIMONE_CAMPANONI_IS_GOING_TO_REMOVE_THIS_FUNCTION code_with_prototypes.bc -o code_to_parallelize.bc
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/RemoveFunction.so -noelle-rm-function -function-name=SIMONE_CAMPANONI_IS_GOING_TO_REMOVE_THIS_FUNCTION code_with_prototypes.bc -o code_to_parallelize.bc
RemoveFunction: Start
RemoveFunction:   Check if function "SIMONE_CAMPANONI_IS_GOING_TO_REMOVE_THIS_FUNCTION" exists
RemoveFunction:     The function exists
RemoveFunction:   Remove the function
RemoveFunction: Exit
NOELLE: DeadFunctions: Exit
noelle-parallelizer-loop code_to_parallelize.bc -o parallelized_unoptimized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-dswp
noelle-parallel-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Parallelizer.so -parallelizer code_to_parallelize.bc -o parallelized_unoptimized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-dswp
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Parallelizer.so -parallelizer code_to_parallelize.bc -o parallelized_unoptimized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-dswp
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Parallelizer.so -parallelizer code_to_parallelize.bc -o parallelized_unoptimized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-dswp
Parallelizer: Start
Parallelizer:  Analyzing the module code_to_parallelize.bc
Parallelizer:  Fetching the program loops
Noelle: Filter out cold code
Noelle:  Function "main"
Noelle:     Loop "  %13 = add nsw i32 %.0, -1, !noelle.pdg.inst.id !203" (1.000000e+02%)
Noelle:  Function "sha_stream"
Noelle:     Loop "  %17 = call i64 @fread(i8* nonnull %5, i64 1, i64 8192, %struct._IO_FILE* %1) #8, !noelle.pdg.inst.id !44" (1.000000e+02%)
Noelle:     Loop "  %33 = icmp sgt i32 %.0.i, 63, !noelle.pdg.inst.id !985" (9.999505e+01%)
Noelle:     Loop "  %exitcond.i.i = icmp eq i32 %.01.i.i, 8, !noelle.pdg.inst.id !993" (3.904788e+00%)
Noelle:     Loop "  %exitcond38.i.i = icmp eq i64 %indvars.iv36.i.i, 16, !noelle.pdg.inst.id !1007" (3.878404e+00%)
Noelle:     Loop "  %exitcond35.i.i = icmp eq i64 %indvars.iv33.i.i, 80, !noelle.pdg.inst.id !1018" (3.722740e+01%)
Noelle:     Loop "  %exitcond32.i.i = icmp eq i64 %indvars.iv30.i.i, 20, !noelle.pdg.inst.id !1043" (1.393059e+01%)
Noelle:     Loop "  %exitcond29.i.i = icmp eq i64 %indvars.iv27.i.i, 40, !noelle.pdg.inst.id !1076" (1.287525e+01%)
Noelle:     Loop "  %exitcond26.i.i = icmp eq i64 %indvars.iv24.i.i, 60, !noelle.pdg.inst.id !1106" (1.393059e+01%)
Noelle:     Loop "  %exitcond.i2.i = icmp eq i64 %indvars.iv.i.i, 80, !noelle.pdg.inst.id !1138" (1.287525e+01%)
Noelle:  Function "sha_final"
Noelle:  Disable "sha_final" as cold function
Noelle:  Function "sha_transform"
Noelle:  Disable "sha_transform" as cold function
Noelle:  Function "byte_reverse"
Noelle:  Disable "byte_reverse" as cold function
Noelle:  Function "sha_init"
Noelle:  Disable "sha_init" as cold function
Noelle:  Function "sha_update"
Noelle:  Disable "sha_update" as cold function
Noelle:  Function "sha_print"
Noelle:  Disable "sha_print" as cold function
Parallelizer:    There are 10 loops in the program we are going to consider
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [8192 x i8], align 16, !noelle.pdg.inst.id !943
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %4 = alloca [8192 x i8], align 16, !noelle.pdg.inst.id !943 can be cloned
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [80 x i64], align 16, !noelle.pdg.inst.id !942
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %3 = alloca [80 x i64], align 16, !noelle.pdg.inst.id !942 can be cloned
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [8192 x i8], align 16, !noelle.pdg.inst.id !943
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %4 = alloca [8192 x i8], align 16, !noelle.pdg.inst.id !943 can be cloned
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [80 x i64], align 16, !noelle.pdg.inst.id !942
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %3 = alloca [80 x i64], align 16, !noelle.pdg.inst.id !942 can be cloned
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [8192 x i8], align 16, !noelle.pdg.inst.id !943
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [80 x i64], align 16, !noelle.pdg.inst.id !942
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %3 = alloca [80 x i64], align 16, !noelle.pdg.inst.id !942 can be cloned
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [8192 x i8], align 16, !noelle.pdg.inst.id !943
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [80 x i64], align 16, !noelle.pdg.inst.id !942
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %3 = alloca [80 x i64], align 16, !noelle.pdg.inst.id !942 can be cloned
MemoryCloningAnalysis: Exit
Parallelizer: parallelizerLoop: Start
Parallelizer: parallelizerLoop:   Function = "sha_stream"
Parallelizer: parallelizerLoop:   Loop 17 = "  %33 = icmp sgt i32 %.0.i, 63, !noelle.pdg.inst.id !985"
Parallelizer: parallelizerLoop:   Nesting level = 2
Parallelizer: parallelizerLoop:   Number of threads to extract = 8
Parallelizer: parallelizerLoop:   Environment: live-in and live-out values
Parallelizer: parallelizerLoop:   Environment:   Live-in 0 = %struct.SHA_INFO* %0
Parallelizer: parallelizerLoop:   Environment:   Live-in 1 =   %5 = getelementptr inbounds [8192 x i8], [8192 x i8]* %4, i64 0, i64 0, !noelle.pdg.inst.id !944
Parallelizer: parallelizerLoop:   Environment:   Live-in 2 =   %9 = bitcast i64* %8 to i8*, !noelle.pdg.inst.id !949
Parallelizer: parallelizerLoop:   Environment:   Live-in 3 =   %10 = bitcast [80 x i64]* %3 to i8*, !noelle.pdg.inst.id !950
Parallelizer: parallelizerLoop:   Environment:   Live-in 4 =   %11 = getelementptr inbounds %struct.SHA_INFO, %struct.SHA_INFO* %0, i64 0, i32 0, i64 0, !noelle.pdg.inst.id !951
Parallelizer: parallelizerLoop:   Environment:   Live-in 5 =   %12 = getelementptr inbounds %struct.SHA_INFO, %struct.SHA_INFO* %0, i64 0, i32 0, i64 1, !noelle.pdg.inst.id !952
Parallelizer: parallelizerLoop:   Environment:   Live-in 6 =   %13 = getelementptr inbounds %struct.SHA_INFO, %struct.SHA_INFO* %0, i64 0, i32 0, i64 2, !noelle.pdg.inst.id !953
Parallelizer: parallelizerLoop:   Environment:   Live-in 7 =   %14 = getelementptr inbounds %struct.SHA_INFO, %struct.SHA_INFO* %0, i64 0, i32 0, i64 3, !noelle.pdg.inst.id !954
Parallelizer: parallelizerLoop:   Environment:   Live-in 8 =   %15 = getelementptr inbounds %struct.SHA_INFO, %struct.SHA_INFO* %0, i64 0, i32 0, i64 4, !noelle.pdg.inst.id !955
Parallelizer: parallelizerLoop:   Environment:   Live-in 9 =   %18 = trunc i64 %17 to i32, !noelle.pdg.inst.id !957
Parallelizer: parallelizerLoop:   Environment:   Live-out 10 =   %.01.i = phi i8* [ %5, %._crit_edge.i ], [ %144, %sha_transform.exit.i ], !noelle.pdg.inst.id !983
Parallelizer: parallelizerLoop:   Environment:   Live-out 11 =   %.0.i = phi i32 [ %18, %._crit_edge.i ], [ %145, %sha_transform.exit.i ], !noelle.pdg.inst.id !984
DOALL: Checking if the loop is DOALL
DOALL:   The next live-out variables are not reducable
DOALL:     Live-out ID = 10
DOALL:     Live-out ID = 11
HELIX:   Loop has 23 basic blocks:

sha_transform.exit.i:                             ; preds = %.preheader.i.i
  %.320.i.i.lcssa = phi i64 [ %.320.i.i, %.preheader.i.i ], !noelle.pdg.inst.id !1156
  %.316.i.i.lcssa = phi i64 [ %.316.i.i, %.preheader.i.i ], !noelle.pdg.inst.id !1157
  %.312.i.i.lcssa = phi i64 [ %.312.i.i, %.preheader.i.i ], !noelle.pdg.inst.id !1158
  %.38.i.i.lcssa = phi i64 [ %.38.i.i, %.preheader.i.i ], !noelle.pdg.inst.id !1159
  %.3.i.i.lcssa = phi i64 [ %.3.i.i, %.preheader.i.i ], !noelle.pdg.inst.id !1160
  %139 = add i64 %69, %.38.i.i.lcssa, !noelle.pdg.inst.id !1161
  store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52
  %140 = add i64 %70, %.312.i.i.lcssa, !noelle.pdg.inst.id !1162
  store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55
  %141 = add i64 %71, %.316.i.i.lcssa, !noelle.pdg.inst.id !1163
  store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57
  %142 = add i64 %72, %.320.i.i.lcssa, !noelle.pdg.inst.id !1164
  store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59
  %143 = add i64 %73, %.3.i.i.lcssa, !noelle.pdg.inst.id !1165
  store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61
  call void @llvm.lifetime.end.p0i8(i64 640, i8* nonnull %10) #8, !noelle.pdg.inst.id !1166
  %144 = getelementptr inbounds i8, i8* %.01.i, i64 64, !noelle.pdg.inst.id !1167
  %145 = add nsw i32 %.0.i, -64, !noelle.pdg.inst.id !1168
  br label %32, !noelle.pdg.inst.id !1169


124:                                              ; preds = %.preheader.i.i
  %125 = shl i64 %.38.i.i, 5, !noelle.pdg.inst.id !1141
  %126 = lshr i64 %.38.i.i, 27, !noelle.pdg.inst.id !1142
  %127 = or i64 %125, %126, !noelle.pdg.inst.id !1143
  %128 = xor i64 %.312.i.i, %.316.i.i, !noelle.pdg.inst.id !1144
  %129 = xor i64 %128, %.320.i.i, !noelle.pdg.inst.id !1145
  %130 = add i64 %127, %129, !noelle.pdg.inst.id !1146
  %131 = add i64 %130, %.3.i.i, !noelle.pdg.inst.id !1147
  %132 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 %indvars.iv.i.i, !noelle.pdg.inst.id !1148
  %133 = load i64, i64* %132, align 8, !tbaa !1013, !noelle.pdg.inst.id !36
  %134 = add i64 %131, %133, !noelle.pdg.inst.id !1149
  %135 = add i64 %134, 3395469782, !noelle.pdg.inst.id !1150
  %136 = shl i64 %.312.i.i, 30, !noelle.pdg.inst.id !1151
  %137 = lshr i64 %.312.i.i, 2, !noelle.pdg.inst.id !1152
  %138 = or i64 %136, %137, !noelle.pdg.inst.id !1153
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1, !noelle.pdg.inst.id !1154
  br label %.preheader.i.i, !noelle.pdg.inst.id !1155


.preheader.i.i:                                   ; preds = %.preheader.i.i.preheader, %124
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %124 ], [ 60, %.preheader.i.i.preheader ], !noelle.pdg.inst.id !1132
  %.320.i.i = phi i64 [ %.316.i.i, %124 ], [ %.219.i.i.lcssa, %.preheader.i.i.preheader ], !noelle.pdg.inst.id !1133
  %.316.i.i = phi i64 [ %138, %124 ], [ %.215.i.i.lcssa, %.preheader.i.i.preheader ], !noelle.pdg.inst.id !1134
  %.312.i.i = phi i64 [ %.38.i.i, %124 ], [ %.211.i.i.lcssa, %.preheader.i.i.preheader ], !noelle.pdg.inst.id !1135
  %.38.i.i = phi i64 [ %135, %124 ], [ %.27.i.i.lcssa, %.preheader.i.i.preheader ], !noelle.pdg.inst.id !1136
  %.3.i.i = phi i64 [ %.320.i.i, %124 ], [ %.2.i.i.lcssa, %.preheader.i.i.preheader ], !noelle.pdg.inst.id !1137
  %exitcond.i2.i = icmp eq i64 %indvars.iv.i.i, 80, !noelle.pdg.inst.id !1138
  br i1 %exitcond.i2.i, label %sha_transform.exit.i, label %124, !prof !1044, !noelle.loop.id !1139, !noelle.pdg.inst.id !1140


.preheader.i.i.preheader:                         ; preds = %.preheader21.i.i
  %.219.i.i.lcssa = phi i64 [ %.219.i.i, %.preheader21.i.i ], !noelle.pdg.inst.id !1109
  %.215.i.i.lcssa = phi i64 [ %.215.i.i, %.preheader21.i.i ], !noelle.pdg.inst.id !1110
  %.211.i.i.lcssa = phi i64 [ %.211.i.i, %.preheader21.i.i ], !noelle.pdg.inst.id !1111
  %.27.i.i.lcssa = phi i64 [ %.27.i.i, %.preheader21.i.i ], !noelle.pdg.inst.id !1112
  %.2.i.i.lcssa = phi i64 [ %.2.i.i, %.preheader21.i.i ], !noelle.pdg.inst.id !1113
  br label %.preheader.i.i, !noelle.pdg.inst.id !1114


107:                                              ; preds = %.preheader21.i.i
  %108 = shl i64 %.27.i.i, 5, !noelle.pdg.inst.id !1115
  %109 = lshr i64 %.27.i.i, 27, !noelle.pdg.inst.id !1116
  %110 = or i64 %108, %109, !noelle.pdg.inst.id !1117
  %111 = or i64 %.215.i.i, %.219.i.i, !noelle.pdg.inst.id !1118
  %112 = and i64 %.211.i.i, %111, !noelle.pdg.inst.id !1119
  %113 = and i64 %.215.i.i, %.219.i.i, !noelle.pdg.inst.id !1120
  %114 = or i64 %112, %113, !noelle.pdg.inst.id !1121
  %115 = add i64 %110, %114, !noelle.pdg.inst.id !1122
  %116 = add i64 %115, %.2.i.i, !noelle.pdg.inst.id !1123
  %117 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 %indvars.iv24.i.i, !noelle.pdg.inst.id !1124
  %118 = load i64, i64* %117, align 8, !tbaa !1013, !noelle.pdg.inst.id !300
  %119 = add i64 %116, %118, !noelle.pdg.inst.id !1125
  %120 = add i64 %119, 2400959708, !noelle.pdg.inst.id !1126
  %121 = shl i64 %.211.i.i, 30, !noelle.pdg.inst.id !1127
  %122 = lshr i64 %.211.i.i, 2, !noelle.pdg.inst.id !1128
  %123 = or i64 %121, %122, !noelle.pdg.inst.id !1129
  %indvars.iv.next25.i.i = add nuw nsw i64 %indvars.iv24.i.i, 1, !noelle.pdg.inst.id !1130
  br label %.preheader21.i.i, !noelle.pdg.inst.id !1131


.preheader21.i.i:                                 ; preds = %.preheader21.i.i.preheader, %107
  %indvars.iv24.i.i = phi i64 [ %indvars.iv.next25.i.i, %107 ], [ 40, %.preheader21.i.i.preheader ], !noelle.pdg.inst.id !1100
  %.219.i.i = phi i64 [ %.215.i.i, %107 ], [ %.118.i.i.lcssa, %.preheader21.i.i.preheader ], !noelle.pdg.inst.id !1101
  %.215.i.i = phi i64 [ %123, %107 ], [ %.114.i.i.lcssa, %.preheader21.i.i.preheader ], !noelle.pdg.inst.id !1102
  %.211.i.i = phi i64 [ %.27.i.i, %107 ], [ %.110.i.i.lcssa, %.preheader21.i.i.preheader ], !noelle.pdg.inst.id !1103
  %.27.i.i = phi i64 [ %120, %107 ], [ %.16.i.i.lcssa, %.preheader21.i.i.preheader ], !noelle.pdg.inst.id !1104
  %.2.i.i = phi i64 [ %.219.i.i, %107 ], [ %.1.i.i.lcssa, %.preheader21.i.i.preheader ], !noelle.pdg.inst.id !1105
  %exitcond26.i.i = icmp eq i64 %indvars.iv24.i.i, 60, !noelle.pdg.inst.id !1106
  br i1 %exitcond26.i.i, label %.preheader.i.i.preheader, label %107, !prof !1044, !noelle.loop.id !1107, !noelle.pdg.inst.id !1108


.preheader21.i.i.preheader:                       ; preds = %.preheader22.i.i
  %.118.i.i.lcssa = phi i64 [ %.118.i.i, %.preheader22.i.i ], !noelle.pdg.inst.id !1079
  %.114.i.i.lcssa = phi i64 [ %.114.i.i, %.preheader22.i.i ], !noelle.pdg.inst.id !1080
  %.110.i.i.lcssa = phi i64 [ %.110.i.i, %.preheader22.i.i ], !noelle.pdg.inst.id !1081
  %.16.i.i.lcssa = phi i64 [ %.16.i.i, %.preheader22.i.i ], !noelle.pdg.inst.id !1082
  %.1.i.i.lcssa = phi i64 [ %.1.i.i, %.preheader22.i.i ], !noelle.pdg.inst.id !1083
  br label %.preheader21.i.i, !noelle.pdg.inst.id !1084


46:                                               ; preds = %47, %byte_reverse.exit.i
  %indvars.iv36.i.i = phi i64 [ %indvars.iv.next37.i.i, %47 ], [ 0, %byte_reverse.exit.i ], !noelle.pdg.inst.id !1006
  %exitcond38.i.i = icmp eq i64 %indvars.iv36.i.i, 16, !noelle.pdg.inst.id !1007
  br i1 %exitcond38.i.i, label %.preheader23.i.i.preheader, label %47, !prof !1008, !noelle.loop.id !1009, !noelle.pdg.inst.id !1010


byte_reverse.exit.i:                              ; preds = %35
  call void @llvm.lifetime.start.p0i8(i64 640, i8* nonnull %10) #8, !noelle.pdg.inst.id !1004
  br label %46, !noelle.pdg.inst.id !1005


36:                                               ; preds = %35
  %37 = load i8, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !82
  %38 = getelementptr inbounds i8, i8* %.0.i.i, i64 1, !noelle.pdg.inst.id !998
  %39 = load i8, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !84
  %40 = getelementptr inbounds i8, i8* %.0.i.i, i64 2, !noelle.pdg.inst.id !999
  %41 = load i8, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !86
  %42 = getelementptr inbounds i8, i8* %.0.i.i, i64 3, !noelle.pdg.inst.id !1000
  %43 = load i8, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !88
  store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90
  store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92
  store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94
  store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96
  %44 = getelementptr inbounds i8, i8* %.0.i.i, i64 8, !noelle.pdg.inst.id !1001
  %45 = add nuw nsw i32 %.01.i.i, 1, !noelle.pdg.inst.id !1002
  br label %35, !noelle.pdg.inst.id !1003


35:                                               ; preds = %36, %34
  %.01.i.i = phi i32 [ 0, %34 ], [ %45, %36 ], !noelle.pdg.inst.id !991
  %.0.i.i = phi i8* [ %9, %34 ], [ %44, %36 ], !noelle.pdg.inst.id !992
  %exitcond.i.i = icmp eq i32 %.01.i.i, 8, !noelle.pdg.inst.id !993
  br i1 %exitcond.i.i, label %byte_reverse.exit.i, label %36, !prof !994, !noelle.loop.id !995, !noelle.pdg.inst.id !996


32:                                               ; preds = %sha_transform.exit.i, %._crit_edge.i
  %.01.i = phi i8* [ %5, %._crit_edge.i ], [ %144, %sha_transform.exit.i ], !noelle.pdg.inst.id !983
  %.0.i = phi i32 [ %18, %._crit_edge.i ], [ %145, %sha_transform.exit.i ], !noelle.pdg.inst.id !984
  %33 = icmp sgt i32 %.0.i, 63, !noelle.pdg.inst.id !985
  br i1 %33, label %34, label %sha_update.exit, !prof !986, !noelle.loop.id !987, !noelle.pdg.inst.id !988, !noelle.parallelizer.looporder !989


34:                                               ; preds = %32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46
  br label %35, !noelle.pdg.inst.id !990


47:                                               ; preds = %46
  %48 = getelementptr inbounds %struct.SHA_INFO, %struct.SHA_INFO* %0, i64 0, i32 3, i64 %indvars.iv36.i.i, !noelle.pdg.inst.id !1012
  %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98
  %50 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 %indvars.iv36.i.i, !noelle.pdg.inst.id !1014
  store i64 %49, i64* %50, align 8, !tbaa !1013, !noelle.pdg.inst.id !48
  %indvars.iv.next37.i.i = add nuw nsw i64 %indvars.iv36.i.i, 1, !noelle.pdg.inst.id !1015
  br label %46, !noelle.pdg.inst.id !1016


.preheader23.i.i.preheader:                       ; preds = %46
  br label %.preheader23.i.i, !noelle.pdg.inst.id !1011


.preheader23.i.i:                                 ; preds = %.preheader23.i.i.preheader, %51
  %indvars.iv33.i.i = phi i64 [ %indvars.iv.next34.i.i, %51 ], [ 16, %.preheader23.i.i.preheader ], !noelle.pdg.inst.id !1017
  %exitcond35.i.i = icmp eq i64 %indvars.iv33.i.i, 80, !noelle.pdg.inst.id !1018
  br i1 %exitcond35.i.i, label %68, label %51, !prof !1019, !noelle.loop.id !1020, !noelle.pdg.inst.id !1021


51:                                               ; preds = %.preheader23.i.i
  %52 = add nsw i64 %indvars.iv33.i.i, -3, !noelle.pdg.inst.id !1022
  %53 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 %52, !noelle.pdg.inst.id !1023
  %54 = load i64, i64* %53, align 8, !tbaa !1013, !noelle.pdg.inst.id !281
  %55 = add nsw i64 %indvars.iv33.i.i, -8, !noelle.pdg.inst.id !1024
  %56 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 %55, !noelle.pdg.inst.id !1025
  %57 = load i64, i64* %56, align 8, !tbaa !1013, !noelle.pdg.inst.id !283
  %58 = xor i64 %54, %57, !noelle.pdg.inst.id !1026
  %59 = add nsw i64 %indvars.iv33.i.i, -14, !noelle.pdg.inst.id !1027
  %60 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 %59, !noelle.pdg.inst.id !1028
  %61 = load i64, i64* %60, align 8, !tbaa !1013, !noelle.pdg.inst.id !285
  %62 = xor i64 %58, %61, !noelle.pdg.inst.id !1029
  %63 = add nsw i64 %indvars.iv33.i.i, -16, !noelle.pdg.inst.id !1030
  %64 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 %63, !noelle.pdg.inst.id !1031
  %65 = load i64, i64* %64, align 8, !tbaa !1013, !noelle.pdg.inst.id !287
  %66 = xor i64 %62, %65, !noelle.pdg.inst.id !1032
  %67 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 %indvars.iv33.i.i, !noelle.pdg.inst.id !1033
  store i64 %66, i64* %67, align 8, !tbaa !1013, !noelle.pdg.inst.id !50
  %indvars.iv.next34.i.i = add nuw nsw i64 %indvars.iv33.i.i, 1, !noelle.pdg.inst.id !1034
  br label %.preheader23.i.i, !noelle.pdg.inst.id !1035


68:                                               ; preds = %.preheader23.i.i
  %69 = load i64, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !100
  %70 = load i64, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !102
  %71 = load i64, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !104
  %72 = load i64, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !106
  %73 = load i64, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !108
  br label %74, !noelle.pdg.inst.id !1036


74:                                               ; preds = %75, %68
  %indvars.iv30.i.i = phi i64 [ %indvars.iv.next31.i.i, %75 ], [ 0, %68 ], !noelle.pdg.inst.id !1037
  %.017.i.i = phi i64 [ %.013.i.i, %75 ], [ %72, %68 ], !noelle.pdg.inst.id !1038
  %.013.i.i = phi i64 [ %91, %75 ], [ %71, %68 ], !noelle.pdg.inst.id !1039
  %.09.i.i = phi i64 [ %.05.i.i, %75 ], [ %70, %68 ], !noelle.pdg.inst.id !1040
  %.05.i.i = phi i64 [ %88, %75 ], [ %69, %68 ], !noelle.pdg.inst.id !1041
  %.0.i1.i = phi i64 [ %.017.i.i, %75 ], [ %73, %68 ], !noelle.pdg.inst.id !1042
  %exitcond32.i.i = icmp eq i64 %indvars.iv30.i.i, 20, !noelle.pdg.inst.id !1043
  br i1 %exitcond32.i.i, label %.preheader22.i.i.preheader, label %75, !prof !1044, !noelle.loop.id !1045, !noelle.pdg.inst.id !1046


75:                                               ; preds = %74
  %76 = shl i64 %.05.i.i, 5, !noelle.pdg.inst.id !1053
  %77 = lshr i64 %.05.i.i, 27, !noelle.pdg.inst.id !1054
  %78 = or i64 %76, %77, !noelle.pdg.inst.id !1055
  %79 = and i64 %.09.i.i, %.013.i.i, !noelle.pdg.inst.id !1056
  %80 = xor i64 %.09.i.i, -1, !noelle.pdg.inst.id !1057
  %81 = and i64 %.017.i.i, %80, !noelle.pdg.inst.id !1058
  %82 = or i64 %79, %81, !noelle.pdg.inst.id !1059
  %83 = add i64 %78, %82, !noelle.pdg.inst.id !1060
  %84 = add i64 %83, %.0.i1.i, !noelle.pdg.inst.id !1061
  %85 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 %indvars.iv30.i.i, !noelle.pdg.inst.id !1062
  %86 = load i64, i64* %85, align 8, !tbaa !1013, !noelle.pdg.inst.id !296
  %87 = add i64 %84, %86, !noelle.pdg.inst.id !1063
  %88 = add i64 %87, 1518500249, !noelle.pdg.inst.id !1064
  %89 = shl i64 %.09.i.i, 30, !noelle.pdg.inst.id !1065
  %90 = lshr i64 %.09.i.i, 2, !noelle.pdg.inst.id !1066
  %91 = or i64 %89, %90, !noelle.pdg.inst.id !1067
  %indvars.iv.next31.i.i = add nuw nsw i64 %indvars.iv30.i.i, 1, !noelle.pdg.inst.id !1068
  br label %74, !noelle.pdg.inst.id !1069


.preheader22.i.i.preheader:                       ; preds = %74
  %.017.i.i.lcssa = phi i64 [ %.017.i.i, %74 ], !noelle.pdg.inst.id !1047
  %.013.i.i.lcssa = phi i64 [ %.013.i.i, %74 ], !noelle.pdg.inst.id !1048
  %.09.i.i.lcssa = phi i64 [ %.09.i.i, %74 ], !noelle.pdg.inst.id !1049
  %.05.i.i.lcssa = phi i64 [ %.05.i.i, %74 ], !noelle.pdg.inst.id !1050
  %.0.i1.i.lcssa = phi i64 [ %.0.i1.i, %74 ], !noelle.pdg.inst.id !1051
  br label %.preheader22.i.i, !noelle.pdg.inst.id !1052


.preheader22.i.i:                                 ; preds = %.preheader22.i.i.preheader, %92
  %indvars.iv27.i.i = phi i64 [ %indvars.iv.next28.i.i, %92 ], [ 20, %.preheader22.i.i.preheader ], !noelle.pdg.inst.id !1070
  %.118.i.i = phi i64 [ %.114.i.i, %92 ], [ %.017.i.i.lcssa, %.preheader22.i.i.preheader ], !noelle.pdg.inst.id !1071
  %.114.i.i = phi i64 [ %106, %92 ], [ %.013.i.i.lcssa, %.preheader22.i.i.preheader ], !noelle.pdg.inst.id !1072
  %.110.i.i = phi i64 [ %.16.i.i, %92 ], [ %.09.i.i.lcssa, %.preheader22.i.i.preheader ], !noelle.pdg.inst.id !1073
  %.16.i.i = phi i64 [ %103, %92 ], [ %.05.i.i.lcssa, %.preheader22.i.i.preheader ], !noelle.pdg.inst.id !1074
  %.1.i.i = phi i64 [ %.118.i.i, %92 ], [ %.0.i1.i.lcssa, %.preheader22.i.i.preheader ], !noelle.pdg.inst.id !1075
  %exitcond29.i.i = icmp eq i64 %indvars.iv27.i.i, 40, !noelle.pdg.inst.id !1076
  br i1 %exitcond29.i.i, label %.preheader21.i.i.preheader, label %92, !prof !1044, !noelle.loop.id !1077, !noelle.pdg.inst.id !1078


92:                                               ; preds = %.preheader22.i.i
  %93 = shl i64 %.16.i.i, 5, !noelle.pdg.inst.id !1085
  %94 = lshr i64 %.16.i.i, 27, !noelle.pdg.inst.id !1086
  %95 = or i64 %93, %94, !noelle.pdg.inst.id !1087
  %96 = xor i64 %.110.i.i, %.114.i.i, !noelle.pdg.inst.id !1088
  %97 = xor i64 %96, %.118.i.i, !noelle.pdg.inst.id !1089
  %98 = add i64 %95, %97, !noelle.pdg.inst.id !1090
  %99 = add i64 %98, %.1.i.i, !noelle.pdg.inst.id !1091
  %100 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 %indvars.iv27.i.i, !noelle.pdg.inst.id !1092
  %101 = load i64, i64* %100, align 8, !tbaa !1013, !noelle.pdg.inst.id !298
  %102 = add i64 %99, %101, !noelle.pdg.inst.id !1093
  %103 = add i64 %102, 1859775393, !noelle.pdg.inst.id !1094
  %104 = shl i64 %.110.i.i, 30, !noelle.pdg.inst.id !1095
  %105 = lshr i64 %.110.i.i, 2, !noelle.pdg.inst.id !1096
  %106 = or i64 %104, %105, !noelle.pdg.inst.id !1097
  %indvars.iv.next28.i.i = add nuw nsw i64 %indvars.iv27.i.i, 1, !noelle.pdg.inst.id !1098
  br label %.preheader22.i.i, !noelle.pdg.inst.id !1099

HELIX:   There are 1 SCCs that have loop-carried dependences that cannot be broken
HELIX:     SCC:
HELIX:       Loop-carried dependences
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   %73 = load i64, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !108 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   %71 = load i64, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !104 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   %70 = load i64, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !102 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   %72 = load i64, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !106 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   %43 = load i8, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !88 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   %37 = load i8, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !82 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   %39 = load i8, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !84 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   %41 = load i8, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !86 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 via memory
HELIX:           store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 --->   %37 = load i8, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !82 via memory
HELIX:           store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 --->   %69 = load i64, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !100 via memory
HELIX:           store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 --->   store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 via memory
HELIX:           store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 --->   store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 via memory
HELIX:           store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 --->   %43 = load i8, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !88 via memory
HELIX:           store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:           store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 --->   store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 via memory
HELIX:           store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 --->   store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 via memory
HELIX:           store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 --->   %39 = load i8, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !84 via memory
HELIX:           store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 --->   %41 = load i8, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !86 via memory
HELIX:           store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 --->   store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 via memory
HELIX:           store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 --->   store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 via memory
HELIX:           store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 --->   store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 via memory
HELIX:           store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 --->   store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 via memory
HELIX:           store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 --->   store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 via memory
HELIX:           store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:           store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 --->   %37 = load i8, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !82 via memory
HELIX:           store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:           store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 --->   %70 = load i64, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !102 via memory
HELIX:           store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 --->   %39 = load i8, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !84 via memory
HELIX:           store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 --->   store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 via memory
HELIX:           store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 --->   %41 = load i8, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !86 via memory
HELIX:           store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 --->   %43 = load i8, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !88 via memory
HELIX:           store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 --->   store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 via memory
HELIX:           store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 --->   store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 via memory
HELIX:           store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 --->   store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 via memory
HELIX:           store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:           store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 --->   %37 = load i8, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !82 via memory
HELIX:           store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:           store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 --->   store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 via memory
HELIX:           store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 --->   store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 via memory
HELIX:           store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 --->   %39 = load i8, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !84 via memory
HELIX:           store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 --->   %71 = load i64, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !104 via memory
HELIX:           store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 --->   %41 = load i8, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !86 via memory
HELIX:           store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 --->   %43 = load i8, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !88 via memory
HELIX:           store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 --->   %72 = load i64, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !106 via memory
HELIX:           store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 --->   store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 via memory
HELIX:           store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 --->   store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 via memory
HELIX:           store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 --->   store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 via memory
HELIX:           store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 --->   %43 = load i8, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !88 via memory
HELIX:           store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 --->   store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 via memory
HELIX:           store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:           store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 --->   store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 via memory
HELIX:           store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:           store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 --->   %39 = load i8, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !84 via memory
HELIX:           store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 --->   %41 = load i8, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !86 via memory
HELIX:           store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 --->   %37 = load i8, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !82 via memory
HELIX:           store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:           store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 --->   store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 via memory
HELIX:           store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 --->   %73 = load i64, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !108 via memory
HELIX:           store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 --->   store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 via memory
HELIX:           store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 --->   store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 via memory
HELIX:           store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 --->   %37 = load i8, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !82 via memory
HELIX:           store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 --->   %39 = load i8, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !84 via memory
HELIX:           store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 --->   store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 via memory
HELIX:           store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:           store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 --->   %41 = load i8, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !86 via memory
HELIX:           store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 --->   %43 = load i8, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !88 via memory
HELIX:           store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 --->   store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 via memory
HELIX:           %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98 --->   store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 via memory
HELIX:           %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98 --->   store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 via memory
HELIX:           %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98 --->   store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 via memory
HELIX:           %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:           %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98 --->   store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 via memory
HELIX:           store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   %73 = load i64, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !108 via memory
HELIX:           store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   %72 = load i64, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !106 via memory
HELIX:           store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 via memory
HELIX:           store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   %71 = load i64, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !104 via memory
HELIX:           store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:           store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 via memory
HELIX:           store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 via memory
HELIX:           store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 via memory
HELIX:           store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   %70 = load i64, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !102 via memory
HELIX:           store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 via memory
HELIX:           store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   %37 = load i8, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !82 via memory
HELIX:           store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   %39 = load i8, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !84 via memory
HELIX:           store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 via memory
HELIX:           store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   %41 = load i8, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !86 via memory
HELIX:           store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   %43 = load i8, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !88 via memory
HELIX:           store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   %69 = load i64, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !100 via memory
HELIX:           store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 via memory
HELIX:           store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:           store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 via memory
HELIX:           store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 via memory
HELIX:           store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98 via memory
HELIX:           store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   %39 = load i8, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !84 via memory
HELIX:           store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:           store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 via memory
HELIX:           store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   %71 = load i64, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !104 via memory
HELIX:           store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 via memory
HELIX:           store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 via memory
HELIX:           store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   %72 = load i64, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !106 via memory
HELIX:           store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 via memory
HELIX:           store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:           store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 via memory
HELIX:           store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   %37 = load i8, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !82 via memory
HELIX:           store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 via memory
HELIX:           store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   %73 = load i64, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !108 via memory
HELIX:           store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98 via memory
HELIX:           store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 via memory
HELIX:           store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   %69 = load i64, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !100 via memory
HELIX:           store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   %70 = load i64, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !102 via memory
HELIX:           store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   %73 = load i64, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !108 via memory
HELIX:           store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 via memory
HELIX:           store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 via memory
HELIX:           store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:           store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   %37 = load i8, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !82 via memory
HELIX:           store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 via memory
HELIX:           store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 via memory
HELIX:           store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 via memory
HELIX:           store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98 via memory
HELIX:           store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 via memory
HELIX:           store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   %69 = load i64, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !100 via memory
HELIX:           store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   %41 = load i8, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !86 via memory
HELIX:           store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:           store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 via memory
HELIX:           store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   %70 = load i64, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !102 via memory
HELIX:           store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   %71 = load i64, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !104 via memory
HELIX:           store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   %72 = load i64, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !106 via memory
HELIX:           store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   %73 = load i64, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !108 via memory
HELIX:           store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:           store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   %69 = load i64, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !100 via memory
HELIX:           store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 via memory
HELIX:           store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 via memory
HELIX:           store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 via memory
HELIX:           store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   %43 = load i8, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !88 via memory
HELIX:           store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 via memory
HELIX:           store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98 via memory
HELIX:           store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:           store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   %37 = load i8, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !82 via memory
HELIX:           store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 via memory
HELIX:           store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   %70 = load i64, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !102 via memory
HELIX:           store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 via memory
HELIX:           store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   %71 = load i64, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !104 via memory
HELIX:           store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 via memory
HELIX:           store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   %72 = load i64, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !106 via memory
HELIX:       Nodes within the SCC: 117
HELIX:       	  %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98
HELIX:       	  %69 = load i64, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !100
HELIX:       	  %70 = load i64, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !102
HELIX:       	  %71 = load i64, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !104
HELIX:       	  %72 = load i64, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !106
HELIX:       	  %73 = load i64, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !108
HELIX:       	  %.017.i.i = phi i64 [ %.013.i.i, %75 ], [ %72, %68 ], !noelle.pdg.inst.id !1038
HELIX:       	  %.013.i.i = phi i64 [ %91, %75 ], [ %71, %68 ], !noelle.pdg.inst.id !1039
HELIX:       	  %.09.i.i = phi i64 [ %.05.i.i, %75 ], [ %70, %68 ], !noelle.pdg.inst.id !1040
HELIX:       	  %.05.i.i = phi i64 [ %88, %75 ], [ %69, %68 ], !noelle.pdg.inst.id !1041
HELIX:       	  %.0.i1.i = phi i64 [ %.017.i.i, %75 ], [ %73, %68 ], !noelle.pdg.inst.id !1042
HELIX:       	  %.017.i.i.lcssa = phi i64 [ %.017.i.i, %74 ], !noelle.pdg.inst.id !1047
HELIX:       	  %.013.i.i.lcssa = phi i64 [ %.013.i.i, %74 ], !noelle.pdg.inst.id !1048
HELIX:       	  %.09.i.i.lcssa = phi i64 [ %.09.i.i, %74 ], !noelle.pdg.inst.id !1049
HELIX:       	  %.05.i.i.lcssa = phi i64 [ %.05.i.i, %74 ], !noelle.pdg.inst.id !1050
HELIX:       	  %.0.i1.i.lcssa = phi i64 [ %.0.i1.i, %74 ], !noelle.pdg.inst.id !1051
HELIX:       	  %76 = shl i64 %.05.i.i, 5, !noelle.pdg.inst.id !1053
HELIX:       	  %77 = lshr i64 %.05.i.i, 27, !noelle.pdg.inst.id !1054
HELIX:       	  %78 = or i64 %76, %77, !noelle.pdg.inst.id !1055
HELIX:       	  %79 = and i64 %.09.i.i, %.013.i.i, !noelle.pdg.inst.id !1056
HELIX:       	  %80 = xor i64 %.09.i.i, -1, !noelle.pdg.inst.id !1057
HELIX:       	  %81 = and i64 %.017.i.i, %80, !noelle.pdg.inst.id !1058
HELIX:       	  %82 = or i64 %79, %81, !noelle.pdg.inst.id !1059
HELIX:       	  %83 = add i64 %78, %82, !noelle.pdg.inst.id !1060
HELIX:       	  %84 = add i64 %83, %.0.i1.i, !noelle.pdg.inst.id !1061
HELIX:       	  %87 = add i64 %84, %86, !noelle.pdg.inst.id !1063
HELIX:       	  %88 = add i64 %87, 1518500249, !noelle.pdg.inst.id !1064
HELIX:       	  %89 = shl i64 %.09.i.i, 30, !noelle.pdg.inst.id !1065
HELIX:       	  %90 = lshr i64 %.09.i.i, 2, !noelle.pdg.inst.id !1066
HELIX:       	  %91 = or i64 %89, %90, !noelle.pdg.inst.id !1067
HELIX:       	  %.118.i.i = phi i64 [ %.114.i.i, %92 ], [ %.017.i.i.lcssa, %.preheader22.i.i.preheader ], !noelle.pdg.inst.id !1071
HELIX:       	  %.114.i.i = phi i64 [ %106, %92 ], [ %.013.i.i.lcssa, %.preheader22.i.i.preheader ], !noelle.pdg.inst.id !1072
HELIX:       	  %.110.i.i = phi i64 [ %.16.i.i, %92 ], [ %.09.i.i.lcssa, %.preheader22.i.i.preheader ], !noelle.pdg.inst.id !1073
HELIX:       	  %.16.i.i = phi i64 [ %103, %92 ], [ %.05.i.i.lcssa, %.preheader22.i.i.preheader ], !noelle.pdg.inst.id !1074
HELIX:       	  %.1.i.i = phi i64 [ %.118.i.i, %92 ], [ %.0.i1.i.lcssa, %.preheader22.i.i.preheader ], !noelle.pdg.inst.id !1075
HELIX:       	  %.118.i.i.lcssa = phi i64 [ %.118.i.i, %.preheader22.i.i ], !noelle.pdg.inst.id !1079
HELIX:       	  %.114.i.i.lcssa = phi i64 [ %.114.i.i, %.preheader22.i.i ], !noelle.pdg.inst.id !1080
HELIX:       	  %.110.i.i.lcssa = phi i64 [ %.110.i.i, %.preheader22.i.i ], !noelle.pdg.inst.id !1081
HELIX:       	  %.16.i.i.lcssa = phi i64 [ %.16.i.i, %.preheader22.i.i ], !noelle.pdg.inst.id !1082
HELIX:       	  %.1.i.i.lcssa = phi i64 [ %.1.i.i, %.preheader22.i.i ], !noelle.pdg.inst.id !1083
HELIX:       	  %93 = shl i64 %.16.i.i, 5, !noelle.pdg.inst.id !1085
HELIX:       	  %94 = lshr i64 %.16.i.i, 27, !noelle.pdg.inst.id !1086
HELIX:       	  %95 = or i64 %93, %94, !noelle.pdg.inst.id !1087
HELIX:       	  %96 = xor i64 %.110.i.i, %.114.i.i, !noelle.pdg.inst.id !1088
HELIX:       	  %97 = xor i64 %96, %.118.i.i, !noelle.pdg.inst.id !1089
HELIX:       	  %98 = add i64 %95, %97, !noelle.pdg.inst.id !1090
HELIX:       	  %99 = add i64 %98, %.1.i.i, !noelle.pdg.inst.id !1091
HELIX:       	  %102 = add i64 %99, %101, !noelle.pdg.inst.id !1093
HELIX:       	  %103 = add i64 %102, 1859775393, !noelle.pdg.inst.id !1094
HELIX:       	  %104 = shl i64 %.110.i.i, 30, !noelle.pdg.inst.id !1095
HELIX:       	  %105 = lshr i64 %.110.i.i, 2, !noelle.pdg.inst.id !1096
HELIX:       	  %106 = or i64 %104, %105, !noelle.pdg.inst.id !1097
HELIX:       	  %.219.i.i = phi i64 [ %.215.i.i, %107 ], [ %.118.i.i.lcssa, %.preheader21.i.i.preheader ], !noelle.pdg.inst.id !1101
HELIX:       	  %.215.i.i = phi i64 [ %123, %107 ], [ %.114.i.i.lcssa, %.preheader21.i.i.preheader ], !noelle.pdg.inst.id !1102
HELIX:       	  %.211.i.i = phi i64 [ %.27.i.i, %107 ], [ %.110.i.i.lcssa, %.preheader21.i.i.preheader ], !noelle.pdg.inst.id !1103
HELIX:       	  %.27.i.i = phi i64 [ %120, %107 ], [ %.16.i.i.lcssa, %.preheader21.i.i.preheader ], !noelle.pdg.inst.id !1104
HELIX:       	  %.2.i.i = phi i64 [ %.219.i.i, %107 ], [ %.1.i.i.lcssa, %.preheader21.i.i.preheader ], !noelle.pdg.inst.id !1105
HELIX:       	  %.219.i.i.lcssa = phi i64 [ %.219.i.i, %.preheader21.i.i ], !noelle.pdg.inst.id !1109
HELIX:       	  %.215.i.i.lcssa = phi i64 [ %.215.i.i, %.preheader21.i.i ], !noelle.pdg.inst.id !1110
HELIX:       	  %.211.i.i.lcssa = phi i64 [ %.211.i.i, %.preheader21.i.i ], !noelle.pdg.inst.id !1111
HELIX:       	  %.27.i.i.lcssa = phi i64 [ %.27.i.i, %.preheader21.i.i ], !noelle.pdg.inst.id !1112
HELIX:       	  %.2.i.i.lcssa = phi i64 [ %.2.i.i, %.preheader21.i.i ], !noelle.pdg.inst.id !1113
HELIX:       	  %108 = shl i64 %.27.i.i, 5, !noelle.pdg.inst.id !1115
HELIX:       	  %109 = lshr i64 %.27.i.i, 27, !noelle.pdg.inst.id !1116
HELIX:       	  %110 = or i64 %108, %109, !noelle.pdg.inst.id !1117
HELIX:       	  %111 = or i64 %.215.i.i, %.219.i.i, !noelle.pdg.inst.id !1118
HELIX:       	  %112 = and i64 %.211.i.i, %111, !noelle.pdg.inst.id !1119
HELIX:       	  %113 = and i64 %.215.i.i, %.219.i.i, !noelle.pdg.inst.id !1120
HELIX:       	  %114 = or i64 %112, %113, !noelle.pdg.inst.id !1121
HELIX:       	  %115 = add i64 %110, %114, !noelle.pdg.inst.id !1122
HELIX:       	  %116 = add i64 %115, %.2.i.i, !noelle.pdg.inst.id !1123
HELIX:       	  %119 = add i64 %116, %118, !noelle.pdg.inst.id !1125
HELIX:       	  %120 = add i64 %119, 2400959708, !noelle.pdg.inst.id !1126
HELIX:       	  %121 = shl i64 %.211.i.i, 30, !noelle.pdg.inst.id !1127
HELIX:       	  %122 = lshr i64 %.211.i.i, 2, !noelle.pdg.inst.id !1128
HELIX:       	  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46
HELIX:       	  %37 = load i8, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !82
HELIX:       	  %39 = load i8, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !84
HELIX:       	  %41 = load i8, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !86
HELIX:       	  %43 = load i8, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !88
HELIX:       	  store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90
HELIX:       	  store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92
HELIX:       	  store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94
HELIX:       	  store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96
HELIX:       	  %123 = or i64 %121, %122, !noelle.pdg.inst.id !1129
HELIX:       	  %.320.i.i = phi i64 [ %.316.i.i, %124 ], [ %.219.i.i.lcssa, %.preheader.i.i.preheader ], !noelle.pdg.inst.id !1133
HELIX:       	  %.316.i.i = phi i64 [ %138, %124 ], [ %.215.i.i.lcssa, %.preheader.i.i.preheader ], !noelle.pdg.inst.id !1134
HELIX:       	  %.312.i.i = phi i64 [ %.38.i.i, %124 ], [ %.211.i.i.lcssa, %.preheader.i.i.preheader ], !noelle.pdg.inst.id !1135
HELIX:       	  %.38.i.i = phi i64 [ %135, %124 ], [ %.27.i.i.lcssa, %.preheader.i.i.preheader ], !noelle.pdg.inst.id !1136
HELIX:       	  %.3.i.i = phi i64 [ %.320.i.i, %124 ], [ %.2.i.i.lcssa, %.preheader.i.i.preheader ], !noelle.pdg.inst.id !1137
HELIX:       	  %125 = shl i64 %.38.i.i, 5, !noelle.pdg.inst.id !1141
HELIX:       	  %126 = lshr i64 %.38.i.i, 27, !noelle.pdg.inst.id !1142
HELIX:       	  %127 = or i64 %125, %126, !noelle.pdg.inst.id !1143
HELIX:       	  %128 = xor i64 %.312.i.i, %.316.i.i, !noelle.pdg.inst.id !1144
HELIX:       	  %129 = xor i64 %128, %.320.i.i, !noelle.pdg.inst.id !1145
HELIX:       	  %130 = add i64 %127, %129, !noelle.pdg.inst.id !1146
HELIX:       	  %131 = add i64 %130, %.3.i.i, !noelle.pdg.inst.id !1147
HELIX:       	  %134 = add i64 %131, %133, !noelle.pdg.inst.id !1149
HELIX:       	  %135 = add i64 %134, 3395469782, !noelle.pdg.inst.id !1150
HELIX:       	  %136 = shl i64 %.312.i.i, 30, !noelle.pdg.inst.id !1151
HELIX:       	  %137 = lshr i64 %.312.i.i, 2, !noelle.pdg.inst.id !1152
HELIX:       	  %138 = or i64 %136, %137, !noelle.pdg.inst.id !1153
HELIX:       	  %.320.i.i.lcssa = phi i64 [ %.320.i.i, %.preheader.i.i ], !noelle.pdg.inst.id !1156
HELIX:       	  %.316.i.i.lcssa = phi i64 [ %.316.i.i, %.preheader.i.i ], !noelle.pdg.inst.id !1157
HELIX:       	  %.312.i.i.lcssa = phi i64 [ %.312.i.i, %.preheader.i.i ], !noelle.pdg.inst.id !1158
HELIX:       	  %.38.i.i.lcssa = phi i64 [ %.38.i.i, %.preheader.i.i ], !noelle.pdg.inst.id !1159
HELIX:       	  %.3.i.i.lcssa = phi i64 [ %.3.i.i, %.preheader.i.i ], !noelle.pdg.inst.id !1160
HELIX:       	  %139 = add i64 %69, %.38.i.i.lcssa, !noelle.pdg.inst.id !1161
HELIX:       	  store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52
HELIX:       	  %140 = add i64 %70, %.312.i.i.lcssa, !noelle.pdg.inst.id !1162
HELIX:       	  store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55
HELIX:       	  %141 = add i64 %71, %.316.i.i.lcssa, !noelle.pdg.inst.id !1163
HELIX:       	  store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57
HELIX:       	  %142 = add i64 %72, %.320.i.i.lcssa, !noelle.pdg.inst.id !1164
HELIX:       	  store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59
HELIX:       	  %143 = add i64 %73, %.3.i.i.lcssa, !noelle.pdg.inst.id !1165
HELIX:       	  store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61
HELIX:       Nodes outside the SCC and connected with at least one node within the SCC: 18
HELIX:       	  br i1 %exitcond38.i.i, label %.preheader23.i.i.preheader, label %47, !prof !1008, !noelle.loop.id !1009, !noelle.pdg.inst.id !1010
HELIX:       	  %48 = getelementptr inbounds %struct.SHA_INFO, %struct.SHA_INFO* %0, i64 0, i32 3, i64 %indvars.iv36.i.i, !noelle.pdg.inst.id !1012
HELIX:       	  store i64 %49, i64* %50, align 8, !tbaa !1013, !noelle.pdg.inst.id !48
HELIX:       	  br i1 %exitcond32.i.i, label %.preheader22.i.i.preheader, label %75, !prof !1044, !noelle.loop.id !1045, !noelle.pdg.inst.id !1046
HELIX:       	  %86 = load i64, i64* %85, align 8, !tbaa !1013, !noelle.pdg.inst.id !296
HELIX:       	  br i1 %exitcond29.i.i, label %.preheader21.i.i.preheader, label %92, !prof !1044, !noelle.loop.id !1077, !noelle.pdg.inst.id !1078
HELIX:       	  %101 = load i64, i64* %100, align 8, !tbaa !1013, !noelle.pdg.inst.id !298
HELIX:       	  br i1 %exitcond26.i.i, label %.preheader.i.i.preheader, label %107, !prof !1044, !noelle.loop.id !1107, !noelle.pdg.inst.id !1108
HELIX:       	  %118 = load i64, i64* %117, align 8, !tbaa !1013, !noelle.pdg.inst.id !300
HELIX:       	  %.01.i = phi i8* [ %5, %._crit_edge.i ], [ %144, %sha_transform.exit.i ], !noelle.pdg.inst.id !983
HELIX:       	  br i1 %33, label %34, label %sha_update.exit, !prof !986, !noelle.loop.id !987, !noelle.pdg.inst.id !988, !noelle.parallelizer.looporder !989
HELIX:       	  %.0.i.i = phi i8* [ %9, %34 ], [ %44, %36 ], !noelle.pdg.inst.id !992
HELIX:       	  br i1 %exitcond.i.i, label %byte_reverse.exit.i, label %36, !prof !994, !noelle.loop.id !995, !noelle.pdg.inst.id !996
HELIX:       	  %38 = getelementptr inbounds i8, i8* %.0.i.i, i64 1, !noelle.pdg.inst.id !998
HELIX:       	  %40 = getelementptr inbounds i8, i8* %.0.i.i, i64 2, !noelle.pdg.inst.id !999
HELIX:       	  %42 = getelementptr inbounds i8, i8* %.0.i.i, i64 3, !noelle.pdg.inst.id !1000
HELIX:       	  br i1 %exitcond.i2.i, label %sha_transform.exit.i, label %124, !prof !1044, !noelle.loop.id !1139, !noelle.pdg.inst.id !1140
HELIX:       	  %133 = load i64, i64* %132, align 8, !tbaa !1013, !noelle.pdg.inst.id !36
HELIX:       Edges: 484
HELIX:         From:	  br i1 %exitcond38.i.i, label %.preheader23.i.i.preheader, label %47, !prof !1008, !noelle.loop.id !1009, !noelle.pdg.inst.id !1010
HELIX:         To:	  %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98
HELIX:         Attributes: Control 

HELIX:         From:	  %48 = getelementptr inbounds %struct.SHA_INFO, %struct.SHA_INFO* %0, i64 0, i32 3, i64 %indvars.iv36.i.i, !noelle.pdg.inst.id !1012
HELIX:         To:	  %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98
HELIX:         To:	  store i64 %49, i64* %50, align 8, !tbaa !1013, !noelle.pdg.inst.id !48
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98
HELIX:         To:	  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46
HELIX:         Attributes: Loop-carried Data WAR (may) from memory 

HELIX:         From:	  %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98
HELIX:         To:	  store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90
HELIX:         Attributes: Loop-carried Data WAR (may) from memory 

HELIX:         From:	  %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98
HELIX:         To:	  store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92
HELIX:         Attributes: Loop-carried Data WAR (may) from memory 

HELIX:         From:	  %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98
HELIX:         To:	  store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94
HELIX:         Attributes: Loop-carried Data WAR (may) from memory 

HELIX:         From:	  %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98
HELIX:         To:	  store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96
HELIX:         Attributes: Loop-carried Data WAR (may) from memory 

HELIX:         From:	  %69 = load i64, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !100
HELIX:         To:	  %.05.i.i = phi i64 [ %88, %75 ], [ %69, %68 ], !noelle.pdg.inst.id !1041
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %69 = load i64, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !100
HELIX:         To:	  %139 = add i64 %69, %.38.i.i.lcssa, !noelle.pdg.inst.id !1161
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %69 = load i64, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !100
HELIX:         To:	  store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52
HELIX:         Attributes: Data WAR (may) from memory 

HELIX:         From:	  %70 = load i64, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !102
HELIX:         To:	  %.09.i.i = phi i64 [ %.05.i.i, %75 ], [ %70, %68 ], !noelle.pdg.inst.id !1040
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %70 = load i64, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !102
HELIX:         To:	  %140 = add i64 %70, %.312.i.i.lcssa, !noelle.pdg.inst.id !1162
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %70 = load i64, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !102
HELIX:         To:	  store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55
HELIX:         Attributes: Data WAR (may) from memory 

HELIX:         From:	  %71 = load i64, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !104
HELIX:         To:	  %.013.i.i = phi i64 [ %91, %75 ], [ %71, %68 ], !noelle.pdg.inst.id !1039
HELIX:         Attributes: Data RAW (must)

HELIX:         ....
HELIX:   Next are all loop-carried dependences of the loop
HELIX:       %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:       %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98 --->   store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 via memory
HELIX:       %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98 --->   store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 via memory
HELIX:       %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98 --->   store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 via memory
HELIX:       %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98 --->   store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 via memory
HELIX:       br i1 %33, label %34, label %sha_update.exit, !prof !986, !noelle.loop.id !987, !noelle.pdg.inst.id !988, !noelle.parallelizer.looporder !989 --->   %.01.i = phi i8* [ %5, %._crit_edge.i ], [ %144, %sha_transform.exit.i ], !noelle.pdg.inst.id !983 control
HELIX:       br i1 %33, label %34, label %sha_update.exit, !prof !986, !noelle.loop.id !987, !noelle.pdg.inst.id !988, !noelle.parallelizer.looporder !989 --->   %.0.i = phi i32 [ %18, %._crit_edge.i ], [ %145, %sha_transform.exit.i ], !noelle.pdg.inst.id !984 control
HELIX:       br i1 %33, label %34, label %sha_update.exit, !prof !986, !noelle.loop.id !987, !noelle.pdg.inst.id !988, !noelle.parallelizer.looporder !989 --->   %33 = icmp sgt i32 %.0.i, 63, !noelle.pdg.inst.id !985 control
HELIX:       br i1 %33, label %34, label %sha_update.exit, !prof !986, !noelle.loop.id !987, !noelle.pdg.inst.id !988, !noelle.parallelizer.looporder !989 --->   br i1 %33, label %34, label %sha_update.exit, !prof !986, !noelle.loop.id !987, !noelle.pdg.inst.id !988, !noelle.parallelizer.looporder !989 control
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   %70 = load i64, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !102 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   %71 = load i64, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !104 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   %72 = load i64, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !106 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   %73 = load i64, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !108 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   %37 = load i8, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !82 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   %39 = load i8, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !84 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   %41 = load i8, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !86 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   %43 = load i8, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !88 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 --->   store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 via memory
HELIX:       store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98 via memory
HELIX:       store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   %69 = load i64, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !100 via memory
HELIX:       store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   %70 = load i64, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !102 via memory
HELIX:       store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   %71 = load i64, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !104 via memory
HELIX:       store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   %72 = load i64, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !106 via memory
HELIX:       store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   %73 = load i64, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !108 via memory
HELIX:       store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:       store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:       store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   %37 = load i8, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !82 via memory
HELIX:       store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   %39 = load i8, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !84 via memory
HELIX:       store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   %41 = load i8, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !86 via memory
HELIX:       store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   %43 = load i8, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !88 via memory
HELIX:       store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 via memory
HELIX:       store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 via memory
HELIX:       store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 via memory
HELIX:       store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 via memory
HELIX:       store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 via memory
HELIX:       store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 via memory
HELIX:       store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 via memory
HELIX:       store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 via memory
HELIX:       store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 --->   store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 via memory
HELIX:       store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98 via memory
HELIX:       store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   %69 = load i64, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !100 via memory
HELIX:       store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   %70 = load i64, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !102 via memory
HELIX:       store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   %71 = load i64, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !104 via memory
HELIX:       store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   %72 = load i64, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !106 via memory
HELIX:       store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   %73 = load i64, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !108 via memory
HELIX:       store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:       store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:       store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   %37 = load i8, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !82 via memory
HELIX:       store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   %39 = load i8, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !84 via memory
HELIX:       store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 via memory
HELIX:       store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 via memory
HELIX:       store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 via memory
HELIX:       store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 via memory
HELIX:       store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 via memory
HELIX:       store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 via memory
HELIX:       store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 --->   store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 via memory
HELIX:       store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98 via memory
HELIX:       store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   %69 = load i64, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !100 via memory
HELIX:       store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   %70 = load i64, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !102 via memory
HELIX:       store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   %71 = load i64, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !104 via memory
HELIX:       store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   %72 = load i64, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !106 via memory
HELIX:       store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   %73 = load i64, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !108 via memory
HELIX:       store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:       store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:       store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   %37 = load i8, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !82 via memory
HELIX:       store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   %41 = load i8, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !86 via memory
HELIX:       store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 via memory
HELIX:       store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 via memory
HELIX:       store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 via memory
HELIX:       store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 via memory
HELIX:       store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 via memory
HELIX:       store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 via memory
HELIX:       store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 --->   store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 via memory
HELIX:       store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   %49 = load i64, i64* %48, align 8, !tbaa !1013, !noelle.pdg.inst.id !98 via memory
HELIX:       store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   %69 = load i64, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !100 via memory
HELIX:       store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   %70 = load i64, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !102 via memory
HELIX:       store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   %71 = load i64, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !104 via memory
HELIX:       store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   %72 = load i64, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !106 via memory
HELIX:       store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   %73 = load i64, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !108 via memory
HELIX:       store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:       store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:       store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   %37 = load i8, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !82 via memory
HELIX:       store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   %43 = load i8, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !88 via memory
HELIX:       store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 via memory
HELIX:       store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 via memory
HELIX:       store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 via memory
HELIX:       store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 via memory
HELIX:       store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 via memory
HELIX:       store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 via memory
HELIX:       store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 --->   store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 via memory
HELIX:       store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 --->   %69 = load i64, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !100 via memory
HELIX:       store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:       store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 --->   %37 = load i8, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !82 via memory
HELIX:       store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 --->   %39 = load i8, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !84 via memory
HELIX:       store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 --->   %41 = load i8, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !86 via memory
HELIX:       store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 --->   %43 = load i8, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !88 via memory
HELIX:       store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 --->   store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 via memory
HELIX:       store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 --->   store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 via memory
HELIX:       store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 --->   store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 via memory
HELIX:       store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 --->   store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 via memory
HELIX:       store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 --->   store i64 %139, i64* %11, align 8, !tbaa !1013, !noelle.pdg.inst.id !52 via memory
HELIX:       store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 --->   %70 = load i64, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !102 via memory
HELIX:       store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:       store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:       store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 --->   %37 = load i8, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !82 via memory
HELIX:       store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 --->   %39 = load i8, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !84 via memory
HELIX:       store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 --->   %41 = load i8, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !86 via memory
HELIX:       store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 --->   %43 = load i8, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !88 via memory
HELIX:       store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 --->   store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 via memory
HELIX:       store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 --->   store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 via memory
HELIX:       store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 --->   store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 via memory
HELIX:       store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 --->   store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 via memory
HELIX:       store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 --->   store i64 %140, i64* %12, align 8, !tbaa !1013, !noelle.pdg.inst.id !55 via memory
HELIX:       store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 --->   %71 = load i64, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !104 via memory
HELIX:       store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:       store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:       store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 --->   %37 = load i8, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !82 via memory
HELIX:       store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 --->   %39 = load i8, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !84 via memory
HELIX:       store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 --->   %41 = load i8, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !86 via memory
HELIX:       store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 --->   %43 = load i8, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !88 via memory
HELIX:       store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 --->   store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 via memory
HELIX:       store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 --->   store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 via memory
HELIX:       store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 --->   store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 via memory
HELIX:       store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 --->   store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 via memory
HELIX:       store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 --->   store i64 %141, i64* %13, align 8, !tbaa !1013, !noelle.pdg.inst.id !57 via memory
HELIX:       store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 --->   %72 = load i64, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !106 via memory
HELIX:       store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:       store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:       store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 --->   %37 = load i8, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !82 via memory
HELIX:       store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 --->   %39 = load i8, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !84 via memory
HELIX:       store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 --->   %41 = load i8, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !86 via memory
HELIX:       store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 --->   %43 = load i8, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !88 via memory
HELIX:       store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 --->   store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 via memory
HELIX:       store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 --->   store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 via memory
HELIX:       store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 --->   store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 via memory
HELIX:       store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 --->   store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 via memory
HELIX:       store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 --->   store i64 %142, i64* %14, align 8, !tbaa !1013, !noelle.pdg.inst.id !59 via memory
HELIX:       store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 --->   %73 = load i64, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !108 via memory
HELIX:       store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:       store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %.01.i, i64 64, i1 false) #8, !noelle.pdg.inst.id !46 via memory
HELIX:       store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 --->   %37 = load i8, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !82 via memory
HELIX:       store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 --->   %39 = load i8, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !84 via memory
HELIX:       store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 --->   %41 = load i8, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !86 via memory
HELIX:       store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 --->   %43 = load i8, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !88 via memory
HELIX:       store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 --->   store i8 %43, i8* %.0.i.i, align 1, !tbaa !997, !noelle.pdg.inst.id !90 via memory
HELIX:       store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 --->   store i8 %41, i8* %38, align 1, !tbaa !997, !noelle.pdg.inst.id !92 via memory
HELIX:       store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 --->   store i8 %39, i8* %40, align 1, !tbaa !997, !noelle.pdg.inst.id !94 via memory
HELIX:       store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 --->   store i8 %37, i8* %42, align 1, !tbaa !997, !noelle.pdg.inst.id !96 via memory
HELIX:       store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 --->   store i64 %143, i64* %15, align 8, !tbaa !1013, !noelle.pdg.inst.id !61 via memory
HELIX:       %144 = getelementptr inbounds i8, i8* %.01.i, i64 64, !noelle.pdg.inst.id !1167 --->   %.01.i = phi i8* [ %5, %._crit_edge.i ], [ %144, %sha_transform.exit.i ], !noelle.pdg.inst.id !983 via variable
HELIX:       %145 = add nsw i32 %.0.i, -64, !noelle.pdg.inst.id !1168 --->   %.0.i = phi i32 [ %18, %._crit_edge.i ], [ %145, %sha_transform.exit.i ], !noelle.pdg.inst.id !984 via variable
HELIX: Start the parallelization
HELIX:   Initialize the environment of the loop
HELIX:   Cloning loop in task
HELIX:   Check if we need to spill variables because they are part of loop carried data dependencies
HELIX:   Adjusting loop IVs
HELIX:  Constructing task dependence graph
HELIX:  Constructing task loop dependence info
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %8 = alloca [80 x i64], align 16, !noelle.pdg.inst.id !30
ClonableMemoryObject:   There are RAW memory data dependences between loop iterations
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %8 = alloca [80 x i64], align 16, !noelle.pdg.inst.id !30
ClonableMemoryObject:   There are RAW memory data dependences between loop iterations
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
HELIX:   Loop has 23 basic blocks:

61:                                               ; preds = %77
  %62 = shl i64 %82, 5, !noelle.pdg.inst.id !53
  %63 = lshr i64 %82, 27, !noelle.pdg.inst.id !54
  %64 = or i64 %62, %63, !noelle.pdg.inst.id !55
  %65 = xor i64 %81, %80, !noelle.pdg.inst.id !56
  %66 = xor i64 %65, %79, !noelle.pdg.inst.id !57
  %67 = add i64 %64, %66, !noelle.pdg.inst.id !58
  %68 = add i64 %67, %83, !noelle.pdg.inst.id !59
  %69 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %78, !noelle.pdg.inst.id !60
  %70 = load i64, i64* %69, align 8, !tbaa !37, !noelle.pdg.inst.id !61
  %71 = add i64 %68, %70, !noelle.pdg.inst.id !62
  %72 = add i64 %71, 3395469782, !noelle.pdg.inst.id !63
  %73 = shl i64 %81, 30, !noelle.pdg.inst.id !64
  %74 = lshr i64 %81, 2, !noelle.pdg.inst.id !65
  %75 = or i64 %73, %74, !noelle.pdg.inst.id !66
  %76 = add nuw nsw i64 %78, 1, !noelle.pdg.inst.id !67
  br label %77, !noelle.pdg.inst.id !68


85:                                               ; preds = %109
  %86 = phi i64 [ %111, %109 ], !noelle.pdg.inst.id !79
  %87 = phi i64 [ %112, %109 ], !noelle.pdg.inst.id !80
  %88 = phi i64 [ %113, %109 ], !noelle.pdg.inst.id !81
  %89 = phi i64 [ %114, %109 ], !noelle.pdg.inst.id !82
  %90 = phi i64 [ %115, %109 ], !noelle.pdg.inst.id !83
  br label %77, !noelle.pdg.inst.id !84


91:                                               ; preds = %109
  %92 = shl i64 %114, 5, !noelle.pdg.inst.id !85
  %93 = lshr i64 %114, 27, !noelle.pdg.inst.id !86
  %94 = or i64 %92, %93, !noelle.pdg.inst.id !87
  %95 = or i64 %112, %111, !noelle.pdg.inst.id !88
  %96 = and i64 %113, %95, !noelle.pdg.inst.id !89
  %97 = and i64 %112, %111, !noelle.pdg.inst.id !90
  %98 = or i64 %96, %97, !noelle.pdg.inst.id !91
  %99 = add i64 %94, %98, !noelle.pdg.inst.id !92
  %100 = add i64 %99, %115, !noelle.pdg.inst.id !93
  %101 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %110, !noelle.pdg.inst.id !94
  %102 = load i64, i64* %101, align 8, !tbaa !37, !noelle.pdg.inst.id !95
  %103 = add i64 %100, %102, !noelle.pdg.inst.id !96
  %104 = add i64 %103, 2400959708, !noelle.pdg.inst.id !97
  %105 = shl i64 %113, 30, !noelle.pdg.inst.id !98
  %106 = lshr i64 %113, 2, !noelle.pdg.inst.id !99
  %107 = or i64 %105, %106, !noelle.pdg.inst.id !100
  %108 = add nuw nsw i64 %110, 1, !noelle.pdg.inst.id !101
  br label %109, !noelle.pdg.inst.id !102


109:                                              ; preds = %91, %117
  %110 = phi i64 [ %108, %91 ], [ 40, %117 ], !noelle.pdg.inst.id !103
  %111 = phi i64 [ %112, %91 ], [ %118, %117 ], !noelle.pdg.inst.id !104
  %112 = phi i64 [ %107, %91 ], [ %119, %117 ], !noelle.pdg.inst.id !105
  %113 = phi i64 [ %114, %91 ], [ %120, %117 ], !noelle.pdg.inst.id !106
  %114 = phi i64 [ %104, %91 ], [ %121, %117 ], !noelle.pdg.inst.id !107
  %115 = phi i64 [ %111, %91 ], [ %122, %117 ], !noelle.pdg.inst.id !108
  %116 = icmp eq i64 %110, 60, !noelle.pdg.inst.id !109
  br i1 %116, label %85, label %91, !prof !76, !noelle.loop.id !110, !noelle.pdg.inst.id !111


117:                                              ; preds = %211
  %118 = phi i64 [ %213, %211 ], !noelle.pdg.inst.id !112
  %119 = phi i64 [ %214, %211 ], !noelle.pdg.inst.id !113
  %120 = phi i64 [ %215, %211 ], !noelle.pdg.inst.id !114
  %121 = phi i64 [ %216, %211 ], !noelle.pdg.inst.id !115
  %122 = phi i64 [ %217, %211 ], !noelle.pdg.inst.id !116
  br label %109, !noelle.pdg.inst.id !117


126:                                              ; preds = %137
  br label %123, !noelle.pdg.inst.id !123


141:                                              ; preds = %7, %44
  %142 = phi i8* [ %33, %7 ], [ %59, %44 ], !noelle.pdg.inst.id !145
  %143 = phi i32 [ %36, %7 ], [ %60, %44 ], !noelle.pdg.inst.id !146
  %144 = icmp sle i32 %143, 63, !noelle.pdg.inst.id !147
  br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151


145:                                              ; preds = %141
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
  br label %137, !noelle.pdg.inst.id !153


146:                                              ; preds = %123
  %147 = getelementptr inbounds %struct.SHA_INFO, %struct.SHA_INFO* %noelle_environment_variable_0, i64 0, i32 3, i64 %124, !noelle.pdg.inst.id !154
  %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155
  %149 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %124, !noelle.pdg.inst.id !156
  store i64 %148, i64* %149, align 8, !tbaa !37, !noelle.pdg.inst.id !157
  %150 = add nuw nsw i64 %124, 1, !noelle.pdg.inst.id !158
  br label %123, !noelle.pdg.inst.id !159


44:                                               ; preds = %77
  %45 = phi i64 [ %79, %77 ], !noelle.pdg.inst.id !31
  %46 = phi i64 [ %80, %77 ], !noelle.pdg.inst.id !32
  %47 = phi i64 [ %81, %77 ], !noelle.pdg.inst.id !33
  %48 = phi i64 [ %82, %77 ], !noelle.pdg.inst.id !34
  %49 = phi i64 [ %83, %77 ], !noelle.pdg.inst.id !35
  %50 = add i64 %174, %48, !noelle.pdg.inst.id !36
  store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41
  %51 = add i64 %175, %47, !noelle.pdg.inst.id !42
  store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43
  %52 = add i64 %176, %46, !noelle.pdg.inst.id !44
  store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45
  %53 = add i64 %177, %45, !noelle.pdg.inst.id !46
  store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
  %54 = add i64 %178, %49, !noelle.pdg.inst.id !48
  store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49
  %55 = getelementptr inbounds i8, i8* %142, i64 64, !noelle.pdg.inst.id !50
  %56 = add nsw i32 %143, -64, !noelle.pdg.inst.id !51
  %57 = ptrtoint i8* %55 to i64
  %58 = add i64 %57, %38
  %59 = inttoptr i64 %58 to i8*
  %60 = add i32 %56, %41
  br label %141, !noelle.pdg.inst.id !52


123:                                              ; preds = %146, %126
  %124 = phi i64 [ %150, %146 ], [ 0, %126 ], !noelle.pdg.inst.id !118
  %125 = icmp eq i64 %124, 16, !noelle.pdg.inst.id !119
  br i1 %125, label %151, label %146, !prof !120, !noelle.loop.id !121, !noelle.pdg.inst.id !122


151:                                              ; preds = %123
  br label %152, !noelle.pdg.inst.id !160


77:                                               ; preds = %85, %61
  %78 = phi i64 [ %76, %61 ], [ 60, %85 ], !noelle.pdg.inst.id !69
  %79 = phi i64 [ %80, %61 ], [ %86, %85 ], !noelle.pdg.inst.id !70
  %80 = phi i64 [ %75, %61 ], [ %87, %85 ], !noelle.pdg.inst.id !71
  %81 = phi i64 [ %82, %61 ], [ %88, %85 ], !noelle.pdg.inst.id !72
  %82 = phi i64 [ %72, %61 ], [ %89, %85 ], !noelle.pdg.inst.id !73
  %83 = phi i64 [ %79, %61 ], [ %90, %85 ], !noelle.pdg.inst.id !74
  %84 = icmp eq i64 %78, 80, !noelle.pdg.inst.id !75
  br i1 %84, label %44, label %61, !prof !76, !noelle.loop.id !77, !noelle.pdg.inst.id !78


152:                                              ; preds = %151, %155
  %153 = phi i64 [ %172, %155 ], [ 16, %151 ], !noelle.pdg.inst.id !161
  %154 = icmp eq i64 %153, 80, !noelle.pdg.inst.id !162
  br i1 %154, label %173, label %155, !prof !163, !noelle.loop.id !164, !noelle.pdg.inst.id !165


155:                                              ; preds = %152
  %156 = add nsw i64 %153, -3, !noelle.pdg.inst.id !166
  %157 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %156, !noelle.pdg.inst.id !167
  %158 = load i64, i64* %157, align 8, !tbaa !37, !noelle.pdg.inst.id !168
  %159 = add nsw i64 %153, -8, !noelle.pdg.inst.id !169
  %160 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %159, !noelle.pdg.inst.id !170
  %161 = load i64, i64* %160, align 8, !tbaa !37, !noelle.pdg.inst.id !171
  %162 = xor i64 %158, %161, !noelle.pdg.inst.id !172
  %163 = add nsw i64 %153, -14, !noelle.pdg.inst.id !173
  %164 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %163, !noelle.pdg.inst.id !174
  %165 = load i64, i64* %164, align 8, !tbaa !37, !noelle.pdg.inst.id !175
  %166 = xor i64 %162, %165, !noelle.pdg.inst.id !176
  %167 = add nsw i64 %153, -16, !noelle.pdg.inst.id !177
  %168 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %167, !noelle.pdg.inst.id !178
  %169 = load i64, i64* %168, align 8, !tbaa !37, !noelle.pdg.inst.id !179
  %170 = xor i64 %166, %169, !noelle.pdg.inst.id !180
  %171 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %153, !noelle.pdg.inst.id !181
  store i64 %170, i64* %171, align 8, !tbaa !37, !noelle.pdg.inst.id !182
  %172 = add nuw nsw i64 %153, 1, !noelle.pdg.inst.id !183
  br label %152, !noelle.pdg.inst.id !184


173:                                              ; preds = %152
  %174 = load i64, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !185
  %175 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !186
  %176 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !187
  %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188
  %178 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !189
  br label %179, !noelle.pdg.inst.id !190


137:                                              ; preds = %127, %145
  %138 = phi i32 [ 0, %145 ], [ %136, %127 ], !noelle.pdg.inst.id !139
  %139 = phi i8* [ %noelle_environment_variable_2, %145 ], [ %135, %127 ], !noelle.pdg.inst.id !140
  %140 = icmp eq i32 %138, 8, !noelle.pdg.inst.id !141
  br i1 %140, label %126, label %127, !prof !142, !noelle.loop.id !143, !noelle.pdg.inst.id !144


179:                                              ; preds = %187, %173
  %180 = phi i64 [ %204, %187 ], [ 0, %173 ], !noelle.pdg.inst.id !191
  %181 = phi i64 [ %182, %187 ], [ %177, %173 ], !noelle.pdg.inst.id !192
  %182 = phi i64 [ %203, %187 ], [ %176, %173 ], !noelle.pdg.inst.id !193
  %183 = phi i64 [ %184, %187 ], [ %175, %173 ], !noelle.pdg.inst.id !194
  %184 = phi i64 [ %200, %187 ], [ %174, %173 ], !noelle.pdg.inst.id !195
  %185 = phi i64 [ %181, %187 ], [ %178, %173 ], !noelle.pdg.inst.id !196
  %186 = icmp eq i64 %180, 20, !noelle.pdg.inst.id !197
  br i1 %186, label %205, label %187, !prof !76, !noelle.loop.id !198, !noelle.pdg.inst.id !199


127:                                              ; preds = %137
  %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125
  %129 = getelementptr inbounds i8, i8* %139, i64 1, !noelle.pdg.inst.id !126
  %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127
  %131 = getelementptr inbounds i8, i8* %139, i64 2, !noelle.pdg.inst.id !128
  %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129
  %133 = getelementptr inbounds i8, i8* %139, i64 3, !noelle.pdg.inst.id !130
  %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131
  store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
  store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133
  store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134
  store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135
  %135 = getelementptr inbounds i8, i8* %139, i64 8, !noelle.pdg.inst.id !136
  %136 = add nuw nsw i32 %138, 1, !noelle.pdg.inst.id !137
  br label %137, !noelle.pdg.inst.id !138


211:                                              ; preds = %205, %219
  %212 = phi i64 [ %234, %219 ], [ 20, %205 ], !noelle.pdg.inst.id !224
  %213 = phi i64 [ %214, %219 ], [ %206, %205 ], !noelle.pdg.inst.id !225
  %214 = phi i64 [ %233, %219 ], [ %207, %205 ], !noelle.pdg.inst.id !226
  %215 = phi i64 [ %216, %219 ], [ %208, %205 ], !noelle.pdg.inst.id !227
  %216 = phi i64 [ %230, %219 ], [ %209, %205 ], !noelle.pdg.inst.id !228
  %217 = phi i64 [ %213, %219 ], [ %210, %205 ], !noelle.pdg.inst.id !229
  %218 = icmp eq i64 %212, 40, !noelle.pdg.inst.id !230
  br i1 %218, label %117, label %219, !prof !76, !noelle.loop.id !231, !noelle.pdg.inst.id !232


187:                                              ; preds = %179
  %188 = shl i64 %184, 5, !noelle.pdg.inst.id !200
  %189 = lshr i64 %184, 27, !noelle.pdg.inst.id !201
  %190 = or i64 %188, %189, !noelle.pdg.inst.id !202
  %191 = and i64 %183, %182, !noelle.pdg.inst.id !203
  %192 = xor i64 %183, -1, !noelle.pdg.inst.id !204
  %193 = and i64 %181, %192, !noelle.pdg.inst.id !205
  %194 = or i64 %191, %193, !noelle.pdg.inst.id !206
  %195 = add i64 %190, %194, !noelle.pdg.inst.id !207
  %196 = add i64 %195, %185, !noelle.pdg.inst.id !208
  %197 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %180, !noelle.pdg.inst.id !209
  %198 = load i64, i64* %197, align 8, !tbaa !37, !noelle.pdg.inst.id !210
  %199 = add i64 %196, %198, !noelle.pdg.inst.id !211
  %200 = add i64 %199, 1518500249, !noelle.pdg.inst.id !212
  %201 = shl i64 %183, 30, !noelle.pdg.inst.id !213
  %202 = lshr i64 %183, 2, !noelle.pdg.inst.id !214
  %203 = or i64 %201, %202, !noelle.pdg.inst.id !215
  %204 = add nuw nsw i64 %180, 1, !noelle.pdg.inst.id !216
  br label %179, !noelle.pdg.inst.id !217


205:                                              ; preds = %179
  %206 = phi i64 [ %181, %179 ], !noelle.pdg.inst.id !218
  %207 = phi i64 [ %182, %179 ], !noelle.pdg.inst.id !219
  %208 = phi i64 [ %183, %179 ], !noelle.pdg.inst.id !220
  %209 = phi i64 [ %184, %179 ], !noelle.pdg.inst.id !221
  %210 = phi i64 [ %185, %179 ], !noelle.pdg.inst.id !222
  br label %211, !noelle.pdg.inst.id !223


219:                                              ; preds = %211
  %220 = shl i64 %216, 5, !noelle.pdg.inst.id !233
  %221 = lshr i64 %216, 27, !noelle.pdg.inst.id !234
  %222 = or i64 %220, %221, !noelle.pdg.inst.id !235
  %223 = xor i64 %215, %214, !noelle.pdg.inst.id !236
  %224 = xor i64 %223, %213, !noelle.pdg.inst.id !237
  %225 = add i64 %222, %224, !noelle.pdg.inst.id !238
  %226 = add i64 %225, %217, !noelle.pdg.inst.id !239
  %227 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %212, !noelle.pdg.inst.id !240
  %228 = load i64, i64* %227, align 8, !tbaa !37, !noelle.pdg.inst.id !241
  %229 = add i64 %226, %228, !noelle.pdg.inst.id !242
  %230 = add i64 %229, 1859775393, !noelle.pdg.inst.id !243
  %231 = shl i64 %215, 30, !noelle.pdg.inst.id !244
  %232 = lshr i64 %215, 2, !noelle.pdg.inst.id !245
  %233 = or i64 %231, %232, !noelle.pdg.inst.id !246
  %234 = add nuw nsw i64 %212, 1, !noelle.pdg.inst.id !247
  br label %211, !noelle.pdg.inst.id !248

HELIX:   There are 6 SCCs that have loop-carried dependences that cannot be broken
HELIX:     SCC:
HELIX:       Loop-carried dependences
HELIX:           store i64 %148, i64* %149, align 8, !tbaa !37, !noelle.pdg.inst.id !157 --->   store i64 %148, i64* %149, align 8, !tbaa !37, !noelle.pdg.inst.id !157 via memory
HELIX:       Nodes within the SCC: 1
HELIX:       	  store i64 %148, i64* %149, align 8, !tbaa !37, !noelle.pdg.inst.id !157
HELIX:       Nodes outside the SCC and connected with at least one node within the SCC: 3
HELIX:       	  %149 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %124, !noelle.pdg.inst.id !156
HELIX:       	  br i1 %125, label %151, label %146, !prof !120, !noelle.loop.id !121, !noelle.pdg.inst.id !122
HELIX:       	  %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155
HELIX:       Edges: 4
HELIX:         From:	  %149 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %124, !noelle.pdg.inst.id !156
HELIX:         To:	  store i64 %148, i64* %149, align 8, !tbaa !37, !noelle.pdg.inst.id !157
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  br i1 %125, label %151, label %146, !prof !120, !noelle.loop.id !121, !noelle.pdg.inst.id !122
HELIX:         To:	  store i64 %148, i64* %149, align 8, !tbaa !37, !noelle.pdg.inst.id !157
HELIX:         Attributes: Control 

HELIX:         From:	  %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155
HELIX:         To:	  store i64 %148, i64* %149, align 8, !tbaa !37, !noelle.pdg.inst.id !157
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  store i64 %148, i64* %149, align 8, !tbaa !37, !noelle.pdg.inst.id !157
HELIX:         To:	  store i64 %148, i64* %149, align 8, !tbaa !37, !noelle.pdg.inst.id !157
HELIX:         Attributes: Loop-carried Data WAW (may) from memory 

HELIX:     SCC:
HELIX:       Loop-carried dependences
HELIX:           store i64 %170, i64* %171, align 8, !tbaa !37, !noelle.pdg.inst.id !182 --->   %70 = load i64, i64* %69, align 8, !tbaa !37, !noelle.pdg.inst.id !61 via memory
HELIX:           store i64 %170, i64* %171, align 8, !tbaa !37, !noelle.pdg.inst.id !182 --->   %70 = load i64, i64* %69, align 8, !tbaa !37, !noelle.pdg.inst.id !61 via memory
HELIX:       Nodes within the SCC: 1
HELIX:       	  %70 = load i64, i64* %69, align 8, !tbaa !37, !noelle.pdg.inst.id !61
HELIX:       Nodes outside the SCC and connected with at least one node within the SCC: 4
HELIX:       	  %69 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %78, !noelle.pdg.inst.id !60
HELIX:       	  br i1 %84, label %44, label %61, !prof !76, !noelle.loop.id !77, !noelle.pdg.inst.id !78
HELIX:       	  %71 = add i64 %68, %70, !noelle.pdg.inst.id !62
HELIX:       	  store i64 %170, i64* %171, align 8, !tbaa !37, !noelle.pdg.inst.id !182
HELIX:       Edges: 4
HELIX:         From:	  %69 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %78, !noelle.pdg.inst.id !60
HELIX:         To:	  %70 = load i64, i64* %69, align 8, !tbaa !37, !noelle.pdg.inst.id !61
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  br i1 %84, label %44, label %61, !prof !76, !noelle.loop.id !77, !noelle.pdg.inst.id !78
HELIX:         To:	  %70 = load i64, i64* %69, align 8, !tbaa !37, !noelle.pdg.inst.id !61
HELIX:         Attributes: Control 

HELIX:         From:	  %70 = load i64, i64* %69, align 8, !tbaa !37, !noelle.pdg.inst.id !61
HELIX:         To:	  %71 = add i64 %68, %70, !noelle.pdg.inst.id !62
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  store i64 %170, i64* %171, align 8, !tbaa !37, !noelle.pdg.inst.id !182
HELIX:         To:	  %70 = load i64, i64* %69, align 8, !tbaa !37, !noelle.pdg.inst.id !61
HELIX:         Attributes: Loop-carried Data RAW (may) from memory 

HELIX:     SCC:
HELIX:       Loop-carried dependences
HELIX:           store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 --->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 via memory
HELIX:           store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 --->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 via memory
HELIX:           store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 --->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 via memory
HELIX:           store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 --->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125 via memory
HELIX:           store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 --->   %174 = load i64, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !185 via memory
HELIX:           store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 --->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 via memory
HELIX:           store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 --->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127 via memory
HELIX:           store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:           store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 --->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131 via memory
HELIX:           store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 --->   store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 via memory
HELIX:           store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 --->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129 via memory
HELIX:           store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 --->   %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188 via memory
HELIX:           store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 --->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 via memory
HELIX:           store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 --->   store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 via memory
HELIX:           store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 --->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127 via memory
HELIX:           store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 --->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 via memory
HELIX:           store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 --->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125 via memory
HELIX:           store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 --->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129 via memory
HELIX:           store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:           store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 --->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 via memory
HELIX:           store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:           store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 --->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 via memory
HELIX:           store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 --->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131 via memory
HELIX:           store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 --->   store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 via memory
HELIX:           store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 --->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131 via memory
HELIX:           store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 --->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 via memory
HELIX:           store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:           store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:           store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 --->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 via memory
HELIX:           store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 --->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 via memory
HELIX:           store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 --->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125 via memory
HELIX:           store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 --->   %175 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !186 via memory
HELIX:           store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 --->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 via memory
HELIX:           store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 --->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129 via memory
HELIX:           store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 --->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127 via memory
HELIX:           store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 --->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 via memory
HELIX:           store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:           store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 --->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127 via memory
HELIX:           store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 --->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 via memory
HELIX:           store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 --->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125 via memory
HELIX:           store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 --->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 via memory
HELIX:           store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 --->   %176 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !187 via memory
HELIX:           store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 --->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 via memory
HELIX:           store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:           store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 --->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131 via memory
HELIX:           store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 --->   store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 via memory
HELIX:           store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 --->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129 via memory
HELIX:           store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 --->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125 via memory
HELIX:           store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:           store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 --->   store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 via memory
HELIX:           store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 --->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131 via memory
HELIX:           store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:           store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 --->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 via memory
HELIX:           store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 --->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 via memory
HELIX:           store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 --->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129 via memory
HELIX:           store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 --->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 via memory
HELIX:           store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 --->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 via memory
HELIX:           store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 --->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127 via memory
HELIX:           store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 --->   %178 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !189 via memory
HELIX:           %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125 --->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 via memory
HELIX:           %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127 --->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 via memory
HELIX:           %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129 --->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 via memory
HELIX:           %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131 --->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 via memory
HELIX:           store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 via memory
HELIX:           store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 via memory
HELIX:           store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 via memory
HELIX:           store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 via memory
HELIX:           store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 via memory
HELIX:           store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   %175 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !186 via memory
HELIX:           store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127 via memory
HELIX:           store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   %176 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !187 via memory
HELIX:           store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   %178 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !189 via memory
HELIX:           store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 via memory
HELIX:           store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:           store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   %174 = load i64, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !185 via memory
HELIX:           store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129 via memory
HELIX:           store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188 via memory
HELIX:           store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 via memory
HELIX:           store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 via memory
HELIX:           store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 via memory
HELIX:           store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131 via memory
HELIX:           store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 via memory
HELIX:           store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:           store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125 via memory
HELIX:           store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 via memory
HELIX:           store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   %174 = load i64, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !185 via memory
HELIX:           store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   %175 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !186 via memory
HELIX:           store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   %178 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !189 via memory
HELIX:           store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 via memory
HELIX:           store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   %176 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !187 via memory
HELIX:           store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 via memory
HELIX:           store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127 via memory
HELIX:           store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188 via memory
HELIX:           store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 via memory
HELIX:           store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125 via memory
HELIX:           store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 via memory
HELIX:           store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 via memory
HELIX:           store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:           store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:           store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 via memory
HELIX:           store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 via memory
HELIX:           store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 via memory
HELIX:           store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 via memory
HELIX:           store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   %175 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !186 via memory
HELIX:           store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 via memory
HELIX:           store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 via memory
HELIX:           store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 via memory
HELIX:           store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   %178 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !189 via memory
HELIX:           store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   %176 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !187 via memory
HELIX:           store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125 via memory
HELIX:           store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188 via memory
HELIX:           store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 via memory
HELIX:           store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 via memory
HELIX:           store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:           store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:           store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   %174 = load i64, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !185 via memory
HELIX:           store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129 via memory
HELIX:           store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 via memory
HELIX:           store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 via memory
HELIX:           store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   %174 = load i64, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !185 via memory
HELIX:           store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 via memory
HELIX:           store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 via memory
HELIX:           store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   %175 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !186 via memory
HELIX:           store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   %178 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !189 via memory
HELIX:           store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   %176 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !187 via memory
HELIX:           store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 via memory
HELIX:           store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188 via memory
HELIX:           store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131 via memory
HELIX:           store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 via memory
HELIX:           store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:           store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 via memory
HELIX:           store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 via memory
HELIX:           store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 via memory
HELIX:           store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:           store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   %175 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !186 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   %178 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !189 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   %176 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !187 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 via memory
HELIX:           call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:           %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 --->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 via memory
HELIX:           %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 --->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 via memory
HELIX:           %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 --->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 via memory
HELIX:           %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 --->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 via memory
HELIX:           %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:       Nodes within the SCC: 117
HELIX:       	  store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:       	  store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43
HELIX:       	  store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45
HELIX:       	  store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41
HELIX:       	  %50 = add i64 %174, %48, !noelle.pdg.inst.id !36
HELIX:       	  %45 = phi i64 [ %79, %77 ], !noelle.pdg.inst.id !31
HELIX:       	  %46 = phi i64 [ %80, %77 ], !noelle.pdg.inst.id !32
HELIX:       	  %47 = phi i64 [ %81, %77 ], !noelle.pdg.inst.id !33
HELIX:       	  %48 = phi i64 [ %82, %77 ], !noelle.pdg.inst.id !34
HELIX:       	  %49 = phi i64 [ %83, %77 ], !noelle.pdg.inst.id !35
HELIX:       	  %51 = add i64 %175, %47, !noelle.pdg.inst.id !42
HELIX:       	  %52 = add i64 %176, %46, !noelle.pdg.inst.id !44
HELIX:       	  %53 = add i64 %177, %45, !noelle.pdg.inst.id !46
HELIX:       	  %54 = add i64 %178, %49, !noelle.pdg.inst.id !48
HELIX:       	  store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49
HELIX:       	  %62 = shl i64 %82, 5, !noelle.pdg.inst.id !53
HELIX:       	  %63 = lshr i64 %82, 27, !noelle.pdg.inst.id !54
HELIX:       	  %64 = or i64 %62, %63, !noelle.pdg.inst.id !55
HELIX:       	  %65 = xor i64 %81, %80, !noelle.pdg.inst.id !56
HELIX:       	  %66 = xor i64 %65, %79, !noelle.pdg.inst.id !57
HELIX:       	  %67 = add i64 %64, %66, !noelle.pdg.inst.id !58
HELIX:       	  %68 = add i64 %67, %83, !noelle.pdg.inst.id !59
HELIX:       	  %71 = add i64 %68, %70, !noelle.pdg.inst.id !62
HELIX:       	  %72 = add i64 %71, 3395469782, !noelle.pdg.inst.id !63
HELIX:       	  %73 = shl i64 %81, 30, !noelle.pdg.inst.id !64
HELIX:       	  %74 = lshr i64 %81, 2, !noelle.pdg.inst.id !65
HELIX:       	  %75 = or i64 %73, %74, !noelle.pdg.inst.id !66
HELIX:       	  %79 = phi i64 [ %80, %61 ], [ %86, %85 ], !noelle.pdg.inst.id !70
HELIX:       	  %80 = phi i64 [ %75, %61 ], [ %87, %85 ], !noelle.pdg.inst.id !71
HELIX:       	  %81 = phi i64 [ %82, %61 ], [ %88, %85 ], !noelle.pdg.inst.id !72
HELIX:       	  %82 = phi i64 [ %72, %61 ], [ %89, %85 ], !noelle.pdg.inst.id !73
HELIX:       	  %83 = phi i64 [ %79, %61 ], [ %90, %85 ], !noelle.pdg.inst.id !74
HELIX:       	  %86 = phi i64 [ %111, %109 ], !noelle.pdg.inst.id !79
HELIX:       	  %87 = phi i64 [ %112, %109 ], !noelle.pdg.inst.id !80
HELIX:       	  %88 = phi i64 [ %113, %109 ], !noelle.pdg.inst.id !81
HELIX:       	  %89 = phi i64 [ %114, %109 ], !noelle.pdg.inst.id !82
HELIX:       	  %90 = phi i64 [ %115, %109 ], !noelle.pdg.inst.id !83
HELIX:       	  %92 = shl i64 %114, 5, !noelle.pdg.inst.id !85
HELIX:       	  %93 = lshr i64 %114, 27, !noelle.pdg.inst.id !86
HELIX:       	  %94 = or i64 %92, %93, !noelle.pdg.inst.id !87
HELIX:       	  %95 = or i64 %112, %111, !noelle.pdg.inst.id !88
HELIX:       	  %96 = and i64 %113, %95, !noelle.pdg.inst.id !89
HELIX:       	  %97 = and i64 %112, %111, !noelle.pdg.inst.id !90
HELIX:       	  %98 = or i64 %96, %97, !noelle.pdg.inst.id !91
HELIX:       	  %99 = add i64 %94, %98, !noelle.pdg.inst.id !92
HELIX:       	  %100 = add i64 %99, %115, !noelle.pdg.inst.id !93
HELIX:       	  %103 = add i64 %100, %102, !noelle.pdg.inst.id !96
HELIX:       	  %104 = add i64 %103, 2400959708, !noelle.pdg.inst.id !97
HELIX:       	  %105 = shl i64 %113, 30, !noelle.pdg.inst.id !98
HELIX:       	  %106 = lshr i64 %113, 2, !noelle.pdg.inst.id !99
HELIX:       	  %107 = or i64 %105, %106, !noelle.pdg.inst.id !100
HELIX:       	  %111 = phi i64 [ %112, %91 ], [ %118, %117 ], !noelle.pdg.inst.id !104
HELIX:       	  %112 = phi i64 [ %107, %91 ], [ %119, %117 ], !noelle.pdg.inst.id !105
HELIX:       	  %113 = phi i64 [ %114, %91 ], [ %120, %117 ], !noelle.pdg.inst.id !106
HELIX:       	  %114 = phi i64 [ %104, %91 ], [ %121, %117 ], !noelle.pdg.inst.id !107
HELIX:       	  %115 = phi i64 [ %111, %91 ], [ %122, %117 ], !noelle.pdg.inst.id !108
HELIX:       	  %118 = phi i64 [ %213, %211 ], !noelle.pdg.inst.id !112
HELIX:       	  %119 = phi i64 [ %214, %211 ], !noelle.pdg.inst.id !113
HELIX:       	  %120 = phi i64 [ %215, %211 ], !noelle.pdg.inst.id !114
HELIX:       	  %121 = phi i64 [ %216, %211 ], !noelle.pdg.inst.id !115
HELIX:       	  %122 = phi i64 [ %217, %211 ], !noelle.pdg.inst.id !116
HELIX:       	  %206 = phi i64 [ %181, %179 ], !noelle.pdg.inst.id !218
HELIX:       	  %207 = phi i64 [ %182, %179 ], !noelle.pdg.inst.id !219
HELIX:       	  %208 = phi i64 [ %183, %179 ], !noelle.pdg.inst.id !220
HELIX:       	  %209 = phi i64 [ %184, %179 ], !noelle.pdg.inst.id !221
HELIX:       	  %210 = phi i64 [ %185, %179 ], !noelle.pdg.inst.id !222
HELIX:       	  %213 = phi i64 [ %214, %219 ], [ %206, %205 ], !noelle.pdg.inst.id !225
HELIX:       	  %214 = phi i64 [ %233, %219 ], [ %207, %205 ], !noelle.pdg.inst.id !226
HELIX:       	  %215 = phi i64 [ %216, %219 ], [ %208, %205 ], !noelle.pdg.inst.id !227
HELIX:       	  %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125
HELIX:       	  %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127
HELIX:       	  %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129
HELIX:       	  %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131
HELIX:       	  store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:       	  store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133
HELIX:       	  store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134
HELIX:       	  store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135
HELIX:       	  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:       	  %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155
HELIX:       	  %174 = load i64, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !185
HELIX:       	  %175 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !186
HELIX:       	  %176 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !187
HELIX:       	  %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188
HELIX:       	  %178 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !189
HELIX:       	  %181 = phi i64 [ %182, %187 ], [ %177, %173 ], !noelle.pdg.inst.id !192
HELIX:       	  %182 = phi i64 [ %203, %187 ], [ %176, %173 ], !noelle.pdg.inst.id !193
HELIX:       	  %183 = phi i64 [ %184, %187 ], [ %175, %173 ], !noelle.pdg.inst.id !194
HELIX:       	  %184 = phi i64 [ %200, %187 ], [ %174, %173 ], !noelle.pdg.inst.id !195
HELIX:       	  %185 = phi i64 [ %181, %187 ], [ %178, %173 ], !noelle.pdg.inst.id !196
HELIX:       	  %188 = shl i64 %184, 5, !noelle.pdg.inst.id !200
HELIX:       	  %189 = lshr i64 %184, 27, !noelle.pdg.inst.id !201
HELIX:       	  %190 = or i64 %188, %189, !noelle.pdg.inst.id !202
HELIX:       	  %191 = and i64 %183, %182, !noelle.pdg.inst.id !203
HELIX:       	  %192 = xor i64 %183, -1, !noelle.pdg.inst.id !204
HELIX:       	  %193 = and i64 %181, %192, !noelle.pdg.inst.id !205
HELIX:       	  %194 = or i64 %191, %193, !noelle.pdg.inst.id !206
HELIX:       	  %195 = add i64 %190, %194, !noelle.pdg.inst.id !207
HELIX:       	  %196 = add i64 %195, %185, !noelle.pdg.inst.id !208
HELIX:       	  %199 = add i64 %196, %198, !noelle.pdg.inst.id !211
HELIX:       	  %200 = add i64 %199, 1518500249, !noelle.pdg.inst.id !212
HELIX:       	  %201 = shl i64 %183, 30, !noelle.pdg.inst.id !213
HELIX:       	  %202 = lshr i64 %183, 2, !noelle.pdg.inst.id !214
HELIX:       	  %203 = or i64 %201, %202, !noelle.pdg.inst.id !215
HELIX:       	  %216 = phi i64 [ %230, %219 ], [ %209, %205 ], !noelle.pdg.inst.id !228
HELIX:       	  %217 = phi i64 [ %213, %219 ], [ %210, %205 ], !noelle.pdg.inst.id !229
HELIX:       	  %220 = shl i64 %216, 5, !noelle.pdg.inst.id !233
HELIX:       	  %221 = lshr i64 %216, 27, !noelle.pdg.inst.id !234
HELIX:       	  %222 = or i64 %220, %221, !noelle.pdg.inst.id !235
HELIX:       	  %223 = xor i64 %215, %214, !noelle.pdg.inst.id !236
HELIX:       	  %224 = xor i64 %223, %213, !noelle.pdg.inst.id !237
HELIX:       	  %225 = add i64 %222, %224, !noelle.pdg.inst.id !238
HELIX:       	  %226 = add i64 %225, %217, !noelle.pdg.inst.id !239
HELIX:       	  %229 = add i64 %226, %228, !noelle.pdg.inst.id !242
HELIX:       	  %230 = add i64 %229, 1859775393, !noelle.pdg.inst.id !243
HELIX:       	  %231 = shl i64 %215, 30, !noelle.pdg.inst.id !244
HELIX:       	  %232 = lshr i64 %215, 2, !noelle.pdg.inst.id !245
HELIX:       	  %233 = or i64 %231, %232, !noelle.pdg.inst.id !246
HELIX:       Nodes outside the SCC and connected with at least one node within the SCC: 18
HELIX:       	  br i1 %84, label %44, label %61, !prof !76, !noelle.loop.id !77, !noelle.pdg.inst.id !78
HELIX:       	  %70 = load i64, i64* %69, align 8, !tbaa !37, !noelle.pdg.inst.id !61
HELIX:       	  %102 = load i64, i64* %101, align 8, !tbaa !37, !noelle.pdg.inst.id !95
HELIX:       	  br i1 %116, label %85, label %91, !prof !76, !noelle.loop.id !110, !noelle.pdg.inst.id !111
HELIX:       	  br i1 %125, label %151, label %146, !prof !120, !noelle.loop.id !121, !noelle.pdg.inst.id !122
HELIX:       	  %129 = getelementptr inbounds i8, i8* %139, i64 1, !noelle.pdg.inst.id !126
HELIX:       	  %131 = getelementptr inbounds i8, i8* %139, i64 2, !noelle.pdg.inst.id !128
HELIX:       	  %133 = getelementptr inbounds i8, i8* %139, i64 3, !noelle.pdg.inst.id !130
HELIX:       	  %139 = phi i8* [ %noelle_environment_variable_2, %145 ], [ %135, %127 ], !noelle.pdg.inst.id !140
HELIX:       	  br i1 %140, label %126, label %127, !prof !142, !noelle.loop.id !143, !noelle.pdg.inst.id !144
HELIX:       	  %142 = phi i8* [ %33, %7 ], [ %59, %44 ], !noelle.pdg.inst.id !145
HELIX:       	  br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151
HELIX:       	  %147 = getelementptr inbounds %struct.SHA_INFO, %struct.SHA_INFO* %noelle_environment_variable_0, i64 0, i32 3, i64 %124, !noelle.pdg.inst.id !154
HELIX:       	  store i64 %148, i64* %149, align 8, !tbaa !37, !noelle.pdg.inst.id !157
HELIX:       	  br i1 %186, label %205, label %187, !prof !76, !noelle.loop.id !198, !noelle.pdg.inst.id !199
HELIX:       	  %198 = load i64, i64* %197, align 8, !tbaa !37, !noelle.pdg.inst.id !210
HELIX:       	  br i1 %218, label %117, label %219, !prof !76, !noelle.loop.id !231, !noelle.pdg.inst.id !232
HELIX:       	  %228 = load i64, i64* %227, align 8, !tbaa !37, !noelle.pdg.inst.id !241
HELIX:       Edges: 484
HELIX:         From:	  store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:         To:	  store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:         Attributes: Loop-carried Data WAW (may) from memory 

HELIX:         From:	  store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:         To:	  %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125
HELIX:         Attributes: Loop-carried Data RAW (may) from memory 

HELIX:         From:	  store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:         To:	  %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127
HELIX:         Attributes: Loop-carried Data RAW (may) from memory 

HELIX:         From:	  store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:         To:	  %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129
HELIX:         Attributes: Loop-carried Data RAW (may) from memory 

HELIX:         From:	  store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:         To:	  %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131
HELIX:         Attributes: Loop-carried Data RAW (may) from memory 

HELIX:         From:	  store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:         To:	  store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:         Attributes: Loop-carried Data WAW (may) from memory 

HELIX:         From:	  store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:         To:	  store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133
HELIX:         Attributes: Loop-carried Data WAW (may) from memory 

HELIX:         From:	  store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:         To:	  store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134
HELIX:         Attributes: Loop-carried Data WAW (may) from memory 

HELIX:         From:	  store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:         To:	  store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135
HELIX:         Attributes: Loop-carried Data WAW (may) from memory 

HELIX:         From:	  store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:         To:	  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:         Attributes: Loop-carried Data WAW (may) from memory 

HELIX:         From:	  store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:         To:	  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:         Attributes: Loop-carried Data RAW (may) from memory 

HELIX:         From:	  store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:         To:	  %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188
HELIX:         Attributes: Loop-carried Data RAW (may) from memory 

HELIX:         From:	  store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43
HELIX:         To:	  store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43
HELIX:         Attributes: Loop-carried Data WAW (may) from memory 

HELIX:         From:	  store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43
HELIX:         To:	  %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125
HELIX:         Attributes: Loop-carried Data RAW (may) from memory 

HELIX:         From:	  store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43
HELIX:         To:	  %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127
HELIX:         Attributes: Loop-carried Data RAW (may) from memory 

HELIX:         ....
HELIX:     SCC:
HELIX:       Loop-carried dependences
HELIX:           store i64 %170, i64* %171, align 8, !tbaa !37, !noelle.pdg.inst.id !182 --->   %70 = load i64, i64* %69, align 8, !tbaa !37, !noelle.pdg.inst.id !61 via memory
HELIX:           store i64 %170, i64* %171, align 8, !tbaa !37, !noelle.pdg.inst.id !182 --->   store i64 %170, i64* %171, align 8, !tbaa !37, !noelle.pdg.inst.id !182 via memory
HELIX:           store i64 %170, i64* %171, align 8, !tbaa !37, !noelle.pdg.inst.id !182 --->   %70 = load i64, i64* %69, align 8, !tbaa !37, !noelle.pdg.inst.id !61 via memory
HELIX:       Nodes within the SCC: 1
HELIX:       	  store i64 %170, i64* %171, align 8, !tbaa !37, !noelle.pdg.inst.id !182
HELIX:       Nodes outside the SCC and connected with at least one node within the SCC: 4
HELIX:       	  %70 = load i64, i64* %69, align 8, !tbaa !37, !noelle.pdg.inst.id !61
HELIX:       	  br i1 %154, label %173, label %155, !prof !163, !noelle.loop.id !164, !noelle.pdg.inst.id !165
HELIX:       	  %170 = xor i64 %166, %169, !noelle.pdg.inst.id !180
HELIX:       	  %171 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %153, !noelle.pdg.inst.id !181
HELIX:       Edges: 5
HELIX:         From:	  br i1 %154, label %173, label %155, !prof !163, !noelle.loop.id !164, !noelle.pdg.inst.id !165
HELIX:         To:	  store i64 %170, i64* %171, align 8, !tbaa !37, !noelle.pdg.inst.id !182
HELIX:         Attributes: Control 

HELIX:         From:	  %170 = xor i64 %166, %169, !noelle.pdg.inst.id !180
HELIX:         To:	  store i64 %170, i64* %171, align 8, !tbaa !37, !noelle.pdg.inst.id !182
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %171 = getelementptr inbounds [80 x i64], [80 x i64]* %8, i64 0, i64 %153, !noelle.pdg.inst.id !181
HELIX:         To:	  store i64 %170, i64* %171, align 8, !tbaa !37, !noelle.pdg.inst.id !182
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  store i64 %170, i64* %171, align 8, !tbaa !37, !noelle.pdg.inst.id !182
HELIX:         To:	  %70 = load i64, i64* %69, align 8, !tbaa !37, !noelle.pdg.inst.id !61
HELIX:         Attributes: Loop-carried Data RAW (may) from memory 

HELIX:         From:	  store i64 %170, i64* %171, align 8, !tbaa !37, !noelle.pdg.inst.id !182
HELIX:         To:	  store i64 %170, i64* %171, align 8, !tbaa !37, !noelle.pdg.inst.id !182
HELIX:         Attributes: Loop-carried Data WAW (may) from memory 

HELIX:     SCC:
HELIX:       Loop-carried dependences
HELIX:           br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151 --->   %142 = phi i8* [ %33, %7 ], [ %59, %44 ], !noelle.pdg.inst.id !145 control
HELIX:           %59 = inttoptr i64 %58 to i8* --->   %142 = phi i8* [ %33, %7 ], [ %59, %44 ], !noelle.pdg.inst.id !145 via variable
HELIX:           br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151 --->   %142 = phi i8* [ %33, %7 ], [ %59, %44 ], !noelle.pdg.inst.id !145 control
HELIX:       Nodes within the SCC: 5
HELIX:       	  %55 = getelementptr inbounds i8, i8* %142, i64 64, !noelle.pdg.inst.id !50
HELIX:       	  %142 = phi i8* [ %33, %7 ], [ %59, %44 ], !noelle.pdg.inst.id !145
HELIX:       	  %57 = ptrtoint i8* %55 to i64
HELIX:       	  %58 = add i64 %57, %38
HELIX:       	  %59 = inttoptr i64 %58 to i8*
HELIX:       Nodes outside the SCC and connected with at least one node within the SCC: 2
HELIX:       	  br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151
HELIX:       	  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:       Edges: 11
HELIX:         From:	  %55 = getelementptr inbounds i8, i8* %142, i64 64, !noelle.pdg.inst.id !50
HELIX:         To:	  %57 = ptrtoint i8* %55 to i64
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %142 = phi i8* [ %33, %7 ], [ %59, %44 ], !noelle.pdg.inst.id !145
HELIX:         To:	  %55 = getelementptr inbounds i8, i8* %142, i64 64, !noelle.pdg.inst.id !50
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %142 = phi i8* [ %33, %7 ], [ %59, %44 ], !noelle.pdg.inst.id !145
HELIX:         To:	  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151
HELIX:         To:	  %55 = getelementptr inbounds i8, i8* %142, i64 64, !noelle.pdg.inst.id !50
HELIX:         Attributes: Control 

HELIX:         From:	  br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151
HELIX:         To:	  %142 = phi i8* [ %33, %7 ], [ %59, %44 ], !noelle.pdg.inst.id !145
HELIX:         Attributes: Loop-carried Control 

HELIX:         From:	  br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151
HELIX:         To:	  %57 = ptrtoint i8* %55 to i64
HELIX:         Attributes: Control 

HELIX:         From:	  br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151
HELIX:         To:	  %58 = add i64 %57, %38
HELIX:         Attributes: Control 

HELIX:         From:	  br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151
HELIX:         To:	  %59 = inttoptr i64 %58 to i8*
HELIX:         Attributes: Control 

HELIX:         From:	  %57 = ptrtoint i8* %55 to i64
HELIX:         To:	  %58 = add i64 %57, %38
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %58 = add i64 %57, %38
HELIX:         To:	  %59 = inttoptr i64 %58 to i8*
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %59 = inttoptr i64 %58 to i8*
HELIX:         To:	  %142 = phi i8* [ %33, %7 ], [ %59, %44 ], !noelle.pdg.inst.id !145
HELIX:         Attributes: Loop-carried Data RAW (must)

HELIX:     SCC:
HELIX:       Loop-carried dependences
HELIX:           br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151 --->   %142 = phi i8* [ %33, %7 ], [ %59, %44 ], !noelle.pdg.inst.id !145 control
HELIX:           br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151 --->   %144 = icmp sle i32 %143, 63, !noelle.pdg.inst.id !147 control
HELIX:           br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151 --->   %143 = phi i32 [ %36, %7 ], [ %60, %44 ], !noelle.pdg.inst.id !146 control
HELIX:           br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151 --->   br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151 control
HELIX:           %60 = add i32 %56, %41 --->   %143 = phi i32 [ %36, %7 ], [ %60, %44 ], !noelle.pdg.inst.id !146 via variable
HELIX:           br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151 --->   %142 = phi i8* [ %33, %7 ], [ %59, %44 ], !noelle.pdg.inst.id !145 control
HELIX:       Nodes within the SCC: 5
HELIX:       	  %56 = add nsw i32 %143, -64, !noelle.pdg.inst.id !51
HELIX:       	  %143 = phi i32 [ %36, %7 ], [ %60, %44 ], !noelle.pdg.inst.id !146
HELIX:       	  %144 = icmp sle i32 %143, 63, !noelle.pdg.inst.id !147
HELIX:       	  br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151
HELIX:       	  %60 = add i32 %56, %41
HELIX:       Nodes outside the SCC and connected with at least one node within the SCC: 91
HELIX:       	  store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:       	  store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43
HELIX:       	  store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45
HELIX:       	  store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41
HELIX:       	  %50 = add i64 %174, %48, !noelle.pdg.inst.id !36
HELIX:       	  %45 = phi i64 [ %79, %77 ], !noelle.pdg.inst.id !31
HELIX:       	  %46 = phi i64 [ %80, %77 ], !noelle.pdg.inst.id !32
HELIX:       	  %47 = phi i64 [ %81, %77 ], !noelle.pdg.inst.id !33
HELIX:       	  %48 = phi i64 [ %82, %77 ], !noelle.pdg.inst.id !34
HELIX:       	  %49 = phi i64 [ %83, %77 ], !noelle.pdg.inst.id !35
HELIX:       	  br i1 %84, label %44, label %61, !prof !76, !noelle.loop.id !77, !noelle.pdg.inst.id !78
HELIX:       	  %51 = add i64 %175, %47, !noelle.pdg.inst.id !42
HELIX:       	  %52 = add i64 %176, %46, !noelle.pdg.inst.id !44
HELIX:       	  %53 = add i64 %177, %45, !noelle.pdg.inst.id !46
HELIX:       	  %54 = add i64 %178, %49, !noelle.pdg.inst.id !48
HELIX:       	  store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49
HELIX:       	  %55 = getelementptr inbounds i8, i8* %142, i64 64, !noelle.pdg.inst.id !50
HELIX:       	  br label %141, !noelle.pdg.inst.id !52
HELIX:       	  %78 = phi i64 [ %76, %61 ], [ 60, %85 ], !noelle.pdg.inst.id !69
HELIX:       	  %79 = phi i64 [ %80, %61 ], [ %86, %85 ], !noelle.pdg.inst.id !70
HELIX:       	  %80 = phi i64 [ %75, %61 ], [ %87, %85 ], !noelle.pdg.inst.id !71
HELIX:       	  %81 = phi i64 [ %82, %61 ], [ %88, %85 ], !noelle.pdg.inst.id !72
HELIX:       	  %82 = phi i64 [ %72, %61 ], [ %89, %85 ], !noelle.pdg.inst.id !73
HELIX:       	  %83 = phi i64 [ %79, %61 ], [ %90, %85 ], !noelle.pdg.inst.id !74
HELIX:       	  %84 = icmp eq i64 %78, 80, !noelle.pdg.inst.id !75
HELIX:       	  %86 = phi i64 [ %111, %109 ], !noelle.pdg.inst.id !79
HELIX:       	  %87 = phi i64 [ %112, %109 ], !noelle.pdg.inst.id !80
HELIX:       	  %88 = phi i64 [ %113, %109 ], !noelle.pdg.inst.id !81
HELIX:       	  %89 = phi i64 [ %114, %109 ], !noelle.pdg.inst.id !82
HELIX:       	  %90 = phi i64 [ %115, %109 ], !noelle.pdg.inst.id !83
HELIX:       	  br label %77, !noelle.pdg.inst.id !84
HELIX:       	  br i1 %154, label %173, label %155, !prof !163, !noelle.loop.id !164, !noelle.pdg.inst.id !165
HELIX:       	  %110 = phi i64 [ %108, %91 ], [ 40, %117 ], !noelle.pdg.inst.id !103
HELIX:       	  %111 = phi i64 [ %112, %91 ], [ %118, %117 ], !noelle.pdg.inst.id !104
HELIX:       	  %112 = phi i64 [ %107, %91 ], [ %119, %117 ], !noelle.pdg.inst.id !105
HELIX:       	  %113 = phi i64 [ %114, %91 ], [ %120, %117 ], !noelle.pdg.inst.id !106
HELIX:       	  %114 = phi i64 [ %104, %91 ], [ %121, %117 ], !noelle.pdg.inst.id !107
HELIX:       	  %115 = phi i64 [ %111, %91 ], [ %122, %117 ], !noelle.pdg.inst.id !108
HELIX:       	  %116 = icmp eq i64 %110, 60, !noelle.pdg.inst.id !109
HELIX:       	  br i1 %116, label %85, label %91, !prof !76, !noelle.loop.id !110, !noelle.pdg.inst.id !111
HELIX:       	  %118 = phi i64 [ %213, %211 ], !noelle.pdg.inst.id !112
HELIX:       	  %119 = phi i64 [ %214, %211 ], !noelle.pdg.inst.id !113
HELIX:       	  %120 = phi i64 [ %215, %211 ], !noelle.pdg.inst.id !114
HELIX:       	  %121 = phi i64 [ %216, %211 ], !noelle.pdg.inst.id !115
HELIX:       	  %122 = phi i64 [ %217, %211 ], !noelle.pdg.inst.id !116
HELIX:       	  %206 = phi i64 [ %181, %179 ], !noelle.pdg.inst.id !218
HELIX:       	  %207 = phi i64 [ %182, %179 ], !noelle.pdg.inst.id !219
HELIX:       	  %208 = phi i64 [ %183, %179 ], !noelle.pdg.inst.id !220
HELIX:       	  %209 = phi i64 [ %184, %179 ], !noelle.pdg.inst.id !221
HELIX:       	  %210 = phi i64 [ %185, %179 ], !noelle.pdg.inst.id !222
HELIX:       	  br label %211, !noelle.pdg.inst.id !223
HELIX:       	  %212 = phi i64 [ %234, %219 ], [ 20, %205 ], !noelle.pdg.inst.id !224
HELIX:       	  %213 = phi i64 [ %214, %219 ], [ %206, %205 ], !noelle.pdg.inst.id !225
HELIX:       	  %214 = phi i64 [ %233, %219 ], [ %207, %205 ], !noelle.pdg.inst.id !226
HELIX:       	  %215 = phi i64 [ %216, %219 ], [ %208, %205 ], !noelle.pdg.inst.id !227
HELIX:       	  br label %109, !noelle.pdg.inst.id !117
HELIX:       	  %124 = phi i64 [ %150, %146 ], [ 0, %126 ], !noelle.pdg.inst.id !118
HELIX:       	  %125 = icmp eq i64 %124, 16, !noelle.pdg.inst.id !119
HELIX:       	  br i1 %125, label %151, label %146, !prof !120, !noelle.loop.id !121, !noelle.pdg.inst.id !122
HELIX:       	  br label %123, !noelle.pdg.inst.id !123
HELIX:       	  %138 = phi i32 [ 0, %145 ], [ %136, %127 ], !noelle.pdg.inst.id !139
HELIX:       	  %139 = phi i8* [ %noelle_environment_variable_2, %145 ], [ %135, %127 ], !noelle.pdg.inst.id !140
HELIX:       	  %140 = icmp eq i32 %138, 8, !noelle.pdg.inst.id !141
HELIX:       	  br i1 %140, label %126, label %127, !prof !142, !noelle.loop.id !143, !noelle.pdg.inst.id !144
HELIX:       	  %142 = phi i8* [ %33, %7 ], [ %59, %44 ], !noelle.pdg.inst.id !145
HELIX:       	  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:       	  br label %137, !noelle.pdg.inst.id !153
HELIX:       	  br label %152, !noelle.pdg.inst.id !160
HELIX:       	  %153 = phi i64 [ %172, %155 ], [ 16, %151 ], !noelle.pdg.inst.id !161
HELIX:       	  %154 = icmp eq i64 %153, 80, !noelle.pdg.inst.id !162
HELIX:       	  %174 = load i64, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !185
HELIX:       	  %175 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !186
HELIX:       	  %176 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !187
HELIX:       	  %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188
HELIX:       	  %178 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !189
HELIX:       	  br label %179, !noelle.pdg.inst.id !190
HELIX:       	  %180 = phi i64 [ %204, %187 ], [ 0, %173 ], !noelle.pdg.inst.id !191
HELIX:       	  %181 = phi i64 [ %182, %187 ], [ %177, %173 ], !noelle.pdg.inst.id !192
HELIX:       	  %182 = phi i64 [ %203, %187 ], [ %176, %173 ], !noelle.pdg.inst.id !193
HELIX:       	  %183 = phi i64 [ %184, %187 ], [ %175, %173 ], !noelle.pdg.inst.id !194
HELIX:       	  %184 = phi i64 [ %200, %187 ], [ %174, %173 ], !noelle.pdg.inst.id !195
HELIX:       	  %185 = phi i64 [ %181, %187 ], [ %178, %173 ], !noelle.pdg.inst.id !196
HELIX:       	  %186 = icmp eq i64 %180, 20, !noelle.pdg.inst.id !197
HELIX:       	  br i1 %186, label %205, label %187, !prof !76, !noelle.loop.id !198, !noelle.pdg.inst.id !199
HELIX:       	  %216 = phi i64 [ %230, %219 ], [ %209, %205 ], !noelle.pdg.inst.id !228
HELIX:       	  %217 = phi i64 [ %213, %219 ], [ %210, %205 ], !noelle.pdg.inst.id !229
HELIX:       	  %218 = icmp eq i64 %212, 40, !noelle.pdg.inst.id !230
HELIX:       	  br i1 %218, label %117, label %219, !prof !76, !noelle.loop.id !231, !noelle.pdg.inst.id !232
HELIX:       	  %57 = ptrtoint i8* %55 to i64
HELIX:       	  %58 = add i64 %57, %38
HELIX:       	  %59 = inttoptr i64 %58 to i8*
HELIX:       Edges: 101
HELIX:         From:	  %56 = add nsw i32 %143, -64, !noelle.pdg.inst.id !51
HELIX:         To:	  %60 = add i32 %56, %41
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %143 = phi i32 [ %36, %7 ], [ %60, %44 ], !noelle.pdg.inst.id !146
HELIX:         To:	  %56 = add nsw i32 %143, -64, !noelle.pdg.inst.id !51
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %143 = phi i32 [ %36, %7 ], [ %60, %44 ], !noelle.pdg.inst.id !146
HELIX:         To:	  %144 = icmp sle i32 %143, 63, !noelle.pdg.inst.id !147
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %144 = icmp sle i32 %143, 63, !noelle.pdg.inst.id !147
HELIX:         To:	  br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151
HELIX:         To:	  store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:         Attributes: Control 

HELIX:         From:	  br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151
HELIX:         To:	  store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43
HELIX:         Attributes: Control 

HELIX:         From:	  br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151
HELIX:         To:	  store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45
HELIX:         Attributes: Control 

HELIX:         From:	  br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151
HELIX:         To:	  store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41
HELIX:         Attributes: Control 

HELIX:         From:	  br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151
HELIX:         To:	  %50 = add i64 %174, %48, !noelle.pdg.inst.id !36
HELIX:         Attributes: Control 

HELIX:         From:	  br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151
HELIX:         To:	  %45 = phi i64 [ %79, %77 ], !noelle.pdg.inst.id !31
HELIX:         Attributes: Control 

HELIX:         From:	  br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151
HELIX:         To:	  %46 = phi i64 [ %80, %77 ], !noelle.pdg.inst.id !32
HELIX:         Attributes: Control 

HELIX:         From:	  br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151
HELIX:         To:	  %47 = phi i64 [ %81, %77 ], !noelle.pdg.inst.id !33
HELIX:         Attributes: Control 

HELIX:         From:	  br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151
HELIX:         To:	  %48 = phi i64 [ %82, %77 ], !noelle.pdg.inst.id !34
HELIX:         Attributes: Control 

HELIX:         From:	  br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151
HELIX:         To:	  %49 = phi i64 [ %83, %77 ], !noelle.pdg.inst.id !35
HELIX:         Attributes: Control 

HELIX:         From:	  br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151
HELIX:         To:	  br i1 %84, label %44, label %61, !prof !76, !noelle.loop.id !77, !noelle.pdg.inst.id !78
HELIX:         Attributes: Control 

HELIX:         ....
HELIX:   Next are all loop-carried dependences of the loop
HELIX:       store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 --->   store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 via memory
HELIX:       store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 --->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125 via memory
HELIX:       store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 --->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127 via memory
HELIX:       store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 --->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129 via memory
HELIX:       store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 --->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131 via memory
HELIX:       store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 --->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 via memory
HELIX:       store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 --->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 via memory
HELIX:       store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 --->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 via memory
HELIX:       store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 --->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 via memory
HELIX:       store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:       store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:       store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 --->   %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188 via memory
HELIX:       store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 --->   store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 via memory
HELIX:       store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 --->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125 via memory
HELIX:       store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 --->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127 via memory
HELIX:       store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 --->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129 via memory
HELIX:       store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 --->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131 via memory
HELIX:       store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 --->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 via memory
HELIX:       store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 --->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 via memory
HELIX:       store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 --->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 via memory
HELIX:       store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 --->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 via memory
HELIX:       store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:       store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:       store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 --->   %175 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !186 via memory
HELIX:       store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 --->   store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 via memory
HELIX:       store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 --->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125 via memory
HELIX:       store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 --->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127 via memory
HELIX:       store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 --->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129 via memory
HELIX:       store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 --->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131 via memory
HELIX:       store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 --->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 via memory
HELIX:       store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 --->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 via memory
HELIX:       store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 --->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 via memory
HELIX:       store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 --->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 via memory
HELIX:       store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:       store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:       store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 --->   %176 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !187 via memory
HELIX:       store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 --->   store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 via memory
HELIX:       store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 --->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125 via memory
HELIX:       store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 --->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127 via memory
HELIX:       store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 --->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129 via memory
HELIX:       store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 --->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131 via memory
HELIX:       store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 --->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 via memory
HELIX:       store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 --->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 via memory
HELIX:       store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 --->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 via memory
HELIX:       store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 --->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 via memory
HELIX:       store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:       store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 --->   %174 = load i64, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !185 via memory
HELIX:       store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 --->   store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 via memory
HELIX:       store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 --->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125 via memory
HELIX:       store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 --->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127 via memory
HELIX:       store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 --->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129 via memory
HELIX:       store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 --->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131 via memory
HELIX:       store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 --->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 via memory
HELIX:       store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 --->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 via memory
HELIX:       store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 --->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 via memory
HELIX:       store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 --->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 via memory
HELIX:       store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:       store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:       store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 --->   %178 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !189 via memory
HELIX:       %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125 --->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 via memory
HELIX:       %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127 --->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 via memory
HELIX:       %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129 --->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 via memory
HELIX:       %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131 --->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 via memory
HELIX:       store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 via memory
HELIX:       store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 via memory
HELIX:       store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 via memory
HELIX:       store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 via memory
HELIX:       store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 via memory
HELIX:       store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125 via memory
HELIX:       store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127 via memory
HELIX:       store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129 via memory
HELIX:       store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131 via memory
HELIX:       store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 via memory
HELIX:       store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 via memory
HELIX:       store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 via memory
HELIX:       store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 via memory
HELIX:       store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:       store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:       store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 via memory
HELIX:       store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   %174 = load i64, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !185 via memory
HELIX:       store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   %175 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !186 via memory
HELIX:       store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   %176 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !187 via memory
HELIX:       store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188 via memory
HELIX:       store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 --->   %178 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !189 via memory
HELIX:       store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 via memory
HELIX:       store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 via memory
HELIX:       store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 via memory
HELIX:       store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 via memory
HELIX:       store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 via memory
HELIX:       store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125 via memory
HELIX:       store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127 via memory
HELIX:       store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 via memory
HELIX:       store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 via memory
HELIX:       store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:       store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:       store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 via memory
HELIX:       store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   %174 = load i64, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !185 via memory
HELIX:       store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   %175 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !186 via memory
HELIX:       store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   %176 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !187 via memory
HELIX:       store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188 via memory
HELIX:       store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 --->   %178 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !189 via memory
HELIX:       store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 via memory
HELIX:       store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 via memory
HELIX:       store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 via memory
HELIX:       store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 via memory
HELIX:       store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 via memory
HELIX:       store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125 via memory
HELIX:       store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129 via memory
HELIX:       store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 via memory
HELIX:       store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 via memory
HELIX:       store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:       store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:       store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 via memory
HELIX:       store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   %174 = load i64, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !185 via memory
HELIX:       store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   %175 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !186 via memory
HELIX:       store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   %176 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !187 via memory
HELIX:       store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188 via memory
HELIX:       store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 --->   %178 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !189 via memory
HELIX:       store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 via memory
HELIX:       store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 via memory
HELIX:       store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 via memory
HELIX:       store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 via memory
HELIX:       store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 via memory
HELIX:       store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125 via memory
HELIX:       store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131 via memory
HELIX:       store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 via memory
HELIX:       store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 via memory
HELIX:       store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:       store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:       store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 via memory
HELIX:       store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   %174 = load i64, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !185 via memory
HELIX:       store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   %175 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !186 via memory
HELIX:       store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   %176 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !187 via memory
HELIX:       store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188 via memory
HELIX:       store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 --->   %178 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !189 via memory
HELIX:       br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151 --->   %142 = phi i8* [ %33, %7 ], [ %59, %44 ], !noelle.pdg.inst.id !145 control
HELIX:       br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151 --->   %143 = phi i32 [ %36, %7 ], [ %60, %44 ], !noelle.pdg.inst.id !146 control
HELIX:       br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151 --->   %144 = icmp sle i32 %143, 63, !noelle.pdg.inst.id !147 control
HELIX:       br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151 --->   br i1 %144, label %check_if_last_iteration_is_missing, label %145, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151 control
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   %175 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !186 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   %176 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !187 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188 via memory
HELIX:       call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 --->   %178 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !189 via memory
HELIX:       %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 --->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 via memory
HELIX:       %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 --->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 via memory
HELIX:       %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 --->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 via memory
HELIX:       %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 --->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 via memory
HELIX:       %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 --->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 via memory
HELIX:       store i64 %148, i64* %149, align 8, !tbaa !37, !noelle.pdg.inst.id !157 --->   store i64 %148, i64* %149, align 8, !tbaa !37, !noelle.pdg.inst.id !157 via memory
HELIX:       store i64 %170, i64* %171, align 8, !tbaa !37, !noelle.pdg.inst.id !182 --->   %70 = load i64, i64* %69, align 8, !tbaa !37, !noelle.pdg.inst.id !61 via memory
HELIX:       store i64 %170, i64* %171, align 8, !tbaa !37, !noelle.pdg.inst.id !182 --->   store i64 %170, i64* %171, align 8, !tbaa !37, !noelle.pdg.inst.id !182 via memory
HELIX:       %59 = inttoptr i64 %58 to i8* --->   %142 = phi i8* [ %33, %7 ], [ %59, %44 ], !noelle.pdg.inst.id !145 via variable
HELIX:       %60 = add i32 %56, %41 --->   %143 = phi i32 [ %36, %7 ], [ %60, %44 ], !noelle.pdg.inst.id !146 via variable
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 57
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
HELIX:     Sequential segment 0
HELIX:       SCCs included in the current sequential segment
HELIX:         Type = 15
HELIX:         Loop-carried data dependences
HELIX:             store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 ->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134
HELIX:             store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 ->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133
HELIX:             store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 ->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:             store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 ->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125
HELIX:             store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 ->   %174 = load i64, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !185
HELIX:             store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 ->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135
HELIX:             store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 ->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127
HELIX:             store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 ->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131
HELIX:             store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 ->   store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41
HELIX:             store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 ->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129
HELIX:             store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 ->   %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188
HELIX:             store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 ->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133
HELIX:             store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 ->   store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:             store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 ->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127
HELIX:             store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 ->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134
HELIX:             store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 ->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125
HELIX:             store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 ->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129
HELIX:             store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 ->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:             store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 ->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135
HELIX:             store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 ->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131
HELIX:             store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 ->   store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43
HELIX:             store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 ->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131
HELIX:             store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 ->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:             store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 ->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135
HELIX:             store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 ->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134
HELIX:             store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 ->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125
HELIX:             store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 ->   %175 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !186
HELIX:             store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 ->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133
HELIX:             store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 ->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129
HELIX:             store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 ->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127
HELIX:             store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 ->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135
HELIX:             store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 ->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127
HELIX:             store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 ->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134
HELIX:             store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 ->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125
HELIX:             store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 ->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133
HELIX:             store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 ->   %176 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !187
HELIX:             store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 ->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:             store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 ->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131
HELIX:             store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 ->   store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45
HELIX:             store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 ->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129
HELIX:             store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 ->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125
HELIX:             store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 ->   store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49
HELIX:             store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 ->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131
HELIX:             store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 ->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135
HELIX:             store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 ->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:             store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 ->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129
HELIX:             store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 ->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133
HELIX:             store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 ->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134
HELIX:             store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 ->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127
HELIX:             store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 ->   %178 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !189
HELIX:             %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125 ->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:             %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127 ->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133
HELIX:             %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129 ->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134
HELIX:             %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131 ->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   %175 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !186
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   %176 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !187
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   %178 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !189
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   %174 = load i64, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !185
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   %174 = load i64, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !185
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   %175 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !186
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   %178 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !189
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   %176 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !187
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   %175 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !186
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   %178 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !189
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   %176 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !187
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   %174 = load i64, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !185
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   %174 = load i64, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !185
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   %175 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !186
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   %178 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !189
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   %176 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !187
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   %175 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !186
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   %178 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !189
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   %176 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !187
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 ->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134
HELIX:             %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 ->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133
HELIX:             %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 ->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135
HELIX:             %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 ->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:             %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:         Instructions that belong to the SS
HELIX:             %226 = add i64 %225, %217, !noelle.pdg.inst.id !239
HELIX:             %225 = add i64 %222, %224, !noelle.pdg.inst.id !238
HELIX:             %224 = xor i64 %223, %213, !noelle.pdg.inst.id !237
HELIX:             %223 = xor i64 %215, %214, !noelle.pdg.inst.id !236
HELIX:             %222 = or i64 %220, %221, !noelle.pdg.inst.id !235
HELIX:             %202 = lshr i64 %183, 2, !noelle.pdg.inst.id !214
HELIX:             %201 = shl i64 %183, 30, !noelle.pdg.inst.id !213
HELIX:             %199 = add i64 %196, %198, !noelle.pdg.inst.id !211
HELIX:             %194 = or i64 %191, %193, !noelle.pdg.inst.id !206
HELIX:             %233 = or i64 %231, %232, !noelle.pdg.inst.id !246
HELIX:             %193 = and i64 %181, %192, !noelle.pdg.inst.id !205
HELIX:             %232 = lshr i64 %215, 2, !noelle.pdg.inst.id !245
HELIX:             %192 = xor i64 %183, -1, !noelle.pdg.inst.id !204
HELIX:             %231 = shl i64 %215, 30, !noelle.pdg.inst.id !244
HELIX:             %191 = and i64 %183, %182, !noelle.pdg.inst.id !203
HELIX:             %229 = add i64 %226, %228, !noelle.pdg.inst.id !242
HELIX:             %189 = lshr i64 %184, 27, !noelle.pdg.inst.id !201
HELIX:             %203 = or i64 %201, %202, !noelle.pdg.inst.id !215
HELIX:             %188 = shl i64 %184, 5, !noelle.pdg.inst.id !200
HELIX:             %221 = lshr i64 %216, 27, !noelle.pdg.inst.id !234
HELIX:             %196 = add i64 %195, %185, !noelle.pdg.inst.id !208
HELIX:             %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188
HELIX:             %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155
HELIX:             %174 = load i64, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !185
HELIX:             %75 = or i64 %73, %74, !noelle.pdg.inst.id !66
HELIX:             %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127
HELIX:             %73 = shl i64 %81, 30, !noelle.pdg.inst.id !64
HELIX:             %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125
HELIX:             %71 = add i64 %68, %70, !noelle.pdg.inst.id !62
HELIX:             %66 = xor i64 %65, %79, !noelle.pdg.inst.id !57
HELIX:             %178 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !189
HELIX:             %65 = xor i64 %81, %80, !noelle.pdg.inst.id !56
HELIX:             %64 = or i64 %62, %63, !noelle.pdg.inst.id !55
HELIX:             %63 = lshr i64 %82, 27, !noelle.pdg.inst.id !54
HELIX:             %220 = shl i64 %216, 5, !noelle.pdg.inst.id !233
HELIX:             %195 = add i64 %190, %194, !noelle.pdg.inst.id !207
HELIX:             %67 = add i64 %64, %66, !noelle.pdg.inst.id !58
HELIX:             %52 = add i64 %176, %46, !noelle.pdg.inst.id !44
HELIX:             store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41
HELIX:             %72 = add i64 %71, 3395469782, !noelle.pdg.inst.id !63
HELIX:             %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129
HELIX:             %62 = shl i64 %82, 5, !noelle.pdg.inst.id !53
HELIX:             store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:             store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45
HELIX:             %100 = add i64 %99, %115, !noelle.pdg.inst.id !93
HELIX:             %176 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !187
HELIX:             store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49
HELIX:             %230 = add i64 %229, 1859775393, !noelle.pdg.inst.id !243
HELIX:             %190 = or i64 %188, %189, !noelle.pdg.inst.id !202
HELIX:             %51 = add i64 %175, %47, !noelle.pdg.inst.id !42
HELIX:             %50 = add i64 %174, %48, !noelle.pdg.inst.id !36
HELIX:             %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131
HELIX:             %175 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !186
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:             %68 = add i64 %67, %83, !noelle.pdg.inst.id !59
HELIX:             %54 = add i64 %178, %49, !noelle.pdg.inst.id !48
HELIX:             %92 = shl i64 %114, 5, !noelle.pdg.inst.id !85
HELIX:             %93 = lshr i64 %114, 27, !noelle.pdg.inst.id !86
HELIX:             %94 = or i64 %92, %93, !noelle.pdg.inst.id !87
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135
HELIX:             %95 = or i64 %112, %111, !noelle.pdg.inst.id !88
HELIX:             %96 = and i64 %113, %95, !noelle.pdg.inst.id !89
HELIX:             %97 = and i64 %112, %111, !noelle.pdg.inst.id !90
HELIX:             %98 = or i64 %96, %97, !noelle.pdg.inst.id !91
HELIX:             %53 = add i64 %177, %45, !noelle.pdg.inst.id !46
HELIX:             %99 = add i64 %94, %98, !noelle.pdg.inst.id !92
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133
HELIX:             store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43
HELIX:             %103 = add i64 %100, %102, !noelle.pdg.inst.id !96
HELIX:             %105 = shl i64 %113, 30, !noelle.pdg.inst.id !98
HELIX:             %106 = lshr i64 %113, 2, !noelle.pdg.inst.id !99
HELIX:             %107 = or i64 %105, %106, !noelle.pdg.inst.id !100
HELIX:             %200 = add i64 %199, 1518500249, !noelle.pdg.inst.id !212
HELIX:             %104 = add i64 %103, 2400959708, !noelle.pdg.inst.id !97
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134
HELIX:             %74 = lshr i64 %81, 2, !noelle.pdg.inst.id !65
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:   Identifying sequential segments
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 57
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
HELIX:     Sequential segment 0
HELIX:       SCCs included in the current sequential segment
HELIX:         Type = 15
HELIX:         Loop-carried data dependences
HELIX:             store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 ->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134
HELIX:             store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 ->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133
HELIX:             store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 ->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:             store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 ->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125
HELIX:             store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 ->   %174 = load i64, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !185
HELIX:             store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 ->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135
HELIX:             store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 ->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127
HELIX:             store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 ->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131
HELIX:             store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 ->   store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41
HELIX:             store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41 ->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129
HELIX:             store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 ->   %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188
HELIX:             store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 ->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133
HELIX:             store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 ->   store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:             store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 ->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127
HELIX:             store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 ->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134
HELIX:             store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 ->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125
HELIX:             store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 ->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129
HELIX:             store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 ->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:             store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 ->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135
HELIX:             store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47 ->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131
HELIX:             store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 ->   store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43
HELIX:             store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 ->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131
HELIX:             store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 ->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:             store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 ->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135
HELIX:             store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 ->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134
HELIX:             store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 ->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125
HELIX:             store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 ->   %175 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !186
HELIX:             store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 ->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133
HELIX:             store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 ->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129
HELIX:             store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43 ->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127
HELIX:             store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 ->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135
HELIX:             store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 ->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127
HELIX:             store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 ->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134
HELIX:             store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 ->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125
HELIX:             store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 ->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133
HELIX:             store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 ->   %176 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !187
HELIX:             store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 ->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:             store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 ->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131
HELIX:             store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 ->   store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45
HELIX:             store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45 ->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129
HELIX:             store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 ->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125
HELIX:             store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 ->   store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49
HELIX:             store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 ->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131
HELIX:             store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 ->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135
HELIX:             store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 ->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:             store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 ->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129
HELIX:             store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 ->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133
HELIX:             store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 ->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134
HELIX:             store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 ->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127
HELIX:             store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49 ->   %178 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !189
HELIX:             %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125 ->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:             %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127 ->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133
HELIX:             %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129 ->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134
HELIX:             %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131 ->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   %175 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !186
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   %176 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !187
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   %178 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !189
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   %174 = load i64, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !185
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132 ->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   %174 = load i64, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !185
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   %175 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !186
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   %178 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !189
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   %176 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !187
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133 ->   store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   %175 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !186
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   %178 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !189
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   %176 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !187
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   %174 = load i64, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !185
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134 ->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   %174 = load i64, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !185
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   %175 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !186
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   %178 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !189
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   %176 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !187
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135 ->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   %175 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !186
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   %178 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !189
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   %176 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !187
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:             %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 ->   store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134
HELIX:             %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 ->   store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133
HELIX:             %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 ->   store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135
HELIX:             %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 ->   store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:             %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155 ->   call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:         Instructions that belong to the SS
HELIX:             %226 = add i64 %225, %217, !noelle.pdg.inst.id !239
HELIX:             %225 = add i64 %222, %224, !noelle.pdg.inst.id !238
HELIX:             %224 = xor i64 %223, %213, !noelle.pdg.inst.id !237
HELIX:             %223 = xor i64 %215, %214, !noelle.pdg.inst.id !236
HELIX:             %222 = or i64 %220, %221, !noelle.pdg.inst.id !235
HELIX:             %202 = lshr i64 %183, 2, !noelle.pdg.inst.id !214
HELIX:             %201 = shl i64 %183, 30, !noelle.pdg.inst.id !213
HELIX:             %199 = add i64 %196, %198, !noelle.pdg.inst.id !211
HELIX:             %194 = or i64 %191, %193, !noelle.pdg.inst.id !206
HELIX:             %233 = or i64 %231, %232, !noelle.pdg.inst.id !246
HELIX:             %193 = and i64 %181, %192, !noelle.pdg.inst.id !205
HELIX:             %232 = lshr i64 %215, 2, !noelle.pdg.inst.id !245
HELIX:             %192 = xor i64 %183, -1, !noelle.pdg.inst.id !204
HELIX:             %231 = shl i64 %215, 30, !noelle.pdg.inst.id !244
HELIX:             %191 = and i64 %183, %182, !noelle.pdg.inst.id !203
HELIX:             %229 = add i64 %226, %228, !noelle.pdg.inst.id !242
HELIX:             %189 = lshr i64 %184, 27, !noelle.pdg.inst.id !201
HELIX:             %203 = or i64 %201, %202, !noelle.pdg.inst.id !215
HELIX:             %188 = shl i64 %184, 5, !noelle.pdg.inst.id !200
HELIX:             %221 = lshr i64 %216, 27, !noelle.pdg.inst.id !234
HELIX:             %196 = add i64 %195, %185, !noelle.pdg.inst.id !208
HELIX:             %177 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !188
HELIX:             %148 = load i64, i64* %147, align 8, !tbaa !37, !noelle.pdg.inst.id !155
HELIX:             %174 = load i64, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !185
HELIX:             %75 = or i64 %73, %74, !noelle.pdg.inst.id !66
HELIX:             %130 = load i8, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !127
HELIX:             %73 = shl i64 %81, 30, !noelle.pdg.inst.id !64
HELIX:             %128 = load i8, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !125
HELIX:             %71 = add i64 %68, %70, !noelle.pdg.inst.id !62
HELIX:             %66 = xor i64 %65, %79, !noelle.pdg.inst.id !57
HELIX:             %178 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !189
HELIX:             %65 = xor i64 %81, %80, !noelle.pdg.inst.id !56
HELIX:             %64 = or i64 %62, %63, !noelle.pdg.inst.id !55
HELIX:             %63 = lshr i64 %82, 27, !noelle.pdg.inst.id !54
HELIX:             %220 = shl i64 %216, 5, !noelle.pdg.inst.id !233
HELIX:             %195 = add i64 %190, %194, !noelle.pdg.inst.id !207
HELIX:             %67 = add i64 %64, %66, !noelle.pdg.inst.id !58
HELIX:             %52 = add i64 %176, %46, !noelle.pdg.inst.id !44
HELIX:             store i64 %50, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41
HELIX:             %72 = add i64 %71, 3395469782, !noelle.pdg.inst.id !63
HELIX:             %132 = load i8, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !129
HELIX:             %62 = shl i64 %82, 5, !noelle.pdg.inst.id !53
HELIX:             store i64 %53, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
HELIX:             store i64 %52, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45
HELIX:             %100 = add i64 %99, %115, !noelle.pdg.inst.id !93
HELIX:             %176 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !187
HELIX:             store i64 %54, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49
HELIX:             %230 = add i64 %229, 1859775393, !noelle.pdg.inst.id !243
HELIX:             %190 = or i64 %188, %189, !noelle.pdg.inst.id !202
HELIX:             %51 = add i64 %175, %47, !noelle.pdg.inst.id !42
HELIX:             %50 = add i64 %174, %48, !noelle.pdg.inst.id !36
HELIX:             %134 = load i8, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !131
HELIX:             %175 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !186
HELIX:             store i8 %134, i8* %139, align 1, !tbaa !124, !noelle.pdg.inst.id !132
HELIX:             %68 = add i64 %67, %83, !noelle.pdg.inst.id !59
HELIX:             %54 = add i64 %178, %49, !noelle.pdg.inst.id !48
HELIX:             %92 = shl i64 %114, 5, !noelle.pdg.inst.id !85
HELIX:             %93 = lshr i64 %114, 27, !noelle.pdg.inst.id !86
HELIX:             %94 = or i64 %92, %93, !noelle.pdg.inst.id !87
HELIX:             store i8 %128, i8* %133, align 1, !tbaa !124, !noelle.pdg.inst.id !135
HELIX:             %95 = or i64 %112, %111, !noelle.pdg.inst.id !88
HELIX:             %96 = and i64 %113, %95, !noelle.pdg.inst.id !89
HELIX:             %97 = and i64 %112, %111, !noelle.pdg.inst.id !90
HELIX:             %98 = or i64 %96, %97, !noelle.pdg.inst.id !91
HELIX:             %53 = add i64 %177, %45, !noelle.pdg.inst.id !46
HELIX:             %99 = add i64 %94, %98, !noelle.pdg.inst.id !92
HELIX:             store i8 %132, i8* %129, align 1, !tbaa !124, !noelle.pdg.inst.id !133
HELIX:             store i64 %51, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43
HELIX:             %103 = add i64 %100, %102, !noelle.pdg.inst.id !96
HELIX:             %105 = shl i64 %113, 30, !noelle.pdg.inst.id !98
HELIX:             %106 = lshr i64 %113, 2, !noelle.pdg.inst.id !99
HELIX:             %107 = or i64 %105, %106, !noelle.pdg.inst.id !100
HELIX:             %200 = add i64 %199, 1518500249, !noelle.pdg.inst.id !212
HELIX:             %104 = add i64 %103, 2400959708, !noelle.pdg.inst.id !97
HELIX:             store i8 %130, i8* %131, align 1, !tbaa !124, !noelle.pdg.inst.id !134
HELIX:             %74 = lshr i64 %81, 2, !noelle.pdg.inst.id !65
HELIX:             call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %142, i64 64, i1 false) #8, !noelle.pdg.inst.id !152
HELIX:  Synchronizing sequential segments
HELIX:  Storing live out variables and exit block index
HELIX:  Linking task function
HELIX:  Task code:

define void @noelle_task_0(i8*, i8*, i8*, i8*, i64, i64, i64*) {
  %8 = alloca i64
  %9 = alloca [80 x i64], align 16, !noelle.pdg.inst.id !30
  %noelle.environment_variable.pointer = bitcast i8* %0 to [96 x i64]*
  %10 = getelementptr inbounds [96 x i64], [96 x i64]* %noelle.environment_variable.pointer, i64 0, i64 0
  %11 = bitcast i64* %10 to %struct.SHA_INFO**
  %noelle_environment_variable_0 = load %struct.SHA_INFO*, %struct.SHA_INFO** %11
  %12 = getelementptr inbounds [96 x i64], [96 x i64]* %noelle.environment_variable.pointer, i64 0, i64 8
  %13 = bitcast i64* %12 to i8**
  %noelle_environment_variable_1 = load i8*, i8** %13
  %14 = getelementptr inbounds [96 x i64], [96 x i64]* %noelle.environment_variable.pointer, i64 0, i64 16
  %15 = bitcast i64* %14 to i8**
  %noelle_environment_variable_2 = load i8*, i8** %15
  %16 = getelementptr inbounds [96 x i64], [96 x i64]* %noelle.environment_variable.pointer, i64 0, i64 24
  %17 = bitcast i64* %16 to i8**
  %noelle_environment_variable_3 = load i8*, i8** %17
  %18 = getelementptr inbounds [96 x i64], [96 x i64]* %noelle.environment_variable.pointer, i64 0, i64 32
  %19 = bitcast i64* %18 to i64**
  %noelle_environment_variable_4 = load i64*, i64** %19
  %20 = getelementptr inbounds [96 x i64], [96 x i64]* %noelle.environment_variable.pointer, i64 0, i64 40
  %21 = bitcast i64* %20 to i64**
  %noelle_environment_variable_5 = load i64*, i64** %21
  %22 = getelementptr inbounds [96 x i64], [96 x i64]* %noelle.environment_variable.pointer, i64 0, i64 48
  %23 = bitcast i64* %22 to i64**
  %noelle_environment_variable_6 = load i64*, i64** %23
  %24 = getelementptr inbounds [96 x i64], [96 x i64]* %noelle.environment_variable.pointer, i64 0, i64 56
  %25 = bitcast i64* %24 to i64**
  %noelle_environment_variable_7 = load i64*, i64** %25
  %26 = getelementptr inbounds [96 x i64], [96 x i64]* %noelle.environment_variable.pointer, i64 0, i64 64
  %27 = bitcast i64* %26 to i64**
  %noelle_environment_variable_8 = load i64*, i64** %27
  %28 = getelementptr inbounds [96 x i64], [96 x i64]* %noelle.environment_variable.pointer, i64 0, i64 72
  %29 = bitcast i64* %28 to i32*
  %noelle_environment_variable_9 = load i32, i32* %29
  %30 = bitcast i8* %1 to [0 x i64]*
  %31 = mul i64 64, %4
  %32 = ptrtoint i8* %noelle_environment_variable_1 to i64
  %33 = add i64 %32, %31
  %34 = inttoptr i64 %33 to i8*
  %35 = trunc i64 %4 to i32
  %36 = mul i32 -64, %35
  %37 = add i32 %noelle_environment_variable_9, %36
  %38 = sub i64 %5, 1
  %39 = mul i64 64, %38
  %40 = sub i64 %5, 1
  %41 = trunc i64 %40 to i32
  %42 = mul i32 -64, %41
  %43 = ptrtoint i8* %2 to i64
  %44 = add i64 0, %43
  %45 = inttoptr i64 %44 to i8*
  %46 = ptrtoint i8* %3 to i64
  %47 = add i64 0, %46
  %48 = inttoptr i64 %47 to i8*
  %49 = getelementptr inbounds [96 x i64], [96 x i64]* %noelle.environment_variable.pointer, i64 0, i64 80
  %50 = bitcast i64* %49 to i8**
  %51 = getelementptr inbounds [96 x i64], [96 x i64]* %noelle.environment_variable.pointer, i64 0, i64 88
  %52 = bitcast i64* %51 to i32*
  br label %154

53:                                               ; preds = %SS0-entry
  ret void

54:                                               ; preds = %check_if_last_iteration_is_missing, %SS0-entry1
  %55 = load i64, i64* %8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %SS0-wait, label %SS0-entry

57:                                               ; preds = %90
  %58 = phi i64 [ %92, %90 ], !noelle.pdg.inst.id !31
  %59 = phi i64 [ %93, %90 ], !noelle.pdg.inst.id !32
  %60 = phi i64 [ %94, %90 ], !noelle.pdg.inst.id !33
  %61 = phi i64 [ %95, %90 ], !noelle.pdg.inst.id !34
  %62 = phi i64 [ %96, %90 ], !noelle.pdg.inst.id !35
  %63 = add i64 %189, %61, !noelle.pdg.inst.id !36
  store i64 %63, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !41
  %64 = add i64 %190, %60, !noelle.pdg.inst.id !42
  store i64 %64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !43
  %65 = add i64 %191, %59, !noelle.pdg.inst.id !44
  store i64 %65, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !45
  %66 = add i64 %192, %58, !noelle.pdg.inst.id !46
  store i64 %66, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !47
  %67 = add i64 %193, %62, !noelle.pdg.inst.id !48
  store i64 %67, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !49
  call void @HELIX_signal(i8* %48)
  %68 = getelementptr inbounds i8, i8* %155, i64 64, !noelle.pdg.inst.id !50
  %69 = add nsw i32 %156, -64, !noelle.pdg.inst.id !51
  %70 = ptrtoint i8* %68 to i64
  %71 = add i64 %70, %39
  %72 = inttoptr i64 %71 to i8*
  %73 = add i32 %69, %42
  br label %154, !noelle.pdg.inst.id !52

74:                                               ; preds = %90
  %75 = shl i64 %95, 5, !noelle.pdg.inst.id !53
  %76 = lshr i64 %95, 27, !noelle.pdg.inst.id !54
  %77 = or i64 %75, %76, !noelle.pdg.inst.id !55
  %78 = xor i64 %94, %93, !noelle.pdg.inst.id !56
  %79 = xor i64 %78, %92, !noelle.pdg.inst.id !57
  %80 = add i64 %77, %79, !noelle.pdg.inst.id !58
  %81 = add i64 %80, %96, !noelle.pdg.inst.id !59
  %82 = getelementptr inbounds [80 x i64], [80 x i64]* %9, i64 0, i64 %91, !noelle.pdg.inst.id !60
  %83 = load i64, i64* %82, align 8, !tbaa !37, !noelle.pdg.inst.id !61
  %84 = add i64 %81, %83, !noelle.pdg.inst.id !62
  %85 = add i64 %84, 3395469782, !noelle.pdg.inst.id !63
  %86 = shl i64 %94, 30, !noelle.pdg.inst.id !64
  %87 = lshr i64 %94, 2, !noelle.pdg.inst.id !65
  %88 = or i64 %86, %87, !noelle.pdg.inst.id !66
  %89 = add nuw nsw i64 %91, 1, !noelle.pdg.inst.id !67
  br label %90, !noelle.pdg.inst.id !68

90:                                               ; preds = %98, %74
  %91 = phi i64 [ %89, %74 ], [ 60, %98 ], !noelle.pdg.inst.id !69
  %92 = phi i64 [ %93, %74 ], [ %99, %98 ], !noelle.pdg.inst.id !70
  %93 = phi i64 [ %88, %74 ], [ %100, %98 ], !noelle.pdg.inst.id !71
  %94 = phi i64 [ %95, %74 ], [ %101, %98 ], !noelle.pdg.inst.id !72
  %95 = phi i64 [ %85, %74 ], [ %102, %98 ], !noelle.pdg.inst.id !73
  %96 = phi i64 [ %92, %74 ], [ %103, %98 ], !noelle.pdg.inst.id !74
  %97 = icmp eq i64 %91, 80, !noelle.pdg.inst.id !75
  br i1 %97, label %57, label %74, !prof !76, !noelle.loop.id !77, !noelle.pdg.inst.id !78

98:                                               ; preds = %122
  %99 = phi i64 [ %124, %122 ], !noelle.pdg.inst.id !79
  %100 = phi i64 [ %125, %122 ], !noelle.pdg.inst.id !80
  %101 = phi i64 [ %126, %122 ], !noelle.pdg.inst.id !81
  %102 = phi i64 [ %127, %122 ], !noelle.pdg.inst.id !82
  %103 = phi i64 [ %128, %122 ], !noelle.pdg.inst.id !83
  br label %90, !noelle.pdg.inst.id !84

104:                                              ; preds = %122
  %105 = shl i64 %127, 5, !noelle.pdg.inst.id !85
  %106 = lshr i64 %127, 27, !noelle.pdg.inst.id !86
  %107 = or i64 %105, %106, !noelle.pdg.inst.id !87
  %108 = or i64 %125, %124, !noelle.pdg.inst.id !88
  %109 = and i64 %126, %108, !noelle.pdg.inst.id !89
  %110 = and i64 %125, %124, !noelle.pdg.inst.id !90
  %111 = or i64 %109, %110, !noelle.pdg.inst.id !91
  %112 = add i64 %107, %111, !noelle.pdg.inst.id !92
  %113 = add i64 %112, %128, !noelle.pdg.inst.id !93
  %114 = getelementptr inbounds [80 x i64], [80 x i64]* %9, i64 0, i64 %123, !noelle.pdg.inst.id !94
  %115 = load i64, i64* %114, align 8, !tbaa !37, !noelle.pdg.inst.id !95
  %116 = add i64 %113, %115, !noelle.pdg.inst.id !96
  %117 = add i64 %116, 2400959708, !noelle.pdg.inst.id !97
  %118 = shl i64 %126, 30, !noelle.pdg.inst.id !98
  %119 = lshr i64 %126, 2, !noelle.pdg.inst.id !99
  %120 = or i64 %118, %119, !noelle.pdg.inst.id !100
  %121 = add nuw nsw i64 %123, 1, !noelle.pdg.inst.id !101
  br label %122, !noelle.pdg.inst.id !102

122:                                              ; preds = %104, %130
  %123 = phi i64 [ %121, %104 ], [ 40, %130 ], !noelle.pdg.inst.id !103
  %124 = phi i64 [ %125, %104 ], [ %131, %130 ], !noelle.pdg.inst.id !104
  %125 = phi i64 [ %120, %104 ], [ %132, %130 ], !noelle.pdg.inst.id !105
  %126 = phi i64 [ %127, %104 ], [ %133, %130 ], !noelle.pdg.inst.id !106
  %127 = phi i64 [ %117, %104 ], [ %134, %130 ], !noelle.pdg.inst.id !107
  %128 = phi i64 [ %124, %104 ], [ %135, %130 ], !noelle.pdg.inst.id !108
  %129 = icmp eq i64 %123, 60, !noelle.pdg.inst.id !109
  br i1 %129, label %98, label %104, !prof !76, !noelle.loop.id !110, !noelle.pdg.inst.id !111

130:                                              ; preds = %226
  %131 = phi i64 [ %228, %226 ], !noelle.pdg.inst.id !112
  %132 = phi i64 [ %229, %226 ], !noelle.pdg.inst.id !113
  %133 = phi i64 [ %230, %226 ], !noelle.pdg.inst.id !114
  %134 = phi i64 [ %231, %226 ], !noelle.pdg.inst.id !115
  %135 = phi i64 [ %232, %226 ], !noelle.pdg.inst.id !116
  br label %122, !noelle.pdg.inst.id !117

136:                                              ; preds = %161, %139
  %137 = phi i64 [ %165, %161 ], [ 0, %139 ], !noelle.pdg.inst.id !118
  %138 = icmp eq i64 %137, 16, !noelle.pdg.inst.id !119
  br i1 %138, label %166, label %161, !prof !120, !noelle.loop.id !121, !noelle.pdg.inst.id !122

139:                                              ; preds = %150
  br label %136, !noelle.pdg.inst.id !123

140:                                              ; preds = %150
  %141 = load i8, i8* %152, align 1, !tbaa !124, !noelle.pdg.inst.id !125
  %142 = getelementptr inbounds i8, i8* %152, i64 1, !noelle.pdg.inst.id !126
  %143 = load i8, i8* %142, align 1, !tbaa !124, !noelle.pdg.inst.id !127
  %144 = getelementptr inbounds i8, i8* %152, i64 2, !noelle.pdg.inst.id !128
  %145 = load i8, i8* %144, align 1, !tbaa !124, !noelle.pdg.inst.id !129
  %146 = getelementptr inbounds i8, i8* %152, i64 3, !noelle.pdg.inst.id !130
  %147 = load i8, i8* %146, align 1, !tbaa !124, !noelle.pdg.inst.id !131
  store i8 %147, i8* %152, align 1, !tbaa !124, !noelle.pdg.inst.id !132
  store i8 %145, i8* %142, align 1, !tbaa !124, !noelle.pdg.inst.id !133
  store i8 %143, i8* %144, align 1, !tbaa !124, !noelle.pdg.inst.id !134
  store i8 %141, i8* %146, align 1, !tbaa !124, !noelle.pdg.inst.id !135
  %148 = getelementptr inbounds i8, i8* %152, i64 8, !noelle.pdg.inst.id !136
  %149 = add nuw nsw i32 %151, 1, !noelle.pdg.inst.id !137
  br label %150, !noelle.pdg.inst.id !138

150:                                              ; preds = %140, %SS0-entry3
  %151 = phi i32 [ 0, %SS0-entry3 ], [ %149, %140 ], !noelle.pdg.inst.id !139
  %152 = phi i8* [ %noelle_environment_variable_2, %SS0-entry3 ], [ %148, %140 ], !noelle.pdg.inst.id !140
  %153 = icmp eq i32 %151, 8, !noelle.pdg.inst.id !141
  br i1 %153, label %139, label %140, !prof !142, !noelle.loop.id !143, !noelle.pdg.inst.id !144

154:                                              ; preds = %7, %57
  %155 = phi i8* [ %34, %7 ], [ %72, %57 ], !noelle.pdg.inst.id !145
  %156 = phi i32 [ %37, %7 ], [ %73, %57 ], !noelle.pdg.inst.id !146
  store i64 0, i64* %8
  %157 = icmp sle i32 %156, 63, !noelle.pdg.inst.id !147
  br i1 %157, label %check_if_last_iteration_is_missing, label %158, !prof !148, !noelle.loop.id !149, !noelle.pdg.inst.id !150, !noelle.parallelizer.looporder !151

158:                                              ; preds = %154
  %159 = load i64, i64* %8
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %SS0-wait4, label %SS0-entry3

161:                                              ; preds = %136
  %162 = getelementptr inbounds %struct.SHA_INFO, %struct.SHA_INFO* %noelle_environment_variable_0, i64 0, i32 3, i64 %137, !noelle.pdg.inst.id !152
  %163 = load i64, i64* %162, align 8, !tbaa !37, !noelle.pdg.inst.id !153
  %164 = getelementptr inbounds [80 x i64], [80 x i64]* %9, i64 0, i64 %137, !noelle.pdg.inst.id !154
  store i64 %163, i64* %164, align 8, !tbaa !37, !noelle.pdg.inst.id !155
  %165 = add nuw nsw i64 %137, 1, !noelle.pdg.inst.id !156
  br label %136, !noelle.pdg.inst.id !157

166:                                              ; preds = %136
  br label %167, !noelle.pdg.inst.id !158

167:                                              ; preds = %166, %170
  %168 = phi i64 [ %187, %170 ], [ 16, %166 ], !noelle.pdg.inst.id !159
  %169 = icmp eq i64 %168, 80, !noelle.pdg.inst.id !160
  br i1 %169, label %188, label %170, !prof !161, !noelle.loop.id !162, !noelle.pdg.inst.id !163

170:                                              ; preds = %167
  %171 = add nsw i64 %168, -3, !noelle.pdg.inst.id !164
  %172 = getelementptr inbounds [80 x i64], [80 x i64]* %9, i64 0, i64 %171, !noelle.pdg.inst.id !165
  %173 = load i64, i64* %172, align 8, !tbaa !37, !noelle.pdg.inst.id !166
  %174 = add nsw i64 %168, -8, !noelle.pdg.inst.id !167
  %175 = getelementptr inbounds [80 x i64], [80 x i64]* %9, i64 0, i64 %174, !noelle.pdg.inst.id !168
  %176 = load i64, i64* %175, align 8, !tbaa !37, !noelle.pdg.inst.id !169
  %177 = xor i64 %173, %176, !noelle.pdg.inst.id !170
  %178 = add nsw i64 %168, -14, !noelle.pdg.inst.id !171
  %179 = getelementptr inbounds [80 x i64], [80 x i64]* %9, i64 0, i64 %178, !noelle.pdg.inst.id !172
  %180 = load i64, i64* %179, align 8, !tbaa !37, !noelle.pdg.inst.id !173
  %181 = xor i64 %177, %180, !noelle.pdg.inst.id !174
  %182 = add nsw i64 %168, -16, !noelle.pdg.inst.id !175
  %183 = getelementptr inbounds [80 x i64], [80 x i64]* %9, i64 0, i64 %182, !noelle.pdg.inst.id !176
  %184 = load i64, i64* %183, align 8, !tbaa !37, !noelle.pdg.inst.id !177
  %185 = xor i64 %181, %184, !noelle.pdg.inst.id !178
  %186 = getelementptr inbounds [80 x i64], [80 x i64]* %9, i64 0, i64 %168, !noelle.pdg.inst.id !179
  store i64 %185, i64* %186, align 8, !tbaa !37, !noelle.pdg.inst.id !180
  %187 = add nuw nsw i64 %168, 1, !noelle.pdg.inst.id !181
  br label %167, !noelle.pdg.inst.id !182

188:                                              ; preds = %167
  %189 = load i64, i64* %noelle_environment_variable_4, align 8, !tbaa !37, !noelle.pdg.inst.id !183
  %190 = load i64, i64* %noelle_environment_variable_5, align 8, !tbaa !37, !noelle.pdg.inst.id !184
  %191 = load i64, i64* %noelle_environment_variable_6, align 8, !tbaa !37, !noelle.pdg.inst.id !185
  %192 = load i64, i64* %noelle_environment_variable_7, align 8, !tbaa !37, !noelle.pdg.inst.id !186
  %193 = load i64, i64* %noelle_environment_variable_8, align 8, !tbaa !37, !noelle.pdg.inst.id !187
  br label %194, !noelle.pdg.inst.id !188

194:                                              ; preds = %202, %188
  %195 = phi i64 [ %219, %202 ], [ 0, %188 ], !noelle.pdg.inst.id !189
  %196 = phi i64 [ %197, %202 ], [ %192, %188 ], !noelle.pdg.inst.id !190
  %197 = phi i64 [ %218, %202 ], [ %191, %188 ], !noelle.pdg.inst.id !191
  %198 = phi i64 [ %199, %202 ], [ %190, %188 ], !noelle.pdg.inst.id !192
  %199 = phi i64 [ %215, %202 ], [ %189, %188 ], !noelle.pdg.inst.id !193
  %200 = phi i64 [ %196, %202 ], [ %193, %188 ], !noelle.pdg.inst.id !194
  %201 = icmp eq i64 %195, 20, !noelle.pdg.inst.id !195
  br i1 %201, label %220, label %202, !prof !76, !noelle.loop.id !196, !noelle.pdg.inst.id !197

202:                                              ; preds = %194
  %203 = shl i64 %199, 5, !noelle.pdg.inst.id !198
  %204 = lshr i64 %199, 27, !noelle.pdg.inst.id !199
  %205 = or i64 %203, %204, !noelle.pdg.inst.id !200
  %206 = and i64 %198, %197, !noelle.pdg.inst.id !201
  %207 = xor i64 %198, -1, !noelle.pdg.inst.id !202
  %208 = and i64 %196, %207, !noelle.pdg.inst.id !203
  %209 = or i64 %206, %208, !noelle.pdg.inst.id !204
  %210 = add i64 %205, %209, !noelle.pdg.inst.id !205
  %211 = add i64 %210, %200, !noelle.pdg.inst.id !206
  %212 = getelementptr inbounds [80 x i64], [80 x i64]* %9, i64 0, i64 %195, !noelle.pdg.inst.id !207
  %213 = load i64, i64* %212, align 8, !tbaa !37, !noelle.pdg.inst.id !208
  %214 = add i64 %211, %213, !noelle.pdg.inst.id !209
  %215 = add i64 %214, 1518500249, !noelle.pdg.inst.id !210
  %216 = shl i64 %198, 30, !noelle.pdg.inst.id !211
  %217 = lshr i64 %198, 2, !noelle.pdg.inst.id !212
  %218 = or i64 %216, %217, !noelle.pdg.inst.id !213
  %219 = add nuw nsw i64 %195, 1, !noelle.pdg.inst.id !214
  br label %194, !noelle.pdg.inst.id !215

220:                                              ; preds = %194
  %221 = phi i64 [ %196, %194 ], !noelle.pdg.inst.id !216
  %222 = phi i64 [ %197, %194 ], !noelle.pdg.inst.id !217
  %223 = phi i64 [ %198, %194 ], !noelle.pdg.inst.id !218
  %224 = phi i64 [ %199, %194 ], !noelle.pdg.inst.id !219
  %225 = phi i64 [ %200, %194 ], !noelle.pdg.inst.id !220
  br label %226, !noelle.pdg.inst.id !221

226:                                              ; preds = %220, %234
  %227 = phi i64 [ %249, %234 ], [ 20, %220 ], !noelle.pdg.inst.id !222
  %228 = phi i64 [ %229, %234 ], [ %221, %220 ], !noelle.pdg.inst.id !223
  %229 = phi i64 [ %248, %234 ], [ %222, %220 ], !noelle.pdg.inst.id !224
  %230 = phi i64 [ %231, %234 ], [ %223, %220 ], !noelle.pdg.inst.id !225
  %231 = phi i64 [ %245, %234 ], [ %224, %220 ], !noelle.pdg.inst.id !226
  %232 = phi i64 [ %228, %234 ], [ %225, %220 ], !noelle.pdg.inst.id !227
  %233 = icmp eq i64 %227, 40, !noelle.pdg.inst.id !228
  br i1 %233, label %130, label %234, !prof !76, !noelle.loop.id !229, !noelle.pdg.inst.id !230

234:                                              ; preds = %226
  %235 = shl i64 %231, 5, !noelle.pdg.inst.id !231
  %236 = lshr i64 %231, 27, !noelle.pdg.inst.id !232
  %237 = or i64 %235, %236, !noelle.pdg.inst.id !233
  %238 = xor i64 %230, %229, !noelle.pdg.inst.id !234
  %239 = xor i64 %238, %228, !noelle.pdg.inst.id !235
  %240 = add i64 %237, %239, !noelle.pdg.inst.id !236
  %241 = add i64 %240, %232, !noelle.pdg.inst.id !237
  %242 = getelementptr inbounds [80 x i64], [80 x i64]* %9, i64 0, i64 %227, !noelle.pdg.inst.id !238
  %243 = load i64, i64* %242, align 8, !tbaa !37, !noelle.pdg.inst.id !239
  %244 = add i64 %241, %243, !noelle.pdg.inst.id !240
  %245 = add i64 %244, 1859775393, !noelle.pdg.inst.id !241
  %246 = shl i64 %230, 30, !noelle.pdg.inst.id !242
  %247 = lshr i64 %230, 2, !noelle.pdg.inst.id !243
  %248 = or i64 %246, %247, !noelle.pdg.inst.id !244
  %249 = add nuw nsw i64 %227, 1, !noelle.pdg.inst.id !245
  br label %226, !noelle.pdg.inst.id !246

check_if_last_iteration_is_missing:               ; preds = %154
  %250 = sub i32 %156, -64
  %251 = icmp sle i32 %250, 63, !noelle.pdg.inst.id !147
  br i1 %251, label %54, label %last_iteration

last_iteration:                                   ; preds = %check_if_last_iteration_is_missing
  %252 = load i64, i64* %8
  %253 = icmp eq i64 %252, 0
  %254 = sub i32 %156, -64
  %255 = icmp sle i32 %254, 63, !noelle.pdg.inst.id !147
  %256 = sub i32 %156, -64
  %257 = icmp sle i32 %256, 63, !noelle.pdg.inst.id !147
  br i1 %257, label %very_last_bb_before_exiting_task6, label %code_executed_only_by_the_last_loop_iteration5

very_last_bb_before_exiting_task6:                ; preds = %last_iteration, %code_executed_only_by_the_last_loop_iteration5
  br i1 %255, label %very_last_bb_before_exiting_task, label %code_executed_only_by_the_last_loop_iteration

very_last_bb_before_exiting_task:                 ; preds = %very_last_bb_before_exiting_task6, %code_executed_only_by_the_last_loop_iteration
  br i1 %253, label %SS0-wait2, label %SS0-entry1

SS0-entry:                                        ; preds = %54, %SS0-wait
  call void @HELIX_signal(i8* %48)
  br label %53

SS0-wait:                                         ; preds = %54
  call void @HELIX_wait(i8* %45)
  store i64 1, i64* %8
  br label %SS0-entry

SS0-entry1:                                       ; preds = %very_last_bb_before_exiting_task, %SS0-wait2
  br label %54

SS0-wait2:                                        ; preds = %very_last_bb_before_exiting_task
  call void @HELIX_wait(i8* %45)
  store i64 1, i64* %8
  br label %SS0-entry1

SS0-entry3:                                       ; preds = %158, %SS0-wait4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %noelle_environment_variable_2, i8* align 1 %155, i64 64, i1 false) #8, !noelle.pdg.inst.id !247
  br label %150, !noelle.pdg.inst.id !248

SS0-wait4:                                        ; preds = %158
  call void @HELIX_wait(i8* %45)
  store i64 1, i64* %8
  br label %SS0-entry3

code_executed_only_by_the_last_loop_iteration:    ; preds = %very_last_bb_before_exiting_task6
  store i8* %155, i8** %50, !noelle.environment_variable.live_out.store !249
  br label %very_last_bb_before_exiting_task

code_executed_only_by_the_last_loop_iteration5:   ; preds = %last_iteration
  store i32 %156, i32* %52, !noelle.environment_variable.live_out.store !250
  br label %very_last_bb_before_exiting_task6
}

Parallelizer: parallelizerLoop:   Link the parallelize loop
Parallelizer: parallelizerLoop:   The loop has been parallelized with HELIX
Parallelizer: parallelizerLoop: Exit
Parallelizer:    Keep track of basic blocks being modified by the parallelization
Parallelizer:    Loop 16 cannot be parallelized because one of its parent has been parallelized already
Parallelizer: Exit
noelle-meta-clean parallelized_unoptimized.bc parallelized_unoptimized.bc
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CleanMetadata.so -CleanMetadata -clean-loop-metadata=true -clean-prof-metadata=true -clean-pdg-metadata=true parallelized_unoptimized.bc -o parallelized_unoptimized.bc
noelle/core/Clean Loop Metadata
noelle/core/Clean PDG Metadata
noelle/core/Clean profiler metadata
opt --strip-named-metadata parallelized_unoptimized.bc -o parallelized_unoptimized.bc
clang -O3 -c -emit-llvm parallelized_unoptimized.bc -o baseline_parallelized.bc
clang -O3 -c -emit-llvm baseline_parallelized.bc -o baseline_parallelized.bc
cp baseline_parallelized.bc sha.bc
make[1]: Leaving directory '/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/sha'
