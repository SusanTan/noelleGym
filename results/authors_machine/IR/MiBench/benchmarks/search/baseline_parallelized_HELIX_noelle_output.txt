make[1]: Entering directory '/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/search'
./runEnablers.sh search search.bc large "-lm -lstdc++ -lpthread -ltermcap" -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier
/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/search /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/search
Cloning https://github.com/scampanoni/virgil.git
Cloning into 'threadpool'...
/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/search
The IR has already been transformed for enabling parallelization
noelle-parallelizer baseline_with_metadata.bc -o baseline_parallelized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-dswp
noelle-meta-loop-embed baseline_with_metadata.bc -o afterLoopMetadata.bc
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopMetadata.so -LoopMetadata baseline_with_metadata.bc -o afterLoopMetadata.bc
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopMetadata.so -LoopMetadata baseline_with_metadata.bc -o afterLoopMetadata.bc
noelle-parallelization-planner afterLoopMetadata.bc -o baseline_with_parallel_plan.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-dswp
noelle-parallel-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Planner.so -planner afterLoopMetadata.bc -o baseline_with_parallel_plan.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-dswp
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Planner.so -planner afterLoopMetadata.bc -o baseline_with_parallel_plan.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-dswp
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Planner.so -planner afterLoopMetadata.bc -o baseline_with_parallel_plan.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-dswp
Planner: Start
Planner:  Fetching the program loops
Noelle: Filter out cold code
Noelle:  Function "main"
Noelle:     Loop "  %exitcond = icmp eq i32 %.0, 50000, !noelle.pdg.inst.id !256" (1.000000e+02%)
Noelle:     Loop "  %3 = getelementptr inbounds [1333 x i8*], [1333 x i8*]* @__const.main.find_strings, i64 0, i64 %indvars.iv, !noelle.pdg.inst.id !262" (9.999977e+01%)
Noelle:     Loop "  %exitcond2.i = icmp eq i64 %.0.i, 256, !noelle.pdg.inst.id !271" (9.218718e+01%)
Noelle:     Loop "  %exitcond.i = icmp eq i64 %.1.i, %7, !noelle.pdg.inst.id !280" (2.628962e+00%)
Noelle:     Loop "  %25 = icmp ult i64 %.02.i, %23, !noelle.pdg.inst.id !297" (3.628241e+00%)
Noelle:     Loop "  %26 = icmp ult i64 %.13.i, %23, !noelle.pdg.inst.id !305" (2.813341e+00%)
Noelle:  Function "tolower"
Noelle:  Disable "tolower" as cold function
Noelle:  Function "strsearch"
Noelle:  Disable "strsearch" as cold function
Noelle:  Function "init_search"
Noelle:  Disable "init_search" as cold function
Noelle:  Function "bmh_search"
Noelle:  Disable "bmh_search" as cold function
Noelle:  Function "bmh_init"
Noelle:  Disable "bmh_init" as cold function
Noelle:  Function "bmhi_search"
Noelle:  Disable "bmhi_search" as cold function
Noelle:  Function "bhmi_cleanup"
Noelle:  Disable "bhmi_cleanup" as cold function
Noelle:  Function "bmhi_init"
Noelle:  Disable "bmhi_init" as cold function
Noelle:  Function "bmha_search"
Noelle:  Disable "bmha_search" as cold function
Noelle:  Function "bmha_init"
Noelle:  Disable "bmha_init" as cold function
Planner:    There are 6 loops in the program we are going to consider
Planner:  Filter out loops not worth considering
Planner:    Loop 25 has 1.795000e+03 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 27 has 7.064640e+01 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 28 has 5.302762e+01 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 26 has 5.118919e+01 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:  There are 1 loop nesting trees in the program
Planner:    ID: 23 (1)
Planner:      Function: "main"
Planner:      Loop: "  %exitcond = icmp eq i32 %.0, 50000, !noelle.pdg.inst.id !256"
Planner:      Loop nesting level: 1
Planner:      Hotness = 1.000000e+02 %
Planner:      Average instructions per invocation = 1.296780e+11 %
Planner:      Average iterations per invocation = 5.000000e+04 %
Planner:    
Planner:      ID: 24 (2)
Planner:        Function: "main"
Planner:        Loop: "  %3 = getelementptr inbounds [1333 x i8*], [1333 x i8*]* @__const.main.find_strings, i64 0, i64 %indvars.iv, !noelle.pdg.inst.id !262"
Planner:        Loop nesting level: 2
Planner:        Hotness = 9.999977e+01 %
Planner:        Average instructions per invocation = 2.593554e+06 %
Planner:        Average iterations per invocation = 1.332995e+03 %
Planner:      
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
Planner: LoopSelector: Start
Planner: LoopSelector:   Order of loops and their maximum savings
Planner: LoopSelector:    Loop 23
Planner: LoopSelector:      Function: "main"
Planner: LoopSelector:      Loop nesting level: 1
Planner: LoopSelector:      "  %exitcond = icmp eq i32 %.0, 50000, !noelle.pdg.inst.id !256"
Planner: LoopSelector:      Coverage: 1.000000e+02%
Planner: LoopSelector:      Whole-program savings = 8.227332e+01%
Planner: LoopSelector:      Loop savings = 8.227332e+01%
Planner: LoopSelector:    Loop 24
Planner: LoopSelector:      Function: "main"
Planner: LoopSelector:      Loop nesting level: 2
Planner: LoopSelector:      "  %3 = getelementptr inbounds [1333 x i8*], [1333 x i8*]* @__const.main.find_strings, i64 0, i64 %indvars.iv, !noelle.pdg.inst.id !262"
Planner: LoopSelector:      Coverage: 9.999977e+01%
Planner: LoopSelector:      Whole-program savings = 8.227309e+01%
Planner: LoopSelector:      Loop savings = 8.227328e+01%
Planner: LoopSelector: End
Planner:   Maximum time saved = 8.227332e+01% (106690414256)
Planner:   Maximum time saved with DOALL only = 0.000000e+00% (0)
Planner: Exit
noelle-rm-function -function-name=SIMONE_CAMPANONI_IS_GOING_TO_REMOVE_THIS_FUNCTION code_with_prototypes.bc -o code_to_parallelize.bc
NOELLE: DeadFunctions: Start
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/RemoveFunction.so -noelle-rm-function -function-name=SIMONE_CAMPANONI_IS_GOING_TO_REMOVE_THIS_FUNCTION code_with_prototypes.bc -o code_to_parallelize.bc
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/RemoveFunction.so -noelle-rm-function -function-name=SIMONE_CAMPANONI_IS_GOING_TO_REMOVE_THIS_FUNCTION code_with_prototypes.bc -o code_to_parallelize.bc
RemoveFunction: Start
RemoveFunction:   Check if function "SIMONE_CAMPANONI_IS_GOING_TO_REMOVE_THIS_FUNCTION" exists
RemoveFunction:     The function exists
RemoveFunction:   Remove the function
RemoveFunction: Exit
NOELLE: DeadFunctions: Exit
noelle-parallelizer-loop code_to_parallelize.bc -o parallelized_unoptimized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-dswp
noelle-parallel-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Parallelizer.so -parallelizer code_to_parallelize.bc -o parallelized_unoptimized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-dswp
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Parallelizer.so -parallelizer code_to_parallelize.bc -o parallelized_unoptimized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-dswp
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Parallelizer.so -parallelizer code_to_parallelize.bc -o parallelized_unoptimized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-dswp
Parallelizer: Start
Parallelizer:  Analyzing the module code_to_parallelize.bc
Parallelizer:  Fetching the program loops
Noelle: Filter out cold code
Noelle:  Function "main"
Noelle:     Loop "  %exitcond = icmp eq i32 %.0, 50000, !noelle.pdg.inst.id !258" (1.000000e+02%)
Noelle:     Loop "  %3 = getelementptr inbounds [1333 x i8*], [1333 x i8*]* @__const.main.find_strings, i64 0, i64 %indvars.iv, !noelle.pdg.inst.id !265" (9.999977e+01%)
Noelle:     Loop "  %exitcond2.i = icmp eq i64 %.0.i, 256, !noelle.pdg.inst.id !275" (9.218718e+01%)
Noelle:     Loop "  %exitcond.i = icmp eq i64 %.1.i, %7, !noelle.pdg.inst.id !284" (2.628962e+00%)
Noelle:     Loop "  %25 = icmp ult i64 %.02.i, %23, !noelle.pdg.inst.id !301" (3.628241e+00%)
Noelle:     Loop "  %26 = icmp ult i64 %.13.i, %23, !noelle.pdg.inst.id !309" (2.813341e+00%)
Noelle:  Function "bmha_init"
Noelle:  Disable "bmha_init" as cold function
Noelle:  Function "bmha_search"
Noelle:  Disable "bmha_search" as cold function
Noelle:  Function "bmhi_init"
Noelle:  Disable "bmhi_init" as cold function
Noelle:  Function "bhmi_cleanup"
Noelle:  Disable "bhmi_cleanup" as cold function
Noelle:  Function "init_search"
Noelle:  Disable "init_search" as cold function
Noelle:  Function "strsearch"
Noelle:  Disable "strsearch" as cold function
Noelle:  Function "tolower"
Noelle:  Disable "tolower" as cold function
Noelle:  Function "bmhi_search"
Noelle:  Disable "bmhi_search" as cold function
Noelle:  Function "bmh_init"
Noelle:  Disable "bmh_init" as cold function
Noelle:  Function "bmh_search"
Noelle:  Disable "bmh_search" as cold function
Parallelizer:    There are 6 loops in the program we are going to consider
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
Parallelizer: parallelizerLoop: Start
Parallelizer: parallelizerLoop:   Function = "main"
Parallelizer: parallelizerLoop:   Loop 23 = "  %exitcond = icmp eq i32 %.0, 50000, !noelle.pdg.inst.id !258"
Parallelizer: parallelizerLoop:   Nesting level = 1
Parallelizer: parallelizerLoop:   Number of threads to extract = 8
Parallelizer: parallelizerLoop:   Environment: live-in and live-out values
Parallelizer: parallelizerLoop:   Environment:   Live-in 0 =   %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !252, !noelle.pdg.inst.id !76
DOALL: Checking if the loop is DOALL
DOALL:   We found an SCC of the loop that is non clonable and non commutative
DOALL:     Internal nodes: 46
DOALL:     	  %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33
DOALL:     	  store i64 %7, i64* @len, align 8, !tbaa !271, !noelle.pdg.inst.id !47
DOALL:     	  store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50
DOALL:     	  %16 = load i8, i8* %15, align 1, !tbaa !291, !noelle.pdg.inst.id !53
DOALL:     	  %17 = zext i8 %16 to i64, !noelle.pdg.inst.id !292
DOALL:     	  %18 = getelementptr inbounds [256 x i64], [256 x i64]* @table, i64 0, i64 %17, !noelle.pdg.inst.id !293
DOALL:     	  store i64 %14, i64* %18, align 8, !tbaa !271, !noelle.pdg.inst.id !55
DOALL:     	  store i8* %4, i8** @findme, align 8, !tbaa !252, !noelle.pdg.inst.id !58
DOALL:     	  %.02.i = phi i64 [ %22, %init_search.exit ], [ %.24.i, %._crit_edge7.i ], !noelle.pdg.inst.id !299
DOALL:     	  %.01.i = phi i64 [ undef, %init_search.exit ], [ %.2.i.lcssa, %._crit_edge7.i ], !noelle.pdg.inst.id !300
DOALL:     	  %25 = icmp ult i64 %.02.i, %23, !noelle.pdg.inst.id !301
DOALL:     	  br i1 %25, label %.preheader.i3.preheader, label %.strsearch.exit_crit_edge, !prof !302, !noelle.loop.id !303, !noelle.pdg.inst.id !304
DOALL:     	  %.13.i = phi i64 [ %36, %35 ], [ %.02.i, %.preheader.i3.preheader ], !noelle.pdg.inst.id !307
DOALL:     	  %.1.i2 = phi i64 [ %.2.i, %35 ], [ %.01.i, %.preheader.i3.preheader ], !noelle.pdg.inst.id !308
DOALL:     	  %26 = icmp ult i64 %.13.i, %23, !noelle.pdg.inst.id !309
DOALL:     	  br i1 %26, label %27, label %.preheader.i3.._crit_edge6.i_crit_edge, !prof !310, !noelle.loop.id !311, !noelle.pdg.inst.id !312
DOALL:     	  %28 = getelementptr inbounds i8, i8* %21, i64 %.13.i, !noelle.pdg.inst.id !314
DOALL:     	  %29 = load i8, i8* %28, align 1, !tbaa !291, !noelle.pdg.inst.id !66
DOALL:     	  %30 = zext i8 %29 to i64, !noelle.pdg.inst.id !315
DOALL:     	  %31 = getelementptr inbounds [256 x i64], [256 x i64]* @table, i64 0, i64 %30, !noelle.pdg.inst.id !316
DOALL:     	  %32 = load i64, i64* %31, align 8, !tbaa !271, !noelle.pdg.inst.id !68
DOALL:     	  %33 = icmp ne i64 %32, 0, !noelle.pdg.inst.id !317
DOALL:     	  %.2.i = phi i64 [ %32, %27 ], [ %.1.i2, %.preheader.i3.._crit_edge6.i_crit_edge ], !noelle.pdg.inst.id !319
DOALL:     	  %34 = phi i1 [ %33, %27 ], [ false, %.preheader.i3.._crit_edge6.i_crit_edge ], !noelle.pdg.inst.id !320
DOALL:     	  br i1 %34, label %35, label %37, !prof !321, !noelle.pdg.inst.id !322
DOALL:     	  %36 = add i64 %.13.i, %.2.i, !noelle.pdg.inst.id !323
DOALL:     	  %.2.i.lcssa = phi i64 [ %.2.i, %._crit_edge6.i ], !noelle.pdg.inst.id !325
DOALL:     	  %.13.i.lcssa = phi i64 [ %.13.i, %._crit_edge6.i ], !noelle.pdg.inst.id !326
DOALL:     	  %38 = icmp eq i64 %.2.i.lcssa, 0, !noelle.pdg.inst.id !327
DOALL:     	  br i1 %38, label %39, label %.._crit_edge7.i_crit_edge, !prof !328, !noelle.pdg.inst.id !329
DOALL:     	  %40 = sub i64 %.13.i.lcssa, %7, !noelle.pdg.inst.id !331
DOALL:     	  %41 = add i64 %40, 1, !noelle.pdg.inst.id !332
DOALL:     	  %42 = getelementptr inbounds i8, i8* %21, i64 %41, !noelle.pdg.inst.id !333
DOALL:     	  %43 = tail call i32 @strncmp(i8* nonnull %4, i8* %42, i64 %7) #13, !noelle.pdg.inst.id !334
DOALL:     	  %44 = icmp eq i32 %43, 0, !noelle.pdg.inst.id !335
DOALL:     	  br i1 %44, label %.strsearch.exit_crit_edge4, label %45, !prof !336, !noelle.pdg.inst.id !337
DOALL:     	  %.lcssa = phi i8* [ %42, %39 ], !noelle.pdg.inst.id !338
DOALL:     	  %46 = add i64 %.13.i.lcssa, 1, !noelle.pdg.inst.id !340
DOALL:     	  %.24.i = phi i64 [ %46, %45 ], [ %.13.i.lcssa, %.._crit_edge7.i_crit_edge ], !noelle.pdg.inst.id !342
DOALL:     	  %.0.i4 = phi i8* [ null, %.strsearch.exit_crit_edge ], [ %.lcssa, %.strsearch.exit_crit_edge4 ], !noelle.pdg.inst.id !344
DOALL:     	  %47 = icmp ne i8* %.0.i4, null, !noelle.pdg.inst.id !345
DOALL:     	  %50 = select i1 %47, i8* %48, i8* %49, !prof !348, !noelle.pdg.inst.id !349
DOALL:     	  br i1 %47, label %53, label %strsearch.exit.._crit_edge_crit_edge, !prof !348, !noelle.pdg.inst.id !351
DOALL:     	  %54 = getelementptr [8 x i8], [8 x i8]* @.str.214, i64 0, i64 0, !noelle.pdg.inst.id !353
DOALL:     	  %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70
DOALL:     	  %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73
DOALL:     External nodes: 25
DOALL:     	  %4 = load i8*, i8** %3, align 8, !tbaa !252, !noelle.pdg.inst.id !42
DOALL:     	  br i1 %5, label %57, label %6, !prof !267, !noelle.loop.id !268, !noelle.pdg.inst.id !269, !noelle.parallelizer.looporder !270
DOALL:     	  %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44
DOALL:     	  br i1 %exitcond2.i, label %.preheader.i.preheader, label %9, !prof !276, !noelle.loop.id !277, !noelle.pdg.inst.id !278
DOALL:     	  %10 = getelementptr inbounds [256 x i64], [256 x i64]* @table, i64 0, i64 %.0.i, !noelle.pdg.inst.id !280
DOALL:     	  br i1 %exitcond.i, label %init_search.exit, label %12, !prof !285, !noelle.loop.id !286, !noelle.pdg.inst.id !287
DOALL:     	  %14 = add i64 %7, %13, !noelle.pdg.inst.id !289
DOALL:     	  %15 = getelementptr inbounds i8, i8* %4, i64 %.1.i, !noelle.pdg.inst.id !290
DOALL:     	  %21 = load i8*, i8** %20, align 8, !tbaa !252, !noelle.pdg.inst.id !61
DOALL:     	  %22 = add i64 %7, -1, !noelle.pdg.inst.id !297
DOALL:     	  %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63
DOALL:     	  br label %strsearch.exit, !noelle.pdg.inst.id !305
DOALL:     	  br label %.preheader.i3, !noelle.pdg.inst.id !306
DOALL:     	  br label %._crit_edge6.i, !noelle.pdg.inst.id !313
DOALL:     	  br label %._crit_edge6.i, !noelle.pdg.inst.id !318
DOALL:     	  br label %.preheader.i3, !noelle.pdg.inst.id !324
DOALL:     	  br label %._crit_edge7.i, !noelle.pdg.inst.id !330
DOALL:     	  br label %strsearch.exit, !noelle.pdg.inst.id !339
DOALL:     	  br label %._crit_edge7.i, !noelle.pdg.inst.id !341
DOALL:     	  br label %24, !noelle.pdg.inst.id !343
DOALL:     	  %48 = getelementptr [1 x i8], [1 x i8]* @.str.212, i64 0, i64 0, !noelle.pdg.inst.id !346
DOALL:     	  %49 = getelementptr [5 x i8], [5 x i8]* @.str.213, i64 0, i64 0, !noelle.pdg.inst.id !347
DOALL:     	  %51 = getelementptr [18 x i8], [18 x i8]* @.str.211, i64 0, i64 0, !noelle.pdg.inst.id !350
DOALL:     	  br label %._crit_edge, !noelle.pdg.inst.id !352
DOALL:     	  br label %._crit_edge, !noelle.pdg.inst.id !354
DOALL:     Edges: 208
DOALL:     Loop-carried data dependences
DOALL:         %29 = load i8, i8* %28, align 1, !tbaa !291, !noelle.pdg.inst.id !66 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
DOALL:         %29 = load i8, i8* %28, align 1, !tbaa !291, !noelle.pdg.inst.id !66 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
DOALL:         %29 = load i8, i8* %28, align 1, !tbaa !291, !noelle.pdg.inst.id !66 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
DOALL:         %32 = load i64, i64* %31, align 8, !tbaa !271, !noelle.pdg.inst.id !68 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
DOALL:         %32 = load i64, i64* %31, align 8, !tbaa !271, !noelle.pdg.inst.id !68 --->   store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50 via memory
DOALL:         %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
DOALL:         %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
DOALL:         %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
DOALL:         %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
DOALL:         %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
DOALL:         %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 --->   %16 = load i8, i8* %15, align 1, !tbaa !291, !noelle.pdg.inst.id !53 via memory
DOALL:         %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 --->   %29 = load i8, i8* %28, align 1, !tbaa !291, !noelle.pdg.inst.id !66 via memory
DOALL:         %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
DOALL:         %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
DOALL:         %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
DOALL:         %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50 via memory
DOALL:         %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50 via memory
DOALL:         %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   store i64 %7, i64* @len, align 8, !tbaa !271, !noelle.pdg.inst.id !47 via memory
DOALL:         %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   store i64 %7, i64* @len, align 8, !tbaa !271, !noelle.pdg.inst.id !47 via memory
DOALL:         %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
DOALL:         %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
DOALL:         %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   %16 = load i8, i8* %15, align 1, !tbaa !291, !noelle.pdg.inst.id !53 via memory
DOALL:         %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
DOALL:         %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
DOALL:         %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   store i8* %4, i8** @findme, align 8, !tbaa !252, !noelle.pdg.inst.id !58 via memory
DOALL:         %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   %29 = load i8, i8* %28, align 1, !tbaa !291, !noelle.pdg.inst.id !66 via memory
DOALL:         %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   store i8* %4, i8** @findme, align 8, !tbaa !252, !noelle.pdg.inst.id !58 via memory
DOALL:         %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
DOALL:         %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
DOALL:         %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
DOALL:         %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
DOALL:         %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
DOALL:         %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
DOALL:         %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
DOALL:         %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
DOALL:         %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
DOALL:         %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
DOALL:         %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
DOALL:         %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
DOALL:         %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
DOALL:         %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
DOALL:         %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
DOALL:         %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
DOALL:         %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
DOALL:         %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
DOALL:         %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
DOALL:         %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 --->   %16 = load i8, i8* %15, align 1, !tbaa !291, !noelle.pdg.inst.id !53 via memory
DOALL:         %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
DOALL:         %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 --->   %29 = load i8, i8* %28, align 1, !tbaa !291, !noelle.pdg.inst.id !66 via memory
DOALL:         %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
DOALL:         store i64 %7, i64* @len, align 8, !tbaa !271, !noelle.pdg.inst.id !47 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
DOALL:         store i64 %7, i64* @len, align 8, !tbaa !271, !noelle.pdg.inst.id !47 --->   store i64 %7, i64* @len, align 8, !tbaa !271, !noelle.pdg.inst.id !47 via memory
DOALL:         store i64 %7, i64* @len, align 8, !tbaa !271, !noelle.pdg.inst.id !47 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
DOALL:         store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
DOALL:         store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50 --->   store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50 via memory
DOALL:         store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
DOALL:         %16 = load i8, i8* %15, align 1, !tbaa !291, !noelle.pdg.inst.id !53 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
DOALL:         %16 = load i8, i8* %15, align 1, !tbaa !291, !noelle.pdg.inst.id !53 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
DOALL:         %16 = load i8, i8* %15, align 1, !tbaa !291, !noelle.pdg.inst.id !53 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
DOALL:         store i64 %14, i64* %18, align 8, !tbaa !271, !noelle.pdg.inst.id !55 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
DOALL:         store i64 %14, i64* %18, align 8, !tbaa !271, !noelle.pdg.inst.id !55 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
DOALL:         store i64 %14, i64* %18, align 8, !tbaa !271, !noelle.pdg.inst.id !55 --->   store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50 via memory
DOALL:         store i8* %4, i8** @findme, align 8, !tbaa !252, !noelle.pdg.inst.id !58 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
DOALL:         store i8* %4, i8** @findme, align 8, !tbaa !252, !noelle.pdg.inst.id !58 --->   store i8* %4, i8** @findme, align 8, !tbaa !252, !noelle.pdg.inst.id !58 via memory
DOALL:         store i8* %4, i8** @findme, align 8, !tbaa !252, !noelle.pdg.inst.id !58 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
DOALL:   We found an SCC of the loop that is non clonable and non commutative
DOALL:     Internal nodes: 1
DOALL:     	  %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44
DOALL:     External nodes: 12
DOALL:     	  %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33
DOALL:     	  %4 = load i8*, i8** %3, align 8, !tbaa !252, !noelle.pdg.inst.id !42
DOALL:     	  br i1 %5, label %57, label %6, !prof !267, !noelle.loop.id !268, !noelle.pdg.inst.id !269, !noelle.parallelizer.looporder !270
DOALL:     	  store i64 %7, i64* @len, align 8, !tbaa !271, !noelle.pdg.inst.id !47
DOALL:     	  store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50
DOALL:     	  %exitcond.i = icmp eq i64 %.1.i, %7, !noelle.pdg.inst.id !284
DOALL:     	  %14 = add i64 %7, %13, !noelle.pdg.inst.id !289
DOALL:     	  %22 = add i64 %7, -1, !noelle.pdg.inst.id !297
DOALL:     	  %40 = sub i64 %.13.i.lcssa, %7, !noelle.pdg.inst.id !331
DOALL:     	  %43 = tail call i32 @strncmp(i8* nonnull %4, i8* %42, i64 %7) #13, !noelle.pdg.inst.id !334
DOALL:     	  %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70
DOALL:     	  %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73
DOALL:     Edges: 12
DOALL:     Loop-carried data dependences
DOALL:         %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
DOALL:         %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
DOALL:         %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
DOALL:         %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
DOALL:         %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
DOALL:         %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
DOALL:   We found an SCC of the loop that is non clonable and non commutative
DOALL:     Internal nodes: 1
DOALL:     	  %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63
DOALL:     External nodes: 7
DOALL:     	  %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33
DOALL:     	  br i1 %5, label %57, label %6, !prof !267, !noelle.loop.id !268, !noelle.pdg.inst.id !269, !noelle.parallelizer.looporder !270
DOALL:     	  %21 = load i8*, i8** %20, align 8, !tbaa !252, !noelle.pdg.inst.id !61
DOALL:     	  %25 = icmp ult i64 %.02.i, %23, !noelle.pdg.inst.id !301
DOALL:     	  %26 = icmp ult i64 %.13.i, %23, !noelle.pdg.inst.id !309
DOALL:     	  %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70
DOALL:     	  %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73
DOALL:     Edges: 7
DOALL:     Loop-carried data dependences
DOALL:         %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
DOALL:         %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
DOALL:         %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
DOALL:         %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
DOALL:         %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
DOALL:         %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
HELIX:   Loop has 29 basic blocks:

57:                                               ; preds = %.preheader
  %58 = add nuw nsw i32 %.0, 1, !noelle.pdg.inst.id !357
  br label %2, !noelle.pdg.inst.id !358


35:                                               ; preds = %._crit_edge6.i
  %36 = add i64 %.13.i, %.2.i, !noelle.pdg.inst.id !323
  br label %.preheader.i3, !noelle.pdg.inst.id !324


._crit_edge:                                      ; preds = %strsearch.exit.._crit_edge_crit_edge, %53
  %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73
  %indvars.iv.next = add nuw i64 %indvars.iv, 1, !noelle.pdg.inst.id !355
  br label %.preheader, !noelle.pdg.inst.id !356


53:                                               ; preds = %strsearch.exit
  %54 = getelementptr [8 x i8], [8 x i8]* @.str.214, i64 0, i64 0, !noelle.pdg.inst.id !353
  %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70
  br label %._crit_edge, !noelle.pdg.inst.id !354


strsearch.exit.._crit_edge_crit_edge:             ; preds = %strsearch.exit
  br label %._crit_edge, !noelle.pdg.inst.id !352


strsearch.exit:                                   ; preds = %.strsearch.exit_crit_edge4, %.strsearch.exit_crit_edge
  %.0.i4 = phi i8* [ null, %.strsearch.exit_crit_edge ], [ %.lcssa, %.strsearch.exit_crit_edge4 ], !noelle.pdg.inst.id !344
  %47 = icmp ne i8* %.0.i4, null, !noelle.pdg.inst.id !345
  %48 = getelementptr [1 x i8], [1 x i8]* @.str.212, i64 0, i64 0, !noelle.pdg.inst.id !346
  %49 = getelementptr [5 x i8], [5 x i8]* @.str.213, i64 0, i64 0, !noelle.pdg.inst.id !347
  %50 = select i1 %47, i8* %48, i8* %49, !prof !348, !noelle.pdg.inst.id !349
  %51 = getelementptr [18 x i8], [18 x i8]* @.str.211, i64 0, i64 0, !noelle.pdg.inst.id !350
  %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33
  br i1 %47, label %53, label %strsearch.exit.._crit_edge_crit_edge, !prof !348, !noelle.pdg.inst.id !351


.strsearch.exit_crit_edge4:                       ; preds = %39
  %.lcssa = phi i8* [ %42, %39 ], !noelle.pdg.inst.id !338
  br label %strsearch.exit, !noelle.pdg.inst.id !339


._crit_edge7.i:                                   ; preds = %.._crit_edge7.i_crit_edge, %45
  %.24.i = phi i64 [ %46, %45 ], [ %.13.i.lcssa, %.._crit_edge7.i_crit_edge ], !noelle.pdg.inst.id !342
  br label %24, !noelle.pdg.inst.id !343


45:                                               ; preds = %39
  %46 = add i64 %.13.i.lcssa, 1, !noelle.pdg.inst.id !340
  br label %._crit_edge7.i, !noelle.pdg.inst.id !341


39:                                               ; preds = %37
  %40 = sub i64 %.13.i.lcssa, %7, !noelle.pdg.inst.id !331
  %41 = add i64 %40, 1, !noelle.pdg.inst.id !332
  %42 = getelementptr inbounds i8, i8* %21, i64 %41, !noelle.pdg.inst.id !333
  %43 = tail call i32 @strncmp(i8* nonnull %4, i8* %42, i64 %7) #13, !noelle.pdg.inst.id !334
  %44 = icmp eq i32 %43, 0, !noelle.pdg.inst.id !335
  br i1 %44, label %.strsearch.exit_crit_edge4, label %45, !prof !336, !noelle.pdg.inst.id !337


.._crit_edge7.i_crit_edge:                        ; preds = %37
  br label %._crit_edge7.i, !noelle.pdg.inst.id !330


37:                                               ; preds = %._crit_edge6.i
  %.2.i.lcssa = phi i64 [ %.2.i, %._crit_edge6.i ], !noelle.pdg.inst.id !325
  %.13.i.lcssa = phi i64 [ %.13.i, %._crit_edge6.i ], !noelle.pdg.inst.id !326
  %38 = icmp eq i64 %.2.i.lcssa, 0, !noelle.pdg.inst.id !327
  br i1 %38, label %39, label %.._crit_edge7.i_crit_edge, !prof !328, !noelle.pdg.inst.id !329


._crit_edge6.i:                                   ; preds = %.preheader.i3.._crit_edge6.i_crit_edge, %27
  %.2.i = phi i64 [ %32, %27 ], [ %.1.i2, %.preheader.i3.._crit_edge6.i_crit_edge ], !noelle.pdg.inst.id !319
  %34 = phi i1 [ %33, %27 ], [ false, %.preheader.i3.._crit_edge6.i_crit_edge ], !noelle.pdg.inst.id !320
  br i1 %34, label %35, label %37, !prof !321, !noelle.pdg.inst.id !322


9:                                                ; preds = %8
  %10 = getelementptr inbounds [256 x i64], [256 x i64]* @table, i64 0, i64 %.0.i, !noelle.pdg.inst.id !280
  store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50
  %11 = add nuw nsw i64 %.0.i, 1, !noelle.pdg.inst.id !281
  br label %8, !noelle.pdg.inst.id !282


8:                                                ; preds = %9, %6
  %.0.i = phi i64 [ 0, %6 ], [ %11, %9 ], !noelle.pdg.inst.id !274
  %exitcond2.i = icmp eq i64 %.0.i, 256, !noelle.pdg.inst.id !275
  br i1 %exitcond2.i, label %.preheader.i.preheader, label %9, !prof !276, !noelle.loop.id !277, !noelle.pdg.inst.id !278


6:                                                ; preds = %.preheader
  %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44
  store i64 %7, i64* @len, align 8, !tbaa !271, !noelle.pdg.inst.id !47
  br label %8, !noelle.pdg.inst.id !273


.preheader:                                       ; preds = %.preheader.preheader, %._crit_edge
  %indvars.iv = phi i64 [ %indvars.iv.next, %._crit_edge ], [ 0, %.preheader.preheader ], !noelle.pdg.inst.id !264
  %3 = getelementptr inbounds [1333 x i8*], [1333 x i8*]* @__const.main.find_strings, i64 0, i64 %indvars.iv, !noelle.pdg.inst.id !265
  %4 = load i8*, i8** %3, align 8, !tbaa !252, !noelle.pdg.inst.id !42
  %5 = icmp eq i8* %4, null, !noelle.pdg.inst.id !266
  br i1 %5, label %57, label %6, !prof !267, !noelle.loop.id !268, !noelle.pdg.inst.id !269, !noelle.parallelizer.looporder !270


2:                                                ; preds = %57, %0
  %.0 = phi i32 [ 0, %0 ], [ %58, %57 ], !noelle.pdg.inst.id !257
  %exitcond = icmp eq i32 %.0, 50000, !noelle.pdg.inst.id !258
  br i1 %exitcond, label %59, label %.preheader.preheader, !prof !259, !noelle.loop.id !260, !noelle.pdg.inst.id !261, !noelle.parallelizer.looporder !262


.preheader.preheader:                             ; preds = %2
  br label %.preheader, !noelle.pdg.inst.id !263


.preheader.i.preheader:                           ; preds = %8
  br label %.preheader.i, !noelle.pdg.inst.id !279


.preheader.i:                                     ; preds = %.preheader.i.preheader, %12
  %.1.i = phi i64 [ %19, %12 ], [ 0, %.preheader.i.preheader ], !noelle.pdg.inst.id !283
  %exitcond.i = icmp eq i64 %.1.i, %7, !noelle.pdg.inst.id !284
  br i1 %exitcond.i, label %init_search.exit, label %12, !prof !285, !noelle.loop.id !286, !noelle.pdg.inst.id !287


12:                                               ; preds = %.preheader.i
  %13 = xor i64 %.1.i, -1, !noelle.pdg.inst.id !288
  %14 = add i64 %7, %13, !noelle.pdg.inst.id !289
  %15 = getelementptr inbounds i8, i8* %4, i64 %.1.i, !noelle.pdg.inst.id !290
  %16 = load i8, i8* %15, align 1, !tbaa !291, !noelle.pdg.inst.id !53
  %17 = zext i8 %16 to i64, !noelle.pdg.inst.id !292
  %18 = getelementptr inbounds [256 x i64], [256 x i64]* @table, i64 0, i64 %17, !noelle.pdg.inst.id !293
  store i64 %14, i64* %18, align 8, !tbaa !271, !noelle.pdg.inst.id !55
  %19 = add i64 %.1.i, 1, !noelle.pdg.inst.id !294
  br label %.preheader.i, !noelle.pdg.inst.id !295


init_search.exit:                                 ; preds = %.preheader.i
  store i8* %4, i8** @findme, align 8, !tbaa !252, !noelle.pdg.inst.id !58
  %20 = getelementptr inbounds [1332 x i8*], [1332 x i8*]* @__const.main.search_strings, i64 0, i64 %indvars.iv, !noelle.pdg.inst.id !296
  %21 = load i8*, i8** %20, align 8, !tbaa !252, !noelle.pdg.inst.id !61
  %22 = add i64 %7, -1, !noelle.pdg.inst.id !297
  %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63
  br label %24, !noelle.pdg.inst.id !298


24:                                               ; preds = %._crit_edge7.i, %init_search.exit
  %.02.i = phi i64 [ %22, %init_search.exit ], [ %.24.i, %._crit_edge7.i ], !noelle.pdg.inst.id !299
  %.01.i = phi i64 [ undef, %init_search.exit ], [ %.2.i.lcssa, %._crit_edge7.i ], !noelle.pdg.inst.id !300
  %25 = icmp ult i64 %.02.i, %23, !noelle.pdg.inst.id !301
  br i1 %25, label %.preheader.i3.preheader, label %.strsearch.exit_crit_edge, !prof !302, !noelle.loop.id !303, !noelle.pdg.inst.id !304


.strsearch.exit_crit_edge:                        ; preds = %24
  br label %strsearch.exit, !noelle.pdg.inst.id !305


.preheader.i3.preheader:                          ; preds = %24
  br label %.preheader.i3, !noelle.pdg.inst.id !306


.preheader.i3:                                    ; preds = %.preheader.i3.preheader, %35
  %.13.i = phi i64 [ %36, %35 ], [ %.02.i, %.preheader.i3.preheader ], !noelle.pdg.inst.id !307
  %.1.i2 = phi i64 [ %.2.i, %35 ], [ %.01.i, %.preheader.i3.preheader ], !noelle.pdg.inst.id !308
  %26 = icmp ult i64 %.13.i, %23, !noelle.pdg.inst.id !309
  br i1 %26, label %27, label %.preheader.i3.._crit_edge6.i_crit_edge, !prof !310, !noelle.loop.id !311, !noelle.pdg.inst.id !312


.preheader.i3.._crit_edge6.i_crit_edge:           ; preds = %.preheader.i3
  br label %._crit_edge6.i, !noelle.pdg.inst.id !313


27:                                               ; preds = %.preheader.i3
  %28 = getelementptr inbounds i8, i8* %21, i64 %.13.i, !noelle.pdg.inst.id !314
  %29 = load i8, i8* %28, align 1, !tbaa !291, !noelle.pdg.inst.id !66
  %30 = zext i8 %29 to i64, !noelle.pdg.inst.id !315
  %31 = getelementptr inbounds [256 x i64], [256 x i64]* @table, i64 0, i64 %30, !noelle.pdg.inst.id !316
  %32 = load i64, i64* %31, align 8, !tbaa !271, !noelle.pdg.inst.id !68
  %33 = icmp ne i64 %32, 0, !noelle.pdg.inst.id !317
  br label %._crit_edge6.i, !noelle.pdg.inst.id !318

HELIX:   There are 3 SCCs that have loop-carried dependences that cannot be broken
HELIX:     SCC:
HELIX:       Loop-carried dependences
HELIX:           %29 = load i8, i8* %28, align 1, !tbaa !291, !noelle.pdg.inst.id !66 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:           %29 = load i8, i8* %28, align 1, !tbaa !291, !noelle.pdg.inst.id !66 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
HELIX:           %29 = load i8, i8* %28, align 1, !tbaa !291, !noelle.pdg.inst.id !66 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
HELIX:           %32 = load i64, i64* %31, align 8, !tbaa !271, !noelle.pdg.inst.id !68 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:           %32 = load i64, i64* %31, align 8, !tbaa !271, !noelle.pdg.inst.id !68 --->   store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50 via memory
HELIX:           %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:           %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
HELIX:           %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
HELIX:           %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:           %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
HELIX:           %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 --->   %16 = load i8, i8* %15, align 1, !tbaa !291, !noelle.pdg.inst.id !53 via memory
HELIX:           %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 --->   %29 = load i8, i8* %28, align 1, !tbaa !291, !noelle.pdg.inst.id !66 via memory
HELIX:           %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
HELIX:           %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
HELIX:           %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:           %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50 via memory
HELIX:           %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50 via memory
HELIX:           %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   store i64 %7, i64* @len, align 8, !tbaa !271, !noelle.pdg.inst.id !47 via memory
HELIX:           %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   store i64 %7, i64* @len, align 8, !tbaa !271, !noelle.pdg.inst.id !47 via memory
HELIX:           %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
HELIX:           %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
HELIX:           %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   %16 = load i8, i8* %15, align 1, !tbaa !291, !noelle.pdg.inst.id !53 via memory
HELIX:           %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
HELIX:           %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:           %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   store i8* %4, i8** @findme, align 8, !tbaa !252, !noelle.pdg.inst.id !58 via memory
HELIX:           %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   %29 = load i8, i8* %28, align 1, !tbaa !291, !noelle.pdg.inst.id !66 via memory
HELIX:           %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   store i8* %4, i8** @findme, align 8, !tbaa !252, !noelle.pdg.inst.id !58 via memory
HELIX:           %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
HELIX:           %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:           %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
HELIX:           %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
HELIX:           %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
HELIX:           %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
HELIX:           %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:           %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:           %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
HELIX:           %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
HELIX:           %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:           %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:           %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
HELIX:           %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
HELIX:           %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:           %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:           %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
HELIX:           %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
HELIX:           %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
HELIX:           %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 --->   %16 = load i8, i8* %15, align 1, !tbaa !291, !noelle.pdg.inst.id !53 via memory
HELIX:           %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
HELIX:           %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 --->   %29 = load i8, i8* %28, align 1, !tbaa !291, !noelle.pdg.inst.id !66 via memory
HELIX:           %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
HELIX:           store i64 %7, i64* @len, align 8, !tbaa !271, !noelle.pdg.inst.id !47 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:           store i64 %7, i64* @len, align 8, !tbaa !271, !noelle.pdg.inst.id !47 --->   store i64 %7, i64* @len, align 8, !tbaa !271, !noelle.pdg.inst.id !47 via memory
HELIX:           store i64 %7, i64* @len, align 8, !tbaa !271, !noelle.pdg.inst.id !47 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:           store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:           store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50 --->   store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50 via memory
HELIX:           store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:           %16 = load i8, i8* %15, align 1, !tbaa !291, !noelle.pdg.inst.id !53 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:           %16 = load i8, i8* %15, align 1, !tbaa !291, !noelle.pdg.inst.id !53 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
HELIX:           %16 = load i8, i8* %15, align 1, !tbaa !291, !noelle.pdg.inst.id !53 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
HELIX:           store i64 %14, i64* %18, align 8, !tbaa !271, !noelle.pdg.inst.id !55 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:           store i64 %14, i64* %18, align 8, !tbaa !271, !noelle.pdg.inst.id !55 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:           store i64 %14, i64* %18, align 8, !tbaa !271, !noelle.pdg.inst.id !55 --->   store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50 via memory
HELIX:           store i8* %4, i8** @findme, align 8, !tbaa !252, !noelle.pdg.inst.id !58 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:           store i8* %4, i8** @findme, align 8, !tbaa !252, !noelle.pdg.inst.id !58 --->   store i8* %4, i8** @findme, align 8, !tbaa !252, !noelle.pdg.inst.id !58 via memory
HELIX:           store i8* %4, i8** @findme, align 8, !tbaa !252, !noelle.pdg.inst.id !58 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:       Nodes within the SCC: 46
HELIX:       	  %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33
HELIX:       	  store i64 %7, i64* @len, align 8, !tbaa !271, !noelle.pdg.inst.id !47
HELIX:       	  store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50
HELIX:       	  %16 = load i8, i8* %15, align 1, !tbaa !291, !noelle.pdg.inst.id !53
HELIX:       	  %17 = zext i8 %16 to i64, !noelle.pdg.inst.id !292
HELIX:       	  %18 = getelementptr inbounds [256 x i64], [256 x i64]* @table, i64 0, i64 %17, !noelle.pdg.inst.id !293
HELIX:       	  store i64 %14, i64* %18, align 8, !tbaa !271, !noelle.pdg.inst.id !55
HELIX:       	  store i8* %4, i8** @findme, align 8, !tbaa !252, !noelle.pdg.inst.id !58
HELIX:       	  %.02.i = phi i64 [ %22, %init_search.exit ], [ %.24.i, %._crit_edge7.i ], !noelle.pdg.inst.id !299
HELIX:       	  %.01.i = phi i64 [ undef, %init_search.exit ], [ %.2.i.lcssa, %._crit_edge7.i ], !noelle.pdg.inst.id !300
HELIX:       	  %25 = icmp ult i64 %.02.i, %23, !noelle.pdg.inst.id !301
HELIX:       	  br i1 %25, label %.preheader.i3.preheader, label %.strsearch.exit_crit_edge, !prof !302, !noelle.loop.id !303, !noelle.pdg.inst.id !304
HELIX:       	  %.13.i = phi i64 [ %36, %35 ], [ %.02.i, %.preheader.i3.preheader ], !noelle.pdg.inst.id !307
HELIX:       	  %.1.i2 = phi i64 [ %.2.i, %35 ], [ %.01.i, %.preheader.i3.preheader ], !noelle.pdg.inst.id !308
HELIX:       	  %26 = icmp ult i64 %.13.i, %23, !noelle.pdg.inst.id !309
HELIX:       	  br i1 %26, label %27, label %.preheader.i3.._crit_edge6.i_crit_edge, !prof !310, !noelle.loop.id !311, !noelle.pdg.inst.id !312
HELIX:       	  %28 = getelementptr inbounds i8, i8* %21, i64 %.13.i, !noelle.pdg.inst.id !314
HELIX:       	  %29 = load i8, i8* %28, align 1, !tbaa !291, !noelle.pdg.inst.id !66
HELIX:       	  %30 = zext i8 %29 to i64, !noelle.pdg.inst.id !315
HELIX:       	  %31 = getelementptr inbounds [256 x i64], [256 x i64]* @table, i64 0, i64 %30, !noelle.pdg.inst.id !316
HELIX:       	  %32 = load i64, i64* %31, align 8, !tbaa !271, !noelle.pdg.inst.id !68
HELIX:       	  %33 = icmp ne i64 %32, 0, !noelle.pdg.inst.id !317
HELIX:       	  %.2.i = phi i64 [ %32, %27 ], [ %.1.i2, %.preheader.i3.._crit_edge6.i_crit_edge ], !noelle.pdg.inst.id !319
HELIX:       	  %34 = phi i1 [ %33, %27 ], [ false, %.preheader.i3.._crit_edge6.i_crit_edge ], !noelle.pdg.inst.id !320
HELIX:       	  br i1 %34, label %35, label %37, !prof !321, !noelle.pdg.inst.id !322
HELIX:       	  %36 = add i64 %.13.i, %.2.i, !noelle.pdg.inst.id !323
HELIX:       	  %.2.i.lcssa = phi i64 [ %.2.i, %._crit_edge6.i ], !noelle.pdg.inst.id !325
HELIX:       	  %.13.i.lcssa = phi i64 [ %.13.i, %._crit_edge6.i ], !noelle.pdg.inst.id !326
HELIX:       	  %38 = icmp eq i64 %.2.i.lcssa, 0, !noelle.pdg.inst.id !327
HELIX:       	  br i1 %38, label %39, label %.._crit_edge7.i_crit_edge, !prof !328, !noelle.pdg.inst.id !329
HELIX:       	  %40 = sub i64 %.13.i.lcssa, %7, !noelle.pdg.inst.id !331
HELIX:       	  %41 = add i64 %40, 1, !noelle.pdg.inst.id !332
HELIX:       	  %42 = getelementptr inbounds i8, i8* %21, i64 %41, !noelle.pdg.inst.id !333
HELIX:       	  %43 = tail call i32 @strncmp(i8* nonnull %4, i8* %42, i64 %7) #13, !noelle.pdg.inst.id !334
HELIX:       	  %44 = icmp eq i32 %43, 0, !noelle.pdg.inst.id !335
HELIX:       	  br i1 %44, label %.strsearch.exit_crit_edge4, label %45, !prof !336, !noelle.pdg.inst.id !337
HELIX:       	  %.lcssa = phi i8* [ %42, %39 ], !noelle.pdg.inst.id !338
HELIX:       	  %46 = add i64 %.13.i.lcssa, 1, !noelle.pdg.inst.id !340
HELIX:       	  %.24.i = phi i64 [ %46, %45 ], [ %.13.i.lcssa, %.._crit_edge7.i_crit_edge ], !noelle.pdg.inst.id !342
HELIX:       	  %.0.i4 = phi i8* [ null, %.strsearch.exit_crit_edge ], [ %.lcssa, %.strsearch.exit_crit_edge4 ], !noelle.pdg.inst.id !344
HELIX:       	  %47 = icmp ne i8* %.0.i4, null, !noelle.pdg.inst.id !345
HELIX:       	  %50 = select i1 %47, i8* %48, i8* %49, !prof !348, !noelle.pdg.inst.id !349
HELIX:       	  br i1 %47, label %53, label %strsearch.exit.._crit_edge_crit_edge, !prof !348, !noelle.pdg.inst.id !351
HELIX:       	  %54 = getelementptr [8 x i8], [8 x i8]* @.str.214, i64 0, i64 0, !noelle.pdg.inst.id !353
HELIX:       	  %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70
HELIX:       	  %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73
HELIX:       Nodes outside the SCC and connected with at least one node within the SCC: 25
HELIX:       	  %4 = load i8*, i8** %3, align 8, !tbaa !252, !noelle.pdg.inst.id !42
HELIX:       	  br i1 %5, label %57, label %6, !prof !267, !noelle.loop.id !268, !noelle.pdg.inst.id !269, !noelle.parallelizer.looporder !270
HELIX:       	  %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44
HELIX:       	  br i1 %exitcond2.i, label %.preheader.i.preheader, label %9, !prof !276, !noelle.loop.id !277, !noelle.pdg.inst.id !278
HELIX:       	  %10 = getelementptr inbounds [256 x i64], [256 x i64]* @table, i64 0, i64 %.0.i, !noelle.pdg.inst.id !280
HELIX:       	  br i1 %exitcond.i, label %init_search.exit, label %12, !prof !285, !noelle.loop.id !286, !noelle.pdg.inst.id !287
HELIX:       	  %14 = add i64 %7, %13, !noelle.pdg.inst.id !289
HELIX:       	  %15 = getelementptr inbounds i8, i8* %4, i64 %.1.i, !noelle.pdg.inst.id !290
HELIX:       	  %21 = load i8*, i8** %20, align 8, !tbaa !252, !noelle.pdg.inst.id !61
HELIX:       	  %22 = add i64 %7, -1, !noelle.pdg.inst.id !297
HELIX:       	  %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63
HELIX:       	  br label %strsearch.exit, !noelle.pdg.inst.id !305
HELIX:       	  br label %.preheader.i3, !noelle.pdg.inst.id !306
HELIX:       	  br label %._crit_edge6.i, !noelle.pdg.inst.id !313
HELIX:       	  br label %._crit_edge6.i, !noelle.pdg.inst.id !318
HELIX:       	  br label %.preheader.i3, !noelle.pdg.inst.id !324
HELIX:       	  br label %._crit_edge7.i, !noelle.pdg.inst.id !330
HELIX:       	  br label %strsearch.exit, !noelle.pdg.inst.id !339
HELIX:       	  br label %._crit_edge7.i, !noelle.pdg.inst.id !341
HELIX:       	  br label %24, !noelle.pdg.inst.id !343
HELIX:       	  %48 = getelementptr [1 x i8], [1 x i8]* @.str.212, i64 0, i64 0, !noelle.pdg.inst.id !346
HELIX:       	  %49 = getelementptr [5 x i8], [5 x i8]* @.str.213, i64 0, i64 0, !noelle.pdg.inst.id !347
HELIX:       	  %51 = getelementptr [18 x i8], [18 x i8]* @.str.211, i64 0, i64 0, !noelle.pdg.inst.id !350
HELIX:       	  br label %._crit_edge, !noelle.pdg.inst.id !352
HELIX:       	  br label %._crit_edge, !noelle.pdg.inst.id !354
HELIX:       Edges: 208
HELIX:         From:	  %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33
HELIX:         To:	  %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33
HELIX:         Attributes: Loop-carried Data WAW (may) from memory 

HELIX:         From:	  %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33
HELIX:         To:	  %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33
HELIX:         Attributes: Loop-carried Data WAR (may) from memory 

HELIX:         From:	  %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33
HELIX:         To:	  %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33
HELIX:         Attributes: Loop-carried Data RAW (may) from memory 

HELIX:         From:	  %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33
HELIX:         To:	  %16 = load i8, i8* %15, align 1, !tbaa !291, !noelle.pdg.inst.id !53
HELIX:         Attributes: Loop-carried Data RAW (may) from memory 

HELIX:         From:	  %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33
HELIX:         To:	  %29 = load i8, i8* %28, align 1, !tbaa !291, !noelle.pdg.inst.id !66
HELIX:         Attributes: Loop-carried Data RAW (may) from memory 

HELIX:         From:	  %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33
HELIX:         To:	  %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70
HELIX:         Attributes: Loop-carried Data WAR (may) from memory 

HELIX:         From:	  %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33
HELIX:         To:	  %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70
HELIX:         Attributes: Loop-carried Data WAW (may) from memory 

HELIX:         From:	  %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33
HELIX:         To:	  %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73
HELIX:         Attributes: Loop-carried Data WAW (may) from memory 

HELIX:         From:	  %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33
HELIX:         To:	  %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73
HELIX:         Attributes: Loop-carried Data WAR (may) from memory 

HELIX:         From:	  %4 = load i8*, i8** %3, align 8, !tbaa !252, !noelle.pdg.inst.id !42
HELIX:         To:	  %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %4 = load i8*, i8** %3, align 8, !tbaa !252, !noelle.pdg.inst.id !42
HELIX:         To:	  store i8* %4, i8** @findme, align 8, !tbaa !252, !noelle.pdg.inst.id !58
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %4 = load i8*, i8** %3, align 8, !tbaa !252, !noelle.pdg.inst.id !42
HELIX:         To:	  %43 = tail call i32 @strncmp(i8* nonnull %4, i8* %42, i64 %7) #13, !noelle.pdg.inst.id !334
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  br i1 %5, label %57, label %6, !prof !267, !noelle.loop.id !268, !noelle.pdg.inst.id !269, !noelle.parallelizer.looporder !270
HELIX:         To:	  %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33
HELIX:         Attributes: Control 

HELIX:         From:	  br i1 %5, label %57, label %6, !prof !267, !noelle.loop.id !268, !noelle.pdg.inst.id !269, !noelle.parallelizer.looporder !270
HELIX:         To:	  store i64 %7, i64* @len, align 8, !tbaa !271, !noelle.pdg.inst.id !47
HELIX:         Attributes: Control 

HELIX:         From:	  br i1 %5, label %57, label %6, !prof !267, !noelle.loop.id !268, !noelle.pdg.inst.id !269, !noelle.parallelizer.looporder !270
HELIX:         To:	  store i8* %4, i8** @findme, align 8, !tbaa !252, !noelle.pdg.inst.id !58
HELIX:         Attributes: Control 

HELIX:         ....
HELIX:     SCC:
HELIX:       Loop-carried dependences
HELIX:           %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
HELIX:           %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
HELIX:           %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:           %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
HELIX:           %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
HELIX:           %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:       Nodes within the SCC: 1
HELIX:       	  %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44
HELIX:       Nodes outside the SCC and connected with at least one node within the SCC: 12
HELIX:       	  %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33
HELIX:       	  %4 = load i8*, i8** %3, align 8, !tbaa !252, !noelle.pdg.inst.id !42
HELIX:       	  br i1 %5, label %57, label %6, !prof !267, !noelle.loop.id !268, !noelle.pdg.inst.id !269, !noelle.parallelizer.looporder !270
HELIX:       	  store i64 %7, i64* @len, align 8, !tbaa !271, !noelle.pdg.inst.id !47
HELIX:       	  store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50
HELIX:       	  %exitcond.i = icmp eq i64 %.1.i, %7, !noelle.pdg.inst.id !284
HELIX:       	  %14 = add i64 %7, %13, !noelle.pdg.inst.id !289
HELIX:       	  %22 = add i64 %7, -1, !noelle.pdg.inst.id !297
HELIX:       	  %40 = sub i64 %.13.i.lcssa, %7, !noelle.pdg.inst.id !331
HELIX:       	  %43 = tail call i32 @strncmp(i8* nonnull %4, i8* %42, i64 %7) #13, !noelle.pdg.inst.id !334
HELIX:       	  %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70
HELIX:       	  %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73
HELIX:       Edges: 12
HELIX:         From:	  %4 = load i8*, i8** %3, align 8, !tbaa !252, !noelle.pdg.inst.id !42
HELIX:         To:	  %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  br i1 %5, label %57, label %6, !prof !267, !noelle.loop.id !268, !noelle.pdg.inst.id !269, !noelle.parallelizer.looporder !270
HELIX:         To:	  %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44
HELIX:         Attributes: Control 

HELIX:         From:	  %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44
HELIX:         To:	  %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33
HELIX:         Attributes: Loop-carried Data WAR (may) from memory 

HELIX:         From:	  %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44
HELIX:         To:	  store i64 %7, i64* @len, align 8, !tbaa !271, !noelle.pdg.inst.id !47
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44
HELIX:         To:	  store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44
HELIX:         To:	  %exitcond.i = icmp eq i64 %.1.i, %7, !noelle.pdg.inst.id !284
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44
HELIX:         To:	  %14 = add i64 %7, %13, !noelle.pdg.inst.id !289
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44
HELIX:         To:	  %22 = add i64 %7, -1, !noelle.pdg.inst.id !297
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44
HELIX:         To:	  %40 = sub i64 %.13.i.lcssa, %7, !noelle.pdg.inst.id !331
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44
HELIX:         To:	  %43 = tail call i32 @strncmp(i8* nonnull %4, i8* %42, i64 %7) #13, !noelle.pdg.inst.id !334
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44
HELIX:         To:	  %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70
HELIX:         Attributes: Loop-carried Data WAR (may) from memory 

HELIX:         From:	  %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44
HELIX:         To:	  %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73
HELIX:         Attributes: Loop-carried Data WAR (may) from memory 

HELIX:     SCC:
HELIX:       Loop-carried dependences
HELIX:           %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
HELIX:           %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
HELIX:           %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:           %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:           %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
HELIX:           %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
HELIX:       Nodes within the SCC: 1
HELIX:       	  %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63
HELIX:       Nodes outside the SCC and connected with at least one node within the SCC: 7
HELIX:       	  %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33
HELIX:       	  br i1 %5, label %57, label %6, !prof !267, !noelle.loop.id !268, !noelle.pdg.inst.id !269, !noelle.parallelizer.looporder !270
HELIX:       	  %21 = load i8*, i8** %20, align 8, !tbaa !252, !noelle.pdg.inst.id !61
HELIX:       	  %25 = icmp ult i64 %.02.i, %23, !noelle.pdg.inst.id !301
HELIX:       	  %26 = icmp ult i64 %.13.i, %23, !noelle.pdg.inst.id !309
HELIX:       	  %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70
HELIX:       	  %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73
HELIX:       Edges: 7
HELIX:         From:	  br i1 %5, label %57, label %6, !prof !267, !noelle.loop.id !268, !noelle.pdg.inst.id !269, !noelle.parallelizer.looporder !270
HELIX:         To:	  %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63
HELIX:         Attributes: Control 

HELIX:         From:	  %21 = load i8*, i8** %20, align 8, !tbaa !252, !noelle.pdg.inst.id !61
HELIX:         To:	  %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63
HELIX:         To:	  %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33
HELIX:         Attributes: Loop-carried Data WAR (may) from memory 

HELIX:         From:	  %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63
HELIX:         To:	  %25 = icmp ult i64 %.02.i, %23, !noelle.pdg.inst.id !301
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63
HELIX:         To:	  %26 = icmp ult i64 %.13.i, %23, !noelle.pdg.inst.id !309
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63
HELIX:         To:	  %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70
HELIX:         Attributes: Loop-carried Data WAR (may) from memory 

HELIX:         From:	  %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63
HELIX:         To:	  %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73
HELIX:         Attributes: Loop-carried Data WAR (may) from memory 

HELIX:   Next are all loop-carried dependences of the loop
HELIX:       %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
HELIX:       %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
HELIX:       %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
HELIX:       %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 --->   %16 = load i8, i8* %15, align 1, !tbaa !291, !noelle.pdg.inst.id !53 via memory
HELIX:       %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 --->   %29 = load i8, i8* %28, align 1, !tbaa !291, !noelle.pdg.inst.id !66 via memory
HELIX:       %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
HELIX:       %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
HELIX:       %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:       %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:       br i1 %exitcond, label %59, label %.preheader.preheader, !prof !259, !noelle.loop.id !260, !noelle.pdg.inst.id !261, !noelle.parallelizer.looporder !262 --->   %.0 = phi i32 [ 0, %0 ], [ %58, %57 ], !noelle.pdg.inst.id !257 control
HELIX:       br i1 %exitcond, label %59, label %.preheader.preheader, !prof !259, !noelle.loop.id !260, !noelle.pdg.inst.id !261, !noelle.parallelizer.looporder !262 --->   br i1 %exitcond, label %59, label %.preheader.preheader, !prof !259, !noelle.loop.id !260, !noelle.pdg.inst.id !261, !noelle.parallelizer.looporder !262 control
HELIX:       br i1 %exitcond, label %59, label %.preheader.preheader, !prof !259, !noelle.loop.id !260, !noelle.pdg.inst.id !261, !noelle.parallelizer.looporder !262 --->   %exitcond = icmp eq i32 %.0, 50000, !noelle.pdg.inst.id !258 control
HELIX:       %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
HELIX:       %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
HELIX:       %7 = tail call i64 @strlen(i8* nonnull %4) #13, !noelle.pdg.inst.id !44 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:       store i64 %7, i64* @len, align 8, !tbaa !271, !noelle.pdg.inst.id !47 --->   store i64 %7, i64* @len, align 8, !tbaa !271, !noelle.pdg.inst.id !47 via memory
HELIX:       store i64 %7, i64* @len, align 8, !tbaa !271, !noelle.pdg.inst.id !47 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:       store i64 %7, i64* @len, align 8, !tbaa !271, !noelle.pdg.inst.id !47 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:       store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50 --->   store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50 via memory
HELIX:       store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:       store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:       %16 = load i8, i8* %15, align 1, !tbaa !291, !noelle.pdg.inst.id !53 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
HELIX:       %16 = load i8, i8* %15, align 1, !tbaa !291, !noelle.pdg.inst.id !53 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
HELIX:       %16 = load i8, i8* %15, align 1, !tbaa !291, !noelle.pdg.inst.id !53 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:       store i64 %14, i64* %18, align 8, !tbaa !271, !noelle.pdg.inst.id !55 --->   store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50 via memory
HELIX:       store i64 %14, i64* %18, align 8, !tbaa !271, !noelle.pdg.inst.id !55 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:       store i64 %14, i64* %18, align 8, !tbaa !271, !noelle.pdg.inst.id !55 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:       store i8* %4, i8** @findme, align 8, !tbaa !252, !noelle.pdg.inst.id !58 --->   store i8* %4, i8** @findme, align 8, !tbaa !252, !noelle.pdg.inst.id !58 via memory
HELIX:       store i8* %4, i8** @findme, align 8, !tbaa !252, !noelle.pdg.inst.id !58 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:       store i8* %4, i8** @findme, align 8, !tbaa !252, !noelle.pdg.inst.id !58 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:       %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
HELIX:       %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
HELIX:       %23 = tail call i64 @strlen(i8* %21) #13, !noelle.pdg.inst.id !63 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:       %29 = load i8, i8* %28, align 1, !tbaa !291, !noelle.pdg.inst.id !66 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
HELIX:       %29 = load i8, i8* %28, align 1, !tbaa !291, !noelle.pdg.inst.id !66 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
HELIX:       %29 = load i8, i8* %28, align 1, !tbaa !291, !noelle.pdg.inst.id !66 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:       %32 = load i64, i64* %31, align 8, !tbaa !271, !noelle.pdg.inst.id !68 --->   store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50 via memory
HELIX:       %32 = load i64, i64* %31, align 8, !tbaa !271, !noelle.pdg.inst.id !68 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:       %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
HELIX:       %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
HELIX:       %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 --->   %16 = load i8, i8* %15, align 1, !tbaa !291, !noelle.pdg.inst.id !53 via memory
HELIX:       %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 --->   %29 = load i8, i8* %28, align 1, !tbaa !291, !noelle.pdg.inst.id !66 via memory
HELIX:       %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
HELIX:       %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
HELIX:       %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
HELIX:       %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:       %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:       %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
HELIX:       %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %4, i8* %50, i8* %21) #14, !noelle.pdg.inst.id !33 via memory
HELIX:       %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   store i64 %7, i64* @len, align 8, !tbaa !271, !noelle.pdg.inst.id !47 via memory
HELIX:       %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   store i64 %7, i64* @len, align 8, !tbaa !271, !noelle.pdg.inst.id !47 via memory
HELIX:       %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50 via memory
HELIX:       %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   store i64 %7, i64* %10, align 8, !tbaa !271, !noelle.pdg.inst.id !50 via memory
HELIX:       %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   %16 = load i8, i8* %15, align 1, !tbaa !291, !noelle.pdg.inst.id !53 via memory
HELIX:       %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   store i8* %4, i8** @findme, align 8, !tbaa !252, !noelle.pdg.inst.id !58 via memory
HELIX:       %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   store i8* %4, i8** @findme, align 8, !tbaa !252, !noelle.pdg.inst.id !58 via memory
HELIX:       %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   %29 = load i8, i8* %28, align 1, !tbaa !291, !noelle.pdg.inst.id !66 via memory
HELIX:       %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
HELIX:       %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   %55 = tail call i32 (i8*, ...) @printf(i8* %54, i8* nonnull %.0.i4) #14, !noelle.pdg.inst.id !70 via memory
HELIX:       %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:       %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:       %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 --->   %56 = tail call i32 @putc(i32 10, %struct._IO_FILE* %1) #14, !noelle.pdg.inst.id !73 via memory
HELIX:       %58 = add nuw nsw i32 %.0, 1, !noelle.pdg.inst.id !357 --->   %.0 = phi i32 [ 0, %0 ], [ %58, %57 ], !noelle.pdg.inst.id !257 via variable
HELIX: Start the parallelization
HELIX:   Initialize the environment of the loop
HELIX:   Cloning loop in task
HELIX:   Check if we need to spill variables because they are part of loop carried data dependencies
HELIX:   Adjusting loop IVs
HELIX:  Constructing task dependence graph
HELIX:  Constructing task loop dependence info
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
HELIX:   Loop has 29 basic blocks:

19:                                               ; preds = %67
  %20 = add nuw nsw i32 %73, 1, !noelle.pdg.inst.id !30
  %21 = add i32 %20, %16
  br label %72, !noelle.pdg.inst.id !31


22:                                               ; preds = %56
  %23 = add i64 %100, %57, !noelle.pdg.inst.id !32
  br label %99, !noelle.pdg.inst.id !33


27:                                               ; preds = %31
  %28 = getelementptr [8 x i8], [8 x i8]* @.str.214, i64 0, i64 0, !noelle.pdg.inst.id !37
  %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
  br label %24, !noelle.pdg.inst.id !39


43:                                               ; preds = %45
  %44 = add i64 %54, 1, !noelle.pdg.inst.id !54
  br label %41, !noelle.pdg.inst.id !55


45:                                               ; preds = %52
  %46 = sub i64 %54, %66, !noelle.pdg.inst.id !56
  %47 = add i64 %46, 1, !noelle.pdg.inst.id !57
  %48 = getelementptr inbounds i8, i8* %90, i64 %47, !noelle.pdg.inst.id !58
  %49 = tail call i32 @strncmp(i8* nonnull %70, i8* %48, i64 %66) #14, !noelle.pdg.inst.id !59
  %50 = icmp eq i32 %49, 0, !noelle.pdg.inst.id !60
  br i1 %50, label %39, label %43, !prof !61, !noelle.pdg.inst.id !62


56:                                               ; preds = %103, %104
  %57 = phi i64 [ %109, %104 ], [ %101, %103 ], !noelle.pdg.inst.id !69
  %58 = phi i1 [ %110, %104 ], [ false, %103 ], !noelle.pdg.inst.id !70
  br i1 %58, label %22, label %52, !prof !71, !noelle.pdg.inst.id !72


65:                                               ; preds = %67
  %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86
  store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87
  br label %62, !noelle.pdg.inst.id !88


24:                                               ; preds = %27, %30
  %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
  %26 = add nuw i64 %68, 1, !noelle.pdg.inst.id !35
  br label %67, !noelle.pdg.inst.id !36


67:                                               ; preds = %24, %75
  %68 = phi i64 [ %26, %24 ], [ 0, %75 ], !noelle.pdg.inst.id !89
  %69 = getelementptr inbounds [1333 x i8*], [1333 x i8*]* @__const.main.find_strings, i64 0, i64 %68, !noelle.pdg.inst.id !90
  %70 = load i8*, i8** %69, align 8, !tbaa !91, !noelle.pdg.inst.id !93
  %71 = icmp eq i8* %70, null, !noelle.pdg.inst.id !94
  br i1 %71, label %19, label %65, !prof !95, !noelle.loop.id !96, !noelle.pdg.inst.id !97, !noelle.parallelizer.looporder !98


62:                                               ; preds = %65, %59
  %63 = phi i64 [ 0, %65 ], [ %61, %59 ], !noelle.pdg.inst.id !81
  %64 = icmp eq i64 %63, 256, !noelle.pdg.inst.id !82
  br i1 %64, label %76, label %59, !prof !83, !noelle.loop.id !84, !noelle.pdg.inst.id !85


72:                                               ; preds = %7, %19
  %73 = phi i32 [ %13, %7 ], [ %21, %19 ], !noelle.pdg.inst.id !99
  %74 = icmp sge i32 %73, 50000, !noelle.pdg.inst.id !100
  br i1 %74, label %check_if_last_iteration_is_missing, label %75, !prof !101, !noelle.loop.id !102, !noelle.pdg.inst.id !103, !noelle.parallelizer.looporder !104


59:                                               ; preds = %62
  %60 = getelementptr inbounds [256 x i64], [256 x i64]* @table, i64 0, i64 %63, !noelle.pdg.inst.id !73
  store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78
  %61 = add nuw nsw i64 %63, 1, !noelle.pdg.inst.id !79
  br label %62, !noelle.pdg.inst.id !80


75:                                               ; preds = %72
  br label %67, !noelle.pdg.inst.id !105


76:                                               ; preds = %62
  br label %77, !noelle.pdg.inst.id !106


77:                                               ; preds = %76, %80
  %78 = phi i64 [ %87, %80 ], [ 0, %76 ], !noelle.pdg.inst.id !107
  %79 = icmp eq i64 %78, %66, !noelle.pdg.inst.id !108
  br i1 %79, label %88, label %80, !prof !109, !noelle.loop.id !110, !noelle.pdg.inst.id !111


31:                                               ; preds = %97, %39
  %32 = phi i8* [ null, %97 ], [ %40, %39 ], !noelle.pdg.inst.id !41
  %33 = icmp ne i8* %32, null, !noelle.pdg.inst.id !42
  %34 = getelementptr [1 x i8], [1 x i8]* @.str.212, i64 0, i64 0, !noelle.pdg.inst.id !43
  %35 = getelementptr [5 x i8], [5 x i8]* @.str.213, i64 0, i64 0, !noelle.pdg.inst.id !44
  %36 = select i1 %33, i8* %34, i8* %35, !prof !45, !noelle.pdg.inst.id !46
  %37 = getelementptr [18 x i8], [18 x i8]* @.str.211, i64 0, i64 0, !noelle.pdg.inst.id !47
  %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
  br i1 %33, label %27, label %30, !prof !45, !noelle.pdg.inst.id !49


93:                                               ; preds = %88, %41
  %94 = phi i64 [ %91, %88 ], [ %42, %41 ], !noelle.pdg.inst.id !128
  %95 = phi i64 [ undef, %88 ], [ %53, %41 ], !noelle.pdg.inst.id !129
  %96 = icmp ult i64 %94, %92, !noelle.pdg.inst.id !130
  br i1 %96, label %98, label %97, !prof !131, !noelle.loop.id !132, !noelle.pdg.inst.id !133


80:                                               ; preds = %77
  %81 = xor i64 %78, -1, !noelle.pdg.inst.id !112
  %82 = add i64 %66, %81, !noelle.pdg.inst.id !113
  %83 = getelementptr inbounds i8, i8* %70, i64 %78, !noelle.pdg.inst.id !114
  %84 = load i8, i8* %83, align 1, !tbaa !115, !noelle.pdg.inst.id !116
  %85 = zext i8 %84 to i64, !noelle.pdg.inst.id !117
  %86 = getelementptr inbounds [256 x i64], [256 x i64]* @table, i64 0, i64 %85, !noelle.pdg.inst.id !118
  store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119
  %87 = add i64 %78, 1, !noelle.pdg.inst.id !120
  br label %77, !noelle.pdg.inst.id !121


88:                                               ; preds = %77
  store i8* %70, i8** @findme, align 8, !tbaa !91, !noelle.pdg.inst.id !122
  %89 = getelementptr inbounds [1332 x i8*], [1332 x i8*]* @__const.main.search_strings, i64 0, i64 %68, !noelle.pdg.inst.id !123
  %90 = load i8*, i8** %89, align 8, !tbaa !91, !noelle.pdg.inst.id !124
  %91 = add i64 %66, -1, !noelle.pdg.inst.id !125
  %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126
  br label %93, !noelle.pdg.inst.id !127


97:                                               ; preds = %93
  br label %31, !noelle.pdg.inst.id !134


41:                                               ; preds = %43, %51
  %42 = phi i64 [ %44, %43 ], [ %54, %51 ], !noelle.pdg.inst.id !52
  br label %93, !noelle.pdg.inst.id !53


98:                                               ; preds = %93
  br label %99, !noelle.pdg.inst.id !135


30:                                               ; preds = %31
  br label %24, !noelle.pdg.inst.id !40


99:                                               ; preds = %22, %98
  %100 = phi i64 [ %23, %22 ], [ %94, %98 ], !noelle.pdg.inst.id !136
  %101 = phi i64 [ %57, %22 ], [ %95, %98 ], !noelle.pdg.inst.id !137
  %102 = icmp ult i64 %100, %92, !noelle.pdg.inst.id !138
  br i1 %102, label %104, label %103, !prof !139, !noelle.loop.id !140, !noelle.pdg.inst.id !141


39:                                               ; preds = %45
  %40 = phi i8* [ %48, %45 ], !noelle.pdg.inst.id !50
  br label %31, !noelle.pdg.inst.id !51


51:                                               ; preds = %52
  br label %41, !noelle.pdg.inst.id !63


103:                                              ; preds = %99
  br label %56, !noelle.pdg.inst.id !142


52:                                               ; preds = %56
  %53 = phi i64 [ %57, %56 ], !noelle.pdg.inst.id !64
  %54 = phi i64 [ %100, %56 ], !noelle.pdg.inst.id !65
  %55 = icmp eq i64 %53, 0, !noelle.pdg.inst.id !66
  br i1 %55, label %45, label %51, !prof !67, !noelle.pdg.inst.id !68


104:                                              ; preds = %99
  %105 = getelementptr inbounds i8, i8* %90, i64 %100, !noelle.pdg.inst.id !143
  %106 = load i8, i8* %105, align 1, !tbaa !115, !noelle.pdg.inst.id !144
  %107 = zext i8 %106 to i64, !noelle.pdg.inst.id !145
  %108 = getelementptr inbounds [256 x i64], [256 x i64]* @table, i64 0, i64 %107, !noelle.pdg.inst.id !146
  %109 = load i64, i64* %108, align 8, !tbaa !74, !noelle.pdg.inst.id !147
  %110 = icmp ne i64 %109, 0, !noelle.pdg.inst.id !148
  br label %56, !noelle.pdg.inst.id !149

HELIX:   There are 4 SCCs that have loop-carried dependences that cannot be broken
HELIX:     SCC:
HELIX:       Loop-carried dependences
HELIX:           %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 --->   %84 = load i8, i8* %83, align 1, !tbaa !115, !noelle.pdg.inst.id !116 via memory
HELIX:           %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 --->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 via memory
HELIX:           %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 --->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 via memory
HELIX:           %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:           %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 --->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 via memory
HELIX:           %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:           %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 --->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 via memory
HELIX:           %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 --->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 via memory
HELIX:           %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 --->   %106 = load i8, i8* %105, align 1, !tbaa !115, !noelle.pdg.inst.id !144 via memory
HELIX:           store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87 --->   store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87 via memory
HELIX:           store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:           store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:           %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   store i8* %70, i8** @findme, align 8, !tbaa !91, !noelle.pdg.inst.id !122 via memory
HELIX:           %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   store i8* %70, i8** @findme, align 8, !tbaa !91, !noelle.pdg.inst.id !122 via memory
HELIX:           %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   %109 = load i64, i64* %108, align 8, !tbaa !74, !noelle.pdg.inst.id !147 via memory
HELIX:           %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 via memory
HELIX:           %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119 via memory
HELIX:           %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 via memory
HELIX:           %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:           %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:           %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:           %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   %106 = load i8, i8* %105, align 1, !tbaa !115, !noelle.pdg.inst.id !144 via memory
HELIX:           %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87 via memory
HELIX:           %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 via memory
HELIX:           %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   %84 = load i8, i8* %83, align 1, !tbaa !115, !noelle.pdg.inst.id !116 via memory
HELIX:           %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78 via memory
HELIX:           %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119 via memory
HELIX:           %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 via memory
HELIX:           %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87 via memory
HELIX:           %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78 via memory
HELIX:           store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78 --->   store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78 via memory
HELIX:           store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:           store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:           %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 --->   %84 = load i8, i8* %83, align 1, !tbaa !115, !noelle.pdg.inst.id !116 via memory
HELIX:           %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 --->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 via memory
HELIX:           %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:           %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 --->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 via memory
HELIX:           %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 --->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 via memory
HELIX:           %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:           %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 --->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 via memory
HELIX:           %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 --->   %106 = load i8, i8* %105, align 1, !tbaa !115, !noelle.pdg.inst.id !144 via memory
HELIX:           %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 --->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 via memory
HELIX:           %84 = load i8, i8* %83, align 1, !tbaa !115, !noelle.pdg.inst.id !116 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:           %84 = load i8, i8* %83, align 1, !tbaa !115, !noelle.pdg.inst.id !116 --->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 via memory
HELIX:           %84 = load i8, i8* %83, align 1, !tbaa !115, !noelle.pdg.inst.id !116 --->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 via memory
HELIX:           store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119 --->   store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119 via memory
HELIX:           store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119 --->   %109 = load i64, i64* %108, align 8, !tbaa !74, !noelle.pdg.inst.id !147 via memory
HELIX:           store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:           store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119 --->   store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78 via memory
HELIX:           store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:           store i8* %70, i8** @findme, align 8, !tbaa !91, !noelle.pdg.inst.id !122 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:           store i8* %70, i8** @findme, align 8, !tbaa !91, !noelle.pdg.inst.id !122 --->   store i8* %70, i8** @findme, align 8, !tbaa !91, !noelle.pdg.inst.id !122 via memory
HELIX:           store i8* %70, i8** @findme, align 8, !tbaa !91, !noelle.pdg.inst.id !122 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:           %106 = load i8, i8* %105, align 1, !tbaa !115, !noelle.pdg.inst.id !144 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:           %106 = load i8, i8* %105, align 1, !tbaa !115, !noelle.pdg.inst.id !144 --->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 via memory
HELIX:           %106 = load i8, i8* %105, align 1, !tbaa !115, !noelle.pdg.inst.id !144 --->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 via memory
HELIX:           %109 = load i64, i64* %108, align 8, !tbaa !74, !noelle.pdg.inst.id !147 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:           %109 = load i64, i64* %108, align 8, !tbaa !74, !noelle.pdg.inst.id !147 --->   store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119 via memory
HELIX:           %109 = load i64, i64* %108, align 8, !tbaa !74, !noelle.pdg.inst.id !147 --->   store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78 via memory
HELIX:           %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 --->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 via memory
HELIX:           %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126 --->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 via memory
HELIX:           %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:           %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:           %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 --->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 via memory
HELIX:           %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126 --->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 via memory
HELIX:           %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 --->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 via memory
HELIX:           %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:           %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 --->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 via memory
HELIX:           %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:           %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126 --->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 via memory
HELIX:           %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126 --->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 via memory
HELIX:       Nodes within the SCC: 46
HELIX:       	  %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:       	  store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87
HELIX:       	  %28 = getelementptr [8 x i8], [8 x i8]* @.str.214, i64 0, i64 0, !noelle.pdg.inst.id !37
HELIX:       	  %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:       	  store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78
HELIX:       	  %48 = getelementptr inbounds i8, i8* %90, i64 %47, !noelle.pdg.inst.id !58
HELIX:       	  br i1 %50, label %39, label %43, !prof !61, !noelle.pdg.inst.id !62
HELIX:       	  %23 = add i64 %100, %57, !noelle.pdg.inst.id !32
HELIX:       	  br i1 %33, label %27, label %30, !prof !45, !noelle.pdg.inst.id !49
HELIX:       	  %32 = phi i8* [ null, %97 ], [ %40, %39 ], !noelle.pdg.inst.id !41
HELIX:       	  %33 = icmp ne i8* %32, null, !noelle.pdg.inst.id !42
HELIX:       	  %36 = select i1 %33, i8* %34, i8* %35, !prof !45, !noelle.pdg.inst.id !46
HELIX:       	  %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:       	  %40 = phi i8* [ %48, %45 ], !noelle.pdg.inst.id !50
HELIX:       	  %42 = phi i64 [ %44, %43 ], [ %54, %51 ], !noelle.pdg.inst.id !52
HELIX:       	  %44 = add i64 %54, 1, !noelle.pdg.inst.id !54
HELIX:       	  %46 = sub i64 %54, %66, !noelle.pdg.inst.id !56
HELIX:       	  %47 = add i64 %46, 1, !noelle.pdg.inst.id !57
HELIX:       	  %49 = tail call i32 @strncmp(i8* nonnull %70, i8* %48, i64 %66) #14, !noelle.pdg.inst.id !59
HELIX:       	  %50 = icmp eq i32 %49, 0, !noelle.pdg.inst.id !60
HELIX:       	  %53 = phi i64 [ %57, %56 ], !noelle.pdg.inst.id !64
HELIX:       	  %54 = phi i64 [ %100, %56 ], !noelle.pdg.inst.id !65
HELIX:       	  %55 = icmp eq i64 %53, 0, !noelle.pdg.inst.id !66
HELIX:       	  br i1 %55, label %45, label %51, !prof !67, !noelle.pdg.inst.id !68
HELIX:       	  %57 = phi i64 [ %109, %104 ], [ %101, %103 ], !noelle.pdg.inst.id !69
HELIX:       	  %58 = phi i1 [ %110, %104 ], [ false, %103 ], !noelle.pdg.inst.id !70
HELIX:       	  br i1 %58, label %22, label %52, !prof !71, !noelle.pdg.inst.id !72
HELIX:       	  %84 = load i8, i8* %83, align 1, !tbaa !115, !noelle.pdg.inst.id !116
HELIX:       	  %85 = zext i8 %84 to i64, !noelle.pdg.inst.id !117
HELIX:       	  %86 = getelementptr inbounds [256 x i64], [256 x i64]* @table, i64 0, i64 %85, !noelle.pdg.inst.id !118
HELIX:       	  store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119
HELIX:       	  store i8* %70, i8** @findme, align 8, !tbaa !91, !noelle.pdg.inst.id !122
HELIX:       	  %94 = phi i64 [ %91, %88 ], [ %42, %41 ], !noelle.pdg.inst.id !128
HELIX:       	  %95 = phi i64 [ undef, %88 ], [ %53, %41 ], !noelle.pdg.inst.id !129
HELIX:       	  %96 = icmp ult i64 %94, %92, !noelle.pdg.inst.id !130
HELIX:       	  br i1 %96, label %98, label %97, !prof !131, !noelle.loop.id !132, !noelle.pdg.inst.id !133
HELIX:       	  %100 = phi i64 [ %23, %22 ], [ %94, %98 ], !noelle.pdg.inst.id !136
HELIX:       	  %101 = phi i64 [ %57, %22 ], [ %95, %98 ], !noelle.pdg.inst.id !137
HELIX:       	  %102 = icmp ult i64 %100, %92, !noelle.pdg.inst.id !138
HELIX:       	  br i1 %102, label %104, label %103, !prof !139, !noelle.loop.id !140, !noelle.pdg.inst.id !141
HELIX:       	  %105 = getelementptr inbounds i8, i8* %90, i64 %100, !noelle.pdg.inst.id !143
HELIX:       	  %106 = load i8, i8* %105, align 1, !tbaa !115, !noelle.pdg.inst.id !144
HELIX:       	  %107 = zext i8 %106 to i64, !noelle.pdg.inst.id !145
HELIX:       	  %108 = getelementptr inbounds [256 x i64], [256 x i64]* @table, i64 0, i64 %107, !noelle.pdg.inst.id !146
HELIX:       	  %109 = load i64, i64* %108, align 8, !tbaa !74, !noelle.pdg.inst.id !147
HELIX:       	  %110 = icmp ne i64 %109, 0, !noelle.pdg.inst.id !148
HELIX:       Nodes outside the SCC and connected with at least one node within the SCC: 25
HELIX:       	  %60 = getelementptr inbounds [256 x i64], [256 x i64]* @table, i64 0, i64 %63, !noelle.pdg.inst.id !73
HELIX:       	  %34 = getelementptr [1 x i8], [1 x i8]* @.str.212, i64 0, i64 0, !noelle.pdg.inst.id !43
HELIX:       	  %35 = getelementptr [5 x i8], [5 x i8]* @.str.213, i64 0, i64 0, !noelle.pdg.inst.id !44
HELIX:       	  %37 = getelementptr [18 x i8], [18 x i8]* @.str.211, i64 0, i64 0, !noelle.pdg.inst.id !47
HELIX:       	  %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86
HELIX:       	  br label %99, !noelle.pdg.inst.id !33
HELIX:       	  br label %24, !noelle.pdg.inst.id !39
HELIX:       	  br i1 %64, label %76, label %59, !prof !83, !noelle.loop.id !84, !noelle.pdg.inst.id !85
HELIX:       	  br label %24, !noelle.pdg.inst.id !40
HELIX:       	  br label %31, !noelle.pdg.inst.id !51
HELIX:       	  br label %93, !noelle.pdg.inst.id !53
HELIX:       	  br label %41, !noelle.pdg.inst.id !55
HELIX:       	  br label %41, !noelle.pdg.inst.id !63
HELIX:       	  %70 = load i8*, i8** %69, align 8, !tbaa !91, !noelle.pdg.inst.id !93
HELIX:       	  br i1 %71, label %19, label %65, !prof !95, !noelle.loop.id !96, !noelle.pdg.inst.id !97, !noelle.parallelizer.looporder !98
HELIX:       	  br i1 %79, label %88, label %80, !prof !109, !noelle.loop.id !110, !noelle.pdg.inst.id !111
HELIX:       	  %82 = add i64 %66, %81, !noelle.pdg.inst.id !113
HELIX:       	  %83 = getelementptr inbounds i8, i8* %70, i64 %78, !noelle.pdg.inst.id !114
HELIX:       	  %90 = load i8*, i8** %89, align 8, !tbaa !91, !noelle.pdg.inst.id !124
HELIX:       	  %91 = add i64 %66, -1, !noelle.pdg.inst.id !125
HELIX:       	  %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126
HELIX:       	  br label %31, !noelle.pdg.inst.id !134
HELIX:       	  br label %99, !noelle.pdg.inst.id !135
HELIX:       	  br label %56, !noelle.pdg.inst.id !142
HELIX:       	  br label %56, !noelle.pdg.inst.id !149
HELIX:       Edges: 204
HELIX:         From:	  %60 = getelementptr inbounds [256 x i64], [256 x i64]* @table, i64 0, i64 %63, !noelle.pdg.inst.id !73
HELIX:         To:	  store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:         To:	  %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:         Attributes: Loop-carried Data RAW (may) from memory 

HELIX:         From:	  %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:         To:	  %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:         Attributes: Loop-carried Data WAW (may) from memory 

HELIX:         From:	  %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:         To:	  %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:         Attributes: Loop-carried Data WAR (may) from memory 

HELIX:         From:	  %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:         To:	  %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:         Attributes: Loop-carried Data WAW (may) from memory 

HELIX:         From:	  %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:         To:	  %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:         Attributes: Loop-carried Data WAR (may) from memory 

HELIX:         From:	  %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:         To:	  %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:         Attributes: Loop-carried Data WAR (may) from memory 

HELIX:         From:	  %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:         To:	  %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:         Attributes: Loop-carried Data WAW (may) from memory 

HELIX:         From:	  %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:         To:	  %84 = load i8, i8* %83, align 1, !tbaa !115, !noelle.pdg.inst.id !116
HELIX:         Attributes: Loop-carried Data RAW (may) from memory 

HELIX:         From:	  %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:         To:	  %106 = load i8, i8* %105, align 1, !tbaa !115, !noelle.pdg.inst.id !144
HELIX:         Attributes: Loop-carried Data RAW (may) from memory 

HELIX:         From:	  %34 = getelementptr [1 x i8], [1 x i8]* @.str.212, i64 0, i64 0, !noelle.pdg.inst.id !43
HELIX:         To:	  %36 = select i1 %33, i8* %34, i8* %35, !prof !45, !noelle.pdg.inst.id !46
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %35 = getelementptr [5 x i8], [5 x i8]* @.str.213, i64 0, i64 0, !noelle.pdg.inst.id !44
HELIX:         To:	  %36 = select i1 %33, i8* %34, i8* %35, !prof !45, !noelle.pdg.inst.id !46
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %37 = getelementptr [18 x i8], [18 x i8]* @.str.211, i64 0, i64 0, !noelle.pdg.inst.id !47
HELIX:         To:	  %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86
HELIX:         To:	  %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:         Attributes: Loop-carried Data WAR (may) from memory 

HELIX:         From:	  %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86
HELIX:         To:	  store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87
HELIX:         Attributes: Data RAW (must)

HELIX:         ....
HELIX:     SCC:
HELIX:       Loop-carried dependences
HELIX:           %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 --->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 via memory
HELIX:           %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:           %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 --->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 via memory
HELIX:           %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 --->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 via memory
HELIX:           %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:           %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 --->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 via memory
HELIX:       Nodes within the SCC: 1
HELIX:       	  %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86
HELIX:       Nodes outside the SCC and connected with at least one node within the SCC: 12
HELIX:       	  %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:       	  store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87
HELIX:       	  %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:       	  store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78
HELIX:       	  %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:       	  %46 = sub i64 %54, %66, !noelle.pdg.inst.id !56
HELIX:       	  %49 = tail call i32 @strncmp(i8* nonnull %70, i8* %48, i64 %66) #14, !noelle.pdg.inst.id !59
HELIX:       	  %70 = load i8*, i8** %69, align 8, !tbaa !91, !noelle.pdg.inst.id !93
HELIX:       	  br i1 %71, label %19, label %65, !prof !95, !noelle.loop.id !96, !noelle.pdg.inst.id !97, !noelle.parallelizer.looporder !98
HELIX:       	  %79 = icmp eq i64 %78, %66, !noelle.pdg.inst.id !108
HELIX:       	  %82 = add i64 %66, %81, !noelle.pdg.inst.id !113
HELIX:       	  %91 = add i64 %66, -1, !noelle.pdg.inst.id !125
HELIX:       Edges: 12
HELIX:         From:	  %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86
HELIX:         To:	  %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:         Attributes: Loop-carried Data WAR (may) from memory 

HELIX:         From:	  %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86
HELIX:         To:	  store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86
HELIX:         To:	  %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:         Attributes: Loop-carried Data WAR (may) from memory 

HELIX:         From:	  %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86
HELIX:         To:	  store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86
HELIX:         To:	  %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:         Attributes: Loop-carried Data WAR (may) from memory 

HELIX:         From:	  %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86
HELIX:         To:	  %46 = sub i64 %54, %66, !noelle.pdg.inst.id !56
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86
HELIX:         To:	  %49 = tail call i32 @strncmp(i8* nonnull %70, i8* %48, i64 %66) #14, !noelle.pdg.inst.id !59
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86
HELIX:         To:	  %79 = icmp eq i64 %78, %66, !noelle.pdg.inst.id !108
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86
HELIX:         To:	  %82 = add i64 %66, %81, !noelle.pdg.inst.id !113
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86
HELIX:         To:	  %91 = add i64 %66, -1, !noelle.pdg.inst.id !125
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %70 = load i8*, i8** %69, align 8, !tbaa !91, !noelle.pdg.inst.id !93
HELIX:         To:	  %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  br i1 %71, label %19, label %65, !prof !95, !noelle.loop.id !96, !noelle.pdg.inst.id !97, !noelle.parallelizer.looporder !98
HELIX:         To:	  %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86
HELIX:         Attributes: Control 

HELIX:     SCC:
HELIX:       Loop-carried dependences
HELIX:           %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126 --->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 via memory
HELIX:           %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:           %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126 --->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 via memory
HELIX:           %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:           %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126 --->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 via memory
HELIX:           %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126 --->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 via memory
HELIX:       Nodes within the SCC: 1
HELIX:       	  %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126
HELIX:       Nodes outside the SCC and connected with at least one node within the SCC: 7
HELIX:       	  %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:       	  %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:       	  %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:       	  br i1 %71, label %19, label %65, !prof !95, !noelle.loop.id !96, !noelle.pdg.inst.id !97, !noelle.parallelizer.looporder !98
HELIX:       	  %90 = load i8*, i8** %89, align 8, !tbaa !91, !noelle.pdg.inst.id !124
HELIX:       	  %96 = icmp ult i64 %94, %92, !noelle.pdg.inst.id !130
HELIX:       	  %102 = icmp ult i64 %100, %92, !noelle.pdg.inst.id !138
HELIX:       Edges: 7
HELIX:         From:	  br i1 %71, label %19, label %65, !prof !95, !noelle.loop.id !96, !noelle.pdg.inst.id !97, !noelle.parallelizer.looporder !98
HELIX:         To:	  %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126
HELIX:         Attributes: Control 

HELIX:         From:	  %90 = load i8*, i8** %89, align 8, !tbaa !91, !noelle.pdg.inst.id !124
HELIX:         To:	  %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126
HELIX:         To:	  %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:         Attributes: Loop-carried Data WAR (may) from memory 

HELIX:         From:	  %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126
HELIX:         To:	  %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:         Attributes: Loop-carried Data WAR (may) from memory 

HELIX:         From:	  %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126
HELIX:         To:	  %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:         Attributes: Loop-carried Data WAR (may) from memory 

HELIX:         From:	  %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126
HELIX:         To:	  %96 = icmp ult i64 %94, %92, !noelle.pdg.inst.id !130
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126
HELIX:         To:	  %102 = icmp ult i64 %100, %92, !noelle.pdg.inst.id !138
HELIX:         Attributes: Data RAW (must)

HELIX:     SCC:
HELIX:       Loop-carried dependences
HELIX:           br i1 %74, label %check_if_last_iteration_is_missing, label %75, !prof !101, !noelle.loop.id !102, !noelle.pdg.inst.id !103, !noelle.parallelizer.looporder !104 --->   br i1 %74, label %check_if_last_iteration_is_missing, label %75, !prof !101, !noelle.loop.id !102, !noelle.pdg.inst.id !103, !noelle.parallelizer.looporder !104 control
HELIX:           br i1 %74, label %check_if_last_iteration_is_missing, label %75, !prof !101, !noelle.loop.id !102, !noelle.pdg.inst.id !103, !noelle.parallelizer.looporder !104 --->   %73 = phi i32 [ %13, %7 ], [ %21, %19 ], !noelle.pdg.inst.id !99 control
HELIX:           br i1 %74, label %check_if_last_iteration_is_missing, label %75, !prof !101, !noelle.loop.id !102, !noelle.pdg.inst.id !103, !noelle.parallelizer.looporder !104 --->   %74 = icmp sge i32 %73, 50000, !noelle.pdg.inst.id !100 control
HELIX:           %21 = add i32 %20, %16 --->   %73 = phi i32 [ %13, %7 ], [ %21, %19 ], !noelle.pdg.inst.id !99 via variable
HELIX:       Nodes within the SCC: 5
HELIX:       	  %20 = add nuw nsw i32 %73, 1, !noelle.pdg.inst.id !30
HELIX:       	  %73 = phi i32 [ %13, %7 ], [ %21, %19 ], !noelle.pdg.inst.id !99
HELIX:       	  %74 = icmp sge i32 %73, 50000, !noelle.pdg.inst.id !100
HELIX:       	  br i1 %74, label %check_if_last_iteration_is_missing, label %75, !prof !101, !noelle.loop.id !102, !noelle.pdg.inst.id !103, !noelle.parallelizer.looporder !104
HELIX:       	  %21 = add i32 %20, %16
HELIX:       Nodes outside the SCC and connected with at least one node within the SCC: 7
HELIX:       	  br label %72, !noelle.pdg.inst.id !31
HELIX:       	  %68 = phi i64 [ %26, %24 ], [ 0, %75 ], !noelle.pdg.inst.id !89
HELIX:       	  %69 = getelementptr inbounds [1333 x i8*], [1333 x i8*]* @__const.main.find_strings, i64 0, i64 %68, !noelle.pdg.inst.id !90
HELIX:       	  %70 = load i8*, i8** %69, align 8, !tbaa !91, !noelle.pdg.inst.id !93
HELIX:       	  %71 = icmp eq i8* %70, null, !noelle.pdg.inst.id !94
HELIX:       	  br i1 %71, label %19, label %65, !prof !95, !noelle.loop.id !96, !noelle.pdg.inst.id !97, !noelle.parallelizer.looporder !98
HELIX:       	  br label %67, !noelle.pdg.inst.id !105
HELIX:       Edges: 17
HELIX:         From:	  %20 = add nuw nsw i32 %73, 1, !noelle.pdg.inst.id !30
HELIX:         To:	  %21 = add i32 %20, %16
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %73 = phi i32 [ %13, %7 ], [ %21, %19 ], !noelle.pdg.inst.id !99
HELIX:         To:	  %20 = add nuw nsw i32 %73, 1, !noelle.pdg.inst.id !30
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %73 = phi i32 [ %13, %7 ], [ %21, %19 ], !noelle.pdg.inst.id !99
HELIX:         To:	  %74 = icmp sge i32 %73, 50000, !noelle.pdg.inst.id !100
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  %74 = icmp sge i32 %73, 50000, !noelle.pdg.inst.id !100
HELIX:         To:	  br i1 %74, label %check_if_last_iteration_is_missing, label %75, !prof !101, !noelle.loop.id !102, !noelle.pdg.inst.id !103, !noelle.parallelizer.looporder !104
HELIX:         Attributes: Data RAW (must)

HELIX:         From:	  br i1 %74, label %check_if_last_iteration_is_missing, label %75, !prof !101, !noelle.loop.id !102, !noelle.pdg.inst.id !103, !noelle.parallelizer.looporder !104
HELIX:         To:	  %20 = add nuw nsw i32 %73, 1, !noelle.pdg.inst.id !30
HELIX:         Attributes: Control 

HELIX:         From:	  br i1 %74, label %check_if_last_iteration_is_missing, label %75, !prof !101, !noelle.loop.id !102, !noelle.pdg.inst.id !103, !noelle.parallelizer.looporder !104
HELIX:         To:	  br label %72, !noelle.pdg.inst.id !31
HELIX:         Attributes: Control 

HELIX:         From:	  br i1 %74, label %check_if_last_iteration_is_missing, label %75, !prof !101, !noelle.loop.id !102, !noelle.pdg.inst.id !103, !noelle.parallelizer.looporder !104
HELIX:         To:	  %68 = phi i64 [ %26, %24 ], [ 0, %75 ], !noelle.pdg.inst.id !89
HELIX:         Attributes: Control 

HELIX:         From:	  br i1 %74, label %check_if_last_iteration_is_missing, label %75, !prof !101, !noelle.loop.id !102, !noelle.pdg.inst.id !103, !noelle.parallelizer.looporder !104
HELIX:         To:	  %69 = getelementptr inbounds [1333 x i8*], [1333 x i8*]* @__const.main.find_strings, i64 0, i64 %68, !noelle.pdg.inst.id !90
HELIX:         Attributes: Control 

HELIX:         From:	  br i1 %74, label %check_if_last_iteration_is_missing, label %75, !prof !101, !noelle.loop.id !102, !noelle.pdg.inst.id !103, !noelle.parallelizer.looporder !104
HELIX:         To:	  %70 = load i8*, i8** %69, align 8, !tbaa !91, !noelle.pdg.inst.id !93
HELIX:         Attributes: Control 

HELIX:         From:	  br i1 %74, label %check_if_last_iteration_is_missing, label %75, !prof !101, !noelle.loop.id !102, !noelle.pdg.inst.id !103, !noelle.parallelizer.looporder !104
HELIX:         To:	  %71 = icmp eq i8* %70, null, !noelle.pdg.inst.id !94
HELIX:         Attributes: Control 

HELIX:         From:	  br i1 %74, label %check_if_last_iteration_is_missing, label %75, !prof !101, !noelle.loop.id !102, !noelle.pdg.inst.id !103, !noelle.parallelizer.looporder !104
HELIX:         To:	  br i1 %71, label %19, label %65, !prof !95, !noelle.loop.id !96, !noelle.pdg.inst.id !97, !noelle.parallelizer.looporder !98
HELIX:         Attributes: Control 

HELIX:         From:	  br i1 %74, label %check_if_last_iteration_is_missing, label %75, !prof !101, !noelle.loop.id !102, !noelle.pdg.inst.id !103, !noelle.parallelizer.looporder !104
HELIX:         To:	  %73 = phi i32 [ %13, %7 ], [ %21, %19 ], !noelle.pdg.inst.id !99
HELIX:         Attributes: Loop-carried Control 

HELIX:         From:	  br i1 %74, label %check_if_last_iteration_is_missing, label %75, !prof !101, !noelle.loop.id !102, !noelle.pdg.inst.id !103, !noelle.parallelizer.looporder !104
HELIX:         To:	  %74 = icmp sge i32 %73, 50000, !noelle.pdg.inst.id !100
HELIX:         Attributes: Loop-carried Control 

HELIX:         From:	  br i1 %74, label %check_if_last_iteration_is_missing, label %75, !prof !101, !noelle.loop.id !102, !noelle.pdg.inst.id !103, !noelle.parallelizer.looporder !104
HELIX:         To:	  br i1 %74, label %check_if_last_iteration_is_missing, label %75, !prof !101, !noelle.loop.id !102, !noelle.pdg.inst.id !103, !noelle.parallelizer.looporder !104
HELIX:         Attributes: Loop-carried Control 

HELIX:         From:	  br i1 %74, label %check_if_last_iteration_is_missing, label %75, !prof !101, !noelle.loop.id !102, !noelle.pdg.inst.id !103, !noelle.parallelizer.looporder !104
HELIX:         To:	  br label %67, !noelle.pdg.inst.id !105
HELIX:         Attributes: Control 

HELIX:         ....
HELIX:   Next are all loop-carried dependences of the loop
HELIX:       %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 --->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 via memory
HELIX:       %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 --->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 via memory
HELIX:       %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 --->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 via memory
HELIX:       %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:       %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:       %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 --->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 via memory
HELIX:       %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 --->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 via memory
HELIX:       %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 --->   %84 = load i8, i8* %83, align 1, !tbaa !115, !noelle.pdg.inst.id !116 via memory
HELIX:       %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 --->   %106 = load i8, i8* %105, align 1, !tbaa !115, !noelle.pdg.inst.id !144 via memory
HELIX:       %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 --->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 via memory
HELIX:       %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:       %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 --->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 via memory
HELIX:       store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87 --->   store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87 via memory
HELIX:       store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:       store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:       %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 via memory
HELIX:       %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 via memory
HELIX:       %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87 via memory
HELIX:       %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87 via memory
HELIX:       %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:       %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:       %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:       %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78 via memory
HELIX:       %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78 via memory
HELIX:       %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 via memory
HELIX:       %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 via memory
HELIX:       %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   %84 = load i8, i8* %83, align 1, !tbaa !115, !noelle.pdg.inst.id !116 via memory
HELIX:       %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119 via memory
HELIX:       %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119 via memory
HELIX:       %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   store i8* %70, i8** @findme, align 8, !tbaa !91, !noelle.pdg.inst.id !122 via memory
HELIX:       %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   store i8* %70, i8** @findme, align 8, !tbaa !91, !noelle.pdg.inst.id !122 via memory
HELIX:       %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   %106 = load i8, i8* %105, align 1, !tbaa !115, !noelle.pdg.inst.id !144 via memory
HELIX:       %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 --->   %109 = load i64, i64* %108, align 8, !tbaa !74, !noelle.pdg.inst.id !147 via memory
HELIX:       store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:       store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:       store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78 --->   store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78 via memory
HELIX:       %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 --->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 via memory
HELIX:       %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 --->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 via memory
HELIX:       %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:       %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:       %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 --->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 via memory
HELIX:       %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 --->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 via memory
HELIX:       %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 --->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 via memory
HELIX:       %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 --->   %84 = load i8, i8* %83, align 1, !tbaa !115, !noelle.pdg.inst.id !116 via memory
HELIX:       %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 --->   %106 = load i8, i8* %105, align 1, !tbaa !115, !noelle.pdg.inst.id !144 via memory
HELIX:       br i1 %74, label %check_if_last_iteration_is_missing, label %75, !prof !101, !noelle.loop.id !102, !noelle.pdg.inst.id !103, !noelle.parallelizer.looporder !104 --->   %73 = phi i32 [ %13, %7 ], [ %21, %19 ], !noelle.pdg.inst.id !99 control
HELIX:       br i1 %74, label %check_if_last_iteration_is_missing, label %75, !prof !101, !noelle.loop.id !102, !noelle.pdg.inst.id !103, !noelle.parallelizer.looporder !104 --->   %74 = icmp sge i32 %73, 50000, !noelle.pdg.inst.id !100 control
HELIX:       br i1 %74, label %check_if_last_iteration_is_missing, label %75, !prof !101, !noelle.loop.id !102, !noelle.pdg.inst.id !103, !noelle.parallelizer.looporder !104 --->   br i1 %74, label %check_if_last_iteration_is_missing, label %75, !prof !101, !noelle.loop.id !102, !noelle.pdg.inst.id !103, !noelle.parallelizer.looporder !104 control
HELIX:       %84 = load i8, i8* %83, align 1, !tbaa !115, !noelle.pdg.inst.id !116 --->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 via memory
HELIX:       %84 = load i8, i8* %83, align 1, !tbaa !115, !noelle.pdg.inst.id !116 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:       %84 = load i8, i8* %83, align 1, !tbaa !115, !noelle.pdg.inst.id !116 --->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 via memory
HELIX:       store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:       store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:       store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119 --->   store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78 via memory
HELIX:       store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119 --->   store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119 via memory
HELIX:       store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119 --->   %109 = load i64, i64* %108, align 8, !tbaa !74, !noelle.pdg.inst.id !147 via memory
HELIX:       store i8* %70, i8** @findme, align 8, !tbaa !91, !noelle.pdg.inst.id !122 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:       store i8* %70, i8** @findme, align 8, !tbaa !91, !noelle.pdg.inst.id !122 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:       store i8* %70, i8** @findme, align 8, !tbaa !91, !noelle.pdg.inst.id !122 --->   store i8* %70, i8** @findme, align 8, !tbaa !91, !noelle.pdg.inst.id !122 via memory
HELIX:       %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126 --->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 via memory
HELIX:       %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:       %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126 --->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 via memory
HELIX:       %106 = load i8, i8* %105, align 1, !tbaa !115, !noelle.pdg.inst.id !144 --->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 via memory
HELIX:       %106 = load i8, i8* %105, align 1, !tbaa !115, !noelle.pdg.inst.id !144 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:       %106 = load i8, i8* %105, align 1, !tbaa !115, !noelle.pdg.inst.id !144 --->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 via memory
HELIX:       %109 = load i64, i64* %108, align 8, !tbaa !74, !noelle.pdg.inst.id !147 --->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 via memory
HELIX:       %109 = load i64, i64* %108, align 8, !tbaa !74, !noelle.pdg.inst.id !147 --->   store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78 via memory
HELIX:       %109 = load i64, i64* %108, align 8, !tbaa !74, !noelle.pdg.inst.id !147 --->   store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119 via memory
HELIX:       %21 = add i32 %20, %16 --->   %73 = phi i32 [ %13, %7 ], [ %21, %19 ], !noelle.pdg.inst.id !99 via variable
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 36
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
HELIX:     Sequential segment 0
HELIX:       SCCs included in the current sequential segment
HELIX:         Type = 15
HELIX:         Loop-carried data dependences
HELIX:             %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:         Instructions that belong to the SS
HELIX:             %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86
HELIX:     Sequential segment 1
HELIX:       SCCs included in the current sequential segment
HELIX:         Type = 15
HELIX:         Loop-carried data dependences
HELIX:             %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:         Instructions that belong to the SS
HELIX:             %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126
HELIX:     Sequential segment 2
HELIX:       SCCs included in the current sequential segment
HELIX:         Type = 15
HELIX:         Loop-carried data dependences
HELIX:             %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 ->   %84 = load i8, i8* %83, align 1, !tbaa !115, !noelle.pdg.inst.id !116
HELIX:             %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 ->   %106 = load i8, i8* %105, align 1, !tbaa !115, !noelle.pdg.inst.id !144
HELIX:             store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87 ->   store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87
HELIX:             store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   store i8* %70, i8** @findme, align 8, !tbaa !91, !noelle.pdg.inst.id !122
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   store i8* %70, i8** @findme, align 8, !tbaa !91, !noelle.pdg.inst.id !122
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   %109 = load i64, i64* %108, align 8, !tbaa !74, !noelle.pdg.inst.id !147
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   %106 = load i8, i8* %105, align 1, !tbaa !115, !noelle.pdg.inst.id !144
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   %84 = load i8, i8* %83, align 1, !tbaa !115, !noelle.pdg.inst.id !116
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78
HELIX:             store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78 ->   store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78
HELIX:             store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 ->   %84 = load i8, i8* %83, align 1, !tbaa !115, !noelle.pdg.inst.id !116
HELIX:             %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 ->   %106 = load i8, i8* %105, align 1, !tbaa !115, !noelle.pdg.inst.id !144
HELIX:             %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %84 = load i8, i8* %83, align 1, !tbaa !115, !noelle.pdg.inst.id !116 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %84 = load i8, i8* %83, align 1, !tbaa !115, !noelle.pdg.inst.id !116 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %84 = load i8, i8* %83, align 1, !tbaa !115, !noelle.pdg.inst.id !116 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119 ->   store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119
HELIX:             store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119 ->   %109 = load i64, i64* %108, align 8, !tbaa !74, !noelle.pdg.inst.id !147
HELIX:             store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119 ->   store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78
HELIX:             store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             store i8* %70, i8** @findme, align 8, !tbaa !91, !noelle.pdg.inst.id !122 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             store i8* %70, i8** @findme, align 8, !tbaa !91, !noelle.pdg.inst.id !122 ->   store i8* %70, i8** @findme, align 8, !tbaa !91, !noelle.pdg.inst.id !122
HELIX:             store i8* %70, i8** @findme, align 8, !tbaa !91, !noelle.pdg.inst.id !122 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %106 = load i8, i8* %105, align 1, !tbaa !115, !noelle.pdg.inst.id !144 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %106 = load i8, i8* %105, align 1, !tbaa !115, !noelle.pdg.inst.id !144 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %106 = load i8, i8* %105, align 1, !tbaa !115, !noelle.pdg.inst.id !144 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             %109 = load i64, i64* %108, align 8, !tbaa !74, !noelle.pdg.inst.id !147 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %109 = load i64, i64* %108, align 8, !tbaa !74, !noelle.pdg.inst.id !147 ->   store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119
HELIX:             %109 = load i64, i64* %108, align 8, !tbaa !74, !noelle.pdg.inst.id !147 ->   store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78
HELIX:             %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %92 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !126 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:         Instructions that belong to the SS
HELIX:             %109 = load i64, i64* %108, align 8, !tbaa !74, !noelle.pdg.inst.id !147
HELIX:             %108 = getelementptr inbounds [256 x i64], [256 x i64]* @table, i64 0, i64 %107, !noelle.pdg.inst.id !146
HELIX:             %107 = zext i8 %106 to i64, !noelle.pdg.inst.id !145
HELIX:             %106 = load i8, i8* %105, align 1, !tbaa !115, !noelle.pdg.inst.id !144
HELIX:             %105 = getelementptr inbounds i8, i8* %90, i64 %100, !noelle.pdg.inst.id !143
HELIX:             %102 = icmp ult i64 %100, %92, !noelle.pdg.inst.id !138
HELIX:             %44 = add i64 %54, 1, !noelle.pdg.inst.id !54
HELIX:             %85 = zext i8 %84 to i64, !noelle.pdg.inst.id !117
HELIX:             %23 = add i64 %100, %57, !noelle.pdg.inst.id !32
HELIX:             %36 = select i1 %33, i8* %34, i8* %35, !prof !45, !noelle.pdg.inst.id !46
HELIX:             %46 = sub i64 %54, %66, !noelle.pdg.inst.id !56
HELIX:             %33 = icmp ne i8* %32, null, !noelle.pdg.inst.id !42
HELIX:             br i1 %50, label %39, label %43, !prof !61, !noelle.pdg.inst.id !62
HELIX:             %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87
HELIX:             %28 = getelementptr [8 x i8], [8 x i8]* @.str.214, i64 0, i64 0, !noelle.pdg.inst.id !37
HELIX:             store i8* %70, i8** @findme, align 8, !tbaa !91, !noelle.pdg.inst.id !122
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %86 = getelementptr inbounds [256 x i64], [256 x i64]* @table, i64 0, i64 %85, !noelle.pdg.inst.id !118
HELIX:             br i1 %102, label %104, label %103, !prof !139, !noelle.loop.id !140, !noelle.pdg.inst.id !141
HELIX:             %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             br i1 %33, label %27, label %30, !prof !45, !noelle.pdg.inst.id !49
HELIX:             %47 = add i64 %46, 1, !noelle.pdg.inst.id !57
HELIX:             %84 = load i8, i8* %83, align 1, !tbaa !115, !noelle.pdg.inst.id !116
HELIX:             %48 = getelementptr inbounds i8, i8* %90, i64 %47, !noelle.pdg.inst.id !58
HELIX:             %49 = tail call i32 @strncmp(i8* nonnull %70, i8* %48, i64 %66) #14, !noelle.pdg.inst.id !59
HELIX:             br i1 %58, label %22, label %52, !prof !71, !noelle.pdg.inst.id !72
HELIX:             %50 = icmp eq i32 %49, 0, !noelle.pdg.inst.id !60
HELIX:             %55 = icmp eq i64 %53, 0, !noelle.pdg.inst.id !66
HELIX:             %110 = icmp ne i64 %109, 0, !noelle.pdg.inst.id !148
HELIX:             br i1 %55, label %45, label %51, !prof !67, !noelle.pdg.inst.id !68
HELIX:             store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119
HELIX:             store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78
HELIX:             %96 = icmp ult i64 %94, %92, !noelle.pdg.inst.id !130
HELIX:             br i1 %96, label %98, label %97, !prof !131, !noelle.loop.id !132, !noelle.pdg.inst.id !133
HELIX:   Identifying sequential segments
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 36
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
HELIX:     Sequential segment 0
HELIX:       SCCs included in the current sequential segment
HELIX:         Type = 15
HELIX:         Loop-carried data dependences
HELIX:             %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:         Instructions that belong to the SS
HELIX:             %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86
HELIX:     Sequential segment 1
HELIX:       SCCs included in the current sequential segment
HELIX:         Type = 15
HELIX:         Loop-carried data dependences
HELIX:             %91 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !125 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             %91 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !125 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %91 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !125 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %91 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !125 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %91 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !125 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %91 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !125 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:         Instructions that belong to the SS
HELIX:             %91 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !125
HELIX:     Sequential segment 2
HELIX:       SCCs included in the current sequential segment
HELIX:         Type = 15
HELIX:         Loop-carried data dependences
HELIX:             %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 ->   %84 = load i8, i8* %83, align 1, !tbaa !115, !noelle.pdg.inst.id !116
HELIX:             %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38 ->   %106 = load i8, i8* %105, align 1, !tbaa !115, !noelle.pdg.inst.id !144
HELIX:             store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87 ->   store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87
HELIX:             store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   store i8* %70, i8** @findme, align 8, !tbaa !91, !noelle.pdg.inst.id !122
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   store i8* %70, i8** @findme, align 8, !tbaa !91, !noelle.pdg.inst.id !122
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   %109 = load i64, i64* %108, align 8, !tbaa !74, !noelle.pdg.inst.id !147
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   %106 = load i8, i8* %105, align 1, !tbaa !115, !noelle.pdg.inst.id !144
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   %84 = load i8, i8* %83, align 1, !tbaa !115, !noelle.pdg.inst.id !116
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34 ->   store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78
HELIX:             store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78 ->   store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78
HELIX:             store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 ->   %84 = load i8, i8* %83, align 1, !tbaa !115, !noelle.pdg.inst.id !116
HELIX:             %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 ->   %106 = load i8, i8* %105, align 1, !tbaa !115, !noelle.pdg.inst.id !144
HELIX:             %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %84 = load i8, i8* %83, align 1, !tbaa !115, !noelle.pdg.inst.id !116 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %84 = load i8, i8* %83, align 1, !tbaa !115, !noelle.pdg.inst.id !116 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %84 = load i8, i8* %83, align 1, !tbaa !115, !noelle.pdg.inst.id !116 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119 ->   store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119
HELIX:             store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119 ->   %109 = load i64, i64* %108, align 8, !tbaa !74, !noelle.pdg.inst.id !147
HELIX:             store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119 ->   store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78
HELIX:             store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             store i8* %70, i8** @findme, align 8, !tbaa !91, !noelle.pdg.inst.id !122 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             store i8* %70, i8** @findme, align 8, !tbaa !91, !noelle.pdg.inst.id !122 ->   store i8* %70, i8** @findme, align 8, !tbaa !91, !noelle.pdg.inst.id !122
HELIX:             store i8* %70, i8** @findme, align 8, !tbaa !91, !noelle.pdg.inst.id !122 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %106 = load i8, i8* %105, align 1, !tbaa !115, !noelle.pdg.inst.id !144 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %106 = load i8, i8* %105, align 1, !tbaa !115, !noelle.pdg.inst.id !144 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %106 = load i8, i8* %105, align 1, !tbaa !115, !noelle.pdg.inst.id !144 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             %109 = load i64, i64* %108, align 8, !tbaa !74, !noelle.pdg.inst.id !147 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %109 = load i64, i64* %108, align 8, !tbaa !74, !noelle.pdg.inst.id !147 ->   store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119
HELIX:             %109 = load i64, i64* %108, align 8, !tbaa !74, !noelle.pdg.inst.id !147 ->   store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78
HELIX:             %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             %91 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !125 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %91 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !125 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %91 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !125 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %66 = tail call i64 @strlen(i8* nonnull %70) #14, !noelle.pdg.inst.id !86 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %91 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !125 ->   %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %91 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !125 ->   %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             %91 = tail call i64 @strlen(i8* %90) #14, !noelle.pdg.inst.id !125 ->   %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:         Instructions that belong to the SS
HELIX:             %109 = load i64, i64* %108, align 8, !tbaa !74, !noelle.pdg.inst.id !147
HELIX:             %108 = getelementptr inbounds [256 x i64], [256 x i64]* @table, i64 0, i64 %107, !noelle.pdg.inst.id !146
HELIX:             %107 = zext i8 %106 to i64, !noelle.pdg.inst.id !145
HELIX:             %106 = load i8, i8* %105, align 1, !tbaa !115, !noelle.pdg.inst.id !144
HELIX:             %105 = getelementptr inbounds i8, i8* %90, i64 %100, !noelle.pdg.inst.id !143
HELIX:             %102 = icmp ult i64 %100, %91, !noelle.pdg.inst.id !138
HELIX:             %44 = add i64 %54, 1, !noelle.pdg.inst.id !54
HELIX:             %85 = zext i8 %84 to i64, !noelle.pdg.inst.id !117
HELIX:             %23 = add i64 %100, %57, !noelle.pdg.inst.id !32
HELIX:             %36 = select i1 %33, i8* %34, i8* %35, !prof !45, !noelle.pdg.inst.id !46
HELIX:             %46 = sub i64 %54, %66, !noelle.pdg.inst.id !56
HELIX:             %33 = icmp ne i8* %32, null, !noelle.pdg.inst.id !42
HELIX:             br i1 %50, label %39, label %43, !prof !61, !noelle.pdg.inst.id !62
HELIX:             %29 = tail call i32 (i8*, ...) @printf(i8* %28, i8* nonnull %32) #13, !noelle.pdg.inst.id !38
HELIX:             store i64 %66, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87
HELIX:             %28 = getelementptr [8 x i8], [8 x i8]* @.str.214, i64 0, i64 0, !noelle.pdg.inst.id !37
HELIX:             store i8* %70, i8** @findme, align 8, !tbaa !91, !noelle.pdg.inst.id !122
HELIX:             %25 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
HELIX:             %86 = getelementptr inbounds [256 x i64], [256 x i64]* @table, i64 0, i64 %85, !noelle.pdg.inst.id !118
HELIX:             br i1 %102, label %104, label %103, !prof !139, !noelle.loop.id !140, !noelle.pdg.inst.id !141
HELIX:             %38 = tail call i32 (i8*, ...) @printf(i8* %37, i8* nonnull %70, i8* %36, i8* %90) #13, !noelle.pdg.inst.id !48
HELIX:             br i1 %33, label %27, label %30, !prof !45, !noelle.pdg.inst.id !49
HELIX:             %47 = add i64 %46, 1, !noelle.pdg.inst.id !57
HELIX:             %84 = load i8, i8* %83, align 1, !tbaa !115, !noelle.pdg.inst.id !116
HELIX:             %48 = getelementptr inbounds i8, i8* %90, i64 %47, !noelle.pdg.inst.id !58
HELIX:             %49 = tail call i32 @strncmp(i8* nonnull %70, i8* %48, i64 %66) #14, !noelle.pdg.inst.id !59
HELIX:             br i1 %58, label %22, label %52, !prof !71, !noelle.pdg.inst.id !72
HELIX:             %50 = icmp eq i32 %49, 0, !noelle.pdg.inst.id !60
HELIX:             %55 = icmp eq i64 %53, 0, !noelle.pdg.inst.id !66
HELIX:             %110 = icmp ne i64 %109, 0, !noelle.pdg.inst.id !148
HELIX:             br i1 %55, label %45, label %51, !prof !67, !noelle.pdg.inst.id !68
HELIX:             store i64 %82, i64* %86, align 8, !tbaa !74, !noelle.pdg.inst.id !119
HELIX:             store i64 %66, i64* %60, align 8, !tbaa !74, !noelle.pdg.inst.id !78
HELIX:             %96 = icmp ult i64 %94, %91, !noelle.pdg.inst.id !130
HELIX:             br i1 %96, label %98, label %97, !prof !131, !noelle.loop.id !132, !noelle.pdg.inst.id !133
HELIX:  Synchronizing sequential segments
HELIX:  Storing live out variables and exit block index
HELIX:  Linking task function
HELIX:  Task code:

define void @noelle_task_0(i8*, i8*, i8*, i8*, i64, i64, i64*) {
  %8 = alloca i64
  %9 = alloca i64
  %10 = alloca i64
  %noelle.environment_variable.pointer = bitcast i8* %0 to [8 x i64]*
  %11 = getelementptr inbounds [8 x i64], [8 x i64]* %noelle.environment_variable.pointer, i64 0, i64 0
  %12 = bitcast i64* %11 to %struct._IO_FILE**
  %noelle_environment_variable_0 = load %struct._IO_FILE*, %struct._IO_FILE** %12
  %13 = bitcast i8* %1 to [0 x i64]*
  %14 = trunc i64 %4 to i32
  %15 = mul i32 1, %14
  %16 = add i32 0, %15
  %17 = sub i64 %5, 1
  %18 = trunc i64 %17 to i32
  %19 = mul i32 1, %18
  %20 = ptrtoint i8* %2 to i64
  %21 = add i64 0, %20
  %22 = inttoptr i64 %21 to i8*
  %23 = ptrtoint i8* %3 to i64
  %24 = add i64 0, %23
  %25 = inttoptr i64 %24 to i8*
  %26 = ptrtoint i8* %2 to i64
  %27 = add i64 64, %26
  %28 = inttoptr i64 %27 to i8*
  %29 = ptrtoint i8* %3 to i64
  %30 = add i64 64, %29
  %31 = inttoptr i64 %30 to i8*
  %32 = ptrtoint i8* %2 to i64
  %33 = add i64 128, %32
  %34 = inttoptr i64 %33 to i8*
  %35 = ptrtoint i8* %3 to i64
  %36 = add i64 128, %35
  %37 = inttoptr i64 %36 to i8*
  br label %95

38:                                               ; preds = %SS0-entry
  ret void

39:                                               ; preds = %check_if_last_iteration_is_missing, %SS0-entry1
  %40 = load i64, i64* %8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %SS2-wait, label %SS2-entry

42:                                               ; preds = %90
  %43 = add nuw nsw i32 %96, 1, !noelle.pdg.inst.id !30
  call void @HELIX_signal(i8* %37)
  call void @HELIX_signal(i8* %31)
  call void @HELIX_signal(i8* %25)
  %44 = add i32 %43, %19
  br label %95, !noelle.pdg.inst.id !31

45:                                               ; preds = %79
  %46 = add i64 %125, %80, !noelle.pdg.inst.id !32
  br label %124, !noelle.pdg.inst.id !33

47:                                               ; preds = %50, %53
  %48 = tail call i32 @putc(i32 10, %struct._IO_FILE* %noelle_environment_variable_0) #13, !noelle.pdg.inst.id !34
  %49 = add nuw i64 %91, 1, !noelle.pdg.inst.id !35
  br label %90, !noelle.pdg.inst.id !36

50:                                               ; preds = %54
  %51 = getelementptr [8 x i8], [8 x i8]* @.str.214, i64 0, i64 0, !noelle.pdg.inst.id !37
  %52 = tail call i32 (i8*, ...) @printf(i8* %51, i8* nonnull %55) #13, !noelle.pdg.inst.id !38
  br label %47, !noelle.pdg.inst.id !39

53:                                               ; preds = %54
  br label %47, !noelle.pdg.inst.id !40

54:                                               ; preds = %122, %62
  %55 = phi i8* [ null, %122 ], [ %63, %62 ], !noelle.pdg.inst.id !41
  %56 = icmp ne i8* %55, null, !noelle.pdg.inst.id !42
  %57 = getelementptr [1 x i8], [1 x i8]* @.str.212, i64 0, i64 0, !noelle.pdg.inst.id !43
  %58 = getelementptr [5 x i8], [5 x i8]* @.str.213, i64 0, i64 0, !noelle.pdg.inst.id !44
  %59 = select i1 %56, i8* %57, i8* %58, !prof !45, !noelle.pdg.inst.id !46
  %60 = getelementptr [18 x i8], [18 x i8]* @.str.211, i64 0, i64 0, !noelle.pdg.inst.id !47
  %61 = tail call i32 (i8*, ...) @printf(i8* %60, i8* nonnull %93, i8* %59, i8* %115) #13, !noelle.pdg.inst.id !48
  br i1 %56, label %50, label %53, !prof !45, !noelle.pdg.inst.id !49

62:                                               ; preds = %68
  %63 = phi i8* [ %71, %68 ], !noelle.pdg.inst.id !50
  br label %54, !noelle.pdg.inst.id !51

64:                                               ; preds = %66, %74
  %65 = phi i64 [ %67, %66 ], [ %77, %74 ], !noelle.pdg.inst.id !52
  br label %118, !noelle.pdg.inst.id !53

66:                                               ; preds = %68
  %67 = add i64 %77, 1, !noelle.pdg.inst.id !54
  br label %64, !noelle.pdg.inst.id !55

68:                                               ; preds = %75
  %69 = sub i64 %77, %89, !noelle.pdg.inst.id !56
  %70 = add i64 %69, 1, !noelle.pdg.inst.id !57
  %71 = getelementptr inbounds i8, i8* %115, i64 %70, !noelle.pdg.inst.id !58
  %72 = tail call i32 @strncmp(i8* nonnull %93, i8* %71, i64 %89) #14, !noelle.pdg.inst.id !59
  %73 = icmp eq i32 %72, 0, !noelle.pdg.inst.id !60
  br i1 %73, label %62, label %66, !prof !61, !noelle.pdg.inst.id !62

74:                                               ; preds = %75
  br label %64, !noelle.pdg.inst.id !63

75:                                               ; preds = %79
  %76 = phi i64 [ %80, %79 ], !noelle.pdg.inst.id !64
  %77 = phi i64 [ %125, %79 ], !noelle.pdg.inst.id !65
  %78 = icmp eq i64 %76, 0, !noelle.pdg.inst.id !66
  br i1 %78, label %68, label %74, !prof !67, !noelle.pdg.inst.id !68

79:                                               ; preds = %128, %129
  %80 = phi i64 [ %134, %129 ], [ %126, %128 ], !noelle.pdg.inst.id !69
  %81 = phi i1 [ %135, %129 ], [ false, %128 ], !noelle.pdg.inst.id !70
  br i1 %81, label %45, label %75, !prof !71, !noelle.pdg.inst.id !72

82:                                               ; preds = %85
  %83 = getelementptr inbounds [256 x i64], [256 x i64]* @table, i64 0, i64 %86, !noelle.pdg.inst.id !73
  store i64 %89, i64* %83, align 8, !tbaa !74, !noelle.pdg.inst.id !78
  %84 = add nuw nsw i64 %86, 1, !noelle.pdg.inst.id !79
  br label %85, !noelle.pdg.inst.id !80

85:                                               ; preds = %88, %82
  %86 = phi i64 [ 0, %88 ], [ %84, %82 ], !noelle.pdg.inst.id !81
  %87 = icmp eq i64 %86, 256, !noelle.pdg.inst.id !82
  br i1 %87, label %101, label %82, !prof !83, !noelle.loop.id !84, !noelle.pdg.inst.id !85

88:                                               ; preds = %90
  %89 = tail call i64 @strlen(i8* nonnull %93) #14, !noelle.pdg.inst.id !86
  store i64 %89, i64* @len, align 8, !tbaa !74, !noelle.pdg.inst.id !87
  br label %85, !noelle.pdg.inst.id !88

90:                                               ; preds = %47, %SS2-entry11
  %91 = phi i64 [ %49, %47 ], [ 0, %SS2-entry11 ], !noelle.pdg.inst.id !89
  %92 = getelementptr inbounds [1333 x i8*], [1333 x i8*]* @__const.main.find_strings, i64 0, i64 %91, !noelle.pdg.inst.id !90
  %93 = load i8*, i8** %92, align 8, !tbaa !91, !noelle.pdg.inst.id !93
  %94 = icmp eq i8* %93, null, !noelle.pdg.inst.id !94
  br i1 %94, label %42, label %88, !prof !95, !noelle.loop.id !96, !noelle.pdg.inst.id !97, !noelle.parallelizer.looporder !98

95:                                               ; preds = %7, %42
  %96 = phi i32 [ %16, %7 ], [ %44, %42 ], !noelle.pdg.inst.id !99
  store i64 0, i64* %8
  store i64 0, i64* %9
  store i64 0, i64* %10
  %97 = icmp sge i32 %96, 50000, !noelle.pdg.inst.id !100
  br i1 %97, label %check_if_last_iteration_is_missing, label %98, !prof !101, !noelle.loop.id !102, !noelle.pdg.inst.id !103, !noelle.parallelizer.looporder !104

98:                                               ; preds = %95
  %99 = load i64, i64* %10
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %SS0-wait8, label %SS0-entry7

101:                                              ; preds = %85
  br label %102, !noelle.pdg.inst.id !105

102:                                              ; preds = %101, %105
  %103 = phi i64 [ %112, %105 ], [ 0, %101 ], !noelle.pdg.inst.id !106
  %104 = icmp eq i64 %103, %89, !noelle.pdg.inst.id !107
  br i1 %104, label %113, label %105, !prof !108, !noelle.loop.id !109, !noelle.pdg.inst.id !110

105:                                              ; preds = %102
  %106 = xor i64 %103, -1, !noelle.pdg.inst.id !111
  %107 = add i64 %89, %106, !noelle.pdg.inst.id !112
  %108 = getelementptr inbounds i8, i8* %93, i64 %103, !noelle.pdg.inst.id !113
  %109 = load i8, i8* %108, align 1, !tbaa !114, !noelle.pdg.inst.id !115
  %110 = zext i8 %109 to i64, !noelle.pdg.inst.id !116
  %111 = getelementptr inbounds [256 x i64], [256 x i64]* @table, i64 0, i64 %110, !noelle.pdg.inst.id !117
  store i64 %107, i64* %111, align 8, !tbaa !74, !noelle.pdg.inst.id !118
  %112 = add i64 %103, 1, !noelle.pdg.inst.id !119
  br label %102, !noelle.pdg.inst.id !120

113:                                              ; preds = %102
  store i8* %93, i8** @findme, align 8, !tbaa !91, !noelle.pdg.inst.id !121
  %114 = getelementptr inbounds [1332 x i8*], [1332 x i8*]* @__const.main.search_strings, i64 0, i64 %91, !noelle.pdg.inst.id !122
  %115 = load i8*, i8** %114, align 8, !tbaa !91, !noelle.pdg.inst.id !123
  %116 = tail call i64 @strlen(i8* %115) #14, !noelle.pdg.inst.id !124
  %117 = add i64 %89, -1, !noelle.pdg.inst.id !125
  br label %118, !noelle.pdg.inst.id !126

118:                                              ; preds = %113, %64
  %119 = phi i64 [ %117, %113 ], [ %65, %64 ], !noelle.pdg.inst.id !127
  %120 = phi i64 [ undef, %113 ], [ %76, %64 ], !noelle.pdg.inst.id !128
  %121 = icmp ult i64 %119, %116, !noelle.pdg.inst.id !129
  br i1 %121, label %123, label %122, !prof !130, !noelle.loop.id !131, !noelle.pdg.inst.id !132

122:                                              ; preds = %118
  br label %54, !noelle.pdg.inst.id !133

123:                                              ; preds = %118
  br label %124, !noelle.pdg.inst.id !134

124:                                              ; preds = %45, %123
  %125 = phi i64 [ %46, %45 ], [ %119, %123 ], !noelle.pdg.inst.id !135
  %126 = phi i64 [ %80, %45 ], [ %120, %123 ], !noelle.pdg.inst.id !136
  %127 = icmp ult i64 %125, %116, !noelle.pdg.inst.id !137
  br i1 %127, label %129, label %128, !prof !138, !noelle.loop.id !139, !noelle.pdg.inst.id !140

128:                                              ; preds = %124
  br label %79, !noelle.pdg.inst.id !141

129:                                              ; preds = %124
  %130 = getelementptr inbounds i8, i8* %115, i64 %125, !noelle.pdg.inst.id !142
  %131 = load i8, i8* %130, align 1, !tbaa !114, !noelle.pdg.inst.id !143
  %132 = zext i8 %131 to i64, !noelle.pdg.inst.id !144
  %133 = getelementptr inbounds [256 x i64], [256 x i64]* @table, i64 0, i64 %132, !noelle.pdg.inst.id !145
  %134 = load i64, i64* %133, align 8, !tbaa !74, !noelle.pdg.inst.id !146
  %135 = icmp ne i64 %134, 0, !noelle.pdg.inst.id !147
  br label %79, !noelle.pdg.inst.id !148

check_if_last_iteration_is_missing:               ; preds = %95
  %136 = sub i32 %96, 1
  %137 = icmp sge i32 %136, 50000, !noelle.pdg.inst.id !100
  br i1 %137, label %39, label %last_iteration

last_iteration:                                   ; preds = %check_if_last_iteration_is_missing
  %138 = load i64, i64* %8
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %SS2-wait6, label %SS2-entry5

SS0-entry:                                        ; preds = %SS1-entry, %SS0-wait
  call void @HELIX_signal(i8* %25)
  call void @HELIX_signal(i8* %31)
  call void @HELIX_signal(i8* %37)
  br label %38

SS0-wait:                                         ; preds = %SS1-entry
  call void @HELIX_wait(i8* %22)
  store i64 1, i64* %10
  br label %SS0-entry

SS1-entry:                                        ; preds = %SS2-entry, %SS1-wait
  %140 = load i64, i64* %10
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %SS0-wait, label %SS0-entry

SS1-wait:                                         ; preds = %SS2-entry
  call void @HELIX_wait(i8* %28)
  store i64 1, i64* %9
  br label %SS1-entry

SS2-entry:                                        ; preds = %39, %SS2-wait
  %142 = load i64, i64* %9
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %SS1-wait, label %SS1-entry

SS2-wait:                                         ; preds = %39
  call void @HELIX_wait(i8* %34)
  store i64 1, i64* %8
  br label %SS2-entry

SS0-entry1:                                       ; preds = %SS1-entry3, %SS0-wait2
  br label %39

SS0-wait2:                                        ; preds = %SS1-entry3
  call void @HELIX_wait(i8* %22)
  store i64 1, i64* %10
  br label %SS0-entry1

SS1-entry3:                                       ; preds = %SS2-entry5, %SS1-wait4
  %144 = load i64, i64* %10
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %SS0-wait2, label %SS0-entry1

SS1-wait4:                                        ; preds = %SS2-entry5
  call void @HELIX_wait(i8* %28)
  store i64 1, i64* %9
  br label %SS1-entry3

SS2-entry5:                                       ; preds = %last_iteration, %SS2-wait6
  %146 = load i64, i64* %9
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %SS1-wait4, label %SS1-entry3

SS2-wait6:                                        ; preds = %last_iteration
  call void @HELIX_wait(i8* %34)
  store i64 1, i64* %8
  br label %SS2-entry5

SS0-entry7:                                       ; preds = %98, %SS0-wait8
  %148 = load i64, i64* %9
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %SS1-wait10, label %SS1-entry9

SS0-wait8:                                        ; preds = %98
  call void @HELIX_wait(i8* %22)
  store i64 1, i64* %10
  br label %SS0-entry7

SS1-entry9:                                       ; preds = %SS0-entry7, %SS1-wait10
  %150 = load i64, i64* %8
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %SS2-wait12, label %SS2-entry11

SS1-wait10:                                       ; preds = %SS0-entry7
  call void @HELIX_wait(i8* %28)
  store i64 1, i64* %9
  br label %SS1-entry9

SS2-entry11:                                      ; preds = %SS1-entry9, %SS2-wait12
  br label %90, !noelle.pdg.inst.id !149

SS2-wait12:                                       ; preds = %SS1-entry9
  call void @HELIX_wait(i8* %34)
  store i64 1, i64* %8
  br label %SS2-entry11
}

Parallelizer: parallelizerLoop:   Link the parallelize loop
Parallelizer: parallelizerLoop:   The loop has been parallelized with HELIX
Parallelizer: parallelizerLoop: Exit
Parallelizer:    Keep track of basic blocks being modified by the parallelization
Parallelizer:    Loop 24 cannot be parallelized because one of its parent has been parallelized already
Parallelizer: Exit
noelle-meta-clean parallelized_unoptimized.bc parallelized_unoptimized.bc
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CleanMetadata.so -CleanMetadata -clean-loop-metadata=true -clean-prof-metadata=true -clean-pdg-metadata=true parallelized_unoptimized.bc -o parallelized_unoptimized.bc
noelle/core/Clean Loop Metadata
noelle/core/Clean PDG Metadata
noelle/core/Clean profiler metadata
opt --strip-named-metadata parallelized_unoptimized.bc -o parallelized_unoptimized.bc
clang -O3 -c -emit-llvm parallelized_unoptimized.bc -o baseline_parallelized.bc
clang -O3 -c -emit-llvm baseline_parallelized.bc -o baseline_parallelized.bc
cp baseline_parallelized.bc search.bc
make[1]: Leaving directory '/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/search'
