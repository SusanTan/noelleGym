make[1]: Entering directory '/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/toast'
./runEnablers.sh toast toast.bc large "-lm -lstdc++ -lpthread -ltermcap" -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier
/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/toast /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/toast
Cloning https://github.com/scampanoni/virgil.git
Cloning into 'threadpool'...
/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/toast
The IR has already been transformed for enabling parallelization
noelle-parallelizer baseline_with_metadata.bc -o baseline_parallelized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
noelle-meta-loop-embed baseline_with_metadata.bc -o afterLoopMetadata.bc
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopMetadata.so -LoopMetadata baseline_with_metadata.bc -o afterLoopMetadata.bc
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopMetadata.so -LoopMetadata baseline_with_metadata.bc -o afterLoopMetadata.bc
noelle-parallelization-planner afterLoopMetadata.bc -o baseline_with_parallel_plan.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
noelle-parallel-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Planner.so -planner afterLoopMetadata.bc -o baseline_with_parallel_plan.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Planner.so -planner afterLoopMetadata.bc -o baseline_with_parallel_plan.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Planner.so -planner afterLoopMetadata.bc -o baseline_with_parallel_plan.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
Planner: Start
Planner:  Fetching the program loops
Noelle: Filter out cold code
Noelle:  Function "main"
Noelle:     Loop "  %4 = getelementptr [13 x i8], [13 x i8]* @.str.12, i64 0, i64 0, !noelle.pdg.inst.id !10722" (3.039560e-08%)
Noelle:  Disable loop "0" as cold code
Noelle:     Loop "  %38 = icmp eq i32 %.01, 0, !noelle.pdg.inst.id !10822" (8.925403e+08%)
Noelle:  Function "ulaw_input"
Noelle:     Loop "  %3 = icmp ult i64 %indvars.iv, 160, !noelle.pdg.inst.id !66" (4.653093e+00%)
Noelle:  Function "process_encode"
Noelle:     Loop "  %exitcond = icmp eq i32 %.01, 1000000000, !noelle.pdg.inst.id !396" (4.206990e+00%)
Noelle:     Loop "  %14 = load i32 (i16*)*, i32 (i16*)** @input, align 8, !tbaa !387, !noelle.pdg.inst.id !49" (1.789432e+00%)
Noelle:  Function "gsm_encode"
Noelle:  Function "Gsm_Coder"
Noelle:     Loop "  %exitcond11 = icmp eq i64 %indvars.iv9, 4, !noelle.pdg.inst.id !139" (3.533278e-01%)
Noelle:     Loop "  %exitcond = icmp eq i64 %indvars.iv, 40, !noelle.pdg.inst.id !149" (9.815089e-03%)
Noelle:  Disable loop "6" as cold code
Noelle:  Function "Gsm_Long_Term_Predictor"
Noelle:  Function "Calculation_of_the_LTP_parameters"
Noelle:     Loop "  %exitcond36 = icmp eq i64 %indvars.iv34, 40, !noelle.pdg.inst.id !549" (7.628654e-03%)
Noelle:  Disable loop "7" as cold code
Noelle:     Loop "  %exitcond33 = icmp eq i64 %indvars.iv31, 40, !noelle.pdg.inst.id !605" (5.908317e-03%)
Noelle:  Disable loop "8" as cold code
Noelle:     Loop "  %exitcond30 = icmp eq i64 %indvars.iv28, 121, !noelle.pdg.inst.id !700" (2.497640e-01%)
Noelle:     Loop "  %exitcond27 = icmp eq i64 %indvars.iv25, 40, !noelle.pdg.inst.id !935" (6.409852e-03%)
Noelle:  Disable loop "10" as cold code
Noelle:     Loop "  %exitcond = icmp eq i64 %indvars.iv, 3, !noelle.pdg.inst.id !965" (5.527309e-04%)
Noelle:  Disable loop "11" as cold code
Noelle:  Function "Gsm_Short_Term_Analysis_Filter"
Noelle:  Function "Short_term_analysis_filtering"
Noelle:     Loop "  %6 = add nsw i32 %.01, -1, !noelle.pdg.inst.id !54" (1.526988e-01%)
Noelle:     Loop "  %exitcond = icmp eq i64 %indvars.iv, 8, !noelle.pdg.inst.id !67" (1.472721e-01%)
Noelle:  Function "Gsm_RPE_Encoding"
Noelle:  Disable "Gsm_RPE_Encoding" as cold function
Noelle:  Function "Gsm_LPC_Analysis"
Noelle:  Disable "Gsm_LPC_Analysis" as cold function
Noelle:  Function "Autocorrelation"
Noelle:  Disable "Autocorrelation" as cold function
Noelle:  Function "Weighting_filter"
Noelle:  Disable "Weighting_filter" as cold function
Noelle:  Function "Gsm_Preprocess"
Noelle:  Disable "Gsm_Preprocess" as cold function
Noelle:  Function "Long_term_analysis_filtering"
Noelle:  Disable "Long_term_analysis_filtering" as cold function
Noelle:  Function "Reflection_coefficients"
Noelle:  Disable "Reflection_coefficients" as cold function
Noelle:  Function "APCM_quantization"
Noelle:  Disable "APCM_quantization" as cold function
Noelle:  Function "APCM_inverse_quantization"
Noelle:  Disable "APCM_inverse_quantization" as cold function
Noelle:  Function "gsm_div"
Noelle:  Disable "gsm_div" as cold function
Noelle:  Function "RPE_grid_selection"
Noelle:  Disable "RPE_grid_selection" as cold function
Noelle:  Function "RPE_grid_positioning"
Noelle:  Disable "RPE_grid_positioning" as cold function
Noelle:  Function "LARp_to_rp"
Noelle:  Disable "LARp_to_rp" as cold function
Noelle:  Function "gsm_asr"
Noelle:  Disable "gsm_asr" as cold function
Noelle:  Function "Coefficients_0_12"
Noelle:  Disable "Coefficients_0_12" as cold function
Noelle:  Function "Coefficients_27_39"
Noelle:  Disable "Coefficients_27_39" as cold function
Noelle:  Function "Quantization_and_coding"
Noelle:  Disable "Quantization_and_coding" as cold function
Noelle:  Function "Decoding_of_the_coded_Log_Area_Ratios"
Noelle:  Disable "Decoding_of_the_coded_Log_Area_Ratios" as cold function
Noelle:  Function "Transformation_to_Log_Area_Ratios"
Noelle:  Disable "Transformation_to_Log_Area_Ratios" as cold function
Noelle:  Function "gsm_norm"
Noelle:  Disable "gsm_norm" as cold function
Noelle:  Function "Coefficients_13_26"
Noelle:  Disable "Coefficients_13_26" as cold function
Noelle:  Function "APCM_quantization_xmaxc_to_exp_mant"
Noelle:  Disable "APCM_quantization_xmaxc_to_exp_mant" as cold function
Noelle:  Function "gsm_mult"
Noelle:  Disable "gsm_mult" as cold function
Noelle:  Function "Coefficients_40_159"
Noelle:  Disable "Coefficients_40_159" as cold function
Noelle:  Function "gsm_sub"
Noelle:  Disable "gsm_sub" as cold function
Noelle:  Function "gsm_asl"
Noelle:  Disable "gsm_asl" as cold function
Noelle:  Function "gsm_add"
Noelle:  Disable "gsm_add" as cold function
Noelle:  Function "audio_init_input"
Noelle:  Disable "audio_init_input" as cold function
Noelle:  Function "get_u32"
Noelle:  Disable "get_u32" as cold function
Noelle:  Function "parse_argv0"
Noelle:  Disable "parse_argv0" as cold function
Noelle:  Function "okay_as_input"
Noelle:  Disable "okay_as_input" as cold function
Noelle:  Function "gsm_option"
Noelle:  Disable "gsm_option" as cold function
Noelle:  Function "prepare_io"
Noelle:  Disable "prepare_io" as cold function
Noelle:  Function "endname"
Noelle:  Disable "endname" as cold function
Noelle:  Function "open_output"
Noelle:  Disable "open_output" as cold function
Noelle:  Function "gsm_create"
Noelle:  Disable "gsm_create" as cold function
Noelle:  Function "set_format"
Noelle:  Disable "set_format" as cold function
Noelle:  Function "gsm_destroy"
Noelle:  Disable "gsm_destroy" as cold function
Noelle:  Function "catch_signals"
Noelle:  Disable "catch_signals" as cold function
Noelle:  Function "emalloc"
Noelle:  Disable "emalloc" as cold function
Noelle:  Function "fstat"
Noelle:  Disable "fstat" as cold function
Noelle:  Function "alaw_input"
Noelle:  Disable "alaw_input" as cold function
Noelle:  Function "Gsm_Long_Term_Synthesis_Filtering"
Noelle:  Disable "Gsm_Long_Term_Synthesis_Filtering" as cold function
Noelle:  Function "ulaw_output"
Noelle:  Disable "ulaw_output" as cold function
Noelle:  Function "linear_output"
Noelle:  Disable "linear_output" as cold function
Noelle:  Function "linear_input"
Noelle:  Disable "linear_input" as cold function
Noelle:  Function "gsm_L_asl"
Noelle:  Disable "gsm_L_asl" as cold function
Noelle:  Function "gsm_abs"
Noelle:  Disable "gsm_abs" as cold function
Noelle:  Function "Postprocessing"
Noelle:  Disable "Postprocessing" as cold function
Noelle:  Function "Gsm_Decoder"
Noelle:  Disable "Gsm_Decoder" as cold function
Noelle:  Function "gsm_L_mult"
Noelle:  Disable "gsm_L_mult" as cold function
Noelle:  Function "gsm_L_add"
Noelle:  Disable "gsm_L_add" as cold function
Noelle:  Function "gsm_L_sub"
Noelle:  Disable "gsm_L_sub" as cold function
Noelle:  Function "alaw_output"
Noelle:  Disable "alaw_output" as cold function
Noelle:  Function "gsm_decode"
Noelle:  Disable "gsm_decode" as cold function
Noelle:  Function "put_u32"
Noelle:  Disable "put_u32" as cold function
Noelle:  Function "audio_init_output"
Noelle:  Disable "audio_init_output" as cold function
Noelle:  Function "gsm_L_asr"
Noelle:  Disable "gsm_L_asr" as cold function
Noelle:  Function "process"
Noelle:  Disable "process" as cold function
Noelle:  Function "onintr"
Noelle:  Disable "onintr" as cold function
Noelle:  Function "help"
Noelle:  Disable "help" as cold function
Noelle:  Function "version"
Noelle:  Disable "version" as cold function
Noelle:  Function "Gsm_RPE_Decoding"
Noelle:  Disable "Gsm_RPE_Decoding" as cold function
Noelle:  Function "ok_to_replace"
Noelle:  Disable "ok_to_replace" as cold function
Noelle:  Function "codename"
Noelle:  Disable "codename" as cold function
Noelle:  Function "length_okay"
Noelle:  Disable "length_okay" as cold function
Noelle:  Function "plainname"
Noelle:  Disable "plainname" as cold function
Noelle:  Function "gsm_mult_r"
Noelle:  Disable "gsm_mult_r" as cold function
Noelle:  Function "Short_term_synthesis_filtering"
Noelle:  Disable "Short_term_synthesis_filtering" as cold function
Noelle:  Function "Gsm_Short_Term_Synthesis_Filter"
Noelle:  Disable "Gsm_Short_Term_Synthesis_Filter" as cold function
Noelle:  Function "getchar"
Noelle:  Disable "getchar" as cold function
Noelle:  Function "generic_init"
Noelle:  Disable "generic_init" as cold function
Noelle:  Function "suffix"
Noelle:  Disable "suffix" as cold function
Noelle:  Function "normalname"
Noelle:  Disable "normalname" as cold function
Noelle:  Function "grok_format"
Noelle:  Disable "grok_format" as cold function
Noelle:  Function "update_own"
Noelle:  Disable "update_own" as cold function
Noelle:  Function "update_mode"
Noelle:  Disable "update_mode" as cold function
Noelle:  Function "update_times"
Noelle:  Disable "update_times" as cold function
Noelle:  Function "process_decode"
Noelle:  Disable "process_decode" as cold function
Noelle:  Function "open_input"
Noelle:  Disable "open_input" as cold function
Planner:    There are 8 loops in the program we are going to consider
Planner:  Filter out loops not worth considering
Planner:    Loop 57 has 3.019279e+02 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 12 has 4.874931e+00 number of iterations on average per loop invocation
Planner:      It is too low. The threshold is 12
Planner:    Loop 5 has 5.921454e+00 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 8 has 1.102200e+01 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:  There are 4 loop nesting trees in the program
Planner:    ID: 56 (1)
Planner:      Function: "Short_term_analysis_filtering"
Planner:      Loop: "  %6 = add nsw i32 %.01, -1, !noelle.pdg.inst.id !54"
Planner:      Loop nesting level: 1
Planner:      Hotness = 1.526988e-01 %
Planner:      Average instructions per invocation = 1.248300e+04 %
Planner:      Average iterations per invocation = 4.087497e+01 %
Planner:    
Planner:    ID: 4 (1)
Planner:      Function: "process_encode"
Planner:      Loop: "  %exitcond = icmp eq i32 %.01, 1000000000, !noelle.pdg.inst.id !396"
Planner:      Loop nesting level: 1
Planner:      Hotness = 4.206990e+00 %
Planner:      Average instructions per invocation = 9.965365e+09 %
Planner:      Average iterations per invocation = 7.158279e+08 %
Planner:    
Planner:    ID: 1 (1)
Planner:      Function: "main"
Planner:      Loop: "  %38 = icmp eq i32 %.01, 0, !noelle.pdg.inst.id !10822"
Planner:      Loop nesting level: 1
Planner:      Hotness = 8.925403e+08 %
Planner:      Average instructions per invocation = 2.114217e+18 %
Planner:      Average iterations per invocation = 2.147484e+09 %
Planner:    
Planner:    ID: 19 (1)
Planner:      Function: "Calculation_of_the_LTP_parameters"
Planner:      Loop: "  %exitcond30 = icmp eq i64 %indvars.iv28, 121, !noelle.pdg.inst.id !700"
Planner:      Loop nesting level: 1
Planner:      Hotness = 2.497640e-01 %
Planner:      Average instructions per invocation = 2.041800e+04 %
Planner:      Average iterations per invocation = 8.199997e+01 %
Planner:    
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
Planner: LoopSelector:  Loop 56 saves only 4.211970e-02 when parallelized. Skip it
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [33 x i8], align 16, !noelle.pdg.inst.id !379
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %1 = alloca [160 x i16], align 16, !noelle.pdg.inst.id !378
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [33 x i8], align 16, !noelle.pdg.inst.id !379
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %1 = alloca [160 x i16], align 16, !noelle.pdg.inst.id !378
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
Planner: LoopSelector:  Loop 4 saves only 1.208783e+00 when parallelized. Skip it
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
Planner: LoopSelector: Start
Planner: LoopSelector:   Order of loops and their maximum savings
Planner: LoopSelector:    Loop 1
Planner: LoopSelector:      Function: "main"
Planner: LoopSelector:      Loop nesting level: 1
Planner: LoopSelector:      "  %38 = icmp eq i32 %.01, 0, !noelle.pdg.inst.id !10822"
Planner: LoopSelector:      Coverage: 8.925403e+08%
Planner: LoopSelector:      Whole-program savings = 1.269218e+01%
Planner: LoopSelector:      Loop savings = 1.422029e-06%
Planner: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [40 x i16], align 16, !noelle.pdg.inst.id !543
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [40 x i16], align 16, !noelle.pdg.inst.id !543
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
Planner: LoopSelector:  Loop 19 saves only 2.467793e-01 when parallelized. Skip it
Planner:   Maximum time saved = 1.269218e+01% (30064770890)
Planner:   Maximum time saved with DOALL only = 0.000000e+00% (0)
Planner: Exit
noelle-rm-function -function-name=SIMONE_CAMPANONI_IS_GOING_TO_REMOVE_THIS_FUNCTION code_with_prototypes.bc -o code_to_parallelize.bc
NOELLE: DeadFunctions: Start
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/RemoveFunction.so -noelle-rm-function -function-name=SIMONE_CAMPANONI_IS_GOING_TO_REMOVE_THIS_FUNCTION code_with_prototypes.bc -o code_to_parallelize.bc
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/RemoveFunction.so -noelle-rm-function -function-name=SIMONE_CAMPANONI_IS_GOING_TO_REMOVE_THIS_FUNCTION code_with_prototypes.bc -o code_to_parallelize.bc
RemoveFunction: Start
RemoveFunction:   Check if function "SIMONE_CAMPANONI_IS_GOING_TO_REMOVE_THIS_FUNCTION" exists
RemoveFunction:     The function exists
RemoveFunction:   Remove the function
RemoveFunction: Exit
NOELLE: DeadFunctions: Exit
noelle-parallelizer-loop code_to_parallelize.bc -o parallelized_unoptimized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
noelle-parallel-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Parallelizer.so -parallelizer code_to_parallelize.bc -o parallelized_unoptimized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Parallelizer.so -parallelizer code_to_parallelize.bc -o parallelized_unoptimized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Parallelizer.so -parallelizer code_to_parallelize.bc -o parallelized_unoptimized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
Parallelizer: Start
Parallelizer:  Analyzing the module code_to_parallelize.bc
Parallelizer:  Fetching the program loops
Noelle: Filter out cold code
Noelle:  Function "main"
Noelle:     Loop "  %4 = getelementptr [13 x i8], [13 x i8]* @.str.12, i64 0, i64 0, !noelle.pdg.inst.id !10724" (3.039560e-08%)
Noelle:  Disable loop "0" as cold code
Noelle:     Loop "  %38 = icmp eq i32 %.01, 0, !noelle.pdg.inst.id !10824" (8.472795e+01%)
Noelle:  Function "ulaw_input"
Noelle:     Loop "  %3 = icmp ult i64 %indvars.iv, 160, !noelle.pdg.inst.id !68" (4.653093e+00%)
Noelle:  Function "process_encode"
Noelle:     Loop "  %exitcond = icmp eq i32 %.01, 1000000000, !noelle.pdg.inst.id !398" (4.206990e+00%)
Noelle:     Loop "  %14 = load i32 (i16*)*, i32 (i16*)** @input, align 8, !tbaa !389, !noelle.pdg.inst.id !51" (1.789432e+00%)
Noelle:  Function "gsm_encode"
Noelle:  Function "Gsm_Coder"
Noelle:     Loop "  %exitcond11 = icmp eq i64 %indvars.iv9, 4, !noelle.pdg.inst.id !141" (3.533278e-01%)
Noelle:     Loop "  %exitcond = icmp eq i64 %indvars.iv, 40, !noelle.pdg.inst.id !151" (9.815089e-03%)
Noelle:  Disable loop "6" as cold code
Noelle:  Function "Gsm_Long_Term_Predictor"
Noelle:  Function "Calculation_of_the_LTP_parameters"
Noelle:     Loop "  %exitcond36 = icmp eq i64 %indvars.iv34, 40, !noelle.pdg.inst.id !551" (7.628654e-03%)
Noelle:  Disable loop "7" as cold code
Noelle:     Loop "  %exitcond33 = icmp eq i64 %indvars.iv31, 40, !noelle.pdg.inst.id !607" (5.908317e-03%)
Noelle:  Disable loop "8" as cold code
Noelle:     Loop "  %exitcond30 = icmp eq i64 %indvars.iv28, 121, !noelle.pdg.inst.id !702" (2.497640e-01%)
Noelle:     Loop "  %exitcond27 = icmp eq i64 %indvars.iv25, 40, !noelle.pdg.inst.id !937" (6.409852e-03%)
Noelle:  Disable loop "10" as cold code
Noelle:     Loop "  %exitcond = icmp eq i64 %indvars.iv, 3, !noelle.pdg.inst.id !967" (5.527309e-04%)
Noelle:  Disable loop "11" as cold code
Noelle:  Function "Gsm_Short_Term_Analysis_Filter"
Noelle:  Function "Short_term_analysis_filtering"
Noelle:     Loop "  %6 = add nsw i32 %.01, -1, !noelle.pdg.inst.id !56" (1.526988e-01%)
Noelle:     Loop "  %exitcond = icmp eq i64 %indvars.iv, 8, !noelle.pdg.inst.id !69" (1.472721e-01%)
Noelle:  Function "Gsm_RPE_Encoding"
Noelle:  Disable "Gsm_RPE_Encoding" as cold function
Noelle:  Function "Gsm_LPC_Analysis"
Noelle:  Disable "Gsm_LPC_Analysis" as cold function
Noelle:  Function "Autocorrelation"
Noelle:  Disable "Autocorrelation" as cold function
Noelle:  Function "Weighting_filter"
Noelle:  Disable "Weighting_filter" as cold function
Noelle:  Function "Gsm_Preprocess"
Noelle:  Disable "Gsm_Preprocess" as cold function
Noelle:  Function "Long_term_analysis_filtering"
Noelle:  Disable "Long_term_analysis_filtering" as cold function
Noelle:  Function "Reflection_coefficients"
Noelle:  Disable "Reflection_coefficients" as cold function
Noelle:  Function "APCM_quantization"
Noelle:  Disable "APCM_quantization" as cold function
Noelle:  Function "APCM_inverse_quantization"
Noelle:  Disable "APCM_inverse_quantization" as cold function
Noelle:  Function "gsm_div"
Noelle:  Disable "gsm_div" as cold function
Noelle:  Function "RPE_grid_selection"
Noelle:  Disable "RPE_grid_selection" as cold function
Noelle:  Function "RPE_grid_positioning"
Noelle:  Disable "RPE_grid_positioning" as cold function
Noelle:  Function "LARp_to_rp"
Noelle:  Disable "LARp_to_rp" as cold function
Noelle:  Function "gsm_asr"
Noelle:  Disable "gsm_asr" as cold function
Noelle:  Function "Coefficients_27_39"
Noelle:  Disable "Coefficients_27_39" as cold function
Noelle:  Function "Coefficients_0_12"
Noelle:  Disable "Coefficients_0_12" as cold function
Noelle:  Function "Quantization_and_coding"
Noelle:  Disable "Quantization_and_coding" as cold function
Noelle:  Function "Decoding_of_the_coded_Log_Area_Ratios"
Noelle:  Disable "Decoding_of_the_coded_Log_Area_Ratios" as cold function
Noelle:  Function "Transformation_to_Log_Area_Ratios"
Noelle:  Disable "Transformation_to_Log_Area_Ratios" as cold function
Noelle:  Function "gsm_norm"
Noelle:  Disable "gsm_norm" as cold function
Noelle:  Function "Coefficients_13_26"
Noelle:  Disable "Coefficients_13_26" as cold function
Noelle:  Function "APCM_quantization_xmaxc_to_exp_mant"
Noelle:  Disable "APCM_quantization_xmaxc_to_exp_mant" as cold function
Noelle:  Function "gsm_mult"
Noelle:  Disable "gsm_mult" as cold function
Noelle:  Function "Coefficients_40_159"
Noelle:  Disable "Coefficients_40_159" as cold function
Noelle:  Function "gsm_sub"
Noelle:  Disable "gsm_sub" as cold function
Noelle:  Function "gsm_asl"
Noelle:  Disable "gsm_asl" as cold function
Noelle:  Function "gsm_add"
Noelle:  Disable "gsm_add" as cold function
Noelle:  Function "audio_init_input"
Noelle:  Disable "audio_init_input" as cold function
Noelle:  Function "get_u32"
Noelle:  Disable "get_u32" as cold function
Noelle:  Function "parse_argv0"
Noelle:  Disable "parse_argv0" as cold function
Noelle:  Function "okay_as_input"
Noelle:  Disable "okay_as_input" as cold function
Noelle:  Function "gsm_option"
Noelle:  Disable "gsm_option" as cold function
Noelle:  Function "prepare_io"
Noelle:  Disable "prepare_io" as cold function
Noelle:  Function "endname"
Noelle:  Disable "endname" as cold function
Noelle:  Function "open_output"
Noelle:  Disable "open_output" as cold function
Noelle:  Function "gsm_create"
Noelle:  Disable "gsm_create" as cold function
Noelle:  Function "set_format"
Noelle:  Disable "set_format" as cold function
Noelle:  Function "catch_signals"
Noelle:  Disable "catch_signals" as cold function
Noelle:  Function "gsm_destroy"
Noelle:  Disable "gsm_destroy" as cold function
Noelle:  Function "emalloc"
Noelle:  Disable "emalloc" as cold function
Noelle:  Function "gsm_decode"
Noelle:  Disable "gsm_decode" as cold function
Noelle:  Function "Short_term_synthesis_filtering"
Noelle:  Disable "Short_term_synthesis_filtering" as cold function
Noelle:  Function "Postprocessing"
Noelle:  Disable "Postprocessing" as cold function
Noelle:  Function "Gsm_Short_Term_Synthesis_Filter"
Noelle:  Disable "Gsm_Short_Term_Synthesis_Filter" as cold function
Noelle:  Function "Gsm_Long_Term_Synthesis_Filtering"
Noelle:  Disable "Gsm_Long_Term_Synthesis_Filtering" as cold function
Noelle:  Function "Gsm_RPE_Decoding"
Noelle:  Disable "Gsm_RPE_Decoding" as cold function
Noelle:  Function "Gsm_Decoder"
Noelle:  Disable "Gsm_Decoder" as cold function
Noelle:  Function "open_input"
Noelle:  Disable "open_input" as cold function
Noelle:  Function "gsm_L_asr"
Noelle:  Disable "gsm_L_asr" as cold function
Noelle:  Function "gsm_L_asl"
Noelle:  Disable "gsm_L_asl" as cold function
Noelle:  Function "gsm_L_sub"
Noelle:  Disable "gsm_L_sub" as cold function
Noelle:  Function "gsm_L_add"
Noelle:  Disable "gsm_L_add" as cold function
Noelle:  Function "gsm_L_mult"
Noelle:  Disable "gsm_L_mult" as cold function
Noelle:  Function "gsm_abs"
Noelle:  Disable "gsm_abs" as cold function
Noelle:  Function "gsm_mult_r"
Noelle:  Disable "gsm_mult_r" as cold function
Noelle:  Function "fstat"
Noelle:  Disable "fstat" as cold function
Noelle:  Function "suffix"
Noelle:  Disable "suffix" as cold function
Noelle:  Function "normalname"
Noelle:  Disable "normalname" as cold function
Noelle:  Function "getchar"
Noelle:  Disable "getchar" as cold function
Noelle:  Function "ok_to_replace"
Noelle:  Disable "ok_to_replace" as cold function
Noelle:  Function "length_okay"
Noelle:  Disable "length_okay" as cold function
Noelle:  Function "plainname"
Noelle:  Disable "plainname" as cold function
Noelle:  Function "audio_init_output"
Noelle:  Disable "audio_init_output" as cold function
Noelle:  Function "ulaw_output"
Noelle:  Disable "ulaw_output" as cold function
Noelle:  Function "linear_output"
Noelle:  Disable "linear_output" as cold function
Noelle:  Function "alaw_output"
Noelle:  Disable "alaw_output" as cold function
Noelle:  Function "generic_init"
Noelle:  Disable "generic_init" as cold function
Noelle:  Function "onintr"
Noelle:  Disable "onintr" as cold function
Noelle:  Function "help"
Noelle:  Disable "help" as cold function
Noelle:  Function "version"
Noelle:  Disable "version" as cold function
Noelle:  Function "update_own"
Noelle:  Disable "update_own" as cold function
Noelle:  Function "update_mode"
Noelle:  Disable "update_mode" as cold function
Noelle:  Function "update_times"
Noelle:  Disable "update_times" as cold function
Noelle:  Function "process_decode"
Noelle:  Disable "process_decode" as cold function
Noelle:  Function "grok_format"
Noelle:  Disable "grok_format" as cold function
Noelle:  Function "codename"
Noelle:  Disable "codename" as cold function
Noelle:  Function "process"
Noelle:  Disable "process" as cold function
Noelle:  Function "linear_input"
Noelle:  Disable "linear_input" as cold function
Noelle:  Function "alaw_input"
Noelle:  Disable "alaw_input" as cold function
Noelle:  Function "put_u32"
Noelle:  Disable "put_u32" as cold function
Parallelizer:    There are 8 loops in the program we are going to consider
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
Parallelizer: parallelizerLoop: Start
Parallelizer: parallelizerLoop:   Function = "main"
Parallelizer: parallelizerLoop:   Loop 1 = "  %38 = icmp eq i32 %.01, 0, !noelle.pdg.inst.id !10824"
Parallelizer: parallelizerLoop:   Nesting level = 1
Parallelizer: parallelizerLoop:   Number of threads to extract = 8
Parallelizer: parallelizerLoop:   Environment: live-in and live-out values
Parallelizer: parallelizerLoop:   Environment:   Live-in 0 =   %28 = sub nsw i32 %0, %27, !noelle.pdg.inst.id !10815
Parallelizer: parallelizerLoop:   Environment:   Live-in 1 =   %31 = getelementptr inbounds i8*, i8** %1, i64 %30, !noelle.pdg.inst.id !10819
Parallelizer: parallelizerLoop:   Environment:   Live-in 2 =   %32 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !noelle.pdg.inst.id !727
Parallelizer: parallelizerLoop:   Environment:   Live-in 3 =   %33 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !10719, !noelle.pdg.inst.id !729
Parallelizer: parallelizerLoop:   Environment:   Live-in 4 =   %34 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !noelle.pdg.inst.id !731
Parallelizer: parallelizerLoop:   The loop has not been parallelized
Parallelizer: parallelizerLoop: Exit
Parallelizer: Exit
noelle-meta-clean parallelized_unoptimized.bc parallelized_unoptimized.bc
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CleanMetadata.so -CleanMetadata -clean-loop-metadata=true -clean-prof-metadata=true -clean-pdg-metadata=true parallelized_unoptimized.bc -o parallelized_unoptimized.bc
noelle/core/Clean Loop Metadata
noelle/core/Clean PDG Metadata
noelle/core/Clean profiler metadata
opt --strip-named-metadata parallelized_unoptimized.bc -o parallelized_unoptimized.bc
clang -O3 -c -emit-llvm parallelized_unoptimized.bc -o baseline_parallelized.bc
clang -O3 -c -emit-llvm baseline_parallelized.bc -o baseline_parallelized.bc
cp baseline_parallelized.bc toast.bc
make[1]: Leaving directory '/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/toast'
