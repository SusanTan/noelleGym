make[1]: Entering directory '/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/djpeg'
./runEnablers.sh djpeg djpeg.bc large "-lm -lstdc++ -lpthread -ltermcap" -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier
/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/djpeg /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/djpeg
Cloning https://github.com/scampanoni/virgil.git
Cloning into 'threadpool'...
/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/djpeg
The IR has already been transformed for enabling parallelization
noelle-parallelizer baseline_with_metadata.bc -o baseline_parallelized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix
noelle-meta-loop-embed baseline_with_metadata.bc -o afterLoopMetadata.bc
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopMetadata.so -LoopMetadata baseline_with_metadata.bc -o afterLoopMetadata.bc
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopMetadata.so -LoopMetadata baseline_with_metadata.bc -o afterLoopMetadata.bc
noelle-parallelization-planner afterLoopMetadata.bc -o baseline_with_parallel_plan.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix
noelle-parallel-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Planner.so -planner afterLoopMetadata.bc -o baseline_with_parallel_plan.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Planner.so -planner afterLoopMetadata.bc -o baseline_with_parallel_plan.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Planner.so -planner afterLoopMetadata.bc -o baseline_with_parallel_plan.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix
Planner: Start
Planner:  Fetching the program loops
Noelle: Filter out cold code
Noelle:  Function "main"
Noelle:     Loop "  %103 = load i8**, i8*** %92, align 8, !tbaa !2847, !noelle.pdg.inst.id !363" (8.362432e+01%)
Noelle:  Function "decode_mcu_AC_refine"
Noelle:     Loop "  %41 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %40, !noelle.pdg.inst.id !507" (0.000000e+00%)
Noelle:  Disable loop "1" as cold code
Noelle:     Loop "  %87 = icmp slt i32 %85, 8, !noelle.pdg.inst.id !564" (8.269956e-01%)
Noelle:     Loop "  %172 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %167, !noelle.pdg.inst.id !688" (4.825221e-01%)
Noelle:     Loop "  %255 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %252, !noelle.pdg.inst.id !802" (3.419604e+00%)
Noelle:     Loop "  %312 = add nsw i64 %310, -1, !noelle.pdg.inst.id !895" (0.000000e+00%)
Noelle:  Disable loop "5" as cold code
Noelle:     Loop "  %322 = add nsw i64 %321, -1, !noelle.pdg.inst.id !915" (0.000000e+00%)
Noelle:  Disable loop "6" as cold code
Noelle:  Function "ycc_rgb_convert"
Noelle:     Loop "  %34 = load i8**, i8*** %1, align 8, !tbaa !88, !noelle.pdg.inst.id !89" (3.460737e+00%)
Noelle:     Loop "  %47 = getelementptr inbounds i8, i8* %37, i64 %45, !noelle.pdg.inst.id !104" (3.460585e+00%)
Noelle:  Function "jpeg_idct_islow"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8, !noelle.pdg.inst.id !247" (1.444324e+00%)
Noelle:     Loop "  %177 = getelementptr inbounds i8*, i8** %3, i64 %175, !noelle.pdg.inst.id !410" (1.787002e+00%)
Noelle:  Function "h2v2_fancy_upsample"
Noelle:     Loop "  %13 = getelementptr inbounds i8*, i8** %2, i64 %11, !noelle.pdg.inst.id !55" (2.517421e+00%)
Noelle:     Loop "  %63 = getelementptr inbounds i8, i8* %62, i64 1, !noelle.pdg.inst.id !114" (1.258199e+00%)
Noelle:     Loop "  %142 = getelementptr inbounds i8, i8* %141, i64 1, !noelle.pdg.inst.id !212" (1.258199e+00%)
Noelle:  Function "decode_mcu_AC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %6, i64 0, i32 2, i32 1, i64 %36, !noelle.pdg.inst.id !271" (0.000000e+00%)
Noelle:  Disable loop "14" as cold code
Noelle:     Loop "  %79 = icmp slt i32 %76, 8, !noelle.pdg.inst.id !340" (1.456225e+00%)
Noelle:  Function "jpeg_fill_bit_buffer"
Noelle:     Loop "  %18 = load i32, i32* %11, align 8, !tbaa !212, !noelle.pdg.inst.id !62" (4.586948e-01%)
Noelle:     Loop "  %47 = icmp eq i64 %46, 0, !noelle.pdg.inst.id !254" (2.035310e-03%)
Noelle:  Disable loop "17" as cold code
Noelle:  Function "consume_data"
Noelle:     Loop "  %15 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %14, !noelle.pdg.inst.id !208" (1.555093e-04%)
Noelle:  Disable loop "18" as cold code
Noelle:     Loop "  %52 = icmp ult i32 %50, %49, !noelle.pdg.inst.id !255" (5.914686e-01%)
Noelle:     Loop "  %54 = load i32, i32* %7, align 8, !tbaa !198, !noelle.pdg.inst.id !104" (5.913532e-01%)
Noelle:     Loop "  %60 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %58, !noelle.pdg.inst.id !271" (4.695188e-01%)
Noelle:     Loop "  %129 = add nsw i64 %127, %51, !noelle.pdg.inst.id !371" (7.355448e-08%)
Noelle:  Disable loop "22" as cold code
Noelle:     Loop "  %135 = add i64 %134, %133, !noelle.pdg.inst.id !378" (4.975744e-08%)
Noelle:  Disable loop "23" as cold code
Noelle:     Loop "  %158 = getelementptr inbounds [64 x i16], [64 x i16]* %156, i64 1, !noelle.pdg.inst.id !405" (2.379704e-08%)
Noelle:  Disable loop "24" as cold code
Noelle:     Loop "  %101 = add nsw i64 %99, %51, !noelle.pdg.inst.id !335" (4.975744e-08%)
Noelle:  Disable loop "25" as cold code
Noelle:     Loop "  %107 = add i64 %106, %105, !noelle.pdg.inst.id !342" (4.975744e-08%)
Noelle:  Disable loop "26" as cold code
Noelle:     Loop "  %83 = sext i32 %82 to i64, !noelle.pdg.inst.id !301" (2.122987e-01%)
Noelle:     Loop "  %91 = getelementptr inbounds [64 x i16], [64 x i16]* %89, i64 1, !noelle.pdg.inst.id !310" (9.968811e-02%)
Noelle:  Disable loop "28" as cold code
Noelle:  Function "decode_mcu_DC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %36, !noelle.pdg.inst.id !430" (0.000000e+00%)
Noelle:  Disable loop "29" as cold code
Noelle:     Loop "  %72 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %69, !noelle.pdg.inst.id !477" (1.782945e-01%)
Noelle:  Function "decode_mcu_DC_refine"
Noelle:  Disable "decode_mcu_DC_refine" as cold function
Noelle:  Function "decompress_data"
Noelle:  Disable "decompress_data" as cold function
Noelle:  Function "jpeg_huff_decode"
Noelle:  Disable "jpeg_huff_decode" as cold function
Noelle:  Function "sep_upsample"
Noelle:  Disable "sep_upsample" as cold function
Noelle:  Function "access_virt_barray"
Noelle:  Disable "access_virt_barray" as cold function
Noelle:  Function "process_data_context_main"
Noelle:  Disable "process_data_context_main" as cold function
Noelle:  Function "jpeg_start_decompress"
Noelle:  Disable "jpeg_start_decompress" as cold function
Noelle:  Function "fill_input_buffer"
Noelle:  Disable "fill_input_buffer" as cold function
Noelle:  Function "put_pixel_rows"
Noelle:  Disable "put_pixel_rows" as cold function
Noelle:  Function "start_pass_phuff_decoder"
Noelle:  Disable "start_pass_phuff_decoder" as cold function
Noelle:  Function "jpeg_make_d_derived_tbl"
Noelle:  Disable "jpeg_make_d_derived_tbl" as cold function
Noelle:  Function "read_markers"
Noelle:  Disable "read_markers" as cold function
Noelle:  Function "realize_virt_arrays"
Noelle:  Disable "realize_virt_arrays" as cold function
Noelle:  Function "jinit_master_decompress"
Noelle:  Disable "jinit_master_decompress" as cold function
Noelle:  Function "fullsize_upsample"
Noelle:  Disable "fullsize_upsample" as cold function
Noelle:  Function "jinit_color_deconverter"
Noelle:  Disable "jinit_color_deconverter" as cold function
Noelle:  Function "parse_switches"
Noelle:  Disable "parse_switches" as cold function
Noelle:  Function "keymatch"
Noelle:  Disable "keymatch" as cold function
Noelle:  Function "jzero_far"
Noelle:  Disable "jzero_far" as cold function
Noelle:  Function "alloc_small"
Noelle:  Disable "alloc_small" as cold function
Noelle:  Function "consume_markers"
Noelle:  Disable "consume_markers" as cold function
Noelle:  Function "start_input_pass"
Noelle:  Disable "start_input_pass" as cold function
Noelle:  Function "alloc_sarray"
Noelle:  Disable "alloc_sarray" as cold function
Noelle:  Function "next_marker"
Noelle:  Disable "next_marker" as cold function
Noelle:  Function "start_pass_main"
Noelle:  Disable "start_pass_main" as cold function
Noelle:  Function "emit_message"
Noelle:  Disable "emit_message" as cold function
Noelle:  Function "start_pass"
Noelle:  Disable "start_pass" as cold function
Noelle:  Function "jpeg_calc_output_dimensions"
Noelle:  Disable "jpeg_calc_output_dimensions" as cold function
Noelle:  Function "get_sof"
Noelle:  Disable "get_sof" as cold function
Noelle:  Function "free_pool"
Noelle:  Disable "free_pool" as cold function
Noelle:  Function "get_app0"
Noelle:  Disable "get_app0" as cold function
Noelle:  Function "start_output_pass"
Noelle:  Disable "start_output_pass" as cold function
Noelle:  Function "jinit_write_ppm"
Noelle:  Disable "jinit_write_ppm" as cold function
Noelle:  Function "self_destruct"
Noelle:  Disable "self_destruct" as cold function
Noelle:  Function "jinit_d_main_controller"
Noelle:  Disable "jinit_d_main_controller" as cold function
Noelle:  Function "start_input_pass.105"
Noelle:  Disable "start_input_pass.105" as cold function
Noelle:  Function "request_virt_barray"
Noelle:  Disable "request_virt_barray" as cold function
Noelle:  Function "jinit_upsampler"
Noelle:  Disable "jinit_upsampler" as cold function
Noelle:  Function "alloc_large"
Noelle:  Disable "alloc_large" as cold function
Noelle:  Function "jpeg_CreateDecompress"
Noelle:  Disable "jpeg_CreateDecompress" as cold function
Noelle:  Function "jinit_d_coef_controller"
Noelle:  Disable "jinit_d_coef_controller" as cold function
Noelle:  Function "jdiv_round_up"
Noelle:  Disable "jdiv_round_up" as cold function
Noelle:  Function "jpeg_read_header"
Noelle:  Disable "jpeg_read_header" as cold function
Noelle:  Function "jinit_marker_reader"
Noelle:  Disable "jinit_marker_reader" as cold function
Noelle:  Function "jinit_inverse_dct"
Noelle:  Disable "jinit_inverse_dct" as cold function
Noelle:  Function "jpeg_consume_input"
Noelle:  Disable "jpeg_consume_input" as cold function
Noelle:  Function "prepare_for_output_pass"
Noelle:  Disable "prepare_for_output_pass" as cold function
Noelle:  Function "jinit_memory_mgr"
Noelle:  Disable "jinit_memory_mgr" as cold function
Noelle:  Function "jinit_phuff_decoder"
Noelle:  Disable "jinit_phuff_decoder" as cold function
Noelle:  Function "jpeg_finish_decompress"
Noelle:  Disable "jpeg_finish_decompress" as cold function
Noelle:  Function "finish_input_pass"
Noelle:  Disable "finish_input_pass" as cold function
Noelle:  Function "jpeg_alloc_huff_table"
Noelle:  Disable "jpeg_alloc_huff_table" as cold function
Noelle:  Function "jround_up"
Noelle:  Disable "jround_up" as cold function
Noelle:  Function "jpeg_stdio_src"
Noelle:  Disable "jpeg_stdio_src" as cold function
Noelle:  Function "output_pass_setup"
Noelle:  Disable "output_pass_setup" as cold function
Noelle:  Function "jinit_input_controller"
Noelle:  Disable "jinit_input_controller" as cold function
Noelle:  Function "start_pass_dpost"
Noelle:  Disable "start_pass_dpost" as cold function
Noelle:  Function "reset_input_controller"
Noelle:  Disable "reset_input_controller" as cold function
Noelle:  Function "jpeg_std_error"
Noelle:  Disable "jpeg_std_error" as cold function
Noelle:  Function "jinit_d_post_controller"
Noelle:  Disable "jinit_d_post_controller" as cold function
Noelle:  Function "jpeg_alloc_quant_table"
Noelle:  Disable "jpeg_alloc_quant_table" as cold function
Noelle:  Function "start_output_ppm"
Noelle:  Disable "start_output_ppm" as cold function
Noelle:  Function "jpeg_get_large"
Noelle:  Disable "jpeg_get_large" as cold function
Noelle:  Function "jpeg_free_large"
Noelle:  Disable "jpeg_free_large" as cold function
Noelle:  Function "jpeg_destroy_decompress"
Noelle:  Disable "jpeg_destroy_decompress" as cold function
Noelle:  Function "reset_marker_reader"
Noelle:  Disable "reset_marker_reader" as cold function
Noelle:  Function "jpeg_destroy"
Noelle:  Disable "jpeg_destroy" as cold function
Noelle:  Function "finish_output_pass"
Noelle:  Disable "finish_output_pass" as cold function
Noelle:  Function "jpeg_abort"
Noelle:  Disable "jpeg_abort" as cold function
Noelle:  Function "start_pass_upsample"
Noelle:  Disable "start_pass_upsample" as cold function
Noelle:  Function "jpeg_free_small"
Noelle:  Disable "jpeg_free_small" as cold function
Noelle:  Function "jpeg_get_small"
Noelle:  Disable "jpeg_get_small" as cold function
Noelle:  Function "finish_output_ppm"
Noelle:  Disable "finish_output_ppm" as cold function
Noelle:  Function "jpeg_set_marker_processor"
Noelle:  Disable "jpeg_set_marker_processor" as cold function
Noelle:  Function "reset_error_mgr"
Noelle:  Disable "reset_error_mgr" as cold function
Noelle:  Function "init_source"
Noelle:  Disable "init_source" as cold function
Noelle:  Function "term_source"
Noelle:  Disable "term_source" as cold function
Noelle:  Function "start_pass_dcolor"
Noelle:  Disable "start_pass_dcolor" as cold function
Noelle:  Function "jpeg_mem_available"
Noelle:  Disable "jpeg_mem_available" as cold function
Noelle:  Function "jpeg_mem_term"
Noelle:  Disable "jpeg_mem_term" as cold function
Noelle:  Function "get_app14"
Noelle:  Disable "get_app14" as cold function
Noelle:  Function "skip_variable"
Noelle:  Disable "skip_variable" as cold function
Noelle:  Function "read_restart_marker"
Noelle:  Disable "read_restart_marker" as cold function
Noelle:  Function "jpeg_mem_init"
Noelle:  Disable "jpeg_mem_init" as cold function
Noelle:  Function "jcopy_sample_rows"
Noelle:  Disable "jcopy_sample_rows" as cold function
Noelle:  Function "jcopy_block_row"
Noelle:  Disable "jcopy_block_row" as cold function
Noelle:  Function "jpeg_resync_to_restart"
Noelle:  Disable "jpeg_resync_to_restart" as cold function
Noelle:  Function "error_exit"
Noelle:  Disable "error_exit" as cold function
Noelle:  Function "output_message"
Noelle:  Disable "output_message" as cold function
Noelle:  Function "format_message"
Noelle:  Disable "format_message" as cold function
Noelle:  Function "jpeg_idct_float"
Noelle:  Disable "jpeg_idct_float" as cold function
Noelle:  Function "jpeg_open_backing_store"
Noelle:  Disable "jpeg_open_backing_store" as cold function
Noelle:  Function "process_data_simple_main"
Noelle:  Disable "process_data_simple_main" as cold function
Noelle:  Function "access_virt_sarray"
Noelle:  Disable "access_virt_sarray" as cold function
Noelle:  Function "process_data_crank_post"
Noelle:  Disable "process_data_crank_post" as cold function
Noelle:  Function "request_virt_sarray"
Noelle:  Disable "request_virt_sarray" as cold function
Noelle:  Function "dummy_consume_data"
Noelle:  Disable "dummy_consume_data" as cold function
Noelle:  Function "alloc_barray"
Noelle:  Disable "alloc_barray" as cold function
Noelle:  Function "start_pass_huff_decoder"
Noelle:  Disable "start_pass_huff_decoder" as cold function
Noelle:  Function "jinit_huff_decoder"
Noelle:  Disable "jinit_huff_decoder" as cold function
Noelle:  Function "jpeg_idct_ifast"
Noelle:  Disable "jpeg_idct_ifast" as cold function
Noelle:  Function "h2v1_merged_upsample"
Noelle:  Disable "h2v1_merged_upsample" as cold function
Noelle:  Function "prescan_quantize"
Noelle:  Disable "prescan_quantize" as cold function
Noelle:  Function "finish_pass1"
Noelle:  Disable "finish_pass1" as cold function
Noelle:  Function "pass2_fs_dither"
Noelle:  Disable "pass2_fs_dither" as cold function
Noelle:  Function "pass2_no_dither"
Noelle:  Disable "pass2_no_dither" as cold function
Noelle:  Function "finish_pass2"
Noelle:  Disable "finish_pass2" as cold function
Noelle:  Function "fill_inverse_cmap"
Noelle:  Disable "fill_inverse_cmap" as cold function
Noelle:  Function "update_box"
Noelle:  Disable "update_box" as cold function
Noelle:  Function "jinit_merged_upsampler"
Noelle:  Disable "jinit_merged_upsampler" as cold function
Noelle:  Function "start_pass_merged_upsample"
Noelle:  Disable "start_pass_merged_upsample" as cold function
Noelle:  Function "merged_2v_upsample"
Noelle:  Disable "merged_2v_upsample" as cold function
Noelle:  Function "h2v2_merged_upsample"
Noelle:  Disable "h2v2_merged_upsample" as cold function
Noelle:  Function "merged_1v_upsample"
Noelle:  Disable "merged_1v_upsample" as cold function
Noelle:  Function "jpeg_idct_2x2"
Noelle:  Disable "jpeg_idct_2x2" as cold function
Noelle:  Function "jinit_2pass_quantizer"
Noelle:  Disable "jinit_2pass_quantizer" as cold function
Noelle:  Function "start_pass_2_quant"
Noelle:  Disable "start_pass_2_quant" as cold function
Noelle:  Function "new_color_map_2_quant"
Noelle:  Disable "new_color_map_2_quant" as cold function
Noelle:  Function "init_error_limit"
Noelle:  Disable "init_error_limit" as cold function
Noelle:  Function "jpeg_idct_4x4"
Noelle:  Disable "jpeg_idct_4x4" as cold function
Noelle:  Function "quantize_fs_dither"
Noelle:  Disable "quantize_fs_dither" as cold function
Noelle:  Function "jpeg_idct_1x1"
Noelle:  Disable "jpeg_idct_1x1" as cold function
Noelle:  Function "noop_upsample"
Noelle:  Disable "noop_upsample" as cold function
Noelle:  Function "h2v1_fancy_upsample"
Noelle:  Disable "h2v1_fancy_upsample" as cold function
Noelle:  Function "h2v1_upsample"
Noelle:  Disable "h2v1_upsample" as cold function
Noelle:  Function "h2v2_upsample"
Noelle:  Disable "h2v2_upsample" as cold function
Noelle:  Function "int_upsample"
Noelle:  Disable "int_upsample" as cold function
Noelle:  Function "grayscale_convert"
Noelle:  Disable "grayscale_convert" as cold function
Noelle:  Function "start_output_tga"
Noelle:  Disable "start_output_tga" as cold function
Noelle:  Function "put_demapped_rgb"
Noelle:  Disable "put_demapped_rgb" as cold function
Noelle:  Function "ycck_cmyk_convert"
Noelle:  Disable "ycck_cmyk_convert" as cold function
Noelle:  Function "COM_handler"
Noelle:  Disable "COM_handler" as cold function
Noelle:  Function "usage"
Noelle:  Disable "usage" as cold function
Noelle:  Function "copy_pixel_rows"
Noelle:  Disable "copy_pixel_rows" as cold function
Noelle:  Function "put_demapped_gray"
Noelle:  Disable "put_demapped_gray" as cold function
Noelle:  Function "null_convert"
Noelle:  Disable "null_convert" as cold function
Noelle:  Function "jinit_1pass_quantizer"
Noelle:  Disable "jinit_1pass_quantizer" as cold function
Noelle:  Function "start_pass_1_quant"
Noelle:  Disable "start_pass_1_quant" as cold function
Noelle:  Function "finish_pass_1_quant"
Noelle:  Disable "finish_pass_1_quant" as cold function
Noelle:  Function "new_color_map_1_quant"
Noelle:  Disable "new_color_map_1_quant" as cold function
Noelle:  Function "create_colorindex"
Noelle:  Disable "create_colorindex" as cold function
Noelle:  Function "color_quantize3"
Noelle:  Disable "color_quantize3" as cold function
Noelle:  Function "color_quantize"
Noelle:  Disable "color_quantize" as cold function
Noelle:  Function "quantize3_ord_dither"
Noelle:  Disable "quantize3_ord_dither" as cold function
Noelle:  Function "quantize_ord_dither"
Noelle:  Disable "quantize_ord_dither" as cold function
Noelle:  Function "jpeg_start_output"
Noelle:  Disable "jpeg_start_output" as cold function
Noelle:  Function "read_pbm_integer"
Noelle:  Disable "read_pbm_integer" as cold function
Noelle:  Function "read_stdin"
Noelle:  Disable "read_stdin" as cold function
Noelle:  Function "decode_mcu"
Noelle:  Disable "decode_mcu" as cold function
Noelle:  Function "write_stdout"
Noelle:  Disable "write_stdout" as cold function
Noelle:  Function "jpeg_abort_decompress"
Noelle:  Disable "jpeg_abort_decompress" as cold function
Noelle:  Function "jpeg_input_complete"
Noelle:  Disable "jpeg_input_complete" as cold function
Noelle:  Function "jpeg_has_multiple_scans"
Noelle:  Disable "jpeg_has_multiple_scans" as cold function
Noelle:  Function "jpeg_read_scanlines"
Noelle:  Disable "jpeg_read_scanlines" as cold function
Noelle:  Function "jpeg_read_raw_data"
Noelle:  Disable "jpeg_read_raw_data" as cold function
Noelle:  Function "jpeg_finish_output"
Noelle:  Disable "jpeg_finish_output" as cold function
Noelle:  Function "decompress_onepass"
Noelle:  Disable "decompress_onepass" as cold function
Noelle:  Function "decompress_smooth_data"
Noelle:  Disable "decompress_smooth_data" as cold function
Noelle:  Function "post_process_1pass"
Noelle:  Disable "post_process_1pass" as cold function
Noelle:  Function "post_process_prepass"
Noelle:  Disable "post_process_prepass" as cold function
Noelle:  Function "post_process_2pass"
Noelle:  Disable "post_process_2pass" as cold function
Noelle:  Function "skip_input_data"
Noelle:  Disable "skip_input_data" as cold function
Noelle:  Function "jpeg_new_colormap"
Noelle:  Disable "jpeg_new_colormap" as cold function
Noelle:  Function "put_demapped_gray.55"
Noelle:  Disable "put_demapped_gray.55" as cold function
Noelle:  Function "jinit_write_gif"
Noelle:  Disable "jinit_write_gif" as cold function
Noelle:  Function "start_output_gif"
Noelle:  Disable "start_output_gif" as cold function
Noelle:  Function "put_pixel_rows.52"
Noelle:  Disable "put_pixel_rows.52" as cold function
Noelle:  Function "finish_output_gif"
Noelle:  Disable "finish_output_gif" as cold function
Noelle:  Function "emit_header"
Noelle:  Disable "emit_header" as cold function
Noelle:  Function "jinit_write_targa"
Noelle:  Disable "jinit_write_targa" as cold function
Noelle:  Function "finish_output_tga"
Noelle:  Disable "finish_output_tga" as cold function
Noelle:  Function "put_gray_rows"
Noelle:  Disable "put_gray_rows" as cold function
Noelle:  Function "put_pixel_rows.56"
Noelle:  Disable "put_pixel_rows.56" as cold function
Noelle:  Function "jinit_write_bmp"
Noelle:  Disable "jinit_write_bmp" as cold function
Noelle:  Function "start_output_bmp"
Noelle:  Disable "start_output_bmp" as cold function
Noelle:  Function "finish_output_bmp"
Noelle:  Disable "finish_output_bmp" as cold function
Noelle:  Function "put_gray_rows.59"
Noelle:  Disable "put_gray_rows.59" as cold function
Noelle:  Function "put_pixel_rows.60"
Noelle:  Disable "put_pixel_rows.60" as cold function
Noelle:  Function "write_colormap"
Noelle:  Disable "write_colormap" as cold function
Noelle:  Function "read_color_map"
Noelle:  Disable "read_color_map" as cold function
Planner:    There are 18 loops in the program we are going to consider
Planner:  Filter out loops not worth considering
Planner:    Loop 152 has 5.794812e+02 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 180 has 1.400000e+00 number of iterations on average per loop invocation
Planner:      It is too low. The threshold is 12
Planner:    Loop 182 has 6.936366e+01 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 188 has 2.653846e+01 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 124 has 8.900101e+01 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 154 has 5.691577e+02 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 226 has 1.000000e+00 number of iterations on average per loop invocation
Planner:      It is too low. The threshold is 12
Planner:    Loop 215 has 9.680000e+02 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 158 has 8.221001e+02 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 159 has 1.807380e+02 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 160 has 1.111535e+03 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 246 has 9.998581e-01 number of iterations on average per loop invocation
Planner:      It is too low. The threshold is 12
Planner:    Loop 214 has 7.823750e+02 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:  There are 5 loop nesting trees in the program
Planner:    ID: 247 (1)
Planner:      Function: "ycc_rgb_convert"
Planner:      Loop: "  %47 = getelementptr inbounds i8, i8* %37, i64 %45, !noelle.pdg.inst.id !104"
Planner:      Loop nesting level: 2
Planner:      Hotness = 3.460585e+00 %
Planner:      Average instructions per invocation = 4.538598e+05 %
Planner:      Average iterations per invocation = 1.031502e+04 %
Planner:    
Planner:    ID: 228 (1)
Planner:      Function: "h2v2_fancy_upsample"
Planner:      Loop: "  %142 = getelementptr inbounds i8, i8* %141, i64 1, !noelle.pdg.inst.id !212"
Planner:      Loop nesting level: 2
Planner:      Hotness = 1.258199e+00 %
Planner:      Average instructions per invocation = 1.649910e+05 %
Planner:      Average iterations per invocation = 5.155998e+03 %
Planner:    
Planner:    ID: 227 (1)
Planner:      Function: "h2v2_fancy_upsample"
Planner:      Loop: "  %63 = getelementptr inbounds i8, i8* %62, i64 1, !noelle.pdg.inst.id !114"
Planner:      Loop nesting level: 2
Planner:      Hotness = 1.258199e+00 %
Planner:      Average instructions per invocation = 1.649910e+05 %
Planner:      Average iterations per invocation = 5.155998e+03 %
Planner:    
Planner:    ID: 181 (1)
Planner:      Function: "consume_data"
Planner:      Loop: "  %54 = load i32, i32* %7, align 8, !tbaa !198, !noelle.pdg.inst.id !104"
Planner:      Loop nesting level: 2
Planner:      Hotness = 5.913532e-01 %
Planner:      Average instructions per invocation = 8.854826e+04 %
Planner:      Average iterations per invocation = 1.013571e+03 %
Planner:    
Planner:    ID: 0 (1)
Planner:      Function: "main"
Planner:      Loop: "  %103 = load i8**, i8*** %92, align 8, !tbaa !2847, !noelle.pdg.inst.id !363"
Planner:      Loop nesting level: 1
Planner:      Hotness = 8.362432e+01 %
Planner:      Average instructions per invocation = 7.730941e+10 %
Planner:      Average iterations per invocation = 2.147484e+09 %
Planner:    
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
Planner: LoopSelector: Start
Planner: LoopSelector:   Order of loops and their maximum savings
Planner: LoopSelector:    Loop 247
Planner: LoopSelector:      Function: "ycc_rgb_convert"
Planner: LoopSelector:      Loop nesting level: 2
Planner: LoopSelector:      "  %47 = getelementptr inbounds i8, i8* %37, i64 %45, !noelle.pdg.inst.id !104"
Planner: LoopSelector:      Coverage: 3.460585e+00%
Planner: LoopSelector:      Whole-program savings = 3.460585e+00%
Planner: LoopSelector:      Loop savings = 1.000000e+02%
Planner: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
Planner: LoopSelector:  Loop 228 saves only 1.218880e+00 when parallelized. Skip it
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
Planner: LoopSelector:  Loop 227 saves only 1.218880e+00 when parallelized. Skip it
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [4 x [64 x i16]**], align 16, !noelle.pdg.inst.id !184
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [4 x [64 x i16]**], align 16, !noelle.pdg.inst.id !184
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
Planner: LoopSelector:  Loop 181 saves only 4.799131e-02 when parallelized. Skip it
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca %struct.jpeg_error_mgr, align 8, !noelle.pdg.inst.id !2726
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca i32, align 4, !noelle.pdg.inst.id !2724
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %3 = alloca i32, align 4, !noelle.pdg.inst.id !2724 can be cloned
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.jpeg_decompress_struct, align 8, !noelle.pdg.inst.id !2725
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca %struct.jpeg_error_mgr, align 8, !noelle.pdg.inst.id !2726
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca i32, align 4, !noelle.pdg.inst.id !2724
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %3 = alloca i32, align 4, !noelle.pdg.inst.id !2724 can be cloned
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.jpeg_decompress_struct, align 8, !noelle.pdg.inst.id !2725
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
Planner: LoopSelector: Start
Planner: LoopSelector:   Order of loops and their maximum savings
Planner: LoopSelector:    Loop 0
Planner: LoopSelector:      Function: "main"
Planner: LoopSelector:      Loop nesting level: 1
Planner: LoopSelector:      "  %103 = load i8**, i8*** %92, align 8, !tbaa !2847, !noelle.pdg.inst.id !363"
Planner: LoopSelector:      Coverage: 8.362432e+01%
Planner: LoopSelector:      Whole-program savings = 2.090608e+01%
Planner: LoopSelector:      Loop savings = 2.500000e+01%
Planner: LoopSelector: End
Planner:   Maximum time saved = 2.436666e+01% (22526610560)
Planner:   Maximum time saved with DOALL only = 3.460585e+00% (3199257766)
Planner: Exit
noelle-rm-function -function-name=SIMONE_CAMPANONI_IS_GOING_TO_REMOVE_THIS_FUNCTION code_with_prototypes.bc -o code_to_parallelize.bc
NOELLE: DeadFunctions: Start
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/RemoveFunction.so -noelle-rm-function -function-name=SIMONE_CAMPANONI_IS_GOING_TO_REMOVE_THIS_FUNCTION code_with_prototypes.bc -o code_to_parallelize.bc
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/RemoveFunction.so -noelle-rm-function -function-name=SIMONE_CAMPANONI_IS_GOING_TO_REMOVE_THIS_FUNCTION code_with_prototypes.bc -o code_to_parallelize.bc
RemoveFunction: Start
RemoveFunction:   Check if function "SIMONE_CAMPANONI_IS_GOING_TO_REMOVE_THIS_FUNCTION" exists
RemoveFunction:     The function exists
RemoveFunction:   Remove the function
RemoveFunction: Exit
NOELLE: DeadFunctions: Exit
noelle-parallelizer-loop code_to_parallelize.bc -o parallelized_unoptimized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix
noelle-parallel-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Parallelizer.so -parallelizer code_to_parallelize.bc -o parallelized_unoptimized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Parallelizer.so -parallelizer code_to_parallelize.bc -o parallelized_unoptimized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Parallelizer.so -parallelizer code_to_parallelize.bc -o parallelized_unoptimized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix
Parallelizer: Start
Parallelizer:  Analyzing the module code_to_parallelize.bc
Parallelizer:  Fetching the program loops
Noelle: Filter out cold code
Noelle:  Function "main"
Noelle:     Loop "  %103 = load i8**, i8*** %92, align 8, !tbaa !2849, !noelle.pdg.inst.id !365" (8.362432e+01%)
Noelle:  Function "decode_mcu_AC_refine"
Noelle:     Loop "  %41 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %40, !noelle.pdg.inst.id !509" (0.000000e+00%)
Noelle:  Disable loop "1" as cold code
Noelle:     Loop "  %87 = icmp slt i32 %85, 8, !noelle.pdg.inst.id !566" (8.269956e-01%)
Noelle:     Loop "  %172 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %167, !noelle.pdg.inst.id !690" (4.825221e-01%)
Noelle:     Loop "  %255 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %252, !noelle.pdg.inst.id !804" (3.419604e+00%)
Noelle:     Loop "  %312 = add nsw i64 %310, -1, !noelle.pdg.inst.id !897" (0.000000e+00%)
Noelle:  Disable loop "5" as cold code
Noelle:     Loop "  %322 = add nsw i64 %321, -1, !noelle.pdg.inst.id !917" (0.000000e+00%)
Noelle:  Disable loop "6" as cold code
Noelle:  Function "ycc_rgb_convert"
Noelle:     Loop "  %34 = load i8**, i8*** %1, align 8, !tbaa !90, !noelle.pdg.inst.id !91" (3.460737e+00%)
Noelle:     Loop "  %47 = getelementptr inbounds i8, i8* %37, i64 %45, !noelle.pdg.inst.id !106" (3.460585e+00%)
Noelle:  Function "jpeg_idct_islow"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8, !noelle.pdg.inst.id !249" (1.444324e+00%)
Noelle:     Loop "  %177 = getelementptr inbounds i8*, i8** %3, i64 %175, !noelle.pdg.inst.id !412" (1.787002e+00%)
Noelle:  Function "h2v2_fancy_upsample"
Noelle:     Loop "  %13 = getelementptr inbounds i8*, i8** %2, i64 %11, !noelle.pdg.inst.id !57" (2.517421e+00%)
Noelle:     Loop "  %63 = getelementptr inbounds i8, i8* %62, i64 1, !noelle.pdg.inst.id !116" (1.258199e+00%)
Noelle:     Loop "  %142 = getelementptr inbounds i8, i8* %141, i64 1, !noelle.pdg.inst.id !214" (1.258199e+00%)
Noelle:  Function "decode_mcu_AC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %6, i64 0, i32 2, i32 1, i64 %36, !noelle.pdg.inst.id !273" (0.000000e+00%)
Noelle:  Disable loop "14" as cold code
Noelle:     Loop "  %79 = icmp slt i32 %76, 8, !noelle.pdg.inst.id !342" (1.456225e+00%)
Noelle:  Function "jpeg_fill_bit_buffer"
Noelle:     Loop "  %18 = load i32, i32* %11, align 8, !tbaa !214, !noelle.pdg.inst.id !64" (4.586948e-01%)
Noelle:     Loop "  %47 = icmp eq i64 %46, 0, !noelle.pdg.inst.id !256" (2.035310e-03%)
Noelle:  Disable loop "17" as cold code
Noelle:  Function "consume_data"
Noelle:     Loop "  %15 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %14, !noelle.pdg.inst.id !210" (1.555093e-04%)
Noelle:  Disable loop "18" as cold code
Noelle:     Loop "  %52 = icmp ult i32 %50, %49, !noelle.pdg.inst.id !257" (5.914686e-01%)
Noelle:     Loop "  %54 = load i32, i32* %7, align 8, !tbaa !200, !noelle.pdg.inst.id !106" (5.913532e-01%)
Noelle:     Loop "  %60 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %58, !noelle.pdg.inst.id !273" (4.695188e-01%)
Noelle:     Loop "  %129 = add nsw i64 %127, %51, !noelle.pdg.inst.id !373" (7.355448e-08%)
Noelle:  Disable loop "22" as cold code
Noelle:     Loop "  %135 = add i64 %134, %133, !noelle.pdg.inst.id !380" (4.975744e-08%)
Noelle:  Disable loop "23" as cold code
Noelle:     Loop "  %158 = getelementptr inbounds [64 x i16], [64 x i16]* %156, i64 1, !noelle.pdg.inst.id !407" (2.379704e-08%)
Noelle:  Disable loop "24" as cold code
Noelle:     Loop "  %101 = add nsw i64 %99, %51, !noelle.pdg.inst.id !337" (4.975744e-08%)
Noelle:  Disable loop "25" as cold code
Noelle:     Loop "  %107 = add i64 %106, %105, !noelle.pdg.inst.id !344" (4.975744e-08%)
Noelle:  Disable loop "26" as cold code
Noelle:     Loop "  %83 = sext i32 %82 to i64, !noelle.pdg.inst.id !303" (2.122987e-01%)
Noelle:     Loop "  %91 = getelementptr inbounds [64 x i16], [64 x i16]* %89, i64 1, !noelle.pdg.inst.id !312" (9.968811e-02%)
Noelle:  Disable loop "28" as cold code
Noelle:  Function "decode_mcu_DC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %36, !noelle.pdg.inst.id !432" (0.000000e+00%)
Noelle:  Disable loop "29" as cold code
Noelle:     Loop "  %72 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %69, !noelle.pdg.inst.id !479" (1.782945e-01%)
Noelle:  Function "decode_mcu_DC_refine"
Noelle:  Disable "decode_mcu_DC_refine" as cold function
Noelle:  Function "decompress_data"
Noelle:  Disable "decompress_data" as cold function
Noelle:  Function "jpeg_huff_decode"
Noelle:  Disable "jpeg_huff_decode" as cold function
Noelle:  Function "sep_upsample"
Noelle:  Disable "sep_upsample" as cold function
Noelle:  Function "access_virt_barray"
Noelle:  Disable "access_virt_barray" as cold function
Noelle:  Function "process_data_context_main"
Noelle:  Disable "process_data_context_main" as cold function
Noelle:  Function "jpeg_start_decompress"
Noelle:  Disable "jpeg_start_decompress" as cold function
Noelle:  Function "fill_input_buffer"
Noelle:  Disable "fill_input_buffer" as cold function
Noelle:  Function "put_pixel_rows"
Noelle:  Disable "put_pixel_rows" as cold function
Noelle:  Function "start_pass_phuff_decoder"
Noelle:  Disable "start_pass_phuff_decoder" as cold function
Noelle:  Function "jpeg_make_d_derived_tbl"
Noelle:  Disable "jpeg_make_d_derived_tbl" as cold function
Noelle:  Function "read_markers"
Noelle:  Disable "read_markers" as cold function
Noelle:  Function "realize_virt_arrays"
Noelle:  Disable "realize_virt_arrays" as cold function
Noelle:  Function "jinit_master_decompress"
Noelle:  Disable "jinit_master_decompress" as cold function
Noelle:  Function "fullsize_upsample"
Noelle:  Disable "fullsize_upsample" as cold function
Noelle:  Function "jinit_color_deconverter"
Noelle:  Disable "jinit_color_deconverter" as cold function
Noelle:  Function "parse_switches"
Noelle:  Disable "parse_switches" as cold function
Noelle:  Function "keymatch"
Noelle:  Disable "keymatch" as cold function
Noelle:  Function "jzero_far"
Noelle:  Disable "jzero_far" as cold function
Noelle:  Function "alloc_small"
Noelle:  Disable "alloc_small" as cold function
Noelle:  Function "consume_markers"
Noelle:  Disable "consume_markers" as cold function
Noelle:  Function "start_input_pass"
Noelle:  Disable "start_input_pass" as cold function
Noelle:  Function "alloc_sarray"
Noelle:  Disable "alloc_sarray" as cold function
Noelle:  Function "next_marker"
Noelle:  Disable "next_marker" as cold function
Noelle:  Function "start_pass_main"
Noelle:  Disable "start_pass_main" as cold function
Noelle:  Function "emit_message"
Noelle:  Disable "emit_message" as cold function
Noelle:  Function "start_pass"
Noelle:  Disable "start_pass" as cold function
Noelle:  Function "jpeg_calc_output_dimensions"
Noelle:  Disable "jpeg_calc_output_dimensions" as cold function
Noelle:  Function "get_sof"
Noelle:  Disable "get_sof" as cold function
Noelle:  Function "free_pool"
Noelle:  Disable "free_pool" as cold function
Noelle:  Function "get_app0"
Noelle:  Disable "get_app0" as cold function
Noelle:  Function "start_output_pass"
Noelle:  Disable "start_output_pass" as cold function
Noelle:  Function "jinit_write_ppm"
Noelle:  Disable "jinit_write_ppm" as cold function
Noelle:  Function "self_destruct"
Noelle:  Disable "self_destruct" as cold function
Noelle:  Function "jinit_d_main_controller"
Noelle:  Disable "jinit_d_main_controller" as cold function
Noelle:  Function "start_input_pass.105"
Noelle:  Disable "start_input_pass.105" as cold function
Noelle:  Function "request_virt_barray"
Noelle:  Disable "request_virt_barray" as cold function
Noelle:  Function "jinit_upsampler"
Noelle:  Disable "jinit_upsampler" as cold function
Noelle:  Function "alloc_large"
Noelle:  Disable "alloc_large" as cold function
Noelle:  Function "jpeg_CreateDecompress"
Noelle:  Disable "jpeg_CreateDecompress" as cold function
Noelle:  Function "jinit_d_coef_controller"
Noelle:  Disable "jinit_d_coef_controller" as cold function
Noelle:  Function "jdiv_round_up"
Noelle:  Disable "jdiv_round_up" as cold function
Noelle:  Function "jpeg_read_header"
Noelle:  Disable "jpeg_read_header" as cold function
Noelle:  Function "jinit_marker_reader"
Noelle:  Disable "jinit_marker_reader" as cold function
Noelle:  Function "jinit_inverse_dct"
Noelle:  Disable "jinit_inverse_dct" as cold function
Noelle:  Function "jpeg_consume_input"
Noelle:  Disable "jpeg_consume_input" as cold function
Noelle:  Function "prepare_for_output_pass"
Noelle:  Disable "prepare_for_output_pass" as cold function
Noelle:  Function "jinit_memory_mgr"
Noelle:  Disable "jinit_memory_mgr" as cold function
Noelle:  Function "jinit_phuff_decoder"
Noelle:  Disable "jinit_phuff_decoder" as cold function
Noelle:  Function "jpeg_finish_decompress"
Noelle:  Disable "jpeg_finish_decompress" as cold function
Noelle:  Function "finish_input_pass"
Noelle:  Disable "finish_input_pass" as cold function
Noelle:  Function "jpeg_alloc_huff_table"
Noelle:  Disable "jpeg_alloc_huff_table" as cold function
Noelle:  Function "jround_up"
Noelle:  Disable "jround_up" as cold function
Noelle:  Function "jpeg_stdio_src"
Noelle:  Disable "jpeg_stdio_src" as cold function
Noelle:  Function "output_pass_setup"
Noelle:  Disable "output_pass_setup" as cold function
Noelle:  Function "jinit_input_controller"
Noelle:  Disable "jinit_input_controller" as cold function
Noelle:  Function "reset_input_controller"
Noelle:  Disable "reset_input_controller" as cold function
Noelle:  Function "jpeg_std_error"
Noelle:  Disable "jpeg_std_error" as cold function
Noelle:  Function "start_pass_dpost"
Noelle:  Disable "start_pass_dpost" as cold function
Noelle:  Function "jinit_d_post_controller"
Noelle:  Disable "jinit_d_post_controller" as cold function
Noelle:  Function "jpeg_alloc_quant_table"
Noelle:  Disable "jpeg_alloc_quant_table" as cold function
Noelle:  Function "start_output_ppm"
Noelle:  Disable "start_output_ppm" as cold function
Noelle:  Function "jpeg_get_large"
Noelle:  Disable "jpeg_get_large" as cold function
Noelle:  Function "jpeg_destroy_decompress"
Noelle:  Disable "jpeg_destroy_decompress" as cold function
Noelle:  Function "jpeg_free_large"
Noelle:  Disable "jpeg_free_large" as cold function
Noelle:  Function "reset_marker_reader"
Noelle:  Disable "reset_marker_reader" as cold function
Noelle:  Function "finish_output_pass"
Noelle:  Disable "finish_output_pass" as cold function
Noelle:  Function "jpeg_destroy"
Noelle:  Disable "jpeg_destroy" as cold function
Noelle:  Function "start_pass_upsample"
Noelle:  Disable "start_pass_upsample" as cold function
Noelle:  Function "jpeg_get_small"
Noelle:  Disable "jpeg_get_small" as cold function
Noelle:  Function "jpeg_abort"
Noelle:  Disable "jpeg_abort" as cold function
Noelle:  Function "jpeg_free_small"
Noelle:  Disable "jpeg_free_small" as cold function
Noelle:  Function "finish_output_ppm"
Noelle:  Disable "finish_output_ppm" as cold function
Noelle:  Function "jpeg_set_marker_processor"
Noelle:  Disable "jpeg_set_marker_processor" as cold function
Noelle:  Function "reset_error_mgr"
Noelle:  Disable "reset_error_mgr" as cold function
Noelle:  Function "init_source"
Noelle:  Disable "init_source" as cold function
Noelle:  Function "term_source"
Noelle:  Disable "term_source" as cold function
Noelle:  Function "start_pass_dcolor"
Noelle:  Disable "start_pass_dcolor" as cold function
Noelle:  Function "jpeg_mem_available"
Noelle:  Disable "jpeg_mem_available" as cold function
Noelle:  Function "post_process_2pass"
Noelle:  Disable "post_process_2pass" as cold function
Noelle:  Function "skip_variable"
Noelle:  Disable "skip_variable" as cold function
Noelle:  Function "jpeg_has_multiple_scans"
Noelle:  Disable "jpeg_has_multiple_scans" as cold function
Noelle:  Function "read_restart_marker"
Noelle:  Disable "read_restart_marker" as cold function
Noelle:  Function "access_virt_sarray"
Noelle:  Disable "access_virt_sarray" as cold function
Noelle:  Function "jpeg_input_complete"
Noelle:  Disable "jpeg_input_complete" as cold function
Noelle:  Function "jpeg_mem_term"
Noelle:  Disable "jpeg_mem_term" as cold function
Noelle:  Function "jpeg_idct_ifast"
Noelle:  Disable "jpeg_idct_ifast" as cold function
Noelle:  Function "jpeg_idct_float"
Noelle:  Disable "jpeg_idct_float" as cold function
Noelle:  Function "error_exit"
Noelle:  Disable "error_exit" as cold function
Noelle:  Function "jpeg_mem_init"
Noelle:  Disable "jpeg_mem_init" as cold function
Noelle:  Function "jpeg_new_colormap"
Noelle:  Disable "jpeg_new_colormap" as cold function
Noelle:  Function "jpeg_finish_output"
Noelle:  Disable "jpeg_finish_output" as cold function
Noelle:  Function "jpeg_start_output"
Noelle:  Disable "jpeg_start_output" as cold function
Noelle:  Function "get_app14"
Noelle:  Disable "get_app14" as cold function
Noelle:  Function "jpeg_read_raw_data"
Noelle:  Disable "jpeg_read_raw_data" as cold function
Noelle:  Function "jpeg_read_scanlines"
Noelle:  Disable "jpeg_read_scanlines" as cold function
Noelle:  Function "post_process_1pass"
Noelle:  Disable "post_process_1pass" as cold function
Noelle:  Function "post_process_prepass"
Noelle:  Disable "post_process_prepass" as cold function
Noelle:  Function "alloc_barray"
Noelle:  Disable "alloc_barray" as cold function
Noelle:  Function "request_virt_sarray"
Noelle:  Disable "request_virt_sarray" as cold function
Noelle:  Function "output_message"
Noelle:  Disable "output_message" as cold function
Noelle:  Function "jpeg_resync_to_restart"
Noelle:  Disable "jpeg_resync_to_restart" as cold function
Noelle:  Function "finish_pass1"
Noelle:  Disable "finish_pass1" as cold function
Noelle:  Function "prescan_quantize"
Noelle:  Disable "prescan_quantize" as cold function
Noelle:  Function "init_error_limit"
Noelle:  Disable "init_error_limit" as cold function
Noelle:  Function "new_color_map_2_quant"
Noelle:  Disable "new_color_map_2_quant" as cold function
Noelle:  Function "start_pass_2_quant"
Noelle:  Disable "start_pass_2_quant" as cold function
Noelle:  Function "h2v1_merged_upsample"
Noelle:  Disable "h2v1_merged_upsample" as cold function
Noelle:  Function "decompress_onepass"
Noelle:  Disable "decompress_onepass" as cold function
Noelle:  Function "merged_1v_upsample"
Noelle:  Disable "merged_1v_upsample" as cold function
Noelle:  Function "h2v2_merged_upsample"
Noelle:  Disable "h2v2_merged_upsample" as cold function
Noelle:  Function "read_color_map"
Noelle:  Disable "read_color_map" as cold function
Noelle:  Function "merged_2v_upsample"
Noelle:  Disable "merged_2v_upsample" as cold function
Noelle:  Function "jpeg_abort_decompress"
Noelle:  Disable "jpeg_abort_decompress" as cold function
Noelle:  Function "start_pass_merged_upsample"
Noelle:  Disable "start_pass_merged_upsample" as cold function
Noelle:  Function "ycck_cmyk_convert"
Noelle:  Disable "ycck_cmyk_convert" as cold function
Noelle:  Function "null_convert"
Noelle:  Disable "null_convert" as cold function
Noelle:  Function "format_message"
Noelle:  Disable "format_message" as cold function
Noelle:  Function "grayscale_convert"
Noelle:  Disable "grayscale_convert" as cold function
Noelle:  Function "jpeg_open_backing_store"
Noelle:  Disable "jpeg_open_backing_store" as cold function
Noelle:  Function "read_pbm_integer"
Noelle:  Disable "read_pbm_integer" as cold function
Noelle:  Function "quantize_ord_dither"
Noelle:  Disable "quantize_ord_dither" as cold function
Noelle:  Function "write_colormap"
Noelle:  Disable "write_colormap" as cold function
Noelle:  Function "skip_input_data"
Noelle:  Disable "skip_input_data" as cold function
Noelle:  Function "color_quantize3"
Noelle:  Disable "color_quantize3" as cold function
Noelle:  Function "color_quantize"
Noelle:  Disable "color_quantize" as cold function
Noelle:  Function "quantize3_ord_dither"
Noelle:  Disable "quantize3_ord_dither" as cold function
Noelle:  Function "put_pixel_rows.60"
Noelle:  Disable "put_pixel_rows.60" as cold function
Noelle:  Function "quantize_fs_dither"
Noelle:  Disable "quantize_fs_dither" as cold function
Noelle:  Function "start_output_tga"
Noelle:  Disable "start_output_tga" as cold function
Noelle:  Function "finish_output_tga"
Noelle:  Disable "finish_output_tga" as cold function
Noelle:  Function "put_demapped_gray.55"
Noelle:  Disable "put_demapped_gray.55" as cold function
Noelle:  Function "put_gray_rows"
Noelle:  Disable "put_gray_rows" as cold function
Noelle:  Function "put_pixel_rows.56"
Noelle:  Disable "put_pixel_rows.56" as cold function
Noelle:  Function "COM_handler"
Noelle:  Disable "COM_handler" as cold function
Noelle:  Function "copy_pixel_rows"
Noelle:  Disable "copy_pixel_rows" as cold function
Noelle:  Function "put_demapped_gray"
Noelle:  Disable "put_demapped_gray" as cold function
Noelle:  Function "put_demapped_rgb"
Noelle:  Disable "put_demapped_rgb" as cold function
Noelle:  Function "start_output_gif"
Noelle:  Disable "start_output_gif" as cold function
Noelle:  Function "put_pixel_rows.52"
Noelle:  Disable "put_pixel_rows.52" as cold function
Noelle:  Function "finish_output_gif"
Noelle:  Disable "finish_output_gif" as cold function
Noelle:  Function "emit_header"
Noelle:  Disable "emit_header" as cold function
Noelle:  Function "start_output_bmp"
Noelle:  Disable "start_output_bmp" as cold function
Noelle:  Function "finish_output_bmp"
Noelle:  Disable "finish_output_bmp" as cold function
Noelle:  Function "put_gray_rows.59"
Noelle:  Disable "put_gray_rows.59" as cold function
Noelle:  Function "update_box"
Noelle:  Disable "update_box" as cold function
Noelle:  Function "jinit_merged_upsampler"
Noelle:  Disable "jinit_merged_upsampler" as cold function
Noelle:  Function "jinit_huff_decoder"
Noelle:  Disable "jinit_huff_decoder" as cold function
Noelle:  Function "process_data_simple_main"
Noelle:  Disable "process_data_simple_main" as cold function
Noelle:  Function "process_data_crank_post"
Noelle:  Disable "process_data_crank_post" as cold function
Noelle:  Function "dummy_consume_data"
Noelle:  Disable "dummy_consume_data" as cold function
Noelle:  Function "pass2_fs_dither"
Noelle:  Disable "pass2_fs_dither" as cold function
Noelle:  Function "pass2_no_dither"
Noelle:  Disable "pass2_no_dither" as cold function
Noelle:  Function "finish_pass2"
Noelle:  Disable "finish_pass2" as cold function
Noelle:  Function "fill_inverse_cmap"
Noelle:  Disable "fill_inverse_cmap" as cold function
Noelle:  Function "jinit_2pass_quantizer"
Noelle:  Disable "jinit_2pass_quantizer" as cold function
Noelle:  Function "start_pass_1_quant"
Noelle:  Disable "start_pass_1_quant" as cold function
Noelle:  Function "finish_pass_1_quant"
Noelle:  Disable "finish_pass_1_quant" as cold function
Noelle:  Function "new_color_map_1_quant"
Noelle:  Disable "new_color_map_1_quant" as cold function
Noelle:  Function "create_colorindex"
Noelle:  Disable "create_colorindex" as cold function
Noelle:  Function "decompress_smooth_data"
Noelle:  Disable "decompress_smooth_data" as cold function
Noelle:  Function "jcopy_block_row"
Noelle:  Disable "jcopy_block_row" as cold function
Noelle:  Function "start_pass_huff_decoder"
Noelle:  Disable "start_pass_huff_decoder" as cold function
Noelle:  Function "decode_mcu"
Noelle:  Disable "decode_mcu" as cold function
Noelle:  Function "jpeg_idct_4x4"
Noelle:  Disable "jpeg_idct_4x4" as cold function
Noelle:  Function "jpeg_idct_2x2"
Noelle:  Disable "jpeg_idct_2x2" as cold function
Noelle:  Function "usage"
Noelle:  Disable "usage" as cold function
Noelle:  Function "read_stdin"
Noelle:  Disable "read_stdin" as cold function
Noelle:  Function "write_stdout"
Noelle:  Disable "write_stdout" as cold function
Noelle:  Function "jinit_write_bmp"
Noelle:  Disable "jinit_write_bmp" as cold function
Noelle:  Function "jinit_write_gif"
Noelle:  Disable "jinit_write_gif" as cold function
Noelle:  Function "jinit_write_targa"
Noelle:  Disable "jinit_write_targa" as cold function
Noelle:  Function "jpeg_idct_1x1"
Noelle:  Disable "jpeg_idct_1x1" as cold function
Noelle:  Function "noop_upsample"
Noelle:  Disable "noop_upsample" as cold function
Noelle:  Function "h2v1_fancy_upsample"
Noelle:  Disable "h2v1_fancy_upsample" as cold function
Noelle:  Function "h2v1_upsample"
Noelle:  Disable "h2v1_upsample" as cold function
Noelle:  Function "h2v2_upsample"
Noelle:  Disable "h2v2_upsample" as cold function
Noelle:  Function "int_upsample"
Noelle:  Disable "int_upsample" as cold function
Noelle:  Function "jcopy_sample_rows"
Noelle:  Disable "jcopy_sample_rows" as cold function
Noelle:  Function "jinit_1pass_quantizer"
Noelle:  Disable "jinit_1pass_quantizer" as cold function
Parallelizer:    There are 18 loops in the program we are going to consider
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca %struct.jpeg_error_mgr, align 8, !noelle.pdg.inst.id !2728
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca i32, align 4, !noelle.pdg.inst.id !2726
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %3 = alloca i32, align 4, !noelle.pdg.inst.id !2726 can be cloned
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.jpeg_decompress_struct, align 8, !noelle.pdg.inst.id !2727
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca %struct.jpeg_error_mgr, align 8, !noelle.pdg.inst.id !2728
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca i32, align 4, !noelle.pdg.inst.id !2726
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %3 = alloca i32, align 4, !noelle.pdg.inst.id !2726 can be cloned
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.jpeg_decompress_struct, align 8, !noelle.pdg.inst.id !2727
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
Parallelizer: parallelizerLoop: Start
Parallelizer: parallelizerLoop:   Function = "ycc_rgb_convert"
Parallelizer: parallelizerLoop:   Loop 247 = "  %47 = getelementptr inbounds i8, i8* %37, i64 %45, !noelle.pdg.inst.id !106"
Parallelizer: parallelizerLoop:   Nesting level = 2
Parallelizer: parallelizerLoop:   Number of threads to extract = 8
Parallelizer: parallelizerLoop:   Environment: live-in and live-out values
Parallelizer: parallelizerLoop:   Environment:   Live-in 0 =   %12 = load i8*, i8** %11, align 8, !tbaa !53, !noelle.pdg.inst.id !54
Parallelizer: parallelizerLoop:   Environment:   Live-in 1 =   %14 = load i32*, i32** %13, align 8, !tbaa !56, !noelle.pdg.inst.id !59
Parallelizer: parallelizerLoop:   Environment:   Live-in 2 =   %16 = load i32*, i32** %15, align 8, !tbaa !61, !noelle.pdg.inst.id !62
Parallelizer: parallelizerLoop:   Environment:   Live-in 3 =   %18 = load i64*, i64** %17, align 8, !tbaa !64, !noelle.pdg.inst.id !65
Parallelizer: parallelizerLoop:   Environment:   Live-in 4 =   %20 = load i64*, i64** %19, align 8, !tbaa !67, !noelle.pdg.inst.id !68
Parallelizer: parallelizerLoop:   Environment:   Live-in 5 =   %26 = zext i32 %10 to i64, !noelle.pdg.inst.id !76
Parallelizer: parallelizerLoop:   Environment:   Live-in 6 =   %37 = load i8*, i8** %36, align 8, !tbaa !90, !noelle.pdg.inst.id !94
Parallelizer: parallelizerLoop:   Environment:   Live-in 7 =   %40 = load i8*, i8** %39, align 8, !tbaa !90, !noelle.pdg.inst.id !97
Parallelizer: parallelizerLoop:   Environment:   Live-in 8 =   %43 = load i8*, i8** %42, align 8, !tbaa !90, !noelle.pdg.inst.id !100
Parallelizer: parallelizerLoop:   Environment:   Live-in 9 =   %44 = load i8*, i8** %33, align 8, !tbaa !90, !noelle.pdg.inst.id !101
DOALL: Checking if the loop is DOALL
DOALL:   The loop can be parallelized with DOALL
DOALL: Start the parallelization
DOALL:   Number of threads to extract = 8
DOALL:   Chunk size = 8
DOALL:   Reduced variables:
DOALL:  Cloned loop
DOALL:  Adjusted data flow
DOALL:  Rewired induction variables and reducible variables
DOALL:  Stored live outs
DOALL:  Final parallelized loop:

define void @noelle_task_0(i8*, i64, i64, i64) {
  %noelle.environment_variable.pointer = bitcast i8* %0 to [80 x i64]*
  %5 = getelementptr inbounds [80 x i64], [80 x i64]* %noelle.environment_variable.pointer, i64 0, i64 0
  %6 = bitcast i64* %5 to i8**
  %noelle_environment_variable_0 = load i8*, i8** %6
  %7 = getelementptr inbounds [80 x i64], [80 x i64]* %noelle.environment_variable.pointer, i64 0, i64 8
  %8 = bitcast i64* %7 to i32**
  %noelle_environment_variable_1 = load i32*, i32** %8
  %9 = getelementptr inbounds [80 x i64], [80 x i64]* %noelle.environment_variable.pointer, i64 0, i64 16
  %10 = bitcast i64* %9 to i32**
  %noelle_environment_variable_2 = load i32*, i32** %10
  %11 = getelementptr inbounds [80 x i64], [80 x i64]* %noelle.environment_variable.pointer, i64 0, i64 24
  %12 = bitcast i64* %11 to i64**
  %noelle_environment_variable_3 = load i64*, i64** %12
  %13 = getelementptr inbounds [80 x i64], [80 x i64]* %noelle.environment_variable.pointer, i64 0, i64 32
  %14 = bitcast i64* %13 to i64**
  %noelle_environment_variable_4 = load i64*, i64** %14
  %15 = getelementptr inbounds [80 x i64], [80 x i64]* %noelle.environment_variable.pointer, i64 0, i64 40
  %16 = getelementptr inbounds [80 x i64], [80 x i64]* %noelle.environment_variable.pointer, i64 0, i64 48
  %17 = bitcast i64* %16 to i8**
  %noelle_environment_variable_6 = load i8*, i8** %17
  %18 = getelementptr inbounds [80 x i64], [80 x i64]* %noelle.environment_variable.pointer, i64 0, i64 56
  %19 = bitcast i64* %18 to i8**
  %noelle_environment_variable_7 = load i8*, i8** %19
  %20 = getelementptr inbounds [80 x i64], [80 x i64]* %noelle.environment_variable.pointer, i64 0, i64 64
  %21 = bitcast i64* %20 to i8**
  %noelle_environment_variable_8 = load i8*, i8** %21
  %22 = getelementptr inbounds [80 x i64], [80 x i64]* %noelle.environment_variable.pointer, i64 0, i64 72
  %23 = bitcast i64* %22 to i8**
  %noelle_environment_variable_9 = load i8*, i8** %23
  %coreIdx_X_chunkSize = mul i64 %1, %3
  %24 = mul i64 3, %coreIdx_X_chunkSize
  %25 = ptrtoint i8* %noelle_environment_variable_9 to i64
  %26 = add i64 %25, %24
  %27 = inttoptr i64 %26 to i8*
  %coreIdx_X_chunkSize1 = mul i64 %1, %3
  %28 = mul i64 1, %coreIdx_X_chunkSize1
  %29 = add i64 0, %28
  %numCoresMinus1 = sub i64 %2, 1
  %numCoresMinus1_X_chunkSize = mul i64 %numCoresMinus1, %3
  %30 = mul i64 3, %numCoresMinus1_X_chunkSize
  %numCoresMinus12 = sub i64 %2, 1
  %numCoresMinus1_X_chunkSize3 = mul i64 %numCoresMinus12, %3
  %31 = mul i64 1, %numCoresMinus1_X_chunkSize3
  %32 = load i64, i64* %15
  %33 = icmp sge i64 %29, %32, !noelle.pdg.inst.id !30
  %34 = icmp ne i64 %29, 0
  %35 = and i1 %34, %33
  br i1 %35, label %36, label %46

36:                                               ; preds = %4, %37
  ret void

37:                                               ; preds = %38, %46
  br label %36

38:                                               ; preds = %46
  %39 = add i64 %49, 1
  %40 = icmp eq i64 %39, %3
  %chunkWrap = select i1 %40, i64 0, i64 %39
  %41 = ptrtoint i8* %84 to i64
  %42 = add i64 %41, %30
  %43 = inttoptr i64 %42 to i8*
  %nextStepOrNextChunk = select i1 %40, i8* %43, i8* %84
  %44 = add i64 %85, %31
  %nextStepOrNextChunk4 = select i1 %40, i64 %44, i64 %85
  %45 = icmp sge i64 %nextStepOrNextChunk4, %32, !noelle.pdg.inst.id !30
  br i1 %45, label %37, label %46

46:                                               ; preds = %4, %38
  %47 = phi i64 [ %29, %4 ], [ %nextStepOrNextChunk4, %38 ], !noelle.pdg.inst.id !31
  %48 = phi i8* [ %27, %4 ], [ %nextStepOrNextChunk, %38 ], !noelle.pdg.inst.id !32
  %49 = phi i64 [ 0, %4 ], [ %chunkWrap, %38 ]
  %50 = getelementptr inbounds i8, i8* %noelle_environment_variable_6, i64 %47, !noelle.pdg.inst.id !33
  %51 = load i8, i8* %50, align 1, !tbaa !34, !noelle.pdg.inst.id !37
  %52 = zext i8 %51 to i32, !noelle.pdg.inst.id !38
  %53 = getelementptr inbounds i8, i8* %noelle_environment_variable_7, i64 %47, !noelle.pdg.inst.id !39
  %54 = load i8, i8* %53, align 1, !tbaa !34, !noelle.pdg.inst.id !40
  %55 = getelementptr inbounds i8, i8* %noelle_environment_variable_8, i64 %47, !noelle.pdg.inst.id !41
  %56 = load i8, i8* %55, align 1, !tbaa !34, !noelle.pdg.inst.id !42
  %57 = zext i8 %56 to i64, !noelle.pdg.inst.id !43
  %58 = getelementptr inbounds i32, i32* %noelle_environment_variable_1, i64 %57, !noelle.pdg.inst.id !44
  %59 = load i32, i32* %58, align 4, !tbaa !45, !noelle.pdg.inst.id !47
  %60 = add nsw i32 %59, %52, !noelle.pdg.inst.id !48
  %61 = sext i32 %60 to i64, !noelle.pdg.inst.id !49
  %62 = getelementptr inbounds i8, i8* %noelle_environment_variable_0, i64 %61, !noelle.pdg.inst.id !50
  %63 = load i8, i8* %62, align 1, !tbaa !34, !noelle.pdg.inst.id !51
  store i8 %63, i8* %48, align 1, !tbaa !34, !noelle.pdg.inst.id !52
  %64 = zext i8 %54 to i64, !noelle.pdg.inst.id !53
  %65 = getelementptr inbounds i64, i64* %noelle_environment_variable_4, i64 %64, !noelle.pdg.inst.id !54
  %66 = load i64, i64* %65, align 8, !tbaa !55, !noelle.pdg.inst.id !57
  %67 = getelementptr inbounds i64, i64* %noelle_environment_variable_3, i64 %57, !noelle.pdg.inst.id !58
  %68 = load i64, i64* %67, align 8, !tbaa !55, !noelle.pdg.inst.id !59
  %69 = add nsw i64 %68, %66, !noelle.pdg.inst.id !60
  %70 = lshr i64 %69, 16, !noelle.pdg.inst.id !61
  %71 = trunc i64 %70 to i32, !noelle.pdg.inst.id !62
  %72 = add nsw i32 %71, %52, !noelle.pdg.inst.id !63
  %73 = sext i32 %72 to i64, !noelle.pdg.inst.id !64
  %74 = getelementptr inbounds i8, i8* %noelle_environment_variable_0, i64 %73, !noelle.pdg.inst.id !65
  %75 = load i8, i8* %74, align 1, !tbaa !34, !noelle.pdg.inst.id !66
  %76 = getelementptr inbounds i8, i8* %48, i64 1, !noelle.pdg.inst.id !67
  store i8 %75, i8* %76, align 1, !tbaa !34, !noelle.pdg.inst.id !68
  %77 = getelementptr inbounds i32, i32* %noelle_environment_variable_2, i64 %64, !noelle.pdg.inst.id !69
  %78 = load i32, i32* %77, align 4, !tbaa !45, !noelle.pdg.inst.id !70
  %79 = add nsw i32 %78, %52, !noelle.pdg.inst.id !71
  %80 = sext i32 %79 to i64, !noelle.pdg.inst.id !72
  %81 = getelementptr inbounds i8, i8* %noelle_environment_variable_0, i64 %80, !noelle.pdg.inst.id !73
  %82 = load i8, i8* %81, align 1, !tbaa !34, !noelle.pdg.inst.id !74
  %83 = getelementptr inbounds i8, i8* %48, i64 2, !noelle.pdg.inst.id !75
  store i8 %82, i8* %83, align 1, !tbaa !34, !noelle.pdg.inst.id !76
  %84 = getelementptr inbounds i8, i8* %48, i64 3, !noelle.pdg.inst.id !77
  %85 = add nuw nsw i64 %47, 1, !noelle.pdg.inst.id !78
  %86 = icmp sge i64 %85, %32, !noelle.pdg.inst.id !30
  br i1 %86, label %37, label %38, !prof !79, !noelle.loop.id !80, !noelle.pdg.inst.id !81, !noelle.parallelizer.looporder !82
}

DOALL: Exit
Parallelizer: parallelizerLoop:   Link the parallelize loop
Parallelizer: parallelizerLoop:   The loop has been parallelized with DOALL
Parallelizer: parallelizerLoop: Exit
Parallelizer:    Keep track of basic blocks being modified by the parallelization
Parallelizer: parallelizerLoop: Start
Parallelizer: parallelizerLoop:   Function = "main"
Parallelizer: parallelizerLoop:   Loop 0 = "  %103 = load i8**, i8*** %92, align 8, !tbaa !2849, !noelle.pdg.inst.id !365"
Parallelizer: parallelizerLoop:   Nesting level = 1
Parallelizer: parallelizerLoop:   Number of threads to extract = 8
Parallelizer: parallelizerLoop:   Environment: live-in and live-out values
Parallelizer: parallelizerLoop:   Environment:   Live-in 0 =   %4 = alloca %struct.jpeg_decompress_struct, align 8, !noelle.pdg.inst.id !2727
Parallelizer: parallelizerLoop:   Environment:   Live-in 1 =   %15 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 0, !noelle.pdg.inst.id !2748
Parallelizer: parallelizerLoop:   Environment:   Live-in 2 =   %80 = phi %struct.djpeg_dest_struct* [ null, %NewDefault ], [ %73, %72 ], [ %71, %70 ], [ %69, %68 ], [ %67, %66 ], [ %65, %64 ], !noelle.pdg.inst.id !2822
Parallelizer: parallelizerLoop:   Environment:   Live-in 3 =   %82 = bitcast %struct.jpeg_decompress_struct* %4 to %struct.jpeg_decompress_struct.188*, !noelle.pdg.inst.id !2826
Parallelizer: parallelizerLoop:   Environment:   Live-in 4 =   %86 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 33, !noelle.pdg.inst.id !2830
Parallelizer: parallelizerLoop:   Environment:   Live-in 5 =   %87 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !361
Parallelizer: parallelizerLoop:   Environment:   Live-in 6 =   %88 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 27, !noelle.pdg.inst.id !2832
Parallelizer: parallelizerLoop:   Environment:   Live-in 7 =   %89 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !363
Parallelizer: parallelizerLoop:   Environment:   Live-in 8 =   %92 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %80, i64 0, i32 4, !noelle.pdg.inst.id !2837
Parallelizer: parallelizerLoop:   Environment:   Live-in 9 =   %93 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %80, i64 0, i32 5, !noelle.pdg.inst.id !2838
Parallelizer: parallelizerLoop:   Environment:   Live-in 10 =   %94 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %80, i64 0, i32 1, !noelle.pdg.inst.id !2839
Parallelizer: parallelizerLoop:   Environment:   Live-in 11 =   %95 = bitcast i32* %3 to i8*, !noelle.pdg.inst.id !2840
Parallelizer: parallelizerLoop:   Environment:   Live-in 12 =   %96 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 4, !noelle.pdg.inst.id !2841
Parallelizer: parallelizerLoop:   Environment:   Live-in 13 =   %97 = bitcast %struct.jpeg_decompress_struct* %4 to %struct.jpeg_common_struct*, !noelle.pdg.inst.id !2842
Parallelizer: parallelizerLoop:   Environment:   Live-in 14 =   %98 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 2, !noelle.pdg.inst.id !2843
Parallelizer: parallelizerLoop:   Environment:   Live-in 15 =   %100 = bitcast %struct.jpeg_d_main_controller** %99 to %struct.jpeg_d_main_controller.178**, !noelle.pdg.inst.id !2845
DOALL: Checking if the loop is DOALL
DOALL:   We found an SCC of the loop that is non clonable and non commutative
DOALL:     Internal nodes: 1
DOALL:     	  call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86
DOALL:     External nodes: 25
DOALL:     	  %103 = load i8**, i8*** %92, align 8, !tbaa !2849, !noelle.pdg.inst.id !365
DOALL:     	  %104 = load i32, i32* %93, align 8, !tbaa !2850, !noelle.pdg.inst.id !367
DOALL:     	  %105 = load i32, i32* %96, align 4, !tbaa !2852, !noelle.pdg.inst.id !369
DOALL:     	  %108 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !371
DOALL:     	  store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373
DOALL:     	  store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376
DOALL:     	  %112 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %111, align 8, !tbaa !2819, !noelle.pdg.inst.id !379
DOALL:     	  call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82
DOALL:     	  %.pre = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !383
DOALL:     	  %.pre12 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !385
DOALL:     	  %117 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !387
DOALL:     	  store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389
DOALL:     	  %120 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %119, align 8, !tbaa !2869, !noelle.pdg.inst.id !392
DOALL:     	  call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84
DOALL:     	  %122 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %98, align 8, !tbaa !2871, !noelle.pdg.inst.id !396
DOALL:     	  br i1 %123, label %.._crit_edge4.i_crit_edge, label %124, !prof !2854, !noelle.pdg.inst.id !2873
DOALL:     	  store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398
DOALL:     	  store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401
DOALL:     	  %130 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %125, align 8, !tbaa !2883, !noelle.pdg.inst.id !404
DOALL:     	  %131 = load %struct.jpeg_d_main_controller.178*, %struct.jpeg_d_main_controller.178** %100, align 8, !tbaa !2886, !noelle.pdg.inst.id !411
DOALL:     	  %133 = load void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)** %132, align 8, !tbaa !2888, !noelle.pdg.inst.id !413
DOALL:     	  store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421
DOALL:     	  %138 = load void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)*, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %94, align 8, !tbaa !2895, !noelle.pdg.inst.id !424
DOALL:     	  %139 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !428
DOALL:     	  %140 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !430
DOALL:     Edges: 34
DOALL:     Loop-carried data dependences
DOALL:         %133 = load void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)** %132, align 8, !tbaa !2888, !noelle.pdg.inst.id !413 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %131 = load %struct.jpeg_d_main_controller.178*, %struct.jpeg_d_main_controller.178** %100, align 8, !tbaa !2886, !noelle.pdg.inst.id !411 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %130 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %125, align 8, !tbaa !2883, !noelle.pdg.inst.id !404 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %139 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !428 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %138 = load void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)*, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %94, align 8, !tbaa !2895, !noelle.pdg.inst.id !424 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %122 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %98, align 8, !tbaa !2871, !noelle.pdg.inst.id !396 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %140 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !430 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %.pre = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !383 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %108 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !371 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %117 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !387 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %105 = load i32, i32* %96, align 4, !tbaa !2852, !noelle.pdg.inst.id !369 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %120 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %119, align 8, !tbaa !2869, !noelle.pdg.inst.id !392 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %103 = load i8**, i8*** %92, align 8, !tbaa !2849, !noelle.pdg.inst.id !365 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %112 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %111, align 8, !tbaa !2819, !noelle.pdg.inst.id !379 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %104 = load i32, i32* %93, align 8, !tbaa !2850, !noelle.pdg.inst.id !367 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %.pre12 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !385 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %112 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %111, align 8, !tbaa !2819, !noelle.pdg.inst.id !379 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %108 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !371 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %138 = load void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)*, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %94, align 8, !tbaa !2895, !noelle.pdg.inst.id !424 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %139 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !428 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %140 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !430 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %.pre = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !383 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %.pre12 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !385 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %117 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !387 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %120 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %119, align 8, !tbaa !2869, !noelle.pdg.inst.id !392 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %122 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %98, align 8, !tbaa !2871, !noelle.pdg.inst.id !396 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %130 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %125, align 8, !tbaa !2883, !noelle.pdg.inst.id !404 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %131 = load %struct.jpeg_d_main_controller.178*, %struct.jpeg_d_main_controller.178** %100, align 8, !tbaa !2886, !noelle.pdg.inst.id !411 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %133 = load void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)** %132, align 8, !tbaa !2888, !noelle.pdg.inst.id !413 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %103 = load i8**, i8*** %92, align 8, !tbaa !2849, !noelle.pdg.inst.id !365 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %104 = load i32, i32* %93, align 8, !tbaa !2850, !noelle.pdg.inst.id !367 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %105 = load i32, i32* %96, align 4, !tbaa !2852, !noelle.pdg.inst.id !369 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:   We found an SCC of the loop that is non clonable and non commutative
DOALL:     Internal nodes: 1
DOALL:     	  call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88
DOALL:     External nodes: 26
DOALL:     	  %103 = load i8**, i8*** %92, align 8, !tbaa !2849, !noelle.pdg.inst.id !365
DOALL:     	  %104 = load i32, i32* %93, align 8, !tbaa !2850, !noelle.pdg.inst.id !367
DOALL:     	  %105 = load i32, i32* %96, align 4, !tbaa !2852, !noelle.pdg.inst.id !369
DOALL:     	  %108 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !371
DOALL:     	  store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373
DOALL:     	  store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376
DOALL:     	  %112 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %111, align 8, !tbaa !2819, !noelle.pdg.inst.id !379
DOALL:     	  call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82
DOALL:     	  %.pre = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !383
DOALL:     	  %.pre12 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !385
DOALL:     	  br i1 %115, label %121, label %116, !prof !2854, !noelle.pdg.inst.id !2866
DOALL:     	  %117 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !387
DOALL:     	  store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389
DOALL:     	  %120 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %119, align 8, !tbaa !2869, !noelle.pdg.inst.id !392
DOALL:     	  call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84
DOALL:     	  %122 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %98, align 8, !tbaa !2871, !noelle.pdg.inst.id !396
DOALL:     	  store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398
DOALL:     	  store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401
DOALL:     	  %130 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %125, align 8, !tbaa !2883, !noelle.pdg.inst.id !404
DOALL:     	  store i32 0, i32* %3, align 4, !tbaa !2885, !noelle.pdg.inst.id !408
DOALL:     	  %131 = load %struct.jpeg_d_main_controller.178*, %struct.jpeg_d_main_controller.178** %100, align 8, !tbaa !2886, !noelle.pdg.inst.id !411
DOALL:     	  %133 = load void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)** %132, align 8, !tbaa !2888, !noelle.pdg.inst.id !413
DOALL:     	  store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421
DOALL:     	  %138 = load void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)*, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %94, align 8, !tbaa !2895, !noelle.pdg.inst.id !424
DOALL:     	  %139 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !428
DOALL:     	  %140 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !430
DOALL:     Edges: 38
DOALL:     Loop-carried data dependences
DOALL:         %.pre12 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !385 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %117 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !387 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %.pre = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !383 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %133 = load void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)** %132, align 8, !tbaa !2888, !noelle.pdg.inst.id !413 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %112 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %111, align 8, !tbaa !2819, !noelle.pdg.inst.id !379 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %103 = load i8**, i8*** %92, align 8, !tbaa !2849, !noelle.pdg.inst.id !365 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %105 = load i32, i32* %96, align 4, !tbaa !2852, !noelle.pdg.inst.id !369 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %120 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %119, align 8, !tbaa !2869, !noelle.pdg.inst.id !392 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %122 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %98, align 8, !tbaa !2871, !noelle.pdg.inst.id !396 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %140 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !430 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %104 = load i32, i32* %93, align 8, !tbaa !2850, !noelle.pdg.inst.id !367 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %130 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %125, align 8, !tbaa !2883, !noelle.pdg.inst.id !404 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %138 = load void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)*, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %94, align 8, !tbaa !2895, !noelle.pdg.inst.id !424 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %139 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !428 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %131 = load %struct.jpeg_d_main_controller.178*, %struct.jpeg_d_main_controller.178** %100, align 8, !tbaa !2886, !noelle.pdg.inst.id !411 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %108 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !371 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %112 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %111, align 8, !tbaa !2819, !noelle.pdg.inst.id !379 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %108 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !371 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %138 = load void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)*, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %94, align 8, !tbaa !2895, !noelle.pdg.inst.id !424 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %139 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !428 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %140 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !430 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %.pre = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !383 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %.pre12 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !385 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %117 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !387 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %120 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %119, align 8, !tbaa !2869, !noelle.pdg.inst.id !392 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %122 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %98, align 8, !tbaa !2871, !noelle.pdg.inst.id !396 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %130 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %125, align 8, !tbaa !2883, !noelle.pdg.inst.id !404 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %131 = load %struct.jpeg_d_main_controller.178*, %struct.jpeg_d_main_controller.178** %100, align 8, !tbaa !2886, !noelle.pdg.inst.id !411 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %133 = load void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)** %132, align 8, !tbaa !2888, !noelle.pdg.inst.id !413 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %103 = load i8**, i8*** %92, align 8, !tbaa !2849, !noelle.pdg.inst.id !365 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %104 = load i32, i32* %93, align 8, !tbaa !2850, !noelle.pdg.inst.id !367 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %105 = load i32, i32* %96, align 4, !tbaa !2852, !noelle.pdg.inst.id !369 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:   We found an SCC of the loop that is non clonable and non commutative
DOALL:     Internal nodes: 1
DOALL:     	  call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90
DOALL:     External nodes: 28
DOALL:     	  %103 = load i8**, i8*** %92, align 8, !tbaa !2849, !noelle.pdg.inst.id !365
DOALL:     	  %104 = load i32, i32* %93, align 8, !tbaa !2850, !noelle.pdg.inst.id !367
DOALL:     	  %105 = load i32, i32* %96, align 4, !tbaa !2852, !noelle.pdg.inst.id !369
DOALL:     	  %108 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !371
DOALL:     	  store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373
DOALL:     	  store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376
DOALL:     	  %112 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %111, align 8, !tbaa !2819, !noelle.pdg.inst.id !379
DOALL:     	  call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82
DOALL:     	  %.pre = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !383
DOALL:     	  %.pre12 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !385
DOALL:     	  %117 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !387
DOALL:     	  store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389
DOALL:     	  %120 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %119, align 8, !tbaa !2869, !noelle.pdg.inst.id !392
DOALL:     	  call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84
DOALL:     	  %122 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %98, align 8, !tbaa !2871, !noelle.pdg.inst.id !396
DOALL:     	  store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398
DOALL:     	  store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401
DOALL:     	  %130 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %125, align 8, !tbaa !2883, !noelle.pdg.inst.id !404
DOALL:     	  %131 = load %struct.jpeg_d_main_controller.178*, %struct.jpeg_d_main_controller.178** %100, align 8, !tbaa !2886, !noelle.pdg.inst.id !411
DOALL:     	  %133 = load void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)** %132, align 8, !tbaa !2888, !noelle.pdg.inst.id !413
DOALL:     	  %134 = load i32, i32* %3, align 4, !tbaa !2885, !noelle.pdg.inst.id !417
DOALL:     	  %135 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !419
DOALL:     	  store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421
DOALL:     	  %137 = phi i32 [ 0, %116 ], [ %134, %._crit_edge4.i ], !noelle.pdg.inst.id !2893
DOALL:     	  %138 = load void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)*, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %94, align 8, !tbaa !2895, !noelle.pdg.inst.id !424
DOALL:     	  %139 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !428
DOALL:     	  %140 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !430
DOALL:     	  br i1 %141, label %jpeg_read_scanlines.exit.._crit_edge21_crit_edge, label %.loopexit.loopexit, !prof !2898, !noelle.pdg.inst.id !2899
DOALL:     Edges: 37
DOALL:     Loop-carried data dependences
DOALL:         %122 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %98, align 8, !tbaa !2871, !noelle.pdg.inst.id !396 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %131 = load %struct.jpeg_d_main_controller.178*, %struct.jpeg_d_main_controller.178** %100, align 8, !tbaa !2886, !noelle.pdg.inst.id !411 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %133 = load void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)** %132, align 8, !tbaa !2888, !noelle.pdg.inst.id !413 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %112 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %111, align 8, !tbaa !2819, !noelle.pdg.inst.id !379 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %117 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !387 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %.pre = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !383 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %104 = load i32, i32* %93, align 8, !tbaa !2850, !noelle.pdg.inst.id !367 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %103 = load i8**, i8*** %92, align 8, !tbaa !2849, !noelle.pdg.inst.id !365 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %.pre12 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !385 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %105 = load i32, i32* %96, align 4, !tbaa !2852, !noelle.pdg.inst.id !369 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %138 = load void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)*, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %94, align 8, !tbaa !2895, !noelle.pdg.inst.id !424 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %108 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !371 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %120 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %119, align 8, !tbaa !2869, !noelle.pdg.inst.id !392 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %139 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !428 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %140 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !430 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %130 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %125, align 8, !tbaa !2883, !noelle.pdg.inst.id !404 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %112 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %111, align 8, !tbaa !2819, !noelle.pdg.inst.id !379 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %108 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !371 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %138 = load void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)*, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %94, align 8, !tbaa !2895, !noelle.pdg.inst.id !424 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %139 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !428 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %140 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !430 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %.pre = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !383 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %.pre12 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !385 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %117 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !387 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %120 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %119, align 8, !tbaa !2869, !noelle.pdg.inst.id !392 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %122 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %98, align 8, !tbaa !2871, !noelle.pdg.inst.id !396 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %130 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %125, align 8, !tbaa !2883, !noelle.pdg.inst.id !404 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %131 = load %struct.jpeg_d_main_controller.178*, %struct.jpeg_d_main_controller.178** %100, align 8, !tbaa !2886, !noelle.pdg.inst.id !411 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %133 = load void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)** %132, align 8, !tbaa !2888, !noelle.pdg.inst.id !413 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %103 = load i8**, i8*** %92, align 8, !tbaa !2849, !noelle.pdg.inst.id !365 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %104 = load i32, i32* %93, align 8, !tbaa !2850, !noelle.pdg.inst.id !367 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %105 = load i32, i32* %96, align 4, !tbaa !2852, !noelle.pdg.inst.id !369 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:   We found an SCC of the loop that is non clonable and non commutative
DOALL:     Internal nodes: 51
DOALL:     	  %101 = phi i32 [ %89, %91 ], [ %140, %jpeg_read_scanlines.exit.._crit_edge21_crit_edge ], !noelle.pdg.inst.id !2847
DOALL:     	  %102 = phi i32 [ %87, %91 ], [ %139, %jpeg_read_scanlines.exit.._crit_edge21_crit_edge ], !noelle.pdg.inst.id !2848
DOALL:     	  %103 = load i8**, i8*** %92, align 8, !tbaa !2849, !noelle.pdg.inst.id !365
DOALL:     	  %104 = load i32, i32* %93, align 8, !tbaa !2850, !noelle.pdg.inst.id !367
DOALL:     	  %105 = load i32, i32* %96, align 4, !tbaa !2852, !noelle.pdg.inst.id !369
DOALL:     	  %106 = icmp eq i32 %105, 205, !noelle.pdg.inst.id !2853
DOALL:     	  br i1 %106, label %._crit_edge21.._crit_edge.i_crit_edge, label %107, !prof !2854, !noelle.loop.id !2855, !noelle.pdg.inst.id !2856, !noelle.parallelizer.looporder !2857
DOALL:     	  %108 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !371
DOALL:     	  %109 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %108, i64 0, i32 5, !noelle.pdg.inst.id !2859
DOALL:     	  store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373
DOALL:     	  %110 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %108, i64 0, i32 6, i32 0, i64 0, !noelle.pdg.inst.id !2860
DOALL:     	  store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376
DOALL:     	  %111 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %108, i64 0, i32 0, !noelle.pdg.inst.id !2861
DOALL:     	  %112 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %111, align 8, !tbaa !2819, !noelle.pdg.inst.id !379
DOALL:     	  call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82
DOALL:     	  %.pre = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !383
DOALL:     	  %.pre12 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !385
DOALL:     	  %113 = phi i32 [ %.pre12, %107 ], [ %101, %._crit_edge21.._crit_edge.i_crit_edge ], !noelle.pdg.inst.id !2863
DOALL:     	  %114 = phi i32 [ %.pre, %107 ], [ %102, %._crit_edge21.._crit_edge.i_crit_edge ], !noelle.pdg.inst.id !2864
DOALL:     	  %115 = icmp ult i32 %114, %113, !noelle.pdg.inst.id !2865
DOALL:     	  br i1 %115, label %121, label %116, !prof !2854, !noelle.pdg.inst.id !2866
DOALL:     	  %117 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !387
DOALL:     	  %118 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %117, i64 0, i32 5, !noelle.pdg.inst.id !2867
DOALL:     	  store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389
DOALL:     	  %119 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %117, i64 0, i32 1, !noelle.pdg.inst.id !2868
DOALL:     	  %120 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %119, align 8, !tbaa !2869, !noelle.pdg.inst.id !392
DOALL:     	  call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84
DOALL:     	  %122 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %98, align 8, !tbaa !2871, !noelle.pdg.inst.id !396
DOALL:     	  %123 = icmp eq %struct.jpeg_progress_mgr* %122, null, !noelle.pdg.inst.id !2872
DOALL:     	  br i1 %123, label %.._crit_edge4.i_crit_edge, label %124, !prof !2854, !noelle.pdg.inst.id !2873
DOALL:     	  %125 = bitcast %struct.jpeg_progress_mgr* %122 to void (%struct.jpeg_common_struct*)**, !noelle.pdg.inst.id !2875
DOALL:     	  %126 = zext i32 %114 to i64, !noelle.pdg.inst.id !2876
DOALL:     	  %127 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %122, i64 0, i32 1, !noelle.pdg.inst.id !2877
DOALL:     	  store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398
DOALL:     	  %128 = zext i32 %113 to i64, !noelle.pdg.inst.id !2880
DOALL:     	  %129 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %122, i64 0, i32 2, !noelle.pdg.inst.id !2881
DOALL:     	  store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401
DOALL:     	  %130 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %125, align 8, !tbaa !2883, !noelle.pdg.inst.id !404
DOALL:     	  store i32 0, i32* %3, align 4, !tbaa !2885, !noelle.pdg.inst.id !408
DOALL:     	  %131 = load %struct.jpeg_d_main_controller.178*, %struct.jpeg_d_main_controller.178** %100, align 8, !tbaa !2886, !noelle.pdg.inst.id !411
DOALL:     	  %132 = getelementptr inbounds %struct.jpeg_d_main_controller.178, %struct.jpeg_d_main_controller.178* %131, i64 0, i32 1, !noelle.pdg.inst.id !2887
DOALL:     	  %133 = load void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)** %132, align 8, !tbaa !2888, !noelle.pdg.inst.id !413
DOALL:     	  %134 = load i32, i32* %3, align 4, !tbaa !2885, !noelle.pdg.inst.id !417
DOALL:     	  %135 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !419
DOALL:     	  %136 = add i32 %135, %134, !noelle.pdg.inst.id !2891
DOALL:     	  store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421
DOALL:     	  %138 = load void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)*, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %94, align 8, !tbaa !2895, !noelle.pdg.inst.id !424
DOALL:     	  %139 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !428
DOALL:     	  %140 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !430
DOALL:     	  %141 = icmp ult i32 %139, %140, !noelle.pdg.inst.id !2897
DOALL:     	  br i1 %141, label %jpeg_read_scanlines.exit.._crit_edge21_crit_edge, label %.loopexit.loopexit, !prof !2898, !noelle.pdg.inst.id !2899
DOALL:     External nodes: 13
DOALL:     	  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %95) #19, !noelle.pdg.inst.id !2851
DOALL:     	  br label %._crit_edge.i, !noelle.pdg.inst.id !2858
DOALL:     	  br label %._crit_edge.i, !noelle.pdg.inst.id !2862
DOALL:     	  br label %jpeg_read_scanlines.exit, !noelle.pdg.inst.id !2870
DOALL:     	  br label %._crit_edge4.i, !noelle.pdg.inst.id !2874
DOALL:     	  call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86
DOALL:     	  br label %._crit_edge4.i, !noelle.pdg.inst.id !2884
DOALL:     	  call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88
DOALL:     	  br label %jpeg_read_scanlines.exit, !noelle.pdg.inst.id !2892
DOALL:     	  %137 = phi i32 [ 0, %116 ], [ %134, %._crit_edge4.i ], !noelle.pdg.inst.id !2893
DOALL:     	  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %95) #19, !noelle.pdg.inst.id !2894
DOALL:     	  call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90
DOALL:     	  br label %._crit_edge21, !noelle.pdg.inst.id !2900
DOALL:     Edges: 359
DOALL:     Loop-carried data dependences
DOALL:         %133 = load void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)** %132, align 8, !tbaa !2888, !noelle.pdg.inst.id !413 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %131 = load %struct.jpeg_d_main_controller.178*, %struct.jpeg_d_main_controller.178** %100, align 8, !tbaa !2886, !noelle.pdg.inst.id !411 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %130 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %125, align 8, !tbaa !2883, !noelle.pdg.inst.id !404 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %139 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !428 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %138 = load void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)*, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %94, align 8, !tbaa !2895, !noelle.pdg.inst.id !424 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %122 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %98, align 8, !tbaa !2871, !noelle.pdg.inst.id !396 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %140 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !430 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %.pre = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !383 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %108 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !371 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %117 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !387 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %105 = load i32, i32* %96, align 4, !tbaa !2852, !noelle.pdg.inst.id !369 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %120 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %119, align 8, !tbaa !2869, !noelle.pdg.inst.id !392 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %103 = load i8**, i8*** %92, align 8, !tbaa !2849, !noelle.pdg.inst.id !365 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %112 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %111, align 8, !tbaa !2819, !noelle.pdg.inst.id !379 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %104 = load i32, i32* %93, align 8, !tbaa !2850, !noelle.pdg.inst.id !367 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %.pre12 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !385 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %.pre12 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !385 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %117 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !387 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %.pre = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !383 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %133 = load void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)** %132, align 8, !tbaa !2888, !noelle.pdg.inst.id !413 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %112 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %111, align 8, !tbaa !2819, !noelle.pdg.inst.id !379 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %103 = load i8**, i8*** %92, align 8, !tbaa !2849, !noelle.pdg.inst.id !365 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %105 = load i32, i32* %96, align 4, !tbaa !2852, !noelle.pdg.inst.id !369 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %120 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %119, align 8, !tbaa !2869, !noelle.pdg.inst.id !392 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %122 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %98, align 8, !tbaa !2871, !noelle.pdg.inst.id !396 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %140 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !430 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %104 = load i32, i32* %93, align 8, !tbaa !2850, !noelle.pdg.inst.id !367 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %130 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %125, align 8, !tbaa !2883, !noelle.pdg.inst.id !404 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %138 = load void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)*, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %94, align 8, !tbaa !2895, !noelle.pdg.inst.id !424 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %139 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !428 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %131 = load %struct.jpeg_d_main_controller.178*, %struct.jpeg_d_main_controller.178** %100, align 8, !tbaa !2886, !noelle.pdg.inst.id !411 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %108 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !371 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %122 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %98, align 8, !tbaa !2871, !noelle.pdg.inst.id !396 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %131 = load %struct.jpeg_d_main_controller.178*, %struct.jpeg_d_main_controller.178** %100, align 8, !tbaa !2886, !noelle.pdg.inst.id !411 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %133 = load void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)** %132, align 8, !tbaa !2888, !noelle.pdg.inst.id !413 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %112 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %111, align 8, !tbaa !2819, !noelle.pdg.inst.id !379 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %117 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !387 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %.pre = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !383 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %104 = load i32, i32* %93, align 8, !tbaa !2850, !noelle.pdg.inst.id !367 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %103 = load i8**, i8*** %92, align 8, !tbaa !2849, !noelle.pdg.inst.id !365 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %.pre12 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !385 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %105 = load i32, i32* %96, align 4, !tbaa !2852, !noelle.pdg.inst.id !369 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %138 = load void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)*, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %94, align 8, !tbaa !2895, !noelle.pdg.inst.id !424 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %108 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !371 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %120 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %119, align 8, !tbaa !2869, !noelle.pdg.inst.id !392 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %139 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !428 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %140 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !430 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %130 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %125, align 8, !tbaa !2883, !noelle.pdg.inst.id !404 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 --->   store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 via memory
DOALL:         store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         %112 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %111, align 8, !tbaa !2819, !noelle.pdg.inst.id !379 --->   store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 via memory
DOALL:         %112 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %111, align 8, !tbaa !2819, !noelle.pdg.inst.id !379 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         %112 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %111, align 8, !tbaa !2819, !noelle.pdg.inst.id !379 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   %140 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !430 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   %139 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !428 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   %138 = load void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)*, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %94, align 8, !tbaa !2895, !noelle.pdg.inst.id !424 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   %.pre = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !383 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   %117 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !387 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   %112 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %111, align 8, !tbaa !2819, !noelle.pdg.inst.id !379 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   %133 = load void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)** %132, align 8, !tbaa !2888, !noelle.pdg.inst.id !413 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   %131 = load %struct.jpeg_d_main_controller.178*, %struct.jpeg_d_main_controller.178** %100, align 8, !tbaa !2886, !noelle.pdg.inst.id !411 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   %135 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !419 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   %.pre12 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !385 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   %108 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !371 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   %103 = load i8**, i8*** %92, align 8, !tbaa !2849, !noelle.pdg.inst.id !365 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   %120 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %119, align 8, !tbaa !2869, !noelle.pdg.inst.id !392 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   %104 = load i32, i32* %93, align 8, !tbaa !2850, !noelle.pdg.inst.id !367 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   %105 = load i32, i32* %96, align 4, !tbaa !2852, !noelle.pdg.inst.id !369 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   %122 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %98, align 8, !tbaa !2871, !noelle.pdg.inst.id !396 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   %130 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %125, align 8, !tbaa !2883, !noelle.pdg.inst.id !404 via memory
DOALL:         %108 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !371 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         %108 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !371 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         %138 = load void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)*, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %94, align 8, !tbaa !2895, !noelle.pdg.inst.id !424 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         %138 = load void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)*, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %94, align 8, !tbaa !2895, !noelle.pdg.inst.id !424 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         %139 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !428 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         %139 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !428 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         %139 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !428 --->   %102 = phi i32 [ %87, %91 ], [ %139, %jpeg_read_scanlines.exit.._crit_edge21_crit_edge ], !noelle.pdg.inst.id !2848 via variable
DOALL:         %139 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !428 --->   store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 via memory
DOALL:         %140 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !430 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         %140 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !430 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         %140 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !430 --->   %101 = phi i32 [ %89, %91 ], [ %140, %jpeg_read_scanlines.exit.._crit_edge21_crit_edge ], !noelle.pdg.inst.id !2847 via variable
DOALL:         %.pre = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !383 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         %.pre = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !383 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         %.pre = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !383 --->   store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 via memory
DOALL:         %.pre12 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !385 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         %.pre12 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !385 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         %117 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !387 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         %117 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !387 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   %112 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %111, align 8, !tbaa !2819, !noelle.pdg.inst.id !379 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         %120 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %119, align 8, !tbaa !2869, !noelle.pdg.inst.id !392 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         %120 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %119, align 8, !tbaa !2869, !noelle.pdg.inst.id !392 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   %140 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !430 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   %.pre12 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !385 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   %105 = load i32, i32* %96, align 4, !tbaa !2852, !noelle.pdg.inst.id !369 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   %117 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !387 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   %131 = load %struct.jpeg_d_main_controller.178*, %struct.jpeg_d_main_controller.178** %100, align 8, !tbaa !2886, !noelle.pdg.inst.id !411 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   %139 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !428 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   %.pre = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !383 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   %135 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !419 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   %108 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !371 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   %103 = load i8**, i8*** %92, align 8, !tbaa !2849, !noelle.pdg.inst.id !365 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   %130 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %125, align 8, !tbaa !2883, !noelle.pdg.inst.id !404 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   %112 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %111, align 8, !tbaa !2819, !noelle.pdg.inst.id !379 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   %122 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %98, align 8, !tbaa !2871, !noelle.pdg.inst.id !396 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   %104 = load i32, i32* %93, align 8, !tbaa !2850, !noelle.pdg.inst.id !367 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   %120 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %119, align 8, !tbaa !2869, !noelle.pdg.inst.id !392 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   %133 = load void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)** %132, align 8, !tbaa !2888, !noelle.pdg.inst.id !413 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   %138 = load void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)*, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %94, align 8, !tbaa !2895, !noelle.pdg.inst.id !424 via memory
DOALL:         %122 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %98, align 8, !tbaa !2871, !noelle.pdg.inst.id !396 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         %122 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %98, align 8, !tbaa !2871, !noelle.pdg.inst.id !396 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         %130 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %125, align 8, !tbaa !2883, !noelle.pdg.inst.id !404 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         %130 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %125, align 8, !tbaa !2883, !noelle.pdg.inst.id !404 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         %131 = load %struct.jpeg_d_main_controller.178*, %struct.jpeg_d_main_controller.178** %100, align 8, !tbaa !2886, !noelle.pdg.inst.id !411 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         %131 = load %struct.jpeg_d_main_controller.178*, %struct.jpeg_d_main_controller.178** %100, align 8, !tbaa !2886, !noelle.pdg.inst.id !411 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         %133 = load void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)** %132, align 8, !tbaa !2888, !noelle.pdg.inst.id !413 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         %133 = load void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)** %132, align 8, !tbaa !2888, !noelle.pdg.inst.id !413 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   %135 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !419 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   %.pre = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !383 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   %139 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !428 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         %103 = load i8**, i8*** %92, align 8, !tbaa !2849, !noelle.pdg.inst.id !365 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         %103 = load i8**, i8*** %92, align 8, !tbaa !2849, !noelle.pdg.inst.id !365 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         %104 = load i32, i32* %93, align 8, !tbaa !2850, !noelle.pdg.inst.id !367 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         %104 = load i32, i32* %93, align 8, !tbaa !2850, !noelle.pdg.inst.id !367 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         %105 = load i32, i32* %96, align 4, !tbaa !2852, !noelle.pdg.inst.id !369 --->   call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 via memory
DOALL:         %105 = load i32, i32* %96, align 4, !tbaa !2852, !noelle.pdg.inst.id !369 --->   call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 via memory
DOALL:         store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %112 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %111, align 8, !tbaa !2819, !noelle.pdg.inst.id !379 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %112 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %111, align 8, !tbaa !2819, !noelle.pdg.inst.id !379 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %112 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %111, align 8, !tbaa !2819, !noelle.pdg.inst.id !379 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %108 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !371 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %108 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !371 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %108 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !371 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %138 = load void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)*, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %94, align 8, !tbaa !2895, !noelle.pdg.inst.id !424 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %138 = load void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)*, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %94, align 8, !tbaa !2895, !noelle.pdg.inst.id !424 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %138 = load void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)*, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %94, align 8, !tbaa !2895, !noelle.pdg.inst.id !424 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %139 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !428 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %139 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !428 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %139 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !428 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %140 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !430 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %140 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !430 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %140 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !430 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %.pre = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !383 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %.pre = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !383 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %.pre = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !383 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %.pre12 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !385 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %.pre12 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !385 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %.pre12 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !385 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %117 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !387 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %117 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !387 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %117 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !387 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %120 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %119, align 8, !tbaa !2869, !noelle.pdg.inst.id !392 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %120 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %119, align 8, !tbaa !2869, !noelle.pdg.inst.id !392 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %120 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %119, align 8, !tbaa !2869, !noelle.pdg.inst.id !392 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %122 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %98, align 8, !tbaa !2871, !noelle.pdg.inst.id !396 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %122 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %98, align 8, !tbaa !2871, !noelle.pdg.inst.id !396 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %122 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %98, align 8, !tbaa !2871, !noelle.pdg.inst.id !396 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %130 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %125, align 8, !tbaa !2883, !noelle.pdg.inst.id !404 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %130 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %125, align 8, !tbaa !2883, !noelle.pdg.inst.id !404 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %130 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %125, align 8, !tbaa !2883, !noelle.pdg.inst.id !404 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %131 = load %struct.jpeg_d_main_controller.178*, %struct.jpeg_d_main_controller.178** %100, align 8, !tbaa !2886, !noelle.pdg.inst.id !411 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %131 = load %struct.jpeg_d_main_controller.178*, %struct.jpeg_d_main_controller.178** %100, align 8, !tbaa !2886, !noelle.pdg.inst.id !411 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %131 = load %struct.jpeg_d_main_controller.178*, %struct.jpeg_d_main_controller.178** %100, align 8, !tbaa !2886, !noelle.pdg.inst.id !411 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %133 = load void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)** %132, align 8, !tbaa !2888, !noelle.pdg.inst.id !413 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %133 = load void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)** %132, align 8, !tbaa !2888, !noelle.pdg.inst.id !413 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %133 = load void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)** %132, align 8, !tbaa !2888, !noelle.pdg.inst.id !413 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %103 = load i8**, i8*** %92, align 8, !tbaa !2849, !noelle.pdg.inst.id !365 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %103 = load i8**, i8*** %92, align 8, !tbaa !2849, !noelle.pdg.inst.id !365 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %103 = load i8**, i8*** %92, align 8, !tbaa !2849, !noelle.pdg.inst.id !365 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %104 = load i32, i32* %93, align 8, !tbaa !2850, !noelle.pdg.inst.id !367 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %104 = load i32, i32* %93, align 8, !tbaa !2850, !noelle.pdg.inst.id !367 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DOALL:         %104 = load i32, i32* %93, align 8, !tbaa !2850, !noelle.pdg.inst.id !367 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %105 = load i32, i32* %96, align 4, !tbaa !2852, !noelle.pdg.inst.id !369 --->   call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86 via memory
DOALL:         %105 = load i32, i32* %96, align 4, !tbaa !2852, !noelle.pdg.inst.id !369 --->   call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90 via memory
DOALL:         %105 = load i32, i32* %96, align 4, !tbaa !2852, !noelle.pdg.inst.id !369 --->   call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88 via memory
DSWP: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Start
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences:  Initial number of partitions: 6
ParallelizationTechniqueForLoopsWithLoopCarriedDataDependences: Exit
DSWP:  Before partitioning the SCCDAG
Heuristic:   PCA: No candidates
DSWP:  Final number of partitions: 3
DSWP:  After partitioning the SCCDAG
DSWP:  There are 3 partitions in the SCCDAG
DSWP:  Pipeline stages
DSWP:    Stage: 0
DSWP:    SCC
DSWP:      call void %130(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !86
DSWP:    
DSWP:    SCC
DSWP:      call void %133(%struct.jpeg_decompress_struct.188* nonnull %82, i8** %103, i32* nonnull %3, i32 %104) #19, !prof !2890, !noelle.pdg.inst.id !88
DSWP:    
DSWP:    SCC
DSWP:      call void %138(%struct.jpeg_decompress_struct* nonnull %4, %struct.djpeg_dest_struct* %80, i32 %137) #19, !prof !2896, !noelle.pdg.inst.id !90
DSWP:    
DSWP:    SCC
DSWP:      %101 = phi i32 [ %89, %91 ], [ %140, %jpeg_read_scanlines.exit.._crit_edge21_crit_edge ], !noelle.pdg.inst.id !2847
DSWP:      %102 = phi i32 [ %87, %91 ], [ %139, %jpeg_read_scanlines.exit.._crit_edge21_crit_edge ], !noelle.pdg.inst.id !2848
DSWP:      %103 = load i8**, i8*** %92, align 8, !tbaa !2849, !noelle.pdg.inst.id !365
DSWP:      %104 = load i32, i32* %93, align 8, !tbaa !2850, !noelle.pdg.inst.id !367
DSWP:      %105 = load i32, i32* %96, align 4, !tbaa !2852, !noelle.pdg.inst.id !369
DSWP:      %106 = icmp eq i32 %105, 205, !noelle.pdg.inst.id !2853
DSWP:      br i1 %106, label %._crit_edge21.._crit_edge.i_crit_edge, label %107, !prof !2854, !noelle.loop.id !2855, !noelle.pdg.inst.id !2856, !noelle.parallelizer.looporder !2857
DSWP:      %108 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !371
DSWP:      %109 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %108, i64 0, i32 5, !noelle.pdg.inst.id !2859
DSWP:      store i32 18, i32* %109, align 8, !tbaa !2817, !noelle.pdg.inst.id !373
DSWP:      %110 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %108, i64 0, i32 6, i32 0, i64 0, !noelle.pdg.inst.id !2860
DSWP:      store i32 %105, i32* %110, align 4, !tbaa !2741, !noelle.pdg.inst.id !376
DSWP:      %111 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %108, i64 0, i32 0, !noelle.pdg.inst.id !2861
DSWP:      %112 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %111, align 8, !tbaa !2819, !noelle.pdg.inst.id !379
DSWP:      call void %112(%struct.jpeg_common_struct* nonnull %97) #19, !noelle.pdg.inst.id !82
DSWP:      %.pre = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !383
DSWP:      %.pre12 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !385
DSWP:      %113 = phi i32 [ %.pre12, %107 ], [ %101, %._crit_edge21.._crit_edge.i_crit_edge ], !noelle.pdg.inst.id !2863
DSWP:      %114 = phi i32 [ %.pre, %107 ], [ %102, %._crit_edge21.._crit_edge.i_crit_edge ], !noelle.pdg.inst.id !2864
DSWP:      %115 = icmp ult i32 %114, %113, !noelle.pdg.inst.id !2865
DSWP:      br i1 %115, label %121, label %116, !prof !2854, !noelle.pdg.inst.id !2866
DSWP:      %117 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %15, align 8, !tbaa !2749, !noelle.pdg.inst.id !387
DSWP:      %118 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %117, i64 0, i32 5, !noelle.pdg.inst.id !2867
DSWP:      store i32 119, i32* %118, align 8, !tbaa !2817, !noelle.pdg.inst.id !389
DSWP:      %119 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %117, i64 0, i32 1, !noelle.pdg.inst.id !2868
DSWP:      %120 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %119, align 8, !tbaa !2869, !noelle.pdg.inst.id !392
DSWP:      call void %120(%struct.jpeg_common_struct* nonnull %97, i32 -1) #19, !noelle.pdg.inst.id !84
DSWP:      %122 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %98, align 8, !tbaa !2871, !noelle.pdg.inst.id !396
DSWP:      %123 = icmp eq %struct.jpeg_progress_mgr* %122, null, !noelle.pdg.inst.id !2872
DSWP:      br i1 %123, label %.._crit_edge4.i_crit_edge, label %124, !prof !2854, !noelle.pdg.inst.id !2873
DSWP:      %125 = bitcast %struct.jpeg_progress_mgr* %122 to void (%struct.jpeg_common_struct*)**, !noelle.pdg.inst.id !2875
DSWP:      %126 = zext i32 %114 to i64, !noelle.pdg.inst.id !2876
DSWP:      %127 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %122, i64 0, i32 1, !noelle.pdg.inst.id !2877
DSWP:      store i64 %126, i64* %127, align 8, !tbaa !2878, !noelle.pdg.inst.id !398
DSWP:      %128 = zext i32 %113 to i64, !noelle.pdg.inst.id !2880
DSWP:      %129 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %122, i64 0, i32 2, !noelle.pdg.inst.id !2881
DSWP:      store i64 %128, i64* %129, align 8, !tbaa !2882, !noelle.pdg.inst.id !401
DSWP:      %130 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %125, align 8, !tbaa !2883, !noelle.pdg.inst.id !404
DSWP:      store i32 0, i32* %3, align 4, !tbaa !2885, !noelle.pdg.inst.id !408
DSWP:      %131 = load %struct.jpeg_d_main_controller.178*, %struct.jpeg_d_main_controller.178** %100, align 8, !tbaa !2886, !noelle.pdg.inst.id !411
DSWP:      %132 = getelementptr inbounds %struct.jpeg_d_main_controller.178, %struct.jpeg_d_main_controller.178* %131, i64 0, i32 1, !noelle.pdg.inst.id !2887
DSWP:      %133 = load void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)** %132, align 8, !tbaa !2888, !noelle.pdg.inst.id !413
DSWP:      %134 = load i32, i32* %3, align 4, !tbaa !2885, !noelle.pdg.inst.id !417
DSWP:      %135 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !419
DSWP:      %136 = add i32 %135, %134, !noelle.pdg.inst.id !2891
DSWP:      store i32 %136, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !421
DSWP:      %138 = load void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)*, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %94, align 8, !tbaa !2895, !noelle.pdg.inst.id !424
DSWP:      %139 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !428
DSWP:      %140 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !430
DSWP:      %141 = icmp ult i32 %139, %140, !noelle.pdg.inst.id !2897
DSWP:      br i1 %141, label %jpeg_read_scanlines.exit.._crit_edge21_crit_edge, label %.loopexit.loopexit, !prof !2898, !noelle.pdg.inst.id !2899
DSWP:    
DSWP:    Stage: 1
DSWP:    SCC
DSWP:      call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %95) #19, !noelle.pdg.inst.id !2894
DSWP:    
DSWP:    Stage: 2
DSWP:    SCC
DSWP:      call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %95) #19, !noelle.pdg.inst.id !2851
DSWP:    
DSWP:  Queues that connect the pipeline stages
DSWP:    Stage: 0
DSWP:      Push value queues: 0 1 2 3 4 5 6 7 
DSWP:      Pop value queues: 
DSWP:    Stage: 1
DSWP:      Push value queues: 
DSWP:      Pop value queues: 1 3 5 7 
DSWP:    Stage: 2
DSWP:      Push value queues: 
DSWP:      Pop value queues: 0 2 4 6 
DSWP:    Queue: 0
DSWP:     Producer:	  %141 = icmp ult i32 %139, %140, !noelle.pdg.inst.id !2897
DSWP:     Consumer:	  br i1 %141, label %jpeg_read_scanlines.exit.._crit_edge21_crit_edge, label %.loopexit.loopexit, !prof !2898, !noelle.pdg.inst.id !2899
DSWP:    Queue: 1
DSWP:     Producer:	  %141 = icmp ult i32 %139, %140, !noelle.pdg.inst.id !2897
DSWP:     Consumer:	  br i1 %141, label %jpeg_read_scanlines.exit.._crit_edge21_crit_edge, label %.loopexit.loopexit, !prof !2898, !noelle.pdg.inst.id !2899
DSWP:    Queue: 2
DSWP:     Producer:	  %115 = icmp ult i32 %114, %113, !noelle.pdg.inst.id !2865
DSWP:     Consumer:	  br i1 %115, label %121, label %116, !prof !2854, !noelle.pdg.inst.id !2866
DSWP:    Queue: 3
DSWP:     Producer:	  %115 = icmp ult i32 %114, %113, !noelle.pdg.inst.id !2865
DSWP:     Consumer:	  br i1 %115, label %121, label %116, !prof !2854, !noelle.pdg.inst.id !2866
DSWP:    Queue: 4
DSWP:     Producer:	  %123 = icmp eq %struct.jpeg_progress_mgr* %122, null, !noelle.pdg.inst.id !2872
DSWP:     Consumer:	  br i1 %123, label %.._crit_edge4.i_crit_edge, label %124, !prof !2854, !noelle.pdg.inst.id !2873
DSWP:    Queue: 5
DSWP:     Producer:	  %123 = icmp eq %struct.jpeg_progress_mgr* %122, null, !noelle.pdg.inst.id !2872
DSWP:     Consumer:	  br i1 %123, label %.._crit_edge4.i_crit_edge, label %124, !prof !2854, !noelle.pdg.inst.id !2873
DSWP:    Queue: 6
DSWP:     Producer:	  %106 = icmp eq i32 %105, 205, !noelle.pdg.inst.id !2853
DSWP:     Consumer:	  br i1 %106, label %._crit_edge21.._crit_edge.i_crit_edge, label %107, !prof !2854, !noelle.loop.id !2855, !noelle.pdg.inst.id !2856, !noelle.parallelizer.looporder !2857
DSWP:    Queue: 7
DSWP:     Producer:	  %106 = icmp eq i32 %105, 205, !noelle.pdg.inst.id !2853
DSWP:     Consumer:	  br i1 %106, label %._crit_edge21.._crit_edge.i_crit_edge, label %107, !prof !2854, !noelle.loop.id !2855, !noelle.pdg.inst.id !2856, !noelle.parallelizer.looporder !2857
DSWP:  Environment
DSWP:    Pre loop env 1, producer:	  %4 = alloca %struct.jpeg_decompress_struct, align 8, !noelle.pdg.inst.id !2727
DSWP:    Pre loop env 2, producer:	  %15 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 0, !noelle.pdg.inst.id !2748
DSWP:    Pre loop env 3, producer:	  %80 = phi %struct.djpeg_dest_struct* [ null, %NewDefault ], [ %73, %72 ], [ %71, %70 ], [ %69, %68 ], [ %67, %66 ], [ %65, %64 ], !noelle.pdg.inst.id !2822
DSWP:    Pre loop env 4, producer:	  %82 = bitcast %struct.jpeg_decompress_struct* %4 to %struct.jpeg_decompress_struct.188*, !noelle.pdg.inst.id !2826
DSWP:    Pre loop env 5, producer:	  %86 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 33, !noelle.pdg.inst.id !2830
DSWP:    Pre loop env 6, producer:	  %87 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !361
DSWP:    Pre loop env 7, producer:	  %88 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 27, !noelle.pdg.inst.id !2832
DSWP:    Pre loop env 8, producer:	  %89 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !363
DSWP:    Pre loop env 9, producer:	  %92 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %80, i64 0, i32 4, !noelle.pdg.inst.id !2837
DSWP:    Pre loop env 10, producer:	  %93 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %80, i64 0, i32 5, !noelle.pdg.inst.id !2838
DSWP:    Pre loop env 11, producer:	  %94 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %80, i64 0, i32 1, !noelle.pdg.inst.id !2839
DSWP:    Pre loop env 12, producer:	  %95 = bitcast i32* %3 to i8*, !noelle.pdg.inst.id !2840
DSWP:    Pre loop env 13, producer:	  %96 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 4, !noelle.pdg.inst.id !2841
DSWP:    Pre loop env 14, producer:	  %97 = bitcast %struct.jpeg_decompress_struct* %4 to %struct.jpeg_common_struct*, !noelle.pdg.inst.id !2842
DSWP:    Pre loop env 15, producer:	  %98 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 2, !noelle.pdg.inst.id !2843
DSWP:    Pre loop env 16, producer:	  %100 = bitcast %struct.jpeg_d_main_controller** %99 to %struct.jpeg_d_main_controller.178**, !noelle.pdg.inst.id !2845
DSWP:  Create 3 pipeline stages
DSWP:  Loaded queue pointers
DSWP:  Added queue pop and push instructions
DSWP:  Loaded live-in variables
DSWP:  Adjusted data flow between cloned instructions
DSWP:  Stored live out instructions
Pipeline stage 0:

define void @noelle_task_1(i8*, i8*) {
  %3 = alloca i32, align 4, !noelle.pdg.inst.id !30
  %noelle.environment_variable.pointer = bitcast i8* %0 to [128 x i64]*
  %4 = bitcast i8* %1 to [8 x i8*]*
  %5 = getelementptr inbounds [8 x i8*], [8 x i8*]* %4, i64 0, i64 0
  %6 = load i8*, i8** %5
  %7 = alloca i1
  %8 = bitcast i1* %7 to i8*
  %9 = getelementptr inbounds [8 x i8*], [8 x i8*]* %4, i64 0, i64 1
  %10 = load i8*, i8** %9
  %11 = alloca i1
  %12 = bitcast i1* %11 to i8*
  %13 = getelementptr inbounds [8 x i8*], [8 x i8*]* %4, i64 0, i64 2
  %14 = load i8*, i8** %13
  %15 = alloca i1
  %16 = bitcast i1* %15 to i8*
  %17 = getelementptr inbounds [8 x i8*], [8 x i8*]* %4, i64 0, i64 3
  %18 = load i8*, i8** %17
  %19 = alloca i1
  %20 = bitcast i1* %19 to i8*
  %21 = getelementptr inbounds [8 x i8*], [8 x i8*]* %4, i64 0, i64 4
  %22 = load i8*, i8** %21
  %23 = alloca i1
  %24 = bitcast i1* %23 to i8*
  %25 = getelementptr inbounds [8 x i8*], [8 x i8*]* %4, i64 0, i64 5
  %26 = load i8*, i8** %25
  %27 = alloca i1
  %28 = bitcast i1* %27 to i8*
  %29 = getelementptr inbounds [8 x i8*], [8 x i8*]* %4, i64 0, i64 6
  %30 = load i8*, i8** %29
  %31 = alloca i1
  %32 = bitcast i1* %31 to i8*
  %33 = getelementptr inbounds [8 x i8*], [8 x i8*]* %4, i64 0, i64 7
  %34 = load i8*, i8** %33
  %35 = alloca i1
  %36 = bitcast i1* %35 to i8*
  %37 = getelementptr inbounds [128 x i64], [128 x i64]* %noelle.environment_variable.pointer, i64 0, i64 0
  %38 = bitcast i64* %37 to %struct.jpeg_decompress_struct**
  %noelle_environment_variable_0 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %38
  %39 = getelementptr inbounds [128 x i64], [128 x i64]* %noelle.environment_variable.pointer, i64 0, i64 8
  %40 = bitcast i64* %39 to %struct.jpeg_error_mgr***
  %noelle_environment_variable_1 = load %struct.jpeg_error_mgr**, %struct.jpeg_error_mgr*** %40
  %41 = getelementptr inbounds [128 x i64], [128 x i64]* %noelle.environment_variable.pointer, i64 0, i64 16
  %42 = bitcast i64* %41 to %struct.djpeg_dest_struct**
  %noelle_environment_variable_2 = load %struct.djpeg_dest_struct*, %struct.djpeg_dest_struct** %42
  %43 = getelementptr inbounds [128 x i64], [128 x i64]* %noelle.environment_variable.pointer, i64 0, i64 24
  %44 = bitcast i64* %43 to %struct.jpeg_decompress_struct.188**
  %noelle_environment_variable_3 = load %struct.jpeg_decompress_struct.188*, %struct.jpeg_decompress_struct.188** %44
  %45 = getelementptr inbounds [128 x i64], [128 x i64]* %noelle.environment_variable.pointer, i64 0, i64 32
  %46 = bitcast i64* %45 to i32**
  %noelle_environment_variable_4 = load i32*, i32** %46
  %47 = getelementptr inbounds [128 x i64], [128 x i64]* %noelle.environment_variable.pointer, i64 0, i64 40
  %48 = bitcast i64* %47 to i32*
  %noelle_environment_variable_5 = load i32, i32* %48
  %49 = getelementptr inbounds [128 x i64], [128 x i64]* %noelle.environment_variable.pointer, i64 0, i64 48
  %50 = bitcast i64* %49 to i32**
  %noelle_environment_variable_6 = load i32*, i32** %50
  %51 = getelementptr inbounds [128 x i64], [128 x i64]* %noelle.environment_variable.pointer, i64 0, i64 56
  %52 = bitcast i64* %51 to i32*
  %noelle_environment_variable_7 = load i32, i32* %52
  %53 = getelementptr inbounds [128 x i64], [128 x i64]* %noelle.environment_variable.pointer, i64 0, i64 64
  %54 = bitcast i64* %53 to i8****
  %noelle_environment_variable_8 = load i8***, i8**** %54
  %55 = getelementptr inbounds [128 x i64], [128 x i64]* %noelle.environment_variable.pointer, i64 0, i64 72
  %56 = bitcast i64* %55 to i32**
  %noelle_environment_variable_9 = load i32*, i32** %56
  %57 = getelementptr inbounds [128 x i64], [128 x i64]* %noelle.environment_variable.pointer, i64 0, i64 80
  %58 = bitcast i64* %57 to void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)***
  %noelle_environment_variable_10 = load void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)**, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)*** %58
  %59 = getelementptr inbounds [128 x i64], [128 x i64]* %noelle.environment_variable.pointer, i64 0, i64 96
  %60 = bitcast i64* %59 to i32**
  %noelle_environment_variable_12 = load i32*, i32** %60
  %61 = getelementptr inbounds [128 x i64], [128 x i64]* %noelle.environment_variable.pointer, i64 0, i64 104
  %62 = bitcast i64* %61 to %struct.jpeg_common_struct**
  %noelle_environment_variable_13 = load %struct.jpeg_common_struct*, %struct.jpeg_common_struct** %62
  %63 = getelementptr inbounds [128 x i64], [128 x i64]* %noelle.environment_variable.pointer, i64 0, i64 112
  %64 = bitcast i64* %63 to %struct.jpeg_progress_mgr***
  %noelle_environment_variable_14 = load %struct.jpeg_progress_mgr**, %struct.jpeg_progress_mgr*** %64
  %65 = getelementptr inbounds [128 x i64], [128 x i64]* %noelle.environment_variable.pointer, i64 0, i64 120
  %66 = bitcast i64* %65 to %struct.jpeg_d_main_controller.178***
  %noelle_environment_variable_15 = load %struct.jpeg_d_main_controller.178**, %struct.jpeg_d_main_controller.178*** %66
  br label %69

67:                                               ; preds = %68
  ret void

68:                                               ; preds = %110
  br label %67

69:                                               ; preds = %2, %116
  %70 = phi i32 [ %noelle_environment_variable_7, %2 ], [ %114, %116 ], !noelle.pdg.inst.id !31
  %71 = phi i32 [ %noelle_environment_variable_5, %2 ], [ %113, %116 ], !noelle.pdg.inst.id !32
  %72 = load i8**, i8*** %noelle_environment_variable_8, align 8, !tbaa !33, !noelle.pdg.inst.id !39
  %73 = load i32, i32* %noelle_environment_variable_9, align 8, !tbaa !40, !noelle.pdg.inst.id !41
  %74 = load i32, i32* %noelle_environment_variable_12, align 4, !tbaa !42, !noelle.pdg.inst.id !46
  %75 = icmp eq i32 %74, 205, !noelle.pdg.inst.id !47
  store i1 %75, i1* %35
  call void @queuePush8(i8* %34, i8* %36)
  store i1 %75, i1* %31
  call void @queuePush8(i8* %30, i8* %32)
  br i1 %75, label %118, label %76, !prof !48, !noelle.loop.id !49, !noelle.pdg.inst.id !50, !noelle.parallelizer.looporder !51

76:                                               ; preds = %69
  %77 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %noelle_environment_variable_1, align 8, !tbaa !52, !noelle.pdg.inst.id !53
  %78 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %77, i64 0, i32 5, !noelle.pdg.inst.id !54
  store i32 18, i32* %78, align 8, !tbaa !55, !noelle.pdg.inst.id !58
  %79 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %77, i64 0, i32 6, i32 0, i64 0, !noelle.pdg.inst.id !59
  store i32 %74, i32* %79, align 4, !tbaa !60, !noelle.pdg.inst.id !61
  %80 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %77, i64 0, i32 0, !noelle.pdg.inst.id !62
  %81 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %80, align 8, !tbaa !63, !noelle.pdg.inst.id !64
  call void %81(%struct.jpeg_common_struct* nonnull %noelle_environment_variable_13) #19, !noelle.pdg.inst.id !65
  %82 = load i32, i32* %noelle_environment_variable_4, align 8, !tbaa !66, !noelle.pdg.inst.id !67
  %83 = load i32, i32* %noelle_environment_variable_6, align 4, !tbaa !68, !noelle.pdg.inst.id !69
  br label %84

84:                                               ; preds = %76, %118
  %85 = phi i32 [ %83, %76 ], [ %70, %118 ], !noelle.pdg.inst.id !70
  %86 = phi i32 [ %82, %76 ], [ %71, %118 ], !noelle.pdg.inst.id !71
  %87 = icmp ult i32 %86, %85, !noelle.pdg.inst.id !72
  store i1 %87, i1* %19
  call void @queuePush8(i8* %18, i8* %20)
  store i1 %87, i1* %15
  call void @queuePush8(i8* %14, i8* %16)
  br i1 %87, label %93, label %88, !prof !48, !noelle.pdg.inst.id !73

88:                                               ; preds = %84
  %89 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %noelle_environment_variable_1, align 8, !tbaa !52, !noelle.pdg.inst.id !74
  %90 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %89, i64 0, i32 5, !noelle.pdg.inst.id !75
  store i32 119, i32* %90, align 8, !tbaa !55, !noelle.pdg.inst.id !76
  %91 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %89, i64 0, i32 1, !noelle.pdg.inst.id !77
  %92 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %91, align 8, !tbaa !78, !noelle.pdg.inst.id !79
  call void %92(%struct.jpeg_common_struct* nonnull %noelle_environment_variable_13, i32 -1) #19, !noelle.pdg.inst.id !80
  br label %110

93:                                               ; preds = %84
  %94 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %noelle_environment_variable_14, align 8, !tbaa !81, !noelle.pdg.inst.id !82
  %95 = icmp eq %struct.jpeg_progress_mgr* %94, null, !noelle.pdg.inst.id !83
  store i1 %95, i1* %27
  call void @queuePush8(i8* %26, i8* %28)
  store i1 %95, i1* %23
  call void @queuePush8(i8* %22, i8* %24)
  br i1 %95, label %117, label %96, !prof !48, !noelle.pdg.inst.id !84

96:                                               ; preds = %93
  %97 = bitcast %struct.jpeg_progress_mgr* %94 to void (%struct.jpeg_common_struct*)**, !noelle.pdg.inst.id !85
  %98 = zext i32 %86 to i64, !noelle.pdg.inst.id !86
  %99 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %94, i64 0, i32 1, !noelle.pdg.inst.id !87
  store i64 %98, i64* %99, align 8, !tbaa !88, !noelle.pdg.inst.id !90
  %100 = zext i32 %85 to i64, !noelle.pdg.inst.id !91
  %101 = getelementptr inbounds %struct.jpeg_progress_mgr, %struct.jpeg_progress_mgr* %94, i64 0, i32 2, !noelle.pdg.inst.id !92
  store i64 %100, i64* %101, align 8, !tbaa !93, !noelle.pdg.inst.id !94
  %102 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %97, align 8, !tbaa !95, !noelle.pdg.inst.id !96
  call void %102(%struct.jpeg_common_struct* nonnull %noelle_environment_variable_13) #19, !noelle.pdg.inst.id !97
  br label %103

103:                                              ; preds = %96, %117
  store i32 0, i32* %3, align 4, !tbaa !98, !noelle.pdg.inst.id !99
  %104 = load %struct.jpeg_d_main_controller.178*, %struct.jpeg_d_main_controller.178** %noelle_environment_variable_15, align 8, !tbaa !100, !noelle.pdg.inst.id !101
  %105 = getelementptr inbounds %struct.jpeg_d_main_controller.178, %struct.jpeg_d_main_controller.178* %104, i64 0, i32 1, !noelle.pdg.inst.id !102
  %106 = load void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)*, void (%struct.jpeg_decompress_struct.188*, i8**, i32*, i32)** %105, align 8, !tbaa !103, !noelle.pdg.inst.id !105
  call void %106(%struct.jpeg_decompress_struct.188* nonnull %noelle_environment_variable_3, i8** %72, i32* nonnull %3, i32 %73) #19, !prof !106, !noelle.pdg.inst.id !107
  %107 = load i32, i32* %3, align 4, !tbaa !98, !noelle.pdg.inst.id !108
  %108 = load i32, i32* %noelle_environment_variable_4, align 8, !tbaa !66, !noelle.pdg.inst.id !109
  %109 = add i32 %108, %107, !noelle.pdg.inst.id !110
  store i32 %109, i32* %noelle_environment_variable_4, align 8, !tbaa !66, !noelle.pdg.inst.id !111
  br label %110

110:                                              ; preds = %103, %88
  %111 = phi i32 [ 0, %88 ], [ %107, %103 ], !noelle.pdg.inst.id !112
  %112 = load void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)*, void (%struct.jpeg_decompress_struct*, %struct.djpeg_dest_struct*, i32)** %noelle_environment_variable_10, align 8, !tbaa !113, !noelle.pdg.inst.id !114
  call void %112(%struct.jpeg_decompress_struct* nonnull %noelle_environment_variable_0, %struct.djpeg_dest_struct* %noelle_environment_variable_2, i32 %111) #19, !prof !115, !noelle.pdg.inst.id !116
  %113 = load i32, i32* %noelle_environment_variable_4, align 8, !tbaa !66, !noelle.pdg.inst.id !117
  %114 = load i32, i32* %noelle_environment_variable_6, align 4, !tbaa !68, !noelle.pdg.inst.id !118
  %115 = icmp ult i32 %113, %114, !noelle.pdg.inst.id !119
  store i1 %115, i1* %11
  call void @queuePush8(i8* %10, i8* %12)
  store i1 %115, i1* %7
  call void @queuePush8(i8* %6, i8* %8)
  br i1 %115, label %116, label %68, !prof !120, !noelle.pdg.inst.id !121

116:                                              ; preds = %110
  br label %69

117:                                              ; preds = %93
  br label %103

118:                                              ; preds = %69
  br label %84
}

DSWP:  Loaded queue pointers
DSWP:  Added queue pop and push instructions
DSWP:  Loaded live-in variables
DSWP:  Adjusted data flow between cloned instructions
DSWP:  Stored live out instructions
Pipeline stage 1:

define void @noelle_task_2(i8*, i8*) {
  %noelle.environment_variable.pointer = bitcast i8* %0 to [128 x i64]*
  %3 = bitcast i8* %1 to [8 x i8*]*
  %4 = getelementptr inbounds [8 x i8*], [8 x i8*]* %3, i64 0, i64 1
  %5 = load i8*, i8** %4
  %6 = alloca i1
  %7 = bitcast i1* %6 to i8*
  %8 = getelementptr inbounds [8 x i8*], [8 x i8*]* %3, i64 0, i64 3
  %9 = load i8*, i8** %8
  %10 = alloca i1
  %11 = bitcast i1* %10 to i8*
  %12 = getelementptr inbounds [8 x i8*], [8 x i8*]* %3, i64 0, i64 5
  %13 = load i8*, i8** %12
  %14 = alloca i1
  %15 = bitcast i1* %14 to i8*
  %16 = getelementptr inbounds [8 x i8*], [8 x i8*]* %3, i64 0, i64 7
  %17 = load i8*, i8** %16
  %18 = alloca i1
  %19 = bitcast i1* %18 to i8*
  %20 = getelementptr inbounds [128 x i64], [128 x i64]* %noelle.environment_variable.pointer, i64 0, i64 88
  %21 = bitcast i64* %20 to i8**
  %noelle_environment_variable_11 = load i8*, i8** %21
  br label %24

22:                                               ; preds = %23
  ret void

23:                                               ; preds = %30
  br label %22

24:                                               ; preds = %2, %32
  call void @queuePop8(i8* %17, i8* %19)
  %25 = load i1, i1* %18
  br i1 %25, label %37, label %36, !prof !30, !noelle.loop.id !31, !noelle.pdg.inst.id !32, !noelle.parallelizer.looporder !33

26:                                               ; preds = %36, %37
  call void @queuePop8(i8* %9, i8* %11)
  %27 = load i1, i1* %10
  br i1 %27, label %28, label %38, !prof !30, !noelle.pdg.inst.id !34

28:                                               ; preds = %26
  call void @queuePop8(i8* %13, i8* %15)
  %29 = load i1, i1* %14
  br i1 %29, label %34, label %35, !prof !30, !noelle.pdg.inst.id !35

30:                                               ; preds = %33, %38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %noelle_environment_variable_11) #19, !noelle.pdg.inst.id !36
  call void @queuePop8(i8* %5, i8* %7)
  %31 = load i1, i1* %6
  br i1 %31, label %32, label %23, !prof !37, !noelle.pdg.inst.id !38

32:                                               ; preds = %30
  br label %24

33:                                               ; preds = %35, %34
  br label %30

34:                                               ; preds = %28
  br label %33

35:                                               ; preds = %28
  br label %33

36:                                               ; preds = %24
  br label %26

37:                                               ; preds = %24
  br label %26

38:                                               ; preds = %26
  br label %30
}

DSWP:  Loaded queue pointers
DSWP:  Added queue pop and push instructions
DSWP:  Loaded live-in variables
DSWP:  Adjusted data flow between cloned instructions
DSWP:  Stored live out instructions
Pipeline stage 2:

define void @noelle_task_3(i8*, i8*) {
  %noelle.environment_variable.pointer = bitcast i8* %0 to [128 x i64]*
  %3 = bitcast i8* %1 to [8 x i8*]*
  %4 = getelementptr inbounds [8 x i8*], [8 x i8*]* %3, i64 0, i64 0
  %5 = load i8*, i8** %4
  %6 = alloca i1
  %7 = bitcast i1* %6 to i8*
  %8 = getelementptr inbounds [8 x i8*], [8 x i8*]* %3, i64 0, i64 2
  %9 = load i8*, i8** %8
  %10 = alloca i1
  %11 = bitcast i1* %10 to i8*
  %12 = getelementptr inbounds [8 x i8*], [8 x i8*]* %3, i64 0, i64 4
  %13 = load i8*, i8** %12
  %14 = alloca i1
  %15 = bitcast i1* %14 to i8*
  %16 = getelementptr inbounds [8 x i8*], [8 x i8*]* %3, i64 0, i64 6
  %17 = load i8*, i8** %16
  %18 = alloca i1
  %19 = bitcast i1* %18 to i8*
  %20 = getelementptr inbounds [128 x i64], [128 x i64]* %noelle.environment_variable.pointer, i64 0, i64 88
  %21 = bitcast i64* %20 to i8**
  %noelle_environment_variable_11 = load i8*, i8** %21
  br label %24

22:                                               ; preds = %23
  ret void

23:                                               ; preds = %30
  br label %22

24:                                               ; preds = %2, %32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %noelle_environment_variable_11) #19, !noelle.pdg.inst.id !30
  call void @queuePop8(i8* %17, i8* %19)
  %25 = load i1, i1* %18
  br i1 %25, label %37, label %36, !prof !31, !noelle.loop.id !32, !noelle.pdg.inst.id !33, !noelle.parallelizer.looporder !34

26:                                               ; preds = %36, %37
  call void @queuePop8(i8* %9, i8* %11)
  %27 = load i1, i1* %10
  br i1 %27, label %28, label %38, !prof !31, !noelle.pdg.inst.id !35

28:                                               ; preds = %26
  call void @queuePop8(i8* %13, i8* %15)
  %29 = load i1, i1* %14
  br i1 %29, label %34, label %35, !prof !31, !noelle.pdg.inst.id !36

30:                                               ; preds = %33, %38
  call void @queuePop8(i8* %5, i8* %7)
  %31 = load i1, i1* %6
  br i1 %31, label %32, label %23, !prof !37, !noelle.pdg.inst.id !38

32:                                               ; preds = %30
  br label %24

33:                                               ; preds = %35, %34
  br label %30

34:                                               ; preds = %28
  br label %33

35:                                               ; preds = %28
  br label %33

36:                                               ; preds = %24
  br label %26

37:                                               ; preds = %24
  br label %26

38:                                               ; preds = %26
  br label %30
}

DSWP:  Link pipeline stages
DSWP: Exit
Parallelizer: parallelizerLoop:   Link the parallelize loop
Parallelizer: parallelizerLoop:   The loop has been parallelized with DSWP
Parallelizer: parallelizerLoop: Exit
Parallelizer:    Keep track of basic blocks being modified by the parallelization
Parallelizer: Exit
noelle-meta-clean parallelized_unoptimized.bc parallelized_unoptimized.bc
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CleanMetadata.so -CleanMetadata -clean-loop-metadata=true -clean-prof-metadata=true -clean-pdg-metadata=true parallelized_unoptimized.bc -o parallelized_unoptimized.bc
noelle/core/Clean Loop Metadata
noelle/core/Clean PDG Metadata
noelle/core/Clean profiler metadata
opt --strip-named-metadata parallelized_unoptimized.bc -o parallelized_unoptimized.bc
clang -O3 -c -emit-llvm parallelized_unoptimized.bc -o baseline_parallelized.bc
clang -O3 -c -emit-llvm baseline_parallelized.bc -o baseline_parallelized.bc
cp baseline_parallelized.bc djpeg.bc
make[1]: Leaving directory '/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/djpeg'
