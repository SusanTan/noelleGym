make[1]: Entering directory '/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/djpeg'
./runEnablers.sh djpeg djpeg.bc large "-lm -lstdc++ -lpthread -ltermcap" -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier
/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/djpeg /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/djpeg
Cloning https://github.com/scampanoni/virgil.git
Cloning into 'threadpool'...
/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/djpeg

opt -basicaa -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -mem2reg -tbaa -early-cse-memssa -licm -simplifycfg -simplifycfg-sink-common=false -instcombine -tailcallelim -loop-simplify -lcssa -licm -loop-unswitch -globalopt -instcombine -ipsccp -dce -gvn -dse -adce -loop-simplify -lcssa -indvars -loop-deletion -instcombine -indvars -break-constgeps -lowerswitch -mergereturn --break-crit-edges -loop-simplify -lcssa --functionattrs --rpo-functionattrs djpeg.bc -o baseline.bc
/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/djpeg /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/djpeg
WARNING: ./runme_djpeg.sh not found. Going up one dir.
Running: ./baseline_prof -dct int -ppm -outfile output_very_large_decode.ppm input_very_large.jpeg in /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/MiBench/consumer/jpeg
--------------------------------------------------------------------------------------
/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/djpeg
DONE
opt -pgo-test-profile-file=/tmp/tmp.114heJPx3a -block-freq -pgo-instr-use baseline.bc -o baseline_pre.bc
opt --strip-debug --strip-debug-declare baseline_pre.bc -o baseline_pre.bc
noelle-deadcode baseline_pre.bc baseline_pre.bc
NOELLE: DeadFunctions: Start
noelle-fixedpoint baseline_pre.bc baseline_pre.bc "noelle-load" -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DeadFunction.so -noelle-dfe
NOELLE: FixedPoint: Start
NOELLE: FixedPoint:   Loader: noelle-load
NOELLE: FixedPoint:   Options: -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DeadFunction.so -noelle-dfe
NOELLE: FixedPoint:   Input: baseline_pre.bc
NOELLE: FixedPoint:   Output: baseline_pre.bc
NOELLE: FixedPoint:   Temporary input: /tmp/tmp.mLsqEmz78G (.ll version is /tmp/tmp.vbJzdHtmSJ)
NOELLE: FixedPoint:   Temporary output: /tmp/tmp.1dyiyUPVn6 (.ll version is /tmp/tmp.D68teoEETc)
NOELLE: FixedPoint:   Normalize the code
noelle-norm /tmp/tmp.mLsqEmz78G -o /tmp/tmp.1dyiyUPVn6
opt -basicaa -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -mem2reg -simplifycfg-sink-common=false -break-constgeps -lowerswitch -mergereturn --break-crit-edges -loop-simplify -lcssa -indvars --functionattrs --rpo-functionattrs /tmp/tmp.mLsqEmz78G -o /tmp/tmp.1dyiyUPVn6
NOELLE: FixedPoint:   Run until a fixed point is reached
NOELLE: FixedPoint:     Invocation 0
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DeadFunction.so -noelle-dfe /tmp/tmp.mLsqEmz78G -o /tmp/tmp.1dyiyUPVn6
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DeadFunction.so -noelle-dfe /tmp/tmp.mLsqEmz78G -o /tmp/tmp.1dyiyUPVn6
DeadFunctionEliminator: Start
DeadFunctionEliminator:   Inline functions that are invoked only by one call instruction and that do not escape into memory
DeadFunctionEliminator:   Get the islands
DeadFunctionEliminator:   Identify the islands reachable from the entry points
DeadFunctionEliminator:     Island
DeadFunctionEliminator:       llvm.lifetime.start.p0i8
DeadFunctionEliminator:       main
DeadFunctionEliminator:       COM_handler
DeadFunctionEliminator:       parse_switches
DeadFunctionEliminator:       fprintf
DeadFunctionEliminator:       usage
DeadFunctionEliminator:       llvm.lifetime.end.p0i8
DeadFunctionEliminator:       fputc
DeadFunctionEliminator:       __ctype_b_loc
DeadFunctionEliminator:       putc
DeadFunctionEliminator:       jinit_write_ppm
DeadFunctionEliminator:       start_output_ppm
DeadFunctionEliminator:       finish_output_ppm
DeadFunctionEliminator:       copy_pixel_rows
DeadFunctionEliminator:       put_demapped_gray
DeadFunctionEliminator:       ycc_rgb_convert
DeadFunctionEliminator:       null_convert
DeadFunctionEliminator:       ycck_cmyk_convert
DeadFunctionEliminator:       jinit_1pass_quantizer
DeadFunctionEliminator:       start_pass_1_quant
DeadFunctionEliminator:       create_colorindex
DeadFunctionEliminator:       color_quantize3
DeadFunctionEliminator:       color_quantize
DeadFunctionEliminator:       quantize3_ord_dither
DeadFunctionEliminator:       quantize_ord_dither
DeadFunctionEliminator:       quantize_fs_dither
DeadFunctionEliminator:       jinit_2pass_quantizer
DeadFunctionEliminator:       start_pass_2_quant
DeadFunctionEliminator:       new_color_map_2_quant
DeadFunctionEliminator:       init_error_limit
DeadFunctionEliminator:       fopen
DeadFunctionEliminator:       exit
DeadFunctionEliminator:       fclose
DeadFunctionEliminator:       fwrite
DeadFunctionEliminator:       __isoc99_sscanf
DeadFunctionEliminator:       jpeg_idct_islow
DeadFunctionEliminator:       jpeg_idct_4x4
DeadFunctionEliminator:       jpeg_idct_2x2
DeadFunctionEliminator:       jinit_upsampler
DeadFunctionEliminator:       start_pass_upsample
DeadFunctionEliminator:       sep_upsample
DeadFunctionEliminator:       noop_upsample
DeadFunctionEliminator:       fullsize_upsample
DeadFunctionEliminator:       h2v1_fancy_upsample
DeadFunctionEliminator:       h2v1_upsample
DeadFunctionEliminator:       h2v2_fancy_upsample
DeadFunctionEliminator:       h2v2_upsample
DeadFunctionEliminator:       int_upsample
DeadFunctionEliminator:       jinit_color_deconverter
DeadFunctionEliminator:       start_pass_dcolor
DeadFunctionEliminator:       grayscale_convert
DeadFunctionEliminator:       start_output_tga
DeadFunctionEliminator:       put_demapped_rgb
DeadFunctionEliminator:       put_pixel_rows
DeadFunctionEliminator:       fflush
DeadFunctionEliminator:       ferror
DeadFunctionEliminator:       jinit_write_gif
DeadFunctionEliminator:       start_output_gif
DeadFunctionEliminator:       put_pixel_rows.52
DeadFunctionEliminator:       finish_output_gif
DeadFunctionEliminator:       llvm.memset.p0i8.i64
DeadFunctionEliminator:       emit_header
DeadFunctionEliminator:       jinit_write_targa
DeadFunctionEliminator:       finish_output_tga
DeadFunctionEliminator:       put_demapped_gray.55
DeadFunctionEliminator:       put_gray_rows
DeadFunctionEliminator:       put_pixel_rows.56
DeadFunctionEliminator:       jinit_write_bmp
DeadFunctionEliminator:       start_output_bmp
DeadFunctionEliminator:       finish_output_bmp
DeadFunctionEliminator:       put_gray_rows.59
DeadFunctionEliminator:       put_pixel_rows.60
DeadFunctionEliminator:       write_colormap
DeadFunctionEliminator:       read_color_map
DeadFunctionEliminator:       getc
DeadFunctionEliminator:       read_pbm_integer
DeadFunctionEliminator:       keymatch
DeadFunctionEliminator:       __ctype_tolower_loc
DeadFunctionEliminator:       read_stdin
DeadFunctionEliminator:       decode_mcu
DeadFunctionEliminator:       jinit_phuff_decoder
DeadFunctionEliminator:       start_pass_phuff_decoder
DeadFunctionEliminator:       decode_mcu_DC_first
DeadFunctionEliminator:       decode_mcu_AC_first
DeadFunctionEliminator:       decode_mcu_DC_refine
DeadFunctionEliminator:       decode_mcu_AC_refine
DeadFunctionEliminator:       jinit_d_main_controller
DeadFunctionEliminator:       write_stdout
DeadFunctionEliminator:       jpeg_CreateDecompress
DeadFunctionEliminator:       jpeg_destroy_decompress
DeadFunctionEliminator:       jpeg_abort_decompress
DeadFunctionEliminator:       jpeg_set_marker_processor
DeadFunctionEliminator:       jpeg_read_header
DeadFunctionEliminator:       jpeg_consume_input
DeadFunctionEliminator:       jpeg_finish_decompress
DeadFunctionEliminator:       jpeg_start_decompress
DeadFunctionEliminator:       output_pass_setup
DeadFunctionEliminator:       jpeg_read_scanlines
DeadFunctionEliminator:       jpeg_start_output
DeadFunctionEliminator:       decompress_onepass
DeadFunctionEliminator:       decompress_smooth_data
DeadFunctionEliminator:       jinit_d_post_controller
DeadFunctionEliminator:       start_pass_dpost
DeadFunctionEliminator:       post_process_1pass
DeadFunctionEliminator:       post_process_prepass
DeadFunctionEliminator:       post_process_2pass
DeadFunctionEliminator:       jinit_inverse_dct
DeadFunctionEliminator:       start_pass
DeadFunctionEliminator:       jpeg_stdio_src
DeadFunctionEliminator:       init_source
DeadFunctionEliminator:       fill_input_buffer
DeadFunctionEliminator:       skip_input_data
DeadFunctionEliminator:       term_source
DeadFunctionEliminator:       fread
DeadFunctionEliminator:       jpeg_calc_output_dimensions
DeadFunctionEliminator:       jinit_master_decompress
DeadFunctionEliminator:       llvm.memcpy.p0i8.p0i8.i64
DeadFunctionEliminator:       jinit_input_controller
DeadFunctionEliminator:       consume_markers
DeadFunctionEliminator:       reset_input_controller
DeadFunctionEliminator:       start_input_pass
DeadFunctionEliminator:       finish_input_pass
DeadFunctionEliminator:       jpeg_resync_to_restart
DeadFunctionEliminator:       next_marker
DeadFunctionEliminator:       jinit_marker_reader
DeadFunctionEliminator:       reset_marker_reader
DeadFunctionEliminator:       read_markers
DeadFunctionEliminator:       read_restart_marker
DeadFunctionEliminator:       skip_variable
DeadFunctionEliminator:       get_app0
DeadFunctionEliminator:       get_app14
DeadFunctionEliminator:       get_sof
DeadFunctionEliminator:       jpeg_make_d_derived_tbl
DeadFunctionEliminator:       jpeg_fill_bit_buffer
DeadFunctionEliminator:       jpeg_huff_decode
DeadFunctionEliminator:       jinit_huff_decoder
DeadFunctionEliminator:       start_pass_huff_decoder
DeadFunctionEliminator:       alloc_barray
DeadFunctionEliminator:       request_virt_sarray
DeadFunctionEliminator:       request_virt_barray
DeadFunctionEliminator:       realize_virt_arrays
DeadFunctionEliminator:       access_virt_sarray
DeadFunctionEliminator:       access_virt_barray
DeadFunctionEliminator:       free_pool
DeadFunctionEliminator:       self_destruct
DeadFunctionEliminator:       getenv
DeadFunctionEliminator:       jpeg_get_small
DeadFunctionEliminator:       malloc
DeadFunctionEliminator:       jpeg_free_small
DeadFunctionEliminator:       free
DeadFunctionEliminator:       jpeg_get_large
DeadFunctionEliminator:       jpeg_free_large
DeadFunctionEliminator:       jpeg_mem_available
DeadFunctionEliminator:       jpeg_open_backing_store
DeadFunctionEliminator:       start_pass_main
DeadFunctionEliminator:       process_data_context_main
DeadFunctionEliminator:       process_data_simple_main
DeadFunctionEliminator:       process_data_crank_post
DeadFunctionEliminator:       jinit_d_coef_controller
DeadFunctionEliminator:       start_input_pass.105
DeadFunctionEliminator:       start_output_pass
DeadFunctionEliminator:       consume_data
DeadFunctionEliminator:       decompress_data
DeadFunctionEliminator:       dummy_consume_data
DeadFunctionEliminator:       jpeg_idct_ifast
DeadFunctionEliminator:       jpeg_idct_float
DeadFunctionEliminator:       prescan_quantize
DeadFunctionEliminator:       finish_pass1
DeadFunctionEliminator:       pass2_fs_dither
DeadFunctionEliminator:       pass2_no_dither
DeadFunctionEliminator:       finish_pass2
DeadFunctionEliminator:       fill_inverse_cmap
DeadFunctionEliminator:       update_box
DeadFunctionEliminator:       jinit_merged_upsampler
DeadFunctionEliminator:       start_pass_merged_upsample
DeadFunctionEliminator:       merged_2v_upsample
DeadFunctionEliminator:       h2v2_merged_upsample
DeadFunctionEliminator:       merged_1v_upsample
DeadFunctionEliminator:       h2v1_merged_upsample
DeadFunctionEliminator:       jpeg_abort
DeadFunctionEliminator:       jpeg_destroy
DeadFunctionEliminator:       jpeg_alloc_quant_table
DeadFunctionEliminator:       jpeg_alloc_huff_table
DeadFunctionEliminator:       jdiv_round_up
DeadFunctionEliminator:       jround_up
DeadFunctionEliminator:       jcopy_sample_rows
DeadFunctionEliminator:       jcopy_block_row
DeadFunctionEliminator:       jzero_far
DeadFunctionEliminator:       jpeg_std_error
DeadFunctionEliminator:       error_exit
DeadFunctionEliminator:       emit_message
DeadFunctionEliminator:       output_message
DeadFunctionEliminator:       format_message
DeadFunctionEliminator:       reset_error_mgr
DeadFunctionEliminator:       sprintf
DeadFunctionEliminator:       jinit_memory_mgr
DeadFunctionEliminator:       alloc_small
DeadFunctionEliminator:       alloc_large
DeadFunctionEliminator:       alloc_sarray
DeadFunctionEliminator:   Identify the functions that can be deleted
DeadFunctionEliminator: Exit
Noelle:  Function "main"
Noelle:     Loop "  %100 = load i8**, i8*** %96, align 8, !tbaa !55" (5.268217e+01%)
Noelle:  Function "decode_mcu_AC_refine"
Noelle:     Loop "  %41 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %40" (0.000000e+00%)
Noelle:     Loop "  %89 = icmp slt i32 %87, 8" (2.083958e+00%)
Noelle:     Loop "  %183 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %178" (1.215915e+00%)
Noelle:     Loop "  %272 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %269" (8.617111e+00%)
Noelle:     Loop "  %331 = add nsw i64 %329, -1" (0.000000e+00%)
Noelle:     Loop "  %341 = add nsw i64 %340, -1" (0.000000e+00%)
Noelle:  Function "ycc_rgb_convert"
Noelle:     Loop "  %35 = load i8**, i8*** %1, align 8, !tbaa !49" (8.720762e+00%)
Noelle:     Loop "  %49 = getelementptr inbounds i8, i8* %38, i64 %47" (8.720378e+00%)
Noelle:  Function "jpeg_idct_islow"
Noelle:     Loop "  %22 = getelementptr inbounds i16, i16* %21, i64 8" (3.639574e+00%)
Noelle:     Loop "  %179 = getelementptr inbounds i8*, i8** %3, i64 %177" (4.503094e+00%)
Noelle:  Function "h2v2_fancy_upsample"
Noelle:     Loop "  %14 = getelementptr inbounds i8*, i8** %2, i64 %12" (6.343685e+00%)
Noelle:     Loop "  %65 = getelementptr inbounds i8, i8* %64, i64 1" (3.170555e+00%)
Noelle:     Loop "  %145 = getelementptr inbounds i8, i8* %144, i64 1" (3.170555e+00%)
Noelle:  Function "decode_mcu_AC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %6, i64 0, i32 2, i32 1, i64 %36" (0.000000e+00%)
Noelle:     Loop "  %81 = icmp slt i32 %78, 8" (3.673817e+00%)
Noelle:  Function "consume_data"
Noelle:     Loop "  %16 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %15" (3.918702e-04%)
Noelle:     Loop "  %54 = icmp ult i32 %52, %51" (1.662572e+00%)
Noelle:     Loop "  %56 = load i32, i32* %7, align 8, !tbaa !39" (1.662281e+00%)
Noelle:     Loop "  %63 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %61" (1.355269e+00%)
Noelle:     Loop "  %87 = add nsw i64 %85, %53" (6.869386e-01%)
Noelle:     Loop "  %95 = add i64 %94, %91" (0.000000e+00%)
Noelle:     Loop "  %124 = getelementptr inbounds [64 x i16], [64 x i16]* %122, i64 1" (2.512055e-01%)
Noelle:  Function "jpeg_fill_bit_buffer"
Noelle:     Loop "  %19 = load i32, i32* %11, align 8, !tbaa !39" (1.157154e+00%)
Noelle:     Loop "  %49 = icmp eq i64 %48, 0" (5.556085e-03%)
Noelle:  Function "decode_mcu_DC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %36" (0.000000e+00%)
Noelle:     Loop "  %74 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %71" (4.492869e-01%)
Noelle:  Function "decode_mcu_DC_refine"
Noelle:     Loop "  %36 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %6, i64 0, i32 2, i32 1, i64 %35" (0.000000e+00%)
Noelle:     Loop "  %72 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %69" (1.332998e-01%)
Noelle:  Function "decompress_data"
Noelle:     Loop "  %15 = load i32, i32* %9, align 4, !tbaa !40" (1.202056e-05%)
Noelle:     Loop "  %43 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %42, i64 0, i32 12" (6.070867e-02%)
Noelle:     Loop "  %85 = icmp eq i32 %82, 0" (6.055837e-02%)
Noelle:     Loop "  %95 = getelementptr inbounds [64 x i16], [64 x i16]* %93, i64 0, i64 0" (6.047062e-02%)
Noelle:  Function "jpeg_huff_decode"
Noelle:     Loop "  %38 = shl i64 %35, 1" (1.153616e-02%)
Noelle:  Function "sep_upsample"
Noelle:     Loop "  %26 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %10, i64 0, i32 2, i64 %24" (5.957127e-04%)
Noelle:  Function "access_virt_barray"
Noelle:     Loop "  %85 = mul nsw i64 %82, %51" (0.000000e+00%)
Noelle:     Loop "  %169 = mul nsw i64 %166, %137" (0.000000e+00%)
Noelle:     Loop "  %236 = load [64 x i16]**, [64 x i16]*** %232, align 8, !tbaa !40" (5.409524e-05%)
Noelle:  Function "process_data_context_main"
Noelle:     Loop "  %77 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %76, i64 0, i32 3" (5.042638e-07%)
Noelle:     Loop "  %108 = load i64, i64* %103, align 8, !tbaa !47" (2.098828e-07%)
Noelle:     Loop "  %158 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %157, i64 0, i32 3" (6.051166e-07%)
Noelle:     Loop "  %185 = add nsw i64 %183, %175" (1.662708e-07%)
Noelle:  Function "jpeg_read_scanlines"
Noelle:  Function "jpeg_start_decompress"
Noelle:     Loop "  %25 = icmp eq %struct.jpeg_progress_mgr* %24, null" (2.650247e-04%)
Noelle:  Function "fill_input_buffer"
Noelle:  Function "put_pixel_rows"
Noelle:  Function "start_pass_phuff_decoder"
Noelle:     Loop "  %107 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %106" (2.093649e-05%)
Noelle:     Loop "  %133 = getelementptr inbounds [64 x i32], [64 x i32]* %111, i64 %112, i64 %132" (2.041314e-05%)
Noelle:     Loop "  %66 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %65" (6.487286e-07%)
Noelle:     Loop "  %78 = getelementptr inbounds [64 x i32], [64 x i32]* %70, i64 %71, i64 %77" (2.616720e-07%)
Noelle:     Loop "  %208 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %207" (7.013083e-05%)
Noelle:     Loop "  %176 = icmp eq i32 %174, 0" (2.642888e-05%)
Noelle:  Function "jpeg_make_d_derived_tbl"
Noelle:     Loop "  %26 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %23" (1.738484e-05%)
Noelle:     Loop "  %53 = add nsw <2 x i64> %50, <i64 8, i64 8>" (0.000000e+00%)
Noelle:     Loop "  %65 = add nsw <2 x i64> %62, <i64 1, i64 1>" (9.104006e-07%)
Noelle:     Loop "  %103 = sext i8 %99 to i32" (2.033682e-05%)
Noelle:     Loop "  %110 = add nsw i64 %108, 1" (1.109108e-05%)
Noelle:     Loop "  %133 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %131" (1.287917e-05%)
Noelle:     Loop "  %166 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %164" (4.395818e-05%)
Noelle:     Loop "  %222 = add nsw i64 %181, %219" (2.599003e-05%)
Noelle:     Loop "  %255 = add i64 %253, %228" (1.408668e-05%)
Noelle:     Loop "  %298 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %20, i64 0, i32 4, i64 %296" (0.000000e+00%)
Noelle:     Loop "  %199 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 1, i64 %197" (8.665160e-06%)
Noelle:     Loop "  %207 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %20, i64 0, i32 4, i64 %205" (5.718624e-06%)
Noelle:  Function "read_markers"
Noelle:     Loop "  %34 = icmp eq i32 %33, 0" (4.191659e-05%)
Noelle:     Loop "  %719 = icmp eq i64 %716, 0" (7.678439e-06%)
Noelle:     Loop "  %791 = icmp eq i64 %789, 0" (0.000000e+00%)
Noelle:     Loop "  %766 = icmp eq i64 %764, 0" (7.321365e-06%)
Noelle:     Loop "  %421 = icmp eq i64 %418, 0" (0.000000e+00%)
Noelle:     Loop "  %538 = icmp eq i64 %536, 0" (2.737198e-05%)
Noelle:     Loop "  %564 = icmp eq i64 %561, 0" (8.695144e-06%)
Noelle:     Loop "  %623 = icmp eq i64 %621, 0" (1.588295e-05%)
Noelle:     Loop "  br i1 %228, label %231, label %._crit_edge204, !prof !80" (2.698493e-06%)
Noelle:     Loop "  %263 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %261, i64 0, i32 0" (5.887621e-07%)
Noelle:  Function "realize_virt_arrays"
Noelle:     Loop "  %11 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %8, i64 0, i32 0" (0.000000e+00%)
Noelle:     Loop "  %42 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %39, i64 0, i32 0" (2.425918e-07%)
Noelle:     Loop "  %96 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %95, i64 0, i32 0" (4.999026e-06%)
Noelle:     Loop "  %148 = sub i32 %123, %146" (0.000000e+00%)
Noelle:     Loop "  %198 = add i32 %196, 1" (0.000000e+00%)
Noelle:     Loop "  %213 = add i32 %212, 1" (0.000000e+00%)
Noelle:     Loop "  %243 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %242, i64 0, i32 0" (3.381566e-05%)
Noelle:     Loop "  %298 = sub i32 %271, %296" (3.298158e-05%)
Noelle:     Loop "  %344 = add i32 %342, 1" (1.226588e-07%)
Noelle:     Loop "  %359 = add i32 %358, 1" (3.237374e-05%)
Noelle:  Function "jinit_master_decompress"
Noelle:  Function "fullsize_upsample"
Noelle:  Function "jinit_color_deconverter"
Noelle:     Loop "  %199 = mul nsw i64 %198, 91881" (0.000000e+00%)
Noelle:     Loop "  %133 = mul nsw i64 %132, 91881" (1.813987e-05%)
Noelle:     Loop "  %78 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %67, i64 %76, i32 12" (0.000000e+00%)
Noelle:     Loop "  %245 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %67, i64 %243, i32 12" (0.000000e+00%)
Noelle:  Function "parse_switches"
Noelle:     Loop "  %28 = sext i32 %27 to i64" (1.160624e-05%)
Noelle:  Function "keymatch"
Noelle:     Loop "  %10 = getelementptr inbounds i8, i8* %7, i64 1" (8.269927e-06%)
Noelle:  Function "jzero_far"
Noelle:  Function "alloc_small"
Noelle:     Loop "  %37 = getelementptr inbounds %union.small_pool_struct, %union.small_pool_struct* %36, i64 0, i32 0, i32 2" (8.640629e-07%)
Noelle:     Loop "  %62 = lshr i64 %61, 1" (0.000000e+00%)
Noelle:  Function "consume_markers"
Noelle:     Loop "  %82 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %80, i64 0, i32 2" (2.589463e-07%)
Noelle:     Loop "  %135 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %133, i64 0, i32 9" (4.034110e-07%)
Noelle:  Function "start_input_pass"
Noelle:     Loop "  %73 = getelementptr inbounds %struct.jpeg_decompress_struct.261, %struct.jpeg_decompress_struct.261* %0, i64 0, i32 63, i64 %72" (1.210233e-06%)
Noelle:     Loop "  %114 = load i32, i32* %65, align 8, !tbaa !55" (1.090300e-07%)
Noelle:     Loop "  %124 = load i32, i32* %65, align 8, !tbaa !55" (1.526420e-07%)
Noelle:     Loop "  %157 = getelementptr inbounds %struct.jpeg_decompress_struct.261, %struct.jpeg_decompress_struct.261* %0, i64 0, i32 63, i64 %156" (7.168723e-07%)
Noelle:  Function "alloc_sarray"
Noelle:     Loop "  %30 = sub i32 %3, %28" (1.867139e-06%)
Noelle:     Loop "  %44 = add i32 %42, 1" (2.507690e-07%)
Noelle:     Loop "  %59 = add i32 %58, 1" (6.541801e-07%)
Noelle:  Function "next_marker"
Noelle:     Loop "  %13 = icmp eq i64 %12, 0" (1.668159e-06%)
Noelle:     Loop "  %30 = load %struct.jpeg_marker_reader.278*, %struct.jpeg_marker_reader.278** %9, align 8, !tbaa !47" (0.000000e+00%)
Noelle:     Loop "  %54 = icmp eq i64 %53, 0" (5.560531e-07%)
Noelle:  Function "start_pass_main"
Noelle:     Loop "  %30 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %29, i64 0, i32 3" (1.992523e-06%)
Noelle:     Loop "  %96 = getelementptr inbounds i8*, i8** %43, i64 %94" (4.715548e-07%)
Noelle:     Loop "  %57 = getelementptr inbounds i8*, i8** %43, i64 %55" (1.689965e-07%)
Noelle:     Loop "  %278 = getelementptr inbounds i8*, i8** %43, i64 %277" (0.000000e+00%)
Noelle:     Loop "  %202 = add nsw i64 %200, %153" (0.000000e+00%)
Noelle:     Loop "  %321 = add nsw i64 %320, %153" (2.017055e-07%)
Noelle:     Loop "  %338 = load i64, i64* %311, align 8, !tbaa !53" (0.000000e+00%)
Noelle:     Loop "  %364 = load i64, i64* %311, align 8, !tbaa !53" (1.226588e-07%)
Noelle:  Function "emit_message"
Noelle:  Function "start_pass"
Noelle:     Loop "  %19 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %16, i64 0, i32 9" (1.330166e-06%)
Noelle:     Loop "  %194 = getelementptr inbounds [8 x double], [8 x double]* @start_pass.aanscalefactor, i64 0, i64 %193" (0.000000e+00%)
Noelle:     Loop "  %162 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %55, i64 0, i32 0, i64 %161" (0.000000e+00%)
Noelle:  Function "jpeg_calc_output_dimensions"
Noelle:     Loop "  %117 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %115, i64 0, i32 9" (1.417390e-07%)
Noelle:     Loop "  %86 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %84, i64 0, i32 3" (0.000000e+00%)
Noelle:     Loop "  %92 = shl i32 %91, 1" (0.000000e+00%)
Noelle:     Loop "  %123 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %121, i64 0, i32 2" (5.396986e-07%)
Noelle:  Function "get_sof"
Noelle:     Loop "  %231 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %230, i64 0, i32 1" (5.451501e-07%)
Noelle:  Function "free_pool"
Noelle:     Loop "  %22 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %21, i64 0, i32 10" (0.000000e+00%)
Noelle:     Loop "  %37 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %36, i64 0, i32 10" (8.722401e-08%)
Noelle:     Loop "  %58 = bitcast %union.large_pool_struct* %57 to i8*" (3.925080e-07%)
Noelle:     Loop "  %78 = bitcast %union.small_pool_struct* %77 to i8*" (2.425918e-07%)
Noelle:  Function "get_app0"
Noelle:     Loop "  %50 = icmp eq i64 %48, 0" (6.460028e-07%)
Noelle:  Function "start_output_pass"
Noelle:     Loop "  %50 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %49, i64 0, i32 19" (6.187453e-07%)
Noelle:  Function "jinit_write_ppm"
Noelle:  Function "self_destruct"
Noelle:  Function "jinit_d_main_controller"
Noelle:     Loop "  %68 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %67, i64 0, i32 3" (2.834780e-07%)
Noelle:     Loop "  %115 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %114, i64 0, i32 3" (2.126085e-07%)
Noelle:  Function "start_input_pass.105"
Noelle:  Function "request_virt_barray"
Noelle:  Function "jinit_upsampler"
Noelle:     Loop "  %56 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %55, i64 0, i32 2" (6.343878e+00%)
Noelle:  Function "alloc_large"
Noelle:  Function "jpeg_CreateDecompress"
Noelle:  Function "jinit_d_coef_controller"
Noelle:     Loop "  %30 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %29, i64 0, i32 3" (3.543475e-07%)
Noelle:  Function "jdiv_round_up"
Noelle:  Function "jpeg_read_header"
Noelle:  Function "jinit_marker_reader"
Noelle:  Function "jinit_inverse_dct"
Noelle:     Loop "  %22 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (1.444648e-07%)
Noelle:  Function "jpeg_consume_input"
Noelle:  Function "jinit_memory_mgr"
Noelle:  Function "prepare_for_output_pass"
Noelle:  Function "jinit_phuff_decoder"
Noelle:     Loop "  %30 = bitcast i32* %29 to i8*" (7.904676e-08%)
Noelle:  Function "jpeg_finish_decompress"
Noelle:     Loop "  %42 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %40, align 8, !tbaa !53" (1.362875e-08%)
Noelle:  Function "finish_input_pass"
Noelle:  Function "jround_up"
Noelle:  Function "jpeg_alloc_huff_table"
Noelle:  Function "jpeg_stdio_src"
Noelle:  Function "output_pass_setup"
Noelle:     Loop "  %26 = load i32, i32* %19, align 4, !tbaa !47" (0.000000e+00%)
Noelle:  Function "jinit_input_controller"
Noelle:  Function "start_pass_dpost"
Noelle:  Function "reset_input_controller"
Noelle:  Function "jpeg_std_error"
Noelle:  Function "jinit_d_post_controller"
Noelle:  Function "jpeg_alloc_quant_table"
Noelle:  Function "start_output_ppm"
Noelle:  Function "jpeg_destroy_decompress"
Noelle:  Function "jpeg_free_large"
Noelle:  Function "jpeg_get_large"
Noelle:  Function "reset_marker_reader"
Noelle:  Function "jpeg_destroy"
Noelle:  Function "finish_output_pass"
Noelle:  Function "start_pass_upsample"
Noelle:  Function "jpeg_abort"
Noelle:  Function "jpeg_get_small"
Noelle:  Function "jpeg_free_small"
Noelle:  Function "finish_output_ppm"
Noelle:  Function "jpeg_set_marker_processor"
Noelle:  Function "reset_error_mgr"
Noelle:  Function "init_source"
Noelle:  Function "jpeg_mem_available"
Noelle:  Function "start_pass_dcolor"
Noelle:  Function "term_source"
Noelle:  Function "get_app14"
Noelle:     Loop "  %50 = icmp eq i64 %48, 0" (0.000000e+00%)
Noelle:  Function "skip_variable"
Noelle:  Function "read_restart_marker"
Noelle:  Function "alloc_barray"
Noelle:     Loop "  %32 = sub i32 %3, %30" (0.000000e+00%)
Noelle:     Loop "  %47 = add i32 %45, 1" (0.000000e+00%)
Noelle:     Loop "  %62 = add i32 %61, 1" (0.000000e+00%)
Noelle:  Function "jpeg_mem_init"
Noelle:  Function "jpeg_resync_to_restart"
Noelle:     Loop "  %29 = icmp slt i32 %28, 192" (0.000000e+00%)
Noelle:     Loop "  %73 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8, !tbaa !38" (0.000000e+00%)
Noelle:  Function "jpeg_mem_term"
Noelle:  Function "process_data_crank_post"
Noelle:  Function "merged_2v_upsample"
Noelle:  Function "start_pass_merged_upsample"
Noelle:  Function "jinit_merged_upsampler"
Noelle:     Loop "  %76 = mul nsw i64 %75, 91881" (0.000000e+00%)
Noelle:  Function "update_box"
Noelle:     Loop "  %30 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %29" (0.000000e+00%)
Noelle:     Loop "  %34 = getelementptr inbounds [32 x i16], [32 x i16]* %31, i64 %33, i64 %23" (0.000000e+00%)
Noelle:     Loop "  %38 = load i16, i16* %36, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %59 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %58" (0.000000e+00%)
Noelle:     Loop "  %63 = getelementptr inbounds [32 x i16], [32 x i16]* %60, i64 %62, i64 %52" (0.000000e+00%)
Noelle:     Loop "  %67 = load i16, i16* %65, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader18" (0.000000e+00%)
Noelle:     Loop "  %90 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %89" (0.000000e+00%)
Noelle:     Loop "  %96 = load i16, i16* %94, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader14" (0.000000e+00%)
Noelle:     Loop "  %117 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %116" (0.000000e+00%)
Noelle:     Loop "  %123 = load i16, i16* %121, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader10" (0.000000e+00%)
Noelle:     Loop "  %145 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %144" (0.000000e+00%)
Noelle:     Loop "  %151 = load i16, i16* %149, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader6" (0.000000e+00%)
Noelle:     Loop "  %172 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %171" (0.000000e+00%)
Noelle:     Loop "  %178 = load i16, i16* %176, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %224 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %222" (0.000000e+00%)
Noelle:     Loop "  %232 = load i16, i16* %230, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %243 = getelementptr inbounds [32 x i16], [32 x i16]* %225, i64 %241, i64 %207" (0.000000e+00%)
Noelle:     Loop "  %248 = load i16, i16* %246, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %265 = load i16, i16* %263, align 2, !tbaa !50" (0.000000e+00%)
Noelle:  Function "fill_inverse_cmap"
Noelle:     Loop "  %50 = getelementptr inbounds i8, i8* %41, i64 %48" (0.000000e+00%)
Noelle:     Loop "  %181 = getelementptr inbounds [256 x i64], [256 x i64]* %6, i64 0, i64 %178" (0.000000e+00%)
Noelle:     Loop "  %345 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %344" (0.000000e+00%)
Noelle:     Loop "  %388 = load i64, i64* %386, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %611 = load i64, i64* %609, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %651 = load i64, i64* %649, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %691 = load i64, i64* %689, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %439 = add nuw nsw i64 %437, %428" (0.000000e+00%)
Noelle:  Function "merged_1v_upsample"
Noelle:  Function "finish_pass2"
Noelle:  Function "pass2_no_dither"
Noelle:     Loop "  %18 = getelementptr inbounds i8*, i8** %2, i64 %17" (0.000000e+00%)
Noelle:     Loop "  %26 = getelementptr inbounds i8, i8* %23, i64 1" (0.000000e+00%)
Noelle:  Function "pass2_fs_dither"
Noelle:     Loop "  %53 = getelementptr inbounds i8*, i8** %1, i64 %52" (0.000000e+00%)
Noelle:     Loop "  %92 = getelementptr inbounds i16, i16* %89, i64 %73" (0.000000e+00%)
Noelle:     Loop "  %39 = icmp eq i32 %37, 0" (0.000000e+00%)
Noelle:  Function "h2v1_merged_upsample"
Noelle:     Loop "  %40 = getelementptr inbounds i8, i8* %37, i64 1" (0.000000e+00%)
Noelle:  Function "finish_pass1"
Noelle:     Loop "  %33 = add nuw i64 %30, 1" (0.000000e+00%)
Noelle:     Loop "  %52 = getelementptr inbounds %struct.box, %struct.box* %50, i64 0, i32 7" (0.000000e+00%)
Noelle:     Loop "  %72 = getelementptr inbounds %struct.box, %struct.box* %70, i64 0, i32 6" (0.000000e+00%)
Noelle:     Loop "  %107 = getelementptr inbounds %struct.box, %struct.box* %105, i64 0, i32 6" (0.000000e+00%)
Noelle:     Loop "  %189 = load %struct.my_cquantizer.611*, %struct.my_cquantizer.611** %3, align 8, !tbaa !30" (0.000000e+00%)
Noelle:     Loop "  %220 = getelementptr inbounds [32 x i16]*, [32 x i16]** %191, i64 %215" (0.000000e+00%)
Noelle:     Loop "  %232 = getelementptr inbounds [32 x i16], [32 x i16]* %221, i64 %227, i64 %207" (0.000000e+00%)
Noelle:     Loop "  %244 = getelementptr inbounds i16, i16* %243, i64 1" (0.000000e+00%)
Noelle:  Function "prescan_quantize"
Noelle:     Loop "  %18 = getelementptr inbounds i8*, i8** %1, i64 %17" (0.000000e+00%)
Noelle:     Loop "  %23 = load i8, i8* %21, align 1, !tbaa !43" (0.000000e+00%)
Noelle:  Function "jpeg_idct_float"
Noelle:     Loop "  %22 = getelementptr inbounds i16, i16* %21, i64 8" (0.000000e+00%)
Noelle:     Loop "  %134 = getelementptr inbounds i8*, i8** %3, i64 %132" (0.000000e+00%)
Noelle:  Function "jpeg_idct_ifast"
Noelle:     Loop "  %22 = getelementptr inbounds i16, i16* %21, i64 8" (0.000000e+00%)
Noelle:     Loop "  %153 = getelementptr inbounds i8*, i8** %3, i64 %151" (0.000000e+00%)
Noelle:  Function "dummy_consume_data"
Noelle:  Function "process_data_simple_main"
Noelle:  Function "jcopy_sample_rows"
Noelle:     Loop "  %30 = getelementptr inbounds i8*, i8** %28, i64 1" (0.000000e+00%)
Noelle:  Function "jpeg_open_backing_store"
Noelle:  Function "jcopy_block_row"
Noelle:  Function "access_virt_sarray"
Noelle:     Loop "  %84 = mul nsw i64 %81, %50" (0.000000e+00%)
Noelle:     Loop "  %166 = mul nsw i64 %163, %134" (0.000000e+00%)
Noelle:     Loop "  %231 = load i8**, i8*** %227, align 8, !tbaa !38" (0.000000e+00%)
Noelle:  Function "request_virt_sarray"
Noelle:  Function "error_exit"
Noelle:  Function "h2v2_merged_upsample"
Noelle:     Loop "  %50 = getelementptr inbounds i8, i8* %45, i64 1" (0.000000e+00%)
Noelle:  Function "start_pass_huff_decoder"
Noelle:     Loop "  %36 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 63, i64 %35" (1.090300e-08%)
Noelle:  Function "jinit_huff_decoder"
Noelle:  Function "output_message"
Noelle:  Function "format_message"
Noelle:     Loop "  %45 = getelementptr inbounds i8, i8* %44, i64 1" (0.000000e+00%)
Noelle:  Function "jpeg_idct_4x4"
Noelle:     Loop "  %22 = icmp eq i32 %18, 4" (0.000000e+00%)
Noelle:     Loop "  %135 = getelementptr inbounds i8*, i8** %3, i64 %133" (0.000000e+00%)
Noelle:  Function "quantize_fs_dither"
Noelle:     Loop "  %33 = getelementptr inbounds i8*, i8** %2, i64 %32" (0.000000e+00%)
Noelle:     Loop "  %52 = load i8*, i8** %36, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %87 = getelementptr inbounds i16, i16* %84, i64 %70" (0.000000e+00%)
Noelle:     Loop "  %39 = icmp eq i32 %.pre, 0" (0.000000e+00%)
Noelle:  Function "jinit_2pass_quantizer"
Noelle:     Loop "  %36 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (0.000000e+00%)
Noelle:  Function "start_pass_2_quant"
Noelle:     Loop "  %84 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %83" (0.000000e+00%)
Noelle:  Function "new_color_map_2_quant"
Noelle:  Function "init_error_limit"
Noelle:     Loop "  %39 = getelementptr inbounds i32, i32* %12, i64 %37" (0.000000e+00%)
Noelle:     Loop "  %52 = getelementptr inbounds i32, i32* %12, i64 %51" (0.000000e+00%)
Noelle:  Function "quantize_ord_dither"
Noelle:     Loop "  %28 = getelementptr inbounds i8*, i8** %2, i64 %27" (0.000000e+00%)
Noelle:     Loop "  %58 = load i8**, i8*** %17, align 8, !tbaa !44" (0.000000e+00%)
Noelle:     Loop "  %70 = load i8, i8* %66, align 1, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %35 = load i8*, i8** %28, align 8, !tbaa !40" (0.000000e+00%)
Noelle:  Function "jpeg_idct_2x2"
Noelle:     Loop "  br label %NodeBlock5" (0.000000e+00%)
Noelle:  Function "jpeg_idct_1x1"
Noelle:  Function "noop_upsample"
Noelle:  Function "h2v1_fancy_upsample"
Noelle:     Loop "  %13 = getelementptr inbounds i8*, i8** %2, i64 %12" (0.000000e+00%)
Noelle:     Loop "  %50 = shl i64 %49, 1" (0.000000e+00%)
Noelle:     Loop "  %125 = getelementptr inbounds i8, i8* %124, i64 1" (0.000000e+00%)
Noelle:  Function "h2v1_upsample"
Noelle:     Loop "  %14 = getelementptr inbounds i8*, i8** %5, i64 %13" (0.000000e+00%)
Noelle:     Loop "  %26 = getelementptr inbounds i8, i8* %24, i64 1" (0.000000e+00%)
Noelle:  Function "h2v2_upsample"
Noelle:     Loop "  %15 = getelementptr inbounds i8*, i8** %5, i64 %13" (0.000000e+00%)
Noelle:     Loop "  %27 = getelementptr inbounds i8, i8* %25, i64 1" (0.000000e+00%)
Noelle:  Function "int_upsample"
Noelle:     Loop "  %67 = getelementptr inbounds i8*, i8** %8, i64 %65" (0.000000e+00%)
Noelle:     Loop "  %85 = load i8, i8* %83, align 1, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %77 = getelementptr inbounds i8, i8* %75, i64 1" (0.000000e+00%)
Noelle:     Loop "  %52 = load i32, i32* %22, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  br i1 false, label %.loopexit3.loopexit.us-lcssa.us.us, label %.loopexit.us.us..loopexit.us.us_crit_edge" (0.000000e+00%)
Noelle:  Function "grayscale_convert"
Noelle:  Function "start_output_tga"
Noelle:     Loop "  %120 = load i8**, i8*** %116, align 8, !tbaa !53" (0.000000e+00%)
Noelle:  Function "null_convert"
Noelle:     Loop "  %25 = add nsw i32 %22, -1" (0.000000e+00%)
Noelle:     Loop "  %67 = getelementptr inbounds i8**, i8*** %1, i64 %66" (0.000000e+00%)
Noelle:     Loop "  %76 = getelementptr inbounds i8, i8* %74, i64 1" (0.000000e+00%)
Noelle:     Loop "  %84 = getelementptr inbounds i8, i8* %83, i64 1" (0.000000e+00%)
Noelle:     Loop "  br i1 %19, label %.loopexit2.us10..loopexit.us12_crit_edge, label %.preheader.preheader.us13" (0.000000e+00%)
Noelle:     Loop "  %32 = getelementptr inbounds i8, i8* %31, i64 1" (0.000000e+00%)
Noelle:  Function "COM_handler"
Noelle:     Loop "  %123 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %7, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %69 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %7, align 8, !tbaa !41" (0.000000e+00%)
Noelle:  Function "usage"
Noelle:  Function "copy_pixel_rows"
Noelle:     Loop "  %41 = getelementptr i8, i8* %14, i64 %39" (0.000000e+00%)
Noelle:     Loop "  %91 = getelementptr i8, i8* %14, i64 %89" (0.000000e+00%)
Noelle:     Loop "  %114 = getelementptr inbounds i8, i8* %111, i64 1" (0.000000e+00%)
Noelle:     Loop "  %127 = getelementptr inbounds i8, i8* %125, i64 1" (0.000000e+00%)
Noelle:  Function "put_demapped_gray"
Noelle:     Loop "  %23 = getelementptr inbounds i8, i8* %21, i64 1" (0.000000e+00%)
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %38, i64 1" (0.000000e+00%)
Noelle:  Function "put_demapped_rgb"
Noelle:     Loop "  %45 = getelementptr inbounds i8, i8* %44, i64 1" (0.000000e+00%)
Noelle:  Function "ycck_cmyk_convert"
Noelle:     Loop "  %36 = load i8**, i8*** %1, align 8, !tbaa !46" (0.000000e+00%)
Noelle:     Loop "  %53 = getelementptr inbounds i8, i8* %39, i64 %51" (0.000000e+00%)
Noelle:  Function "jinit_1pass_quantizer"
Noelle:     Loop "  %66 = add nuw i64 %65, 1" (0.000000e+00%)
Noelle:     Loop "  %69 = mul nsw i64 %67, %66" (0.000000e+00%)
Noelle:     Loop "  %81 = mul nsw i64 %79, %66" (0.000000e+00%)
Noelle:     Loop "  %57 = add nuw i64 %56, 1" (0.000000e+00%)
Noelle:     Loop "  %62 = mul nsw i64 %60, %57" (0.000000e+00%)
Noelle:     Loop "  %123 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %44, i64 0, i32 5, i64 %119" (0.000000e+00%)
Noelle:     Loop "  %163 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %44, i64 0, i32 5, i64 %159" (0.000000e+00%)
Noelle:     Loop "  %229 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %44, i64 0, i32 5, i64 %227" (0.000000e+00%)
Noelle:     Loop "  %185 = icmp eq i32 %.pre, 2" (0.000000e+00%)
Noelle:     Loop "  %sext = shl i64 %187, 32" (0.000000e+00%)
Noelle:     Loop "  %211 = getelementptr inbounds [3 x i32], [3 x i32]* @select_ncolors.RGB_order, i64 0, i64 %208" (0.000000e+00%)
Noelle:     Loop "  %272 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %44, i64 0, i32 5, i64 %270" (0.000000e+00%)
Noelle:     Loop "  %294 = trunc i64 %292 to i32" (0.000000e+00%)
Noelle:     Loop "  %337 = add i64 %336, %283" (0.000000e+00%)
Noelle:     Loop "  br i1 %288, label %..loopexit4.us_crit_edge, label %.preheader3.preheader.us" (0.000000e+00%)
Noelle:     Loop "  %307 = load i8*, i8** %282, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %328 = load i8*, i8** %282, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %364 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (0.000000e+00%)
Noelle:  Function "start_pass_1_quant"
Noelle:     Loop "  %122 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %118, align 8, !tbaa !51" (0.000000e+00%)
Noelle:     Loop "  %141 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %5, i64 0, i32 8, i64 %140" (0.000000e+00%)
Noelle:     Loop "  %48 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %39, i64 0, i32 5, i64 %47" (0.000000e+00%)
Noelle:     Loop "  %54 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %39, i64 0, i32 5, i64 %53" (0.000000e+00%)
Noelle:     Loop "  br label %73" (0.000000e+00%)
Noelle:     Loop "  %75 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @base_dither_matrix, i64 0, i64 %72, i64 %74" (0.000000e+00%)
Noelle:  Function "finish_pass_1_quant"
Noelle:  Function "new_color_map_1_quant"
Noelle:  Function "create_colorindex"
Noelle:     Loop "  %103 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 5, i64 %101" (0.000000e+00%)
Noelle:     Loop "  %119 = sext i32 %118 to i64" (0.000000e+00%)
Noelle:     Loop "  %125 = add i64 %124, 1" (0.000000e+00%)
Noelle:     Loop "  %29 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 5, i64 %27" (0.000000e+00%)
Noelle:     Loop "  %49 = sext i32 %48 to i64" (0.000000e+00%)
Noelle:     Loop "  %55 = add i64 %54, 1" (0.000000e+00%)
Noelle:     Loop "  %80 = load i8, i8* %37, align 1, !tbaa !51" (0.000000e+00%)
Noelle:  Function "color_quantize3"
Noelle:     Loop "  %76 = getelementptr inbounds i8*, i8** %2, i64 %75" (0.000000e+00%)
Noelle:     Loop "  %101 = getelementptr inbounds i8, i8* %98, i64 1" (0.000000e+00%)
Noelle:     Loop "  br i1 %22, label %..loopexit.us3_crit_edge, label %.preheader.preheader.us4" (0.000000e+00%)
Noelle:     Loop "  %30 = getelementptr inbounds i8, i8* %27, i64 1" (0.000000e+00%)
Noelle:  Function "color_quantize"
Noelle:     Loop "  %30 = getelementptr inbounds i8*, i8** %2, i64 %29" (0.000000e+00%)
Noelle:     Loop "  %113 = getelementptr inbounds i8, i8* %112, i64 1" (0.000000e+00%)
Noelle:     Loop "  br i1 %25, label %..loopexit2.us_crit_edge, label %.preheader1.preheader.us" (0.000000e+00%)
Noelle:     Loop "  %42 = getelementptr inbounds i8*, i8** %9, i64 %38" (0.000000e+00%)
Noelle:     Loop "  %92 = getelementptr inbounds i8*, i8** %9, i64 %88" (0.000000e+00%)
Noelle:  Function "quantize3_ord_dither"
Noelle:     Loop "  %35 = load [16 x i32]*, [16 x i32]** %20, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %48 = getelementptr inbounds i8, i8* %44, i64 1" (0.000000e+00%)
Noelle:     Loop "  %28 = add nsw i32 %26, 1" (0.000000e+00%)
Noelle:  Function "jpeg_start_output"
Noelle:  Function "read_pbm_integer"
Noelle:     Loop "  %4 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %6 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %34 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %36 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:  Function "read_stdin"
Noelle:  Function "decode_mcu"
Noelle:     Loop "  %35 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %7, i64 0, i32 2, i32 0, i64 %34" (0.000000e+00%)
Noelle:     Loop "  %72 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %69" (8.607102e-05%)
Noelle:     Loop "  %100 = icmp eq i32 %95, 0" (0.000000e+00%)
Noelle:     Loop "  %127 = icmp eq i64 %126, 0" (0.000000e+00%)
Noelle:     Loop "  %224 = icmp eq i32 %219, 0" (0.000000e+00%)
Noelle:     Loop "  %251 = icmp eq i64 %250, 0" (0.000000e+00%)
Noelle:     Loop "  %344 = icmp slt i32 %343, 8" (0.000000e+00%)
Noelle:     Loop "  %355 = icmp eq i32 %350, 0" (0.000000e+00%)
Noelle:     Loop "  %382 = icmp eq i64 %381, 0" (0.000000e+00%)
Noelle:     Loop "  %482 = icmp eq i32 %477, 0" (0.000000e+00%)
Noelle:     Loop "  %509 = icmp eq i64 %508, 0" (0.000000e+00%)
Noelle:     Loop "  %604 = icmp slt i32 %603, 8" (0.000000e+00%)
Noelle:     Loop "  %615 = icmp eq i32 %610, 0" (0.000000e+00%)
Noelle:     Loop "  %642 = icmp eq i64 %641, 0" (0.000000e+00%)
Noelle:     Loop "  %741 = icmp eq i32 %736, 0" (0.000000e+00%)
Noelle:     Loop "  %768 = icmp eq i64 %767, 0" (0.000000e+00%)
Noelle:  Function "write_stdout"
Noelle:  Function "jpeg_abort_decompress"
Noelle:  Function "jpeg_input_complete"
Noelle:  Function "jpeg_has_multiple_scans"
Noelle:  Function "jpeg_read_raw_data"
Noelle:  Function "read_color_map"
Noelle:     Loop "  br label %.preheader13" (0.000000e+00%)
Noelle:     Loop "  %211 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %213 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %217 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %221 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %246 = getelementptr inbounds i8, i8* %235, i64 %245" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader3" (0.000000e+00%)
Noelle:     Loop "  %154 = tail call fastcc i32 @read_pbm_integer(%struct.jpeg_decompress_struct* %0, %struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %169 = getelementptr inbounds i8, i8* %158, i64 %168" (0.000000e+00%)
Noelle:     Loop "  %18 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %57 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %83 = getelementptr inbounds i8, i8* %72, i64 %82" (0.000000e+00%)
Noelle:  Function "jpeg_finish_output"
Noelle:     Loop "  %31 = load i32, i32* %27, align 4, !tbaa !48" (0.000000e+00%)
Noelle:  Function "decompress_onepass"
Noelle:     Loop "  %32 = icmp ugt i32 %30, %8" (0.000000e+00%)
Noelle:     Loop "  %34 = load i8*, i8** %21, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %54 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %52" (0.000000e+00%)
Noelle:     Loop "  br label %100" (0.000000e+00%)
Noelle:     Loop "  br i1 undef, label %93, label %92" (0.000000e+00%)
Noelle:     Loop "  br i1 true, label %94, label %._crit_edge50" (0.000000e+00%)
Noelle:     Loop "  br i1 undef, label %145, label %144" (0.000000e+00%)
Noelle:     Loop "  br i1 true, label %148, label %._crit_edge57" (0.000000e+00%)
Noelle:     Loop "  %112 = load i32, i32* %26, align 8, !tbaa !61" (0.000000e+00%)
Noelle:     Loop "  %124 = add nsw i64 %122, %120" (0.000000e+00%)
Noelle:  Function "decompress_smooth_data"
Noelle:     Loop "  %18 = load i32, i32* %11, align 4, !tbaa !39" (0.000000e+00%)
Noelle:     Loop "  %61 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %60, i64 0, i32 12" (0.000000e+00%)
Noelle:     Loop "  %168 = getelementptr inbounds [64 x i16]*, [64 x i16]** %108, i64 %166" (0.000000e+00%)
Noelle:     Loop "  call void @jcopy_block_row([64 x i16]* nonnull %205, [64 x i16]* nonnull %3, i32 1) #18" (0.000000e+00%)
Noelle:  Function "post_process_1pass"
Noelle:  Function "post_process_prepass"
Noelle:  Function "post_process_2pass"
Noelle:  Function "skip_input_data"
Noelle:     Loop "  %18 = sub nsw i64 %17, %16" (0.000000e+00%)
Noelle:  Function "jpeg_new_colormap"
Noelle:  Function "finish_output_tga"
Noelle:  Function "jinit_write_gif"
Noelle:  Function "start_output_gif"
Noelle:  Function "put_pixel_rows.52"
Noelle:     Loop "  %40 = getelementptr inbounds i8, i8* %39, i64 1" (0.000000e+00%)
Noelle:     Loop "  %76 = sub nsw i32 %75, %73" (0.000000e+00%)
Noelle:     Loop "  %103 = trunc i64 %102 to i8" (0.000000e+00%)
Noelle:     Loop "  %172 = trunc i64 %171 to i8" (0.000000e+00%)
Noelle:  Function "finish_output_gif"
Noelle:     Loop "  %43 = trunc i64 %42 to i8" (0.000000e+00%)
Noelle:     Loop "  %118 = trunc i64 %117 to i8" (0.000000e+00%)
Noelle:  Function "emit_header"
Noelle:     Loop "  %24 = shl i32 1, %23" (0.000000e+00%)
Noelle:     Loop "  %108 = icmp slt i64 %107, %80" (0.000000e+00%)
Noelle:     Loop "  %84 = icmp slt i64 %83, %80" (0.000000e+00%)
Noelle:     Loop "  %223 = trunc i64 %222 to i8" (0.000000e+00%)
Noelle:  Function "jinit_write_targa"
Noelle:  Function "put_demapped_gray.55"
Noelle:     Loop "  %23 = getelementptr inbounds i8, i8* %20, i64 1" (0.000000e+00%)
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %37, i64 1" (0.000000e+00%)
Noelle:  Function "put_gray_rows"
Noelle:     Loop "  %40 = getelementptr i8, i8* %6, i64 %38" (0.000000e+00%)
Noelle:     Loop "  %90 = getelementptr i8, i8* %6, i64 %88" (0.000000e+00%)
Noelle:     Loop "  %113 = getelementptr inbounds i8, i8* %111, i64 1" (0.000000e+00%)
Noelle:     Loop "  %126 = getelementptr inbounds i8, i8* %125, i64 1" (0.000000e+00%)
Noelle:  Function "put_pixel_rows.56"
Noelle:     Loop "  %35 = getelementptr inbounds i8, i8* %34, i64 2" (0.000000e+00%)
Noelle:  Function "jinit_write_bmp"
Noelle:  Function "start_output_bmp"
Noelle:  Function "finish_output_bmp"
Noelle:     Loop "  %284 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %250, align 8, !tbaa !61" (0.000000e+00%)
Noelle:     Loop "  %297 = load i8, i8* %295, align 1, !tbaa !46" (0.000000e+00%)
Noelle:     Loop "  %257 = sub i32 %255, %256" (0.000000e+00%)
Noelle:     Loop "  %274 = load i8, i8* %272, align 1, !tbaa !46" (0.000000e+00%)
Noelle:  Function "put_gray_rows.59"
Noelle:     Loop "  %52 = getelementptr i8, i8* %18, i64 %50" (0.000000e+00%)
Noelle:     Loop "  %102 = getelementptr i8, i8* %18, i64 %100" (0.000000e+00%)
Noelle:     Loop "  %125 = getelementptr inbounds i8, i8* %123, i64 1" (0.000000e+00%)
Noelle:     Loop "  %139 = getelementptr inbounds i8, i8* %138, i64 1" (0.000000e+00%)
Noelle:  Function "put_pixel_rows.60"
Noelle:     Loop "  %48 = getelementptr inbounds i8, i8* %47, i64 1" (0.000000e+00%)
Noelle:  Function "write_colormap"
Noelle:     Loop "  %98 = load i8*, i8** %6, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %33 = load i8*, i8** %6, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %79 = load i8*, i8** %53, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %59 = load i8*, i8** %53, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %117 = tail call i32 @putc(i32 %116, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %16 = tail call i32 @putc(i32 %15, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %147 = tail call i32 @putc(i32 0, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %139 = tail call i32 @putc(i32 0, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:  Function "main"
Noelle:     Loop "  %100 = load i8**, i8*** %96, align 8, !tbaa !55" (5.268217e+01%)
Noelle:  Function "decode_mcu_AC_refine"
Noelle:     Loop "  %41 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %40" (0.000000e+00%)
Noelle:     Loop "  %89 = icmp slt i32 %87, 8" (2.083958e+00%)
Noelle:     Loop "  %183 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %178" (1.215915e+00%)
Noelle:     Loop "  %272 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %269" (8.617111e+00%)
Noelle:     Loop "  %331 = add nsw i64 %329, -1" (0.000000e+00%)
Noelle:     Loop "  %341 = add nsw i64 %340, -1" (0.000000e+00%)
Noelle:  Function "ycc_rgb_convert"
Noelle:     Loop "  %35 = load i8**, i8*** %1, align 8, !tbaa !49" (8.720762e+00%)
Noelle:     Loop "  %49 = getelementptr inbounds i8, i8* %38, i64 %47" (8.720378e+00%)
Noelle:  Function "jpeg_idct_islow"
Noelle:     Loop "  %22 = getelementptr inbounds i16, i16* %21, i64 8" (3.639574e+00%)
Noelle:     Loop "  %179 = getelementptr inbounds i8*, i8** %3, i64 %177" (4.503094e+00%)
Noelle:  Function "h2v2_fancy_upsample"
Noelle:     Loop "  %14 = getelementptr inbounds i8*, i8** %2, i64 %12" (6.343685e+00%)
Noelle:     Loop "  %65 = getelementptr inbounds i8, i8* %64, i64 1" (3.170555e+00%)
Noelle:     Loop "  %145 = getelementptr inbounds i8, i8* %144, i64 1" (3.170555e+00%)
Noelle:  Function "decode_mcu_AC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %6, i64 0, i32 2, i32 1, i64 %36" (0.000000e+00%)
Noelle:     Loop "  %81 = icmp slt i32 %78, 8" (3.673817e+00%)
Noelle:  Function "consume_data"
Noelle:     Loop "  %16 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %15" (3.918702e-04%)
Noelle:     Loop "  %54 = icmp ult i32 %52, %51" (1.662572e+00%)
Noelle:     Loop "  %56 = load i32, i32* %7, align 8, !tbaa !39" (1.662281e+00%)
Noelle:     Loop "  %63 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %61" (1.355269e+00%)
Noelle:     Loop "  %87 = add nsw i64 %85, %53" (6.869386e-01%)
Noelle:     Loop "  %95 = add i64 %94, %91" (0.000000e+00%)
Noelle:     Loop "  %124 = getelementptr inbounds [64 x i16], [64 x i16]* %122, i64 1" (2.512055e-01%)
Noelle:  Function "jpeg_fill_bit_buffer"
Noelle:     Loop "  %19 = load i32, i32* %11, align 8, !tbaa !39" (1.157154e+00%)
Noelle:     Loop "  %49 = icmp eq i64 %48, 0" (5.556085e-03%)
Noelle:  Function "decode_mcu_DC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %36" (0.000000e+00%)
Noelle:     Loop "  %74 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %71" (4.492869e-01%)
Noelle:  Function "decode_mcu_DC_refine"
Noelle:     Loop "  %36 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %6, i64 0, i32 2, i32 1, i64 %35" (0.000000e+00%)
Noelle:     Loop "  %72 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %69" (1.332998e-01%)
Noelle:  Function "decompress_data"
Noelle:     Loop "  %15 = load i32, i32* %9, align 4, !tbaa !40" (1.202056e-05%)
Noelle:     Loop "  %43 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %42, i64 0, i32 12" (6.070867e-02%)
Noelle:     Loop "  %85 = icmp eq i32 %82, 0" (6.055837e-02%)
Noelle:     Loop "  %95 = getelementptr inbounds [64 x i16], [64 x i16]* %93, i64 0, i64 0" (6.047062e-02%)
Noelle:  Function "jpeg_huff_decode"
Noelle:     Loop "  %38 = shl i64 %35, 1" (1.153616e-02%)
Noelle:  Function "sep_upsample"
Noelle:     Loop "  %26 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %10, i64 0, i32 2, i64 %24" (5.957127e-04%)
Noelle:  Function "access_virt_barray"
Noelle:     Loop "  %85 = mul nsw i64 %82, %51" (0.000000e+00%)
Noelle:     Loop "  %169 = mul nsw i64 %166, %137" (0.000000e+00%)
Noelle:     Loop "  %236 = load [64 x i16]**, [64 x i16]*** %232, align 8, !tbaa !40" (5.409524e-05%)
Noelle:  Function "process_data_context_main"
Noelle:     Loop "  %77 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %76, i64 0, i32 3" (5.042638e-07%)
Noelle:     Loop "  %108 = load i64, i64* %103, align 8, !tbaa !47" (2.098828e-07%)
Noelle:     Loop "  %158 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %157, i64 0, i32 3" (6.051166e-07%)
Noelle:     Loop "  %185 = add nsw i64 %183, %175" (1.662708e-07%)
Noelle:  Function "jpeg_read_scanlines"
Noelle:  Function "jpeg_start_decompress"
Noelle:     Loop "  %25 = icmp eq %struct.jpeg_progress_mgr* %24, null" (2.650247e-04%)
Noelle:  Function "fill_input_buffer"
Noelle:  Function "put_pixel_rows"
Noelle:  Function "start_pass_phuff_decoder"
Noelle:     Loop "  %107 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %106" (2.093649e-05%)
Noelle:     Loop "  %133 = getelementptr inbounds [64 x i32], [64 x i32]* %111, i64 %112, i64 %132" (2.041314e-05%)
Noelle:     Loop "  %66 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %65" (6.487286e-07%)
Noelle:     Loop "  %78 = getelementptr inbounds [64 x i32], [64 x i32]* %70, i64 %71, i64 %77" (2.616720e-07%)
Noelle:     Loop "  %208 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %207" (7.013083e-05%)
Noelle:     Loop "  %176 = icmp eq i32 %174, 0" (2.642888e-05%)
Noelle:  Function "jpeg_make_d_derived_tbl"
Noelle:     Loop "  %26 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %23" (1.738484e-05%)
Noelle:     Loop "  %53 = add nsw <2 x i64> %50, <i64 8, i64 8>" (0.000000e+00%)
Noelle:     Loop "  %65 = add nsw <2 x i64> %62, <i64 1, i64 1>" (9.104006e-07%)
Noelle:     Loop "  %103 = sext i8 %99 to i32" (2.033682e-05%)
Noelle:     Loop "  %110 = add nsw i64 %108, 1" (1.109108e-05%)
Noelle:     Loop "  %133 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %131" (1.287917e-05%)
Noelle:     Loop "  %166 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %164" (4.395818e-05%)
Noelle:     Loop "  %222 = add nsw i64 %181, %219" (2.599003e-05%)
Noelle:     Loop "  %255 = add i64 %253, %228" (1.408668e-05%)
Noelle:     Loop "  %298 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %20, i64 0, i32 4, i64 %296" (0.000000e+00%)
Noelle:     Loop "  %199 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 1, i64 %197" (8.665160e-06%)
Noelle:     Loop "  %207 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %20, i64 0, i32 4, i64 %205" (5.718624e-06%)
Noelle:  Function "read_markers"
Noelle:     Loop "  %34 = icmp eq i32 %33, 0" (4.191659e-05%)
Noelle:     Loop "  %719 = icmp eq i64 %716, 0" (7.678439e-06%)
Noelle:     Loop "  %791 = icmp eq i64 %789, 0" (0.000000e+00%)
Noelle:     Loop "  %766 = icmp eq i64 %764, 0" (7.321365e-06%)
Noelle:     Loop "  %421 = icmp eq i64 %418, 0" (0.000000e+00%)
Noelle:     Loop "  %538 = icmp eq i64 %536, 0" (2.737198e-05%)
Noelle:     Loop "  %564 = icmp eq i64 %561, 0" (8.695144e-06%)
Noelle:     Loop "  %623 = icmp eq i64 %621, 0" (1.588295e-05%)
Noelle:     Loop "  br i1 %228, label %231, label %._crit_edge204, !prof !80" (2.698493e-06%)
Noelle:     Loop "  %263 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %261, i64 0, i32 0" (5.887621e-07%)
Noelle:  Function "realize_virt_arrays"
Noelle:     Loop "  %11 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %8, i64 0, i32 0" (0.000000e+00%)
Noelle:     Loop "  %42 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %39, i64 0, i32 0" (2.425918e-07%)
Noelle:     Loop "  %96 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %95, i64 0, i32 0" (4.999026e-06%)
Noelle:     Loop "  %148 = sub i32 %123, %146" (0.000000e+00%)
Noelle:     Loop "  %198 = add i32 %196, 1" (0.000000e+00%)
Noelle:     Loop "  %213 = add i32 %212, 1" (0.000000e+00%)
Noelle:     Loop "  %243 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %242, i64 0, i32 0" (3.381566e-05%)
Noelle:     Loop "  %298 = sub i32 %271, %296" (3.298158e-05%)
Noelle:     Loop "  %344 = add i32 %342, 1" (1.226588e-07%)
Noelle:     Loop "  %359 = add i32 %358, 1" (3.237374e-05%)
Noelle:  Function "jinit_master_decompress"
Noelle:  Function "fullsize_upsample"
Noelle:  Function "jinit_color_deconverter"
Noelle:     Loop "  %199 = mul nsw i64 %198, 91881" (0.000000e+00%)
Noelle:     Loop "  %133 = mul nsw i64 %132, 91881" (1.813987e-05%)
Noelle:     Loop "  %78 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %67, i64 %76, i32 12" (0.000000e+00%)
Noelle:     Loop "  %245 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %67, i64 %243, i32 12" (0.000000e+00%)
Noelle:  Function "parse_switches"
Noelle:     Loop "  %28 = sext i32 %27 to i64" (1.160624e-05%)
Noelle:  Function "keymatch"
Noelle:     Loop "  %10 = getelementptr inbounds i8, i8* %7, i64 1" (8.269927e-06%)
Noelle:  Function "jzero_far"
Noelle:  Function "alloc_small"
Noelle:     Loop "  %37 = getelementptr inbounds %union.small_pool_struct, %union.small_pool_struct* %36, i64 0, i32 0, i32 2" (8.640629e-07%)
Noelle:     Loop "  %62 = lshr i64 %61, 1" (0.000000e+00%)
Noelle:  Function "consume_markers"
Noelle:     Loop "  %82 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %80, i64 0, i32 2" (2.589463e-07%)
Noelle:     Loop "  %135 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %133, i64 0, i32 9" (4.034110e-07%)
Noelle:  Function "start_input_pass"
Noelle:     Loop "  %73 = getelementptr inbounds %struct.jpeg_decompress_struct.261, %struct.jpeg_decompress_struct.261* %0, i64 0, i32 63, i64 %72" (1.210233e-06%)
Noelle:     Loop "  %114 = load i32, i32* %65, align 8, !tbaa !55" (1.090300e-07%)
Noelle:     Loop "  %124 = load i32, i32* %65, align 8, !tbaa !55" (1.526420e-07%)
Noelle:     Loop "  %157 = getelementptr inbounds %struct.jpeg_decompress_struct.261, %struct.jpeg_decompress_struct.261* %0, i64 0, i32 63, i64 %156" (7.168723e-07%)
Noelle:  Function "alloc_sarray"
Noelle:     Loop "  %30 = sub i32 %3, %28" (1.867139e-06%)
Noelle:     Loop "  %44 = add i32 %42, 1" (2.507690e-07%)
Noelle:     Loop "  %59 = add i32 %58, 1" (6.541801e-07%)
Noelle:  Function "next_marker"
Noelle:     Loop "  %13 = icmp eq i64 %12, 0" (1.668159e-06%)
Noelle:     Loop "  %30 = load %struct.jpeg_marker_reader.278*, %struct.jpeg_marker_reader.278** %9, align 8, !tbaa !47" (0.000000e+00%)
Noelle:     Loop "  %54 = icmp eq i64 %53, 0" (5.560531e-07%)
Noelle:  Function "start_pass_main"
Noelle:     Loop "  %30 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %29, i64 0, i32 3" (1.992523e-06%)
Noelle:     Loop "  %96 = getelementptr inbounds i8*, i8** %43, i64 %94" (4.715548e-07%)
Noelle:     Loop "  %57 = getelementptr inbounds i8*, i8** %43, i64 %55" (1.689965e-07%)
Noelle:     Loop "  %278 = getelementptr inbounds i8*, i8** %43, i64 %277" (0.000000e+00%)
Noelle:     Loop "  %202 = add nsw i64 %200, %153" (0.000000e+00%)
Noelle:     Loop "  %321 = add nsw i64 %320, %153" (2.017055e-07%)
Noelle:     Loop "  %338 = load i64, i64* %311, align 8, !tbaa !53" (0.000000e+00%)
Noelle:     Loop "  %364 = load i64, i64* %311, align 8, !tbaa !53" (1.226588e-07%)
Noelle:  Function "emit_message"
Noelle:  Function "start_pass"
Noelle:     Loop "  %19 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %16, i64 0, i32 9" (1.330166e-06%)
Noelle:     Loop "  %194 = getelementptr inbounds [8 x double], [8 x double]* @start_pass.aanscalefactor, i64 0, i64 %193" (0.000000e+00%)
Noelle:     Loop "  %162 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %55, i64 0, i32 0, i64 %161" (0.000000e+00%)
Noelle:  Function "jpeg_calc_output_dimensions"
Noelle:     Loop "  %117 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %115, i64 0, i32 9" (1.417390e-07%)
Noelle:     Loop "  %86 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %84, i64 0, i32 3" (0.000000e+00%)
Noelle:     Loop "  %92 = shl i32 %91, 1" (0.000000e+00%)
Noelle:     Loop "  %123 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %121, i64 0, i32 2" (5.396986e-07%)
Noelle:  Function "get_sof"
Noelle:     Loop "  %231 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %230, i64 0, i32 1" (5.451501e-07%)
Noelle:  Function "free_pool"
Noelle:     Loop "  %22 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %21, i64 0, i32 10" (0.000000e+00%)
Noelle:     Loop "  %37 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %36, i64 0, i32 10" (8.722401e-08%)
Noelle:     Loop "  %58 = bitcast %union.large_pool_struct* %57 to i8*" (3.925080e-07%)
Noelle:     Loop "  %78 = bitcast %union.small_pool_struct* %77 to i8*" (2.425918e-07%)
Noelle:  Function "get_app0"
Noelle:     Loop "  %50 = icmp eq i64 %48, 0" (6.460028e-07%)
Noelle:  Function "start_output_pass"
Noelle:     Loop "  %50 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %49, i64 0, i32 19" (6.187453e-07%)
Noelle:  Function "jinit_write_ppm"
Noelle:  Function "self_destruct"
Noelle:  Function "jinit_d_main_controller"
Noelle:     Loop "  %68 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %67, i64 0, i32 3" (2.834780e-07%)
Noelle:     Loop "  %115 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %114, i64 0, i32 3" (2.126085e-07%)
Noelle:  Function "start_input_pass.105"
Noelle:  Function "request_virt_barray"
Noelle:  Function "jinit_upsampler"
Noelle:     Loop "  %56 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %55, i64 0, i32 2" (6.343878e+00%)
Noelle:  Function "alloc_large"
Noelle:  Function "jpeg_CreateDecompress"
Noelle:  Function "jinit_d_coef_controller"
Noelle:     Loop "  %30 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %29, i64 0, i32 3" (3.543475e-07%)
Noelle:  Function "jdiv_round_up"
Noelle:  Function "jpeg_read_header"
Noelle:  Function "jinit_marker_reader"
Noelle:  Function "jinit_inverse_dct"
Noelle:     Loop "  %22 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (1.444648e-07%)
Noelle:  Function "jpeg_consume_input"
Noelle:  Function "jinit_memory_mgr"
Noelle:  Function "prepare_for_output_pass"
Noelle:  Function "jinit_phuff_decoder"
Noelle:     Loop "  %30 = bitcast i32* %29 to i8*" (7.904676e-08%)
Noelle:  Function "jpeg_finish_decompress"
Noelle:     Loop "  %42 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %40, align 8, !tbaa !53" (1.362875e-08%)
Noelle:  Function "finish_input_pass"
Noelle:  Function "jround_up"
Noelle:  Function "jpeg_alloc_huff_table"
Noelle:  Function "jpeg_stdio_src"
Noelle:  Function "output_pass_setup"
Noelle:     Loop "  %26 = load i32, i32* %19, align 4, !tbaa !47" (0.000000e+00%)
Noelle:  Function "jinit_input_controller"
Noelle:  Function "start_pass_dpost"
Noelle:  Function "reset_input_controller"
Noelle:  Function "jpeg_std_error"
Noelle:  Function "jinit_d_post_controller"
Noelle:  Function "jpeg_alloc_quant_table"
Noelle:  Function "start_output_ppm"
Noelle:  Function "jpeg_destroy_decompress"
Noelle:  Function "jpeg_free_large"
Noelle:  Function "jpeg_get_large"
Noelle:  Function "reset_marker_reader"
Noelle:  Function "jpeg_destroy"
Noelle:  Function "finish_output_pass"
Noelle:  Function "start_pass_upsample"
Noelle:  Function "jpeg_abort"
Noelle:  Function "jpeg_get_small"
Noelle:  Function "jpeg_free_small"
Noelle:  Function "finish_output_ppm"
Noelle:  Function "jpeg_set_marker_processor"
Noelle:  Function "reset_error_mgr"
Noelle:  Function "init_source"
Noelle:  Function "jpeg_mem_available"
Noelle:  Function "start_pass_dcolor"
Noelle:  Function "term_source"
Noelle:  Function "get_app14"
Noelle:     Loop "  %50 = icmp eq i64 %48, 0" (0.000000e+00%)
Noelle:  Function "skip_variable"
Noelle:  Function "read_restart_marker"
Noelle:  Function "alloc_barray"
Noelle:     Loop "  %32 = sub i32 %3, %30" (0.000000e+00%)
Noelle:     Loop "  %47 = add i32 %45, 1" (0.000000e+00%)
Noelle:     Loop "  %62 = add i32 %61, 1" (0.000000e+00%)
Noelle:  Function "jpeg_mem_init"
Noelle:  Function "jpeg_resync_to_restart"
Noelle:     Loop "  %29 = icmp slt i32 %28, 192" (0.000000e+00%)
Noelle:     Loop "  %73 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8, !tbaa !38" (0.000000e+00%)
Noelle:  Function "jpeg_mem_term"
Noelle:  Function "process_data_crank_post"
Noelle:  Function "merged_2v_upsample"
Noelle:  Function "start_pass_merged_upsample"
Noelle:  Function "jinit_merged_upsampler"
Noelle:     Loop "  %76 = mul nsw i64 %75, 91881" (0.000000e+00%)
Noelle:  Function "update_box"
Noelle:     Loop "  %30 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %29" (0.000000e+00%)
Noelle:     Loop "  %34 = getelementptr inbounds [32 x i16], [32 x i16]* %31, i64 %33, i64 %23" (0.000000e+00%)
Noelle:     Loop "  %38 = load i16, i16* %36, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %59 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %58" (0.000000e+00%)
Noelle:     Loop "  %63 = getelementptr inbounds [32 x i16], [32 x i16]* %60, i64 %62, i64 %52" (0.000000e+00%)
Noelle:     Loop "  %67 = load i16, i16* %65, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader18" (0.000000e+00%)
Noelle:     Loop "  %90 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %89" (0.000000e+00%)
Noelle:     Loop "  %96 = load i16, i16* %94, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader14" (0.000000e+00%)
Noelle:     Loop "  %117 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %116" (0.000000e+00%)
Noelle:     Loop "  %123 = load i16, i16* %121, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader10" (0.000000e+00%)
Noelle:     Loop "  %145 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %144" (0.000000e+00%)
Noelle:     Loop "  %151 = load i16, i16* %149, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader6" (0.000000e+00%)
Noelle:     Loop "  %172 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %171" (0.000000e+00%)
Noelle:     Loop "  %178 = load i16, i16* %176, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %224 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %222" (0.000000e+00%)
Noelle:     Loop "  %232 = load i16, i16* %230, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %243 = getelementptr inbounds [32 x i16], [32 x i16]* %225, i64 %241, i64 %207" (0.000000e+00%)
Noelle:     Loop "  %248 = load i16, i16* %246, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %265 = load i16, i16* %263, align 2, !tbaa !50" (0.000000e+00%)
Noelle:  Function "fill_inverse_cmap"
Noelle:     Loop "  %50 = getelementptr inbounds i8, i8* %41, i64 %48" (0.000000e+00%)
Noelle:     Loop "  %181 = getelementptr inbounds [256 x i64], [256 x i64]* %6, i64 0, i64 %178" (0.000000e+00%)
Noelle:     Loop "  %345 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %344" (0.000000e+00%)
Noelle:     Loop "  %388 = load i64, i64* %386, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %611 = load i64, i64* %609, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %651 = load i64, i64* %649, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %691 = load i64, i64* %689, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %439 = add nuw nsw i64 %437, %428" (0.000000e+00%)
Noelle:  Function "merged_1v_upsample"
Noelle:  Function "finish_pass2"
Noelle:  Function "pass2_no_dither"
Noelle:     Loop "  %18 = getelementptr inbounds i8*, i8** %2, i64 %17" (0.000000e+00%)
Noelle:     Loop "  %26 = getelementptr inbounds i8, i8* %23, i64 1" (0.000000e+00%)
Noelle:  Function "pass2_fs_dither"
Noelle:     Loop "  %53 = getelementptr inbounds i8*, i8** %1, i64 %52" (0.000000e+00%)
Noelle:     Loop "  %92 = getelementptr inbounds i16, i16* %89, i64 %73" (0.000000e+00%)
Noelle:     Loop "  %39 = icmp eq i32 %37, 0" (0.000000e+00%)
Noelle:  Function "h2v1_merged_upsample"
Noelle:     Loop "  %40 = getelementptr inbounds i8, i8* %37, i64 1" (0.000000e+00%)
Noelle:  Function "finish_pass1"
Noelle:     Loop "  %33 = add nuw i64 %30, 1" (0.000000e+00%)
Noelle:     Loop "  %52 = getelementptr inbounds %struct.box, %struct.box* %50, i64 0, i32 7" (0.000000e+00%)
Noelle:     Loop "  %72 = getelementptr inbounds %struct.box, %struct.box* %70, i64 0, i32 6" (0.000000e+00%)
Noelle:     Loop "  %107 = getelementptr inbounds %struct.box, %struct.box* %105, i64 0, i32 6" (0.000000e+00%)
Noelle:     Loop "  %189 = load %struct.my_cquantizer.611*, %struct.my_cquantizer.611** %3, align 8, !tbaa !30" (0.000000e+00%)
Noelle:     Loop "  %220 = getelementptr inbounds [32 x i16]*, [32 x i16]** %191, i64 %215" (0.000000e+00%)
Noelle:     Loop "  %232 = getelementptr inbounds [32 x i16], [32 x i16]* %221, i64 %227, i64 %207" (0.000000e+00%)
Noelle:     Loop "  %244 = getelementptr inbounds i16, i16* %243, i64 1" (0.000000e+00%)
Noelle:  Function "prescan_quantize"
Noelle:     Loop "  %18 = getelementptr inbounds i8*, i8** %1, i64 %17" (0.000000e+00%)
Noelle:     Loop "  %23 = load i8, i8* %21, align 1, !tbaa !43" (0.000000e+00%)
Noelle:  Function "jpeg_idct_float"
Noelle:     Loop "  %22 = getelementptr inbounds i16, i16* %21, i64 8" (0.000000e+00%)
Noelle:     Loop "  %134 = getelementptr inbounds i8*, i8** %3, i64 %132" (0.000000e+00%)
Noelle:  Function "jpeg_idct_ifast"
Noelle:     Loop "  %22 = getelementptr inbounds i16, i16* %21, i64 8" (0.000000e+00%)
Noelle:     Loop "  %153 = getelementptr inbounds i8*, i8** %3, i64 %151" (0.000000e+00%)
Noelle:  Function "dummy_consume_data"
Noelle:  Function "process_data_simple_main"
Noelle:  Function "jcopy_sample_rows"
Noelle:     Loop "  %30 = getelementptr inbounds i8*, i8** %28, i64 1" (0.000000e+00%)
Noelle:  Function "jpeg_open_backing_store"
Noelle:  Function "jcopy_block_row"
Noelle:  Function "access_virt_sarray"
Noelle:     Loop "  %84 = mul nsw i64 %81, %50" (0.000000e+00%)
Noelle:     Loop "  %166 = mul nsw i64 %163, %134" (0.000000e+00%)
Noelle:     Loop "  %231 = load i8**, i8*** %227, align 8, !tbaa !38" (0.000000e+00%)
Noelle:  Function "request_virt_sarray"
Noelle:  Function "error_exit"
Noelle:  Function "h2v2_merged_upsample"
Noelle:     Loop "  %50 = getelementptr inbounds i8, i8* %45, i64 1" (0.000000e+00%)
Noelle:  Function "start_pass_huff_decoder"
Noelle:     Loop "  %36 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 63, i64 %35" (1.090300e-08%)
Noelle:  Function "jinit_huff_decoder"
Noelle:  Function "output_message"
Noelle:  Function "format_message"
Noelle:     Loop "  %45 = getelementptr inbounds i8, i8* %44, i64 1" (0.000000e+00%)
Noelle:  Function "jpeg_idct_4x4"
Noelle:     Loop "  %22 = icmp eq i32 %18, 4" (0.000000e+00%)
Noelle:     Loop "  %135 = getelementptr inbounds i8*, i8** %3, i64 %133" (0.000000e+00%)
Noelle:  Function "quantize_fs_dither"
Noelle:     Loop "  %33 = getelementptr inbounds i8*, i8** %2, i64 %32" (0.000000e+00%)
Noelle:     Loop "  %52 = load i8*, i8** %36, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %87 = getelementptr inbounds i16, i16* %84, i64 %70" (0.000000e+00%)
Noelle:     Loop "  %39 = icmp eq i32 %.pre, 0" (0.000000e+00%)
Noelle:  Function "jinit_2pass_quantizer"
Noelle:     Loop "  %36 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (0.000000e+00%)
Noelle:  Function "start_pass_2_quant"
Noelle:     Loop "  %84 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %83" (0.000000e+00%)
Noelle:  Function "new_color_map_2_quant"
Noelle:  Function "init_error_limit"
Noelle:     Loop "  %39 = getelementptr inbounds i32, i32* %12, i64 %37" (0.000000e+00%)
Noelle:     Loop "  %52 = getelementptr inbounds i32, i32* %12, i64 %51" (0.000000e+00%)
Noelle:  Function "quantize_ord_dither"
Noelle:     Loop "  %28 = getelementptr inbounds i8*, i8** %2, i64 %27" (0.000000e+00%)
Noelle:     Loop "  %58 = load i8**, i8*** %17, align 8, !tbaa !44" (0.000000e+00%)
Noelle:     Loop "  %70 = load i8, i8* %66, align 1, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %35 = load i8*, i8** %28, align 8, !tbaa !40" (0.000000e+00%)
Noelle:  Function "jpeg_idct_2x2"
Noelle:     Loop "  br label %NodeBlock5" (0.000000e+00%)
Noelle:  Function "jpeg_idct_1x1"
Noelle:  Function "noop_upsample"
Noelle:  Function "h2v1_fancy_upsample"
Noelle:     Loop "  %13 = getelementptr inbounds i8*, i8** %2, i64 %12" (0.000000e+00%)
Noelle:     Loop "  %50 = shl i64 %49, 1" (0.000000e+00%)
Noelle:     Loop "  %125 = getelementptr inbounds i8, i8* %124, i64 1" (0.000000e+00%)
Noelle:  Function "h2v1_upsample"
Noelle:     Loop "  %14 = getelementptr inbounds i8*, i8** %5, i64 %13" (0.000000e+00%)
Noelle:     Loop "  %26 = getelementptr inbounds i8, i8* %24, i64 1" (0.000000e+00%)
Noelle:  Function "h2v2_upsample"
Noelle:     Loop "  %15 = getelementptr inbounds i8*, i8** %5, i64 %13" (0.000000e+00%)
Noelle:     Loop "  %27 = getelementptr inbounds i8, i8* %25, i64 1" (0.000000e+00%)
Noelle:  Function "int_upsample"
Noelle:     Loop "  %67 = getelementptr inbounds i8*, i8** %8, i64 %65" (0.000000e+00%)
Noelle:     Loop "  %85 = load i8, i8* %83, align 1, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %77 = getelementptr inbounds i8, i8* %75, i64 1" (0.000000e+00%)
Noelle:     Loop "  %52 = load i32, i32* %22, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  br i1 false, label %.loopexit3.loopexit.us-lcssa.us.us, label %.loopexit.us.us..loopexit.us.us_crit_edge" (0.000000e+00%)
Noelle:  Function "grayscale_convert"
Noelle:  Function "start_output_tga"
Noelle:     Loop "  %120 = load i8**, i8*** %116, align 8, !tbaa !53" (0.000000e+00%)
Noelle:  Function "null_convert"
Noelle:     Loop "  %25 = add nsw i32 %22, -1" (0.000000e+00%)
Noelle:     Loop "  %67 = getelementptr inbounds i8**, i8*** %1, i64 %66" (0.000000e+00%)
Noelle:     Loop "  %76 = getelementptr inbounds i8, i8* %74, i64 1" (0.000000e+00%)
Noelle:     Loop "  %84 = getelementptr inbounds i8, i8* %83, i64 1" (0.000000e+00%)
Noelle:     Loop "  br i1 %19, label %.loopexit2.us10..loopexit.us12_crit_edge, label %.preheader.preheader.us13" (0.000000e+00%)
Noelle:     Loop "  %32 = getelementptr inbounds i8, i8* %31, i64 1" (0.000000e+00%)
Noelle:  Function "COM_handler"
Noelle:     Loop "  %123 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %7, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %69 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %7, align 8, !tbaa !41" (0.000000e+00%)
Noelle:  Function "usage"
Noelle:  Function "copy_pixel_rows"
Noelle:     Loop "  %41 = getelementptr i8, i8* %14, i64 %39" (0.000000e+00%)
Noelle:     Loop "  %91 = getelementptr i8, i8* %14, i64 %89" (0.000000e+00%)
Noelle:     Loop "  %114 = getelementptr inbounds i8, i8* %111, i64 1" (0.000000e+00%)
Noelle:     Loop "  %127 = getelementptr inbounds i8, i8* %125, i64 1" (0.000000e+00%)
Noelle:  Function "put_demapped_gray"
Noelle:     Loop "  %23 = getelementptr inbounds i8, i8* %21, i64 1" (0.000000e+00%)
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %38, i64 1" (0.000000e+00%)
Noelle:  Function "put_demapped_rgb"
Noelle:     Loop "  %45 = getelementptr inbounds i8, i8* %44, i64 1" (0.000000e+00%)
Noelle:  Function "ycck_cmyk_convert"
Noelle:     Loop "  %36 = load i8**, i8*** %1, align 8, !tbaa !46" (0.000000e+00%)
Noelle:     Loop "  %53 = getelementptr inbounds i8, i8* %39, i64 %51" (0.000000e+00%)
Noelle:  Function "jinit_1pass_quantizer"
Noelle:     Loop "  %66 = add nuw i64 %65, 1" (0.000000e+00%)
Noelle:     Loop "  %69 = mul nsw i64 %67, %66" (0.000000e+00%)
Noelle:     Loop "  %81 = mul nsw i64 %79, %66" (0.000000e+00%)
Noelle:     Loop "  %57 = add nuw i64 %56, 1" (0.000000e+00%)
Noelle:     Loop "  %62 = mul nsw i64 %60, %57" (0.000000e+00%)
Noelle:     Loop "  %123 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %44, i64 0, i32 5, i64 %119" (0.000000e+00%)
Noelle:     Loop "  %163 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %44, i64 0, i32 5, i64 %159" (0.000000e+00%)
Noelle:     Loop "  %229 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %44, i64 0, i32 5, i64 %227" (0.000000e+00%)
Noelle:     Loop "  %185 = icmp eq i32 %.pre, 2" (0.000000e+00%)
Noelle:     Loop "  %sext = shl i64 %187, 32" (0.000000e+00%)
Noelle:     Loop "  %211 = getelementptr inbounds [3 x i32], [3 x i32]* @select_ncolors.RGB_order, i64 0, i64 %208" (0.000000e+00%)
Noelle:     Loop "  %272 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %44, i64 0, i32 5, i64 %270" (0.000000e+00%)
Noelle:     Loop "  %294 = trunc i64 %292 to i32" (0.000000e+00%)
Noelle:     Loop "  %337 = add i64 %336, %283" (0.000000e+00%)
Noelle:     Loop "  br i1 %288, label %..loopexit4.us_crit_edge, label %.preheader3.preheader.us" (0.000000e+00%)
Noelle:     Loop "  %307 = load i8*, i8** %282, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %328 = load i8*, i8** %282, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %364 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (0.000000e+00%)
Noelle:  Function "start_pass_1_quant"
Noelle:     Loop "  %122 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %118, align 8, !tbaa !51" (0.000000e+00%)
Noelle:     Loop "  %141 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %5, i64 0, i32 8, i64 %140" (0.000000e+00%)
Noelle:     Loop "  %48 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %39, i64 0, i32 5, i64 %47" (0.000000e+00%)
Noelle:     Loop "  %54 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %39, i64 0, i32 5, i64 %53" (0.000000e+00%)
Noelle:     Loop "  br label %73" (0.000000e+00%)
Noelle:     Loop "  %75 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @base_dither_matrix, i64 0, i64 %72, i64 %74" (0.000000e+00%)
Noelle:  Function "finish_pass_1_quant"
Noelle:  Function "new_color_map_1_quant"
Noelle:  Function "create_colorindex"
Noelle:     Loop "  %103 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 5, i64 %101" (0.000000e+00%)
Noelle:     Loop "  %119 = sext i32 %118 to i64" (0.000000e+00%)
Noelle:     Loop "  %125 = add i64 %124, 1" (0.000000e+00%)
Noelle:     Loop "  %29 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 5, i64 %27" (0.000000e+00%)
Noelle:     Loop "  %49 = sext i32 %48 to i64" (0.000000e+00%)
Noelle:     Loop "  %55 = add i64 %54, 1" (0.000000e+00%)
Noelle:     Loop "  %80 = load i8, i8* %37, align 1, !tbaa !51" (0.000000e+00%)
Noelle:  Function "color_quantize3"
Noelle:     Loop "  %76 = getelementptr inbounds i8*, i8** %2, i64 %75" (0.000000e+00%)
Noelle:     Loop "  %101 = getelementptr inbounds i8, i8* %98, i64 1" (0.000000e+00%)
Noelle:     Loop "  br i1 %22, label %..loopexit.us3_crit_edge, label %.preheader.preheader.us4" (0.000000e+00%)
Noelle:     Loop "  %30 = getelementptr inbounds i8, i8* %27, i64 1" (0.000000e+00%)
Noelle:  Function "color_quantize"
Noelle:     Loop "  %30 = getelementptr inbounds i8*, i8** %2, i64 %29" (0.000000e+00%)
Noelle:     Loop "  %113 = getelementptr inbounds i8, i8* %112, i64 1" (0.000000e+00%)
Noelle:     Loop "  br i1 %25, label %..loopexit2.us_crit_edge, label %.preheader1.preheader.us" (0.000000e+00%)
Noelle:     Loop "  %42 = getelementptr inbounds i8*, i8** %9, i64 %38" (0.000000e+00%)
Noelle:     Loop "  %92 = getelementptr inbounds i8*, i8** %9, i64 %88" (0.000000e+00%)
Noelle:  Function "quantize3_ord_dither"
Noelle:     Loop "  %35 = load [16 x i32]*, [16 x i32]** %20, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %48 = getelementptr inbounds i8, i8* %44, i64 1" (0.000000e+00%)
Noelle:     Loop "  %28 = add nsw i32 %26, 1" (0.000000e+00%)
Noelle:  Function "jpeg_start_output"
Noelle:  Function "read_pbm_integer"
Noelle:     Loop "  %4 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %6 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %34 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %36 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:  Function "read_stdin"
Noelle:  Function "decode_mcu"
Noelle:     Loop "  %35 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %7, i64 0, i32 2, i32 0, i64 %34" (0.000000e+00%)
Noelle:     Loop "  %72 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %69" (8.607102e-05%)
Noelle:     Loop "  %100 = icmp eq i32 %95, 0" (0.000000e+00%)
Noelle:     Loop "  %127 = icmp eq i64 %126, 0" (0.000000e+00%)
Noelle:     Loop "  %224 = icmp eq i32 %219, 0" (0.000000e+00%)
Noelle:     Loop "  %251 = icmp eq i64 %250, 0" (0.000000e+00%)
Noelle:     Loop "  %344 = icmp slt i32 %343, 8" (0.000000e+00%)
Noelle:     Loop "  %355 = icmp eq i32 %350, 0" (0.000000e+00%)
Noelle:     Loop "  %382 = icmp eq i64 %381, 0" (0.000000e+00%)
Noelle:     Loop "  %482 = icmp eq i32 %477, 0" (0.000000e+00%)
Noelle:     Loop "  %509 = icmp eq i64 %508, 0" (0.000000e+00%)
Noelle:     Loop "  %604 = icmp slt i32 %603, 8" (0.000000e+00%)
Noelle:     Loop "  %615 = icmp eq i32 %610, 0" (0.000000e+00%)
Noelle:     Loop "  %642 = icmp eq i64 %641, 0" (0.000000e+00%)
Noelle:     Loop "  %741 = icmp eq i32 %736, 0" (0.000000e+00%)
Noelle:     Loop "  %768 = icmp eq i64 %767, 0" (0.000000e+00%)
Noelle:  Function "write_stdout"
Noelle:  Function "jpeg_abort_decompress"
Noelle:  Function "jpeg_input_complete"
Noelle:  Function "jpeg_has_multiple_scans"
Noelle:  Function "jpeg_read_raw_data"
Noelle:  Function "read_color_map"
Noelle:     Loop "  br label %.preheader13" (0.000000e+00%)
Noelle:     Loop "  %211 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %213 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %217 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %221 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %246 = getelementptr inbounds i8, i8* %235, i64 %245" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader3" (0.000000e+00%)
Noelle:     Loop "  %154 = tail call fastcc i32 @read_pbm_integer(%struct.jpeg_decompress_struct* %0, %struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %169 = getelementptr inbounds i8, i8* %158, i64 %168" (0.000000e+00%)
Noelle:     Loop "  %18 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %57 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %83 = getelementptr inbounds i8, i8* %72, i64 %82" (0.000000e+00%)
Noelle:  Function "jpeg_finish_output"
Noelle:     Loop "  %31 = load i32, i32* %27, align 4, !tbaa !48" (0.000000e+00%)
Noelle:  Function "decompress_onepass"
Noelle:     Loop "  %32 = icmp ugt i32 %30, %8" (0.000000e+00%)
Noelle:     Loop "  %34 = load i8*, i8** %21, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %54 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %52" (0.000000e+00%)
Noelle:     Loop "  br label %100" (0.000000e+00%)
Noelle:     Loop "  br i1 undef, label %93, label %92" (0.000000e+00%)
Noelle:     Loop "  br i1 true, label %94, label %._crit_edge50" (0.000000e+00%)
Noelle:     Loop "  br i1 undef, label %145, label %144" (0.000000e+00%)
Noelle:     Loop "  br i1 true, label %148, label %._crit_edge57" (0.000000e+00%)
Noelle:     Loop "  %112 = load i32, i32* %26, align 8, !tbaa !61" (0.000000e+00%)
Noelle:     Loop "  %124 = add nsw i64 %122, %120" (0.000000e+00%)
Noelle:  Function "decompress_smooth_data"
Noelle:     Loop "  %18 = load i32, i32* %11, align 4, !tbaa !39" (0.000000e+00%)
Noelle:     Loop "  %61 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %60, i64 0, i32 12" (0.000000e+00%)
Noelle:     Loop "  %168 = getelementptr inbounds [64 x i16]*, [64 x i16]** %108, i64 %166" (0.000000e+00%)
Noelle:     Loop "  call void @jcopy_block_row([64 x i16]* nonnull %205, [64 x i16]* nonnull %3, i32 1) #18" (0.000000e+00%)
Noelle:  Function "post_process_1pass"
Noelle:  Function "post_process_prepass"
Noelle:  Function "post_process_2pass"
Noelle:  Function "skip_input_data"
Noelle:     Loop "  %18 = sub nsw i64 %17, %16" (0.000000e+00%)
Noelle:  Function "jpeg_new_colormap"
Noelle:  Function "finish_output_tga"
Noelle:  Function "jinit_write_gif"
Noelle:  Function "start_output_gif"
Noelle:  Function "put_pixel_rows.52"
Noelle:     Loop "  %40 = getelementptr inbounds i8, i8* %39, i64 1" (0.000000e+00%)
Noelle:     Loop "  %76 = sub nsw i32 %75, %73" (0.000000e+00%)
Noelle:     Loop "  %103 = trunc i64 %102 to i8" (0.000000e+00%)
Noelle:     Loop "  %172 = trunc i64 %171 to i8" (0.000000e+00%)
Noelle:  Function "finish_output_gif"
Noelle:     Loop "  %43 = trunc i64 %42 to i8" (0.000000e+00%)
Noelle:     Loop "  %118 = trunc i64 %117 to i8" (0.000000e+00%)
Noelle:  Function "emit_header"
Noelle:     Loop "  %24 = shl i32 1, %23" (0.000000e+00%)
Noelle:     Loop "  %108 = icmp slt i64 %107, %80" (0.000000e+00%)
Noelle:     Loop "  %84 = icmp slt i64 %83, %80" (0.000000e+00%)
Noelle:     Loop "  %223 = trunc i64 %222 to i8" (0.000000e+00%)
Noelle:  Function "jinit_write_targa"
Noelle:  Function "put_demapped_gray.55"
Noelle:     Loop "  %23 = getelementptr inbounds i8, i8* %20, i64 1" (0.000000e+00%)
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %37, i64 1" (0.000000e+00%)
Noelle:  Function "put_gray_rows"
Noelle:     Loop "  %40 = getelementptr i8, i8* %6, i64 %38" (0.000000e+00%)
Noelle:     Loop "  %90 = getelementptr i8, i8* %6, i64 %88" (0.000000e+00%)
Noelle:     Loop "  %113 = getelementptr inbounds i8, i8* %111, i64 1" (0.000000e+00%)
Noelle:     Loop "  %126 = getelementptr inbounds i8, i8* %125, i64 1" (0.000000e+00%)
Noelle:  Function "put_pixel_rows.56"
Noelle:     Loop "  %35 = getelementptr inbounds i8, i8* %34, i64 2" (0.000000e+00%)
Noelle:  Function "jinit_write_bmp"
Noelle:  Function "start_output_bmp"
Noelle:  Function "finish_output_bmp"
Noelle:     Loop "  %284 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %250, align 8, !tbaa !61" (0.000000e+00%)
Noelle:     Loop "  %297 = load i8, i8* %295, align 1, !tbaa !46" (0.000000e+00%)
Noelle:     Loop "  %257 = sub i32 %255, %256" (0.000000e+00%)
Noelle:     Loop "  %274 = load i8, i8* %272, align 1, !tbaa !46" (0.000000e+00%)
Noelle:  Function "put_gray_rows.59"
Noelle:     Loop "  %52 = getelementptr i8, i8* %18, i64 %50" (0.000000e+00%)
Noelle:     Loop "  %102 = getelementptr i8, i8* %18, i64 %100" (0.000000e+00%)
Noelle:     Loop "  %125 = getelementptr inbounds i8, i8* %123, i64 1" (0.000000e+00%)
Noelle:     Loop "  %139 = getelementptr inbounds i8, i8* %138, i64 1" (0.000000e+00%)
Noelle:  Function "put_pixel_rows.60"
Noelle:     Loop "  %48 = getelementptr inbounds i8, i8* %47, i64 1" (0.000000e+00%)
Noelle:  Function "write_colormap"
Noelle:     Loop "  %98 = load i8*, i8** %6, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %33 = load i8*, i8** %6, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %79 = load i8*, i8** %53, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %59 = load i8*, i8** %53, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %117 = tail call i32 @putc(i32 %116, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %16 = tail call i32 @putc(i32 %15, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %147 = tail call i32 @putc(i32 0, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %139 = tail call i32 @putc(i32 0, %struct._IO_FILE* %10)" (0.000000e+00%)
NOELLE: FixedPoint: Exit
NOELLE: DeadFunctions: Exit
noelle-simplification baseline_pre.bc -o baseline_pre.bc
opt -basicaa -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -mem2reg -tbaa -early-cse-memssa -licm -simplifycfg -simplifycfg-sink-common=false -instcombine -tailcallelim -loop-simplify -lcssa -licm -loop-unswitch -globalopt -instcombine -ipsccp -dce -gvn -dse -adce -loop-simplify -lcssa -indvars -loop-deletion -instcombine -indvars -break-constgeps -lowerswitch -mergereturn --break-crit-edges -loop-simplify -lcssa --functionattrs --rpo-functionattrs baseline_pre.bc -o baseline_pre.bc
noelle-inline baseline_pre.bc "-noelle-inliner-verbose=1 -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier"
NOELLE: Inliner: Start
noelle-fixedpoint baseline_pre.bc baseline_pre.bc "noelle-parallel-load" -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Inliner.so -inliner -noelle-inliner-verbose=1 -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier
NOELLE: FixedPoint: Start
NOELLE: FixedPoint:   Loader: noelle-parallel-load
NOELLE: FixedPoint:   Options: -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Inliner.so -inliner -noelle-inliner-verbose=1 -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier
NOELLE: FixedPoint:   Input: baseline_pre.bc
NOELLE: FixedPoint:   Output: baseline_pre.bc
NOELLE: FixedPoint:   Temporary input: /tmp/tmp.2laNWI9ONE (.ll version is /tmp/tmp.Drl3pWfl9k)
NOELLE: FixedPoint:   Temporary output: /tmp/tmp.11kQ96bN2c (.ll version is /tmp/tmp.VsLwWkm4Xu)
NOELLE: FixedPoint:   Normalize the code
noelle-norm /tmp/tmp.2laNWI9ONE -o /tmp/tmp.11kQ96bN2c
opt -basicaa -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -mem2reg -simplifycfg-sink-common=false -break-constgeps -lowerswitch -mergereturn --break-crit-edges -loop-simplify -lcssa -indvars --functionattrs --rpo-functionattrs /tmp/tmp.2laNWI9ONE -o /tmp/tmp.11kQ96bN2c
NOELLE: FixedPoint:   Run until a fixed point is reached
NOELLE: FixedPoint:     Invocation 0
noelle-parallel-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Inliner.so -inliner -noelle-inliner-verbose=1 -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier /tmp/tmp.2laNWI9ONE -o /tmp/tmp.11kQ96bN2c
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Inliner.so -inliner -noelle-inliner-verbose=1 -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier /tmp/tmp.2laNWI9ONE -o /tmp/tmp.11kQ96bN2c
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Inliner.so -inliner -noelle-inliner-verbose=1 -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier /tmp/tmp.2laNWI9ONE -o /tmp/tmp.11kQ96bN2c
Inliner: Start
Inliner:   Number of program instructions = 27135
Inliner:   Profiles are available and will be used
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.jpeg_error_mgr, align 8
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.jpeg_decompress_struct, align 8
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
DOALL: WARNING: function NOELLE_DOALLDispatcher couldn't be found. DOALL is disabled
Inliner:   Inlining in: main (172 instructions. The inlining will add 65 instructions),   %96 = call i32 @jpeg_read_scanlines(%struct.jpeg_decompress_struct.188* nonnull %81, i8** %94, i32 %95) #18
Inliner:   Inlined calls due to loop-carried data dependences
Inliner: Exit
Noelle:  Function "main"
Noelle:     Loop "  %94 = load i8**, i8*** %91, align 8, !tbaa !55" (5.277081e+01%)
Noelle:  Function "decode_mcu_AC_refine"
Noelle:     Loop "  %41 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %40" (0.000000e+00%)
Noelle:     Loop "  %87 = icmp slt i32 %85, 8" (2.078187e+00%)
Noelle:     Loop "  %172 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %167" (1.217960e+00%)
Noelle:     Loop "  %255 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %252" (8.631609e+00%)
Noelle:     Loop "  %312 = add nsw i64 %310, -1" (0.000000e+00%)
Noelle:     Loop "  %322 = add nsw i64 %321, -1" (0.000000e+00%)
Noelle:  Function "ycc_rgb_convert"
Noelle:     Loop "  %34 = load i8**, i8*** %1, align 8, !tbaa !49" (8.735435e+00%)
Noelle:     Loop "  %47 = getelementptr inbounds i8, i8* %37, i64 %45" (8.735050e+00%)
Noelle:  Function "jpeg_idct_islow"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8" (3.645698e+00%)
Noelle:     Loop "  %177 = getelementptr inbounds i8*, i8** %3, i64 %175" (4.510670e+00%)
Noelle:  Function "h2v2_fancy_upsample"
Noelle:     Loop "  %13 = getelementptr inbounds i8*, i8** %2, i64 %11" (6.354359e+00%)
Noelle:     Loop "  %63 = getelementptr inbounds i8, i8* %62, i64 1" (3.175890e+00%)
Noelle:     Loop "  %142 = getelementptr inbounds i8, i8* %141, i64 1" (3.175890e+00%)
Noelle:  Function "decode_mcu_AC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %6, i64 0, i32 2, i32 1, i64 %36" (0.000000e+00%)
Noelle:     Loop "  %79 = icmp slt i32 %76, 8" (3.675738e+00%)
Noelle:  Function "jpeg_fill_bit_buffer"
Noelle:     Loop "  %18 = load i32, i32* %11, align 8, !tbaa !39" (1.157817e+00%)
Noelle:     Loop "  %47 = icmp eq i64 %46, 0" (5.137437e-03%)
Noelle:  Function "consume_data"
Noelle:     Loop "  %15 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %14" (3.925296e-04%)
Noelle:     Loop "  %52 = icmp ult i32 %50, %49" (1.533343e+00%)
Noelle:     Loop "  %54 = load i32, i32* %7, align 8, !tbaa !39" (1.533051e+00%)
Noelle:     Loop "  %60 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %58" (1.225522e+00%)
Noelle:     Loop "  %129 = add nsw i64 %127, %51" (0.000000e+00%)
Noelle:     Loop "  %135 = add i64 %134, %133" (0.000000e+00%)
Noelle:     Loop "  %158 = getelementptr inbounds [64 x i16], [64 x i16]* %156, i64 1" (0.000000e+00%)
Noelle:     Loop "  %101 = add nsw i64 %99, %51" (0.000000e+00%)
Noelle:     Loop "  %107 = add i64 %106, %105" (0.000000e+00%)
Noelle:     Loop "  %83 = sext i32 %82 to i64" (5.358748e-01%)
Noelle:     Loop "  %91 = getelementptr inbounds [64 x i16], [64 x i16]* %89, i64 1" (2.516282e-01%)
Noelle:  Function "decode_mcu_DC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %36" (0.000000e+00%)
Noelle:     Loop "  %72 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %69" (4.500428e-01%)
Noelle:  Function "decode_mcu_DC_refine"
Noelle:     Loop "  %36 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %6, i64 0, i32 2, i32 1, i64 %35" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %67" (1.335241e-01%)
Noelle:  Function "decompress_data"
Noelle:     Loop "  %14 = load i32, i32* %9, align 4, !tbaa !40" (1.204078e-05%)
Noelle:     Loop "  %39 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %38, i64 0, i32 12" (6.081082e-02%)
Noelle:     Loop "  %80 = icmp eq i32 %77, 0" (6.066026e-02%)
Noelle:     Loop "  %89 = getelementptr inbounds [64 x i16], [64 x i16]* %87, i64 0, i64 0" (6.057237e-02%)
Noelle:  Function "jpeg_huff_decode"
Noelle:     Loop "  %36 = shl i64 %33, 1" (1.155557e-02%)
Noelle:  Function "sep_upsample"
Noelle:     Loop "  %25 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %10, i64 0, i32 2, i64 %23" (5.967150e-04%)
Noelle:  Function "access_virt_barray"
Noelle:     Loop "  %80 = mul nsw i64 %77, %47" (0.000000e+00%)
Noelle:     Loop "  %162 = mul nsw i64 %159, %131" (0.000000e+00%)
Noelle:     Loop "  %226 = load [64 x i16]**, [64 x i16]*** %223, align 8, !tbaa !40" (5.418626e-05%)
Noelle:  Function "process_data_context_main"
Noelle:     Loop "  %74 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %73, i64 0, i32 3" (5.051122e-07%)
Noelle:     Loop "  %103 = load i64, i64* %99, align 8, !tbaa !47" (2.102359e-07%)
Noelle:     Loop "  %151 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %150, i64 0, i32 3" (6.061347e-07%)
Noelle:     Loop "  %177 = add nsw i64 %175, %168" (1.665505e-07%)
Noelle:  Function "jpeg_read_scanlines"
Noelle:  Function "jpeg_start_decompress"
Noelle:     Loop "  %23 = icmp eq %struct.jpeg_progress_mgr* %22, null" (2.413372e-04%)
Noelle:  Function "fill_input_buffer"
Noelle:  Function "put_pixel_rows"
Noelle:  Function "start_pass_phuff_decoder"
Noelle:     Loop "  %101 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %100" (2.097171e-05%)
Noelle:     Loop "  %125 = getelementptr inbounds [64 x i32], [64 x i32]* %105, i64 %106, i64 %124" (2.044749e-05%)
Noelle:     Loop "  %63 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %62" (6.498201e-07%)
Noelle:     Loop "  %74 = getelementptr inbounds [64 x i32], [64 x i32]* %67, i64 %68, i64 %73" (2.621123e-07%)
Noelle:     Loop "  %194 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %193" (6.968092e-05%)
Noelle:     Loop "  %166 = icmp eq i32 %164, 0" (2.626038e-05%)
Noelle:  Function "jpeg_make_d_derived_tbl"
Noelle:     Loop "  %24 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %21" (1.709737e-05%)
Noelle:     Loop "  %50 = add nsw <2 x i64> %47, <i64 8, i64 8>" (0.000000e+00%)
Noelle:     Loop "  %62 = add nsw <2 x i64> %59, <i64 1, i64 1>" (9.119324e-07%)
Noelle:     Loop "  %97 = sext i8 %93 to i32" (2.037104e-05%)
Noelle:     Loop "  %103 = add nsw i64 %101, 1" (1.110974e-05%)
Noelle:     Loop "  %124 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %122" (1.290084e-05%)
Noelle:     Loop "  %155 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %153" (4.358436e-05%)
Noelle:     Loop "  %262 = add nsw i64 %170, %259" (2.316417e-05%)
Noelle:     Loop "  %292 = add i64 %290, %268" (1.411038e-05%)
Noelle:     Loop "  %332 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %330" (0.000000e+00%)
Noelle:     Loop "  %188 = add nsw i64 %170, %185" (2.132393e-06%)
Noelle:     Loop "  %227 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %225" (0.000000e+00%)
Noelle:     Loop "  %241 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 1, i64 %239" (8.679740e-06%)
Noelle:     Loop "  %248 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %246" (5.728246e-06%)
Noelle:  Function "read_markers"
Noelle:     Loop "  %34 = icmp eq i32 %33, 0" (4.191613e-05%)
Noelle:     Loop "  %682 = icmp eq i64 %679, 0" (7.691358e-06%)
Noelle:     Loop "  %748 = icmp eq i64 %746, 0" (0.000000e+00%)
Noelle:     Loop "  %725 = icmp eq i64 %723, 0" (7.333684e-06%)
Noelle:     Loop "  %406 = icmp eq i64 %403, 0" (0.000000e+00%)
Noelle:     Loop "  %516 = icmp eq i64 %514, 0" (2.741804e-05%)
Noelle:     Loop "  %540 = icmp eq i64 %537, 0" (8.709773e-06%)
Noelle:     Loop "  %597 = icmp eq i64 %595, 0" (1.590967e-05%)
Noelle:     Loop "  br i1 %221, label %224, label %.loopexit._crit_edge.._crit_edge204_crit_edge, !prof !80" (2.703033e-06%)
Noelle:     Loop "  %254 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %252, i64 0, i32 0" (5.897527e-07%)
Noelle:  Function "realize_virt_arrays"
Noelle:     Loop "  %11 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %8, i64 0, i32 0" (0.000000e+00%)
Noelle:     Loop "  %41 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %38, i64 0, i32 0" (2.429999e-07%)
Noelle:     Loop "  %92 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %91, i64 0, i32 0" (4.980134e-06%)
Noelle:     Loop "  %143 = sub i32 %119, %141" (0.000000e+00%)
Noelle:     Loop "  %191 = add i32 %189, 1" (0.000000e+00%)
Noelle:     Loop "  %206 = add i32 %205, 1" (0.000000e+00%)
Noelle:     Loop "  %234 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %233, i64 0, i32 0" (3.387255e-05%)
Noelle:     Loop "  %288 = sub i32 %262, %286" (3.303707e-05%)
Noelle:     Loop "  %332 = add i32 %330, 1" (1.228651e-07%)
Noelle:     Loop "  %347 = add i32 %346, 1" (3.242821e-05%)
Noelle:  Function "jinit_master_decompress"
Noelle:  Function "fullsize_upsample"
Noelle:  Function "jinit_color_deconverter"
Noelle:     Loop "  %187 = mul nsw i64 %186, 91881" (0.000000e+00%)
Noelle:     Loop "  %124 = mul nsw i64 %123, 91881" (1.817039e-05%)
Noelle:     Loop "  %72 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 %70, i32 12" (0.000000e+00%)
Noelle:     Loop "  %231 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 %229, i32 12" (0.000000e+00%)
Noelle:  Function "parse_switches"
Noelle:     Loop "  %27 = sext i32 %26 to i64" (1.162577e-05%)
Noelle:  Function "keymatch"
Noelle:     Loop "  %10 = getelementptr inbounds i8, i8* %7, i64 1" (8.283841e-06%)
Noelle:  Function "jzero_far"
Noelle:  Function "alloc_small"
Noelle:     Loop "  %35 = getelementptr inbounds %union.small_pool_struct, %union.small_pool_struct* %34, i64 0, i32 0, i32 2" (8.655167e-07%)
Noelle:     Loop "  %59 = lshr i64 %58, 1" (0.000000e+00%)
Noelle:  Function "consume_markers"
Noelle:     Loop "  %76 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %74, i64 0, i32 2" (2.593820e-07%)
Noelle:     Loop "  %127 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %125, i64 0, i32 9" (4.040898e-07%)
Noelle:  Function "start_input_pass"
Noelle:     Loop "  %72 = getelementptr inbounds %struct.jpeg_decompress_struct.261, %struct.jpeg_decompress_struct.261* %0, i64 0, i32 63, i64 %71" (1.212269e-06%)
Noelle:     Loop "  %112 = load i32, i32* %64, align 8, !tbaa !55" (1.092135e-07%)
Noelle:     Loop "  %122 = load i32, i32* %64, align 8, !tbaa !55" (1.528988e-07%)
Noelle:     Loop "  %153 = getelementptr inbounds %struct.jpeg_decompress_struct.261, %struct.jpeg_decompress_struct.261* %0, i64 0, i32 63, i64 %152" (7.180785e-07%)
Noelle:  Function "alloc_sarray"
Noelle:     Loop "  %29 = sub i32 %3, %27" (1.870280e-06%)
Noelle:     Loop "  %43 = add i32 %41, 1" (2.511910e-07%)
Noelle:     Loop "  %58 = add i32 %57, 1" (6.552808e-07%)
Noelle:  Function "next_marker"
Noelle:     Loop "  %13 = icmp eq i64 %12, 0" (1.670966e-06%)
Noelle:     Loop "  %29 = load %struct.jpeg_marker_reader.278*, %struct.jpeg_marker_reader.278** %9, align 8, !tbaa !47" (0.000000e+00%)
Noelle:     Loop "  %51 = icmp eq i64 %50, 0" (5.569886e-07%)
Noelle:  Function "start_pass_main"
Noelle:     Loop "  %28 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %27, i64 0, i32 3" (1.995876e-06%)
Noelle:     Loop "  %92 = getelementptr inbounds i8*, i8** %41, i64 %90" (4.723482e-07%)
Noelle:     Loop "  %54 = getelementptr inbounds i8*, i8** %41, i64 %52" (1.692809e-07%)
Noelle:     Loop "  %270 = getelementptr inbounds i8*, i8** %41, i64 %269" (0.000000e+00%)
Noelle:     Loop "  %195 = add nsw i64 %193, %148" (0.000000e+00%)
Noelle:     Loop "  %312 = add nsw i64 %311, %148" (2.020449e-07%)
Noelle:     Loop "  %328 = load i64, i64* %303, align 8, !tbaa !53" (0.000000e+00%)
Noelle:     Loop "  %354 = load i64, i64* %303, align 8, !tbaa !53" (1.228651e-07%)
Noelle:  Function "emit_message"
Noelle:  Function "start_pass"
Noelle:     Loop "  %18 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %15, i64 0, i32 9" (1.316022e-06%)
Noelle:     Loop "  %186 = getelementptr inbounds [8 x double], [8 x double]* @start_pass.aanscalefactor, i64 0, i64 %185" (0.000000e+00%)
Noelle:     Loop "  %155 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %50, i64 0, i32 0, i64 %154" (0.000000e+00%)
Noelle:  Function "jpeg_calc_output_dimensions"
Noelle:     Loop "  %113 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 0, i32 9" (1.419775e-07%)
Noelle:     Loop "  %85 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %83, i64 0, i32 3" (0.000000e+00%)
Noelle:     Loop "  %89 = shl i32 %88, 1" (0.000000e+00%)
Noelle:     Loop "  %118 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %116, i64 0, i32 2" (5.406066e-07%)
Noelle:  Function "get_sof"
Noelle:     Loop "  %217 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %216, i64 0, i32 1" (5.460673e-07%)
Noelle:  Function "free_pool"
Noelle:     Loop "  %22 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %21, i64 0, i32 10" (0.000000e+00%)
Noelle:     Loop "  %36 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %35, i64 0, i32 10" (8.737077e-08%)
Noelle:     Loop "  %54 = bitcast %union.large_pool_struct* %53 to i8*" (3.931685e-07%)
Noelle:     Loop "  %73 = bitcast %union.small_pool_struct* %72 to i8*" (2.429999e-07%)
Noelle:  Function "get_app0"
Noelle:     Loop "  %47 = icmp eq i64 %45, 0" (6.470897e-07%)
Noelle:  Function "start_output_pass"
Noelle:     Loop "  %48 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 0, i32 19" (6.197864e-07%)
Noelle:  Function "jinit_write_ppm"
Noelle:  Function "self_destruct"
Noelle:  Function "jinit_d_main_controller"
Noelle:     Loop "  %65 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %64, i64 0, i32 3" (2.839550e-07%)
Noelle:     Loop "  %112 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 0, i32 3" (2.129662e-07%)
Noelle:  Function "start_input_pass.105"
Noelle:  Function "request_virt_barray"
Noelle:  Function "jinit_upsampler"
Noelle:     Loop "  %53 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %52, i64 0, i32 2" (6.354552e+00%)
Noelle:  Function "alloc_large"
Noelle:  Function "jpeg_CreateDecompress"
Noelle:  Function "jinit_d_coef_controller"
Noelle:     Loop "  %29 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %28, i64 0, i32 3" (3.549437e-07%)
Noelle:  Function "jdiv_round_up"
Noelle:  Function "jinit_marker_reader"
Noelle:  Function "jpeg_read_header"
Noelle:  Function "jinit_inverse_dct"
Noelle:     Loop "  %21 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (1.447078e-07%)
Noelle:  Function "jpeg_consume_input"
Noelle:  Function "prepare_for_output_pass"
Noelle:  Function "jinit_memory_mgr"
Noelle:  Function "jinit_phuff_decoder"
Noelle:     Loop "  %29 = bitcast i32* %28 to i8*" (7.917976e-08%)
Noelle:  Function "jpeg_finish_decompress"
Noelle:     Loop "  %37 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %36, align 8, !tbaa !53" (1.365168e-08%)
Noelle:  Function "finish_input_pass"
Noelle:  Function "jpeg_alloc_huff_table"
Noelle:  Function "jround_up"
Noelle:  Function "jpeg_stdio_src"
Noelle:  Function "output_pass_setup"
Noelle:     Loop "  %25 = load i32, i32* %18, align 4, !tbaa !47" (0.000000e+00%)
Noelle:  Function "jinit_input_controller"
Noelle:  Function "start_pass_dpost"
Noelle:  Function "reset_input_controller"
Noelle:  Function "jpeg_std_error"
Noelle:  Function "jinit_d_post_controller"
Noelle:  Function "jpeg_alloc_quant_table"
Noelle:  Function "start_output_ppm"
Noelle:  Function "jpeg_destroy_decompress"
Noelle:  Function "jpeg_get_large"
Noelle:  Function "jpeg_free_large"
Noelle:  Function "reset_marker_reader"
Noelle:  Function "jpeg_destroy"
Noelle:  Function "finish_output_pass"
Noelle:  Function "jpeg_free_small"
Noelle:  Function "start_pass_upsample"
Noelle:  Function "jpeg_abort"
Noelle:  Function "jpeg_get_small"
Noelle:  Function "finish_output_ppm"
Noelle:  Function "jpeg_set_marker_processor"
Noelle:  Function "reset_error_mgr"
Noelle:  Function "init_source"
Noelle:  Function "start_pass_dcolor"
Noelle:  Function "term_source"
Noelle:  Function "jpeg_mem_available"
Noelle:  Function "read_restart_marker"
Noelle:  Function "skip_variable"
Noelle:  Function "jcopy_sample_rows"
Noelle:     Loop "  %29 = getelementptr inbounds i8*, i8** %27, i64 1" (0.000000e+00%)
Noelle:  Function "get_app14"
Noelle:     Loop "  %47 = icmp eq i64 %45, 0" (0.000000e+00%)
Noelle:  Function "jcopy_block_row"
Noelle:  Function "error_exit"
Noelle:  Function "output_message"
Noelle:  Function "format_message"
Noelle:     Loop "  %41 = getelementptr inbounds i8, i8* %40, i64 1" (0.000000e+00%)
Noelle:  Function "jpeg_resync_to_restart"
Noelle:     Loop "  %29 = icmp slt i32 %28, 192" (0.000000e+00%)
Noelle:  Function "jpeg_mem_init"
Noelle:  Function "jpeg_mem_term"
Noelle:  Function "prescan_quantize"
Noelle:     Loop "  %17 = getelementptr inbounds i8*, i8** %1, i64 %16" (0.000000e+00%)
Noelle:     Loop "  %21 = load i8, i8* %19, align 1, !tbaa !43" (0.000000e+00%)
Noelle:  Function "access_virt_sarray"
Noelle:     Loop "  %79 = mul nsw i64 %76, %46" (0.000000e+00%)
Noelle:     Loop "  %159 = mul nsw i64 %156, %128" (0.000000e+00%)
Noelle:     Loop "  %221 = load i8**, i8*** %218, align 8, !tbaa !38" (0.000000e+00%)
Noelle:  Function "jpeg_open_backing_store"
Noelle:  Function "process_data_simple_main"
Noelle:  Function "process_data_crank_post"
Noelle:  Function "request_virt_sarray"
Noelle:  Function "alloc_barray"
Noelle:     Loop "  %31 = sub i32 %3, %29" (0.000000e+00%)
Noelle:     Loop "  %46 = add i32 %44, 1" (0.000000e+00%)
Noelle:     Loop "  %61 = add i32 %60, 1" (0.000000e+00%)
Noelle:  Function "start_pass_huff_decoder"
Noelle:     Loop "  %33 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 63, i64 %32" (2.730336e-08%)
Noelle:  Function "dummy_consume_data"
Noelle:  Function "jpeg_idct_ifast"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8" (0.000000e+00%)
Noelle:     Loop "  %151 = getelementptr inbounds i8*, i8** %3, i64 %149" (0.000000e+00%)
Noelle:  Function "jpeg_idct_float"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8" (0.000000e+00%)
Noelle:     Loop "  %132 = getelementptr inbounds i8*, i8** %3, i64 %130" (0.000000e+00%)
Noelle:  Function "h2v1_merged_upsample"
Noelle:     Loop "  %40 = getelementptr inbounds i8, i8* %37, i64 1" (0.000000e+00%)
Noelle:  Function "finish_pass1"
Noelle:     Loop "  %32 = add nuw i64 %29, 1" (0.000000e+00%)
Noelle:     Loop "  %50 = getelementptr inbounds %struct.box, %struct.box* %48, i64 0, i32 7" (0.000000e+00%)
Noelle:     Loop "  %68 = getelementptr inbounds %struct.box, %struct.box* %66, i64 0, i32 6" (0.000000e+00%)
Noelle:     Loop "  %103 = getelementptr inbounds %struct.box, %struct.box* %101, i64 0, i32 6" (0.000000e+00%)
Noelle:     Loop "  %181 = load %struct.my_cquantizer.611*, %struct.my_cquantizer.611** %3, align 8, !tbaa !30" (0.000000e+00%)
Noelle:     Loop "  %211 = getelementptr inbounds [32 x i16]*, [32 x i16]** %183, i64 %206" (0.000000e+00%)
Noelle:     Loop "  %222 = getelementptr inbounds [32 x i16], [32 x i16]* %212, i64 %217, i64 %199" (0.000000e+00%)
Noelle:     Loop "  %233 = getelementptr inbounds i16, i16* %232, i64 1" (0.000000e+00%)
Noelle:  Function "pass2_fs_dither"
Noelle:     Loop "  %48 = getelementptr inbounds i8*, i8** %1, i64 %47" (0.000000e+00%)
Noelle:     Loop "  %86 = getelementptr inbounds i16, i16* %83, i64 %68" (0.000000e+00%)
Noelle:     Loop "  %40 = icmp eq i32 %38, 0" (0.000000e+00%)
Noelle:  Function "jinit_huff_decoder"
Noelle:  Function "pass2_no_dither"
Noelle:     Loop "  %17 = getelementptr inbounds i8*, i8** %2, i64 %16" (0.000000e+00%)
Noelle:     Loop "  %24 = getelementptr inbounds i8, i8* %21, i64 1" (0.000000e+00%)
Noelle:  Function "finish_pass2"
Noelle:  Function "fill_inverse_cmap"
Noelle:     Loop "  %49 = getelementptr inbounds i8, i8* %41, i64 %47" (0.000000e+00%)
Noelle:     Loop "  %179 = getelementptr inbounds [256 x i64], [256 x i64]* %6, i64 0, i64 %176" (0.000000e+00%)
Noelle:     Loop "  %340 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %339" (0.000000e+00%)
Noelle:     Loop "  %382 = load i64, i64* %380, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %599 = load i64, i64* %597, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %634 = load i64, i64* %632, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %669 = load i64, i64* %667, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %428 = add nuw nsw i64 %426, %418" (0.000000e+00%)
Noelle:  Function "update_box"
Noelle:     Loop "  %30 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %29" (0.000000e+00%)
Noelle:     Loop "  %33 = getelementptr inbounds [32 x i16], [32 x i16]* %31, i64 %32, i64 %23" (0.000000e+00%)
Noelle:     Loop "  %36 = load i16, i16* %34, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %57 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %56" (0.000000e+00%)
Noelle:     Loop "  %60 = getelementptr inbounds [32 x i16], [32 x i16]* %58, i64 %59, i64 %50" (0.000000e+00%)
Noelle:     Loop "  %63 = load i16, i16* %61, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader18" (0.000000e+00%)
Noelle:     Loop "  %86 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %85" (0.000000e+00%)
Noelle:     Loop "  %91 = load i16, i16* %89, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader14" (0.000000e+00%)
Noelle:     Loop "  %112 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %111" (0.000000e+00%)
Noelle:     Loop "  %117 = load i16, i16* %115, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader10" (0.000000e+00%)
Noelle:     Loop "  %139 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %138" (0.000000e+00%)
Noelle:     Loop "  %144 = load i16, i16* %142, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader6" (0.000000e+00%)
Noelle:     Loop "  %165 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %164" (0.000000e+00%)
Noelle:     Loop "  %170 = load i16, i16* %168, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %248 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %246" (0.000000e+00%)
Noelle:     Loop "  %254 = load i16, i16* %252, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %263 = getelementptr inbounds [32 x i16], [32 x i16]* %249, i64 %261, i64 %199" (0.000000e+00%)
Noelle:     Loop "  %267 = load i16, i16* %265, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %283 = load i16, i16* %281, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %215 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %213" (0.000000e+00%)
Noelle:     Loop "  %219 = getelementptr inbounds [32 x i16], [32 x i16]* %216, i64 %217, i64 %199" (0.000000e+00%)
Noelle:     Loop "  %223 = load i16, i16* %221, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %235 = load i16, i16* %233, align 2, !tbaa !50" (0.000000e+00%)
Noelle:  Function "jinit_merged_upsampler"
Noelle:     Loop "  %75 = mul nsw i64 %74, 91881" (0.000000e+00%)
Noelle:  Function "start_pass_merged_upsample"
Noelle:  Function "merged_2v_upsample"
Noelle:  Function "h2v2_merged_upsample"
Noelle:     Loop "  %50 = getelementptr inbounds i8, i8* %45, i64 1" (0.000000e+00%)
Noelle:  Function "merged_1v_upsample"
Noelle:  Function "jpeg_idct_4x4"
Noelle:     Loop "  %21 = icmp eq i32 %17, 4" (0.000000e+00%)
Noelle:     Loop "  %132 = getelementptr inbounds i8*, i8** %3, i64 %130" (0.000000e+00%)
Noelle:  Function "quantize_fs_dither"
Noelle:     Loop "  %124 = getelementptr inbounds i8*, i8** %2, i64 %123" (0.000000e+00%)
Noelle:     Loop "  %32 = getelementptr inbounds i8*, i8** %2, i64 %31" (0.000000e+00%)
Noelle:     Loop "  %36 = load i8*, i8** %34, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds i16, i16* %67, i64 %54" (0.000000e+00%)
Noelle:     Loop "  %108 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %7, i64 0, i32 8, i64 %107" (0.000000e+00%)
Noelle:     Loop "  %119 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %7, i64 0, i32 8, i64 %118" (0.000000e+00%)
Noelle:  Function "jinit_2pass_quantizer"
Noelle:     Loop "  %34 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (0.000000e+00%)
Noelle:  Function "start_pass_2_quant"
Noelle:     Loop "  %80 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %79" (0.000000e+00%)
Noelle:  Function "new_color_map_2_quant"
Noelle:  Function "init_error_limit"
Noelle:     Loop "  %37 = getelementptr inbounds i32, i32* %12, i64 %35" (0.000000e+00%)
Noelle:     Loop "  %49 = getelementptr inbounds i32, i32* %12, i64 %48" (0.000000e+00%)
Noelle:  Function "quantize_ord_dither"
Noelle:     Loop "  %25 = getelementptr inbounds i8*, i8** %2, i64 %24" (0.000000e+00%)
Noelle:     Loop "  %79 = load i8*, i8** %25, align 8, !tbaa !40" (0.000000e+00%)
Noelle:     Loop "  %100 = load i8**, i8*** %17, align 8, !tbaa !44" (0.000000e+00%)
Noelle:     Loop "  %112 = load i8, i8* %108, align 1, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %32 = load i8**, i8*** %17, align 8, !tbaa !44" (0.000000e+00%)
Noelle:     Loop "  %44 = load i8, i8* %40, align 1, !tbaa !45" (0.000000e+00%)
Noelle:  Function "jpeg_idct_2x2"
Noelle:     Loop "  %Pivot6 = icmp ult i32 %32, 4" (0.000000e+00%)
Noelle:  Function "jpeg_idct_1x1"
Noelle:  Function "noop_upsample"
Noelle:  Function "h2v1_fancy_upsample"
Noelle:     Loop "  %12 = getelementptr inbounds i8*, i8** %2, i64 %11" (0.000000e+00%)
Noelle:     Loop "  %48 = shl i64 %47, 1" (0.000000e+00%)
Noelle:     Loop "  %121 = getelementptr inbounds i8, i8* %120, i64 1" (0.000000e+00%)
Noelle:  Function "h2v1_upsample"
Noelle:     Loop "  %13 = getelementptr inbounds i8*, i8** %5, i64 %12" (0.000000e+00%)
Noelle:     Loop "  %24 = getelementptr inbounds i8, i8* %22, i64 1" (0.000000e+00%)
Noelle:  Function "h2v2_upsample"
Noelle:     Loop "  %14 = getelementptr inbounds i8*, i8** %5, i64 %12" (0.000000e+00%)
Noelle:     Loop "  %25 = getelementptr inbounds i8, i8* %23, i64 1" (0.000000e+00%)
Noelle:  Function "int_upsample"
Noelle:     Loop "  %92 = getelementptr inbounds i8*, i8** %8, i64 %90" (0.000000e+00%)
Noelle:     Loop "  %102 = load i8, i8* %100, align 1, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %61 = getelementptr inbounds i8*, i8** %8, i64 %59" (0.000000e+00%)
Noelle:     Loop "  %71 = getelementptr inbounds i8, i8* %69, i64 1" (0.000000e+00%)
Noelle:     Loop "  %85 = icmp eq i32 %.pre, 0" (0.000000e+00%)
Noelle:     Loop "  %32 = load i32, i32* %22, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  br label %.loopexit.us.us" (0.000000e+00%)
Noelle:  Function "grayscale_convert"
Noelle:  Function "start_output_tga"
Noelle:     Loop "  %114 = load i8**, i8*** %111, align 8, !tbaa !53" (0.000000e+00%)
Noelle:  Function "null_convert"
Noelle:     Loop "  %24 = add nsw i32 %21, -1" (0.000000e+00%)
Noelle:     Loop "  %83 = getelementptr inbounds i8**, i8*** %1, i64 %82" (0.000000e+00%)
Noelle:     Loop "  %92 = getelementptr inbounds i8, i8* %90, i64 1" (0.000000e+00%)
Noelle:     Loop "  %100 = getelementptr inbounds i8, i8* %99, i64 1" (0.000000e+00%)
Noelle:     Loop "  %28 = getelementptr inbounds i8**, i8*** %1, i64 %27" (0.000000e+00%)
Noelle:     Loop "  %37 = getelementptr inbounds i8, i8* %35, i64 1" (0.000000e+00%)
Noelle:     Loop "  %45 = getelementptr inbounds i8**, i8*** %1, i64 %44" (0.000000e+00%)
Noelle:     Loop "  %54 = getelementptr inbounds i8, i8* %53, i64 1" (0.000000e+00%)
Noelle:  Function "COM_handler"
Noelle:     Loop "  %115 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %7, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %65 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %7, align 8, !tbaa !41" (0.000000e+00%)
Noelle:  Function "usage"
Noelle:  Function "copy_pixel_rows"
Noelle:     Loop "  %40 = getelementptr i8, i8* %14, i64 %38" (0.000000e+00%)
Noelle:     Loop "  %90 = getelementptr i8, i8* %14, i64 %88" (0.000000e+00%)
Noelle:     Loop "  %112 = getelementptr inbounds i8, i8* %109, i64 1" (0.000000e+00%)
Noelle:     Loop "  %125 = getelementptr inbounds i8, i8* %123, i64 1" (0.000000e+00%)
Noelle:  Function "put_demapped_gray"
Noelle:     Loop "  %23 = getelementptr inbounds i8, i8* %21, i64 1" (0.000000e+00%)
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %38, i64 1" (0.000000e+00%)
Noelle:  Function "put_demapped_rgb"
Noelle:     Loop "  %44 = getelementptr inbounds i8, i8* %43, i64 1" (0.000000e+00%)
Noelle:  Function "ycck_cmyk_convert"
Noelle:     Loop "  %35 = load i8**, i8*** %1, align 8, !tbaa !46" (0.000000e+00%)
Noelle:     Loop "  %51 = getelementptr inbounds i8, i8* %38, i64 %49" (0.000000e+00%)
Noelle:  Function "jinit_1pass_quantizer"
Noelle:     Loop "  %78 = add nuw i64 %77, 1" (0.000000e+00%)
Noelle:     Loop "  %81 = mul nsw i64 %79, %78" (0.000000e+00%)
Noelle:     Loop "  %93 = mul nsw i64 %91, %78" (0.000000e+00%)
Noelle:     Loop "  %55 = add nuw i64 %54, 1" (0.000000e+00%)
Noelle:     Loop "  %58 = mul nsw i64 %56, %55" (0.000000e+00%)
Noelle:     Loop "  %70 = add nuw i64 %69, 1" (0.000000e+00%)
Noelle:     Loop "  %74 = mul nsw i64 %72, %70" (0.000000e+00%)
Noelle:     Loop "  %130 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %126" (0.000000e+00%)
Noelle:     Loop "  %170 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %166" (0.000000e+00%)
Noelle:     Loop "  %235 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %233" (0.000000e+00%)
Noelle:     Loop "  br label %._crit_edge132" (0.000000e+00%)
Noelle:     Loop "  %sext = shl i64 %214, 32" (0.000000e+00%)
Noelle:     Loop "  br label %._crit_edge133.us" (0.000000e+00%)
Noelle:     Loop "  %195 = getelementptr inbounds [3 x i32], [3 x i32]* @select_ncolors.RGB_order, i64 0, i64 %192" (0.000000e+00%)
Noelle:     Loop "  %276 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %274" (0.000000e+00%)
Noelle:     Loop "  %297 = trunc i64 %295 to i32" (0.000000e+00%)
Noelle:     Loop "  %349 = add i64 %348, %287" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader3.us" (0.000000e+00%)
Noelle:     Loop "  %320 = load i8*, i8** %286, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %340 = load i8*, i8** %286, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  br i1 %294, label %.split.us.us..loopexit2.us.us_crit_edge, label %.preheader1.us.preheader.us" (0.000000e+00%)
Noelle:     Loop "  %309 = load i8*, i8** %286, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %375 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (0.000000e+00%)
Noelle:     Loop "  br label %.loopexit15.us.us.us" (0.000000e+00%)
Noelle:  Function "start_pass_1_quant"
Noelle:     Loop "  %115 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %112, align 8, !tbaa !51" (0.000000e+00%)
Noelle:     Loop "  %134 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 8, i64 %133" (0.000000e+00%)
Noelle:     Loop "  %45 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %37, i64 0, i32 5, i64 %44" (0.000000e+00%)
Noelle:     Loop "  %51 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %37, i64 0, i32 5, i64 %50" (0.000000e+00%)
Noelle:     Loop "  br label %._crit_edge27" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @base_dither_matrix, i64 0, i64 %68, i64 %69" (0.000000e+00%)
Noelle:  Function "finish_pass_1_quant"
Noelle:  Function "new_color_map_1_quant"
Noelle:  Function "create_colorindex"
Noelle:     Loop "  %98 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 5, i64 %96" (0.000000e+00%)
Noelle:     Loop "  %113 = sext i32 %112 to i64" (0.000000e+00%)
Noelle:     Loop "  %118 = add i64 %117, 1" (0.000000e+00%)
Noelle:     Loop "  %28 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 5, i64 %26" (0.000000e+00%)
Noelle:     Loop "  %47 = sext i32 %46 to i64" (0.000000e+00%)
Noelle:     Loop "  %52 = add i64 %51, 1" (0.000000e+00%)
Noelle:     Loop "  %76 = load i8, i8* %36, align 1, !tbaa !51" (0.000000e+00%)
Noelle:  Function "color_quantize3"
Noelle:     Loop "  %97 = getelementptr inbounds i8*, i8** %2, i64 %96" (0.000000e+00%)
Noelle:     Loop "  %122 = getelementptr inbounds i8, i8* %119, i64 1" (0.000000e+00%)
Noelle:     Loop "  %26 = getelementptr inbounds i8*, i8** %2, i64 %25" (0.000000e+00%)
Noelle:     Loop "  %49 = getelementptr inbounds i8*, i8** %1, i64 %48" (0.000000e+00%)
Noelle:     Loop "  %56 = getelementptr inbounds i8, i8* %53, i64 1" (0.000000e+00%)
Noelle:  Function "color_quantize"
Noelle:     Loop "  %29 = getelementptr inbounds i8*, i8** %2, i64 %28" (0.000000e+00%)
Noelle:     Loop "  %131 = getelementptr inbounds i8, i8* %130, i64 1" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader1.us" (0.000000e+00%)
Noelle:     Loop "  %65 = getelementptr inbounds i8*, i8** %9, i64 %61" (0.000000e+00%)
Noelle:     Loop "  %111 = getelementptr inbounds i8*, i8** %9, i64 %107" (0.000000e+00%)
Noelle:     Loop "  br i1 %27, label %.loopexit.us._crit_edge.us..loopexit.us.us_crit_edge, label %.preheader.us.preheader.us" (0.000000e+00%)
Noelle:     Loop "  %40 = getelementptr inbounds i8*, i8** %9, i64 %36" (0.000000e+00%)
Noelle:  Function "quantize3_ord_dither"
Noelle:     Loop "  %34 = load [16 x i32]*, [16 x i32]** %20, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %46 = getelementptr inbounds i8, i8* %42, i64 1" (0.000000e+00%)
Noelle:     Loop "  %28 = add nsw i32 %26, 1" (0.000000e+00%)
Noelle:  Function "jpeg_start_output"
Noelle:  Function "read_pbm_integer"
Noelle:     Loop "  %4 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %6 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %31 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %33 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:  Function "read_stdin"
Noelle:  Function "decode_mcu"
Noelle:     Loop "  %35 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %7, i64 0, i32 2, i32 0, i64 %34" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %67" (8.210122e-05%)
Noelle:     Loop "  %97 = icmp eq i32 %92, 0" (0.000000e+00%)
Noelle:     Loop "  %123 = icmp eq i64 %122, 0" (0.000000e+00%)
Noelle:     Loop "  %214 = icmp eq i32 %209, 0" (0.000000e+00%)
Noelle:     Loop "  %240 = icmp eq i64 %239, 0" (0.000000e+00%)
Noelle:     Loop "  %327 = icmp slt i32 %326, 8" (0.000000e+00%)
Noelle:     Loop "  %337 = icmp eq i32 %332, 0" (0.000000e+00%)
Noelle:     Loop "  %363 = icmp eq i64 %362, 0" (0.000000e+00%)
Noelle:     Loop "  %457 = icmp eq i32 %452, 0" (0.000000e+00%)
Noelle:     Loop "  %483 = icmp eq i64 %482, 0" (0.000000e+00%)
Noelle:     Loop "  %572 = icmp slt i32 %571, 8" (0.000000e+00%)
Noelle:     Loop "  %582 = icmp eq i32 %577, 0" (0.000000e+00%)
Noelle:     Loop "  %608 = icmp eq i64 %607, 0" (0.000000e+00%)
Noelle:     Loop "  %701 = icmp eq i32 %696, 0" (0.000000e+00%)
Noelle:     Loop "  %727 = icmp eq i64 %726, 0" (0.000000e+00%)
Noelle:  Function "write_stdout"
Noelle:  Function "jpeg_abort_decompress"
Noelle:  Function "jpeg_input_complete"
Noelle:  Function "jpeg_has_multiple_scans"
Noelle:  Function "jpeg_read_raw_data"
Noelle:  Function "read_color_map"
Noelle:     Loop "  br label %.preheader13" (0.000000e+00%)
Noelle:     Loop "  %196 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %198 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %202 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %206 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %229 = getelementptr inbounds i8, i8* %219, i64 %228" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader3" (0.000000e+00%)
Noelle:     Loop "  %142 = tail call fastcc i32 @read_pbm_integer(%struct.jpeg_decompress_struct* %0, %struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %156 = getelementptr inbounds i8, i8* %146, i64 %155" (0.000000e+00%)
Noelle:     Loop "  %16 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %51 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %75 = getelementptr inbounds i8, i8* %65, i64 %74" (0.000000e+00%)
Noelle:  Function "jpeg_finish_output"
Noelle:     Loop "  %28 = load i32, i32* %25, align 4, !tbaa !48" (0.000000e+00%)
Noelle:  Function "decompress_onepass"
Noelle:     Loop "  %31 = icmp ugt i32 %29, %8" (0.000000e+00%)
Noelle:     Loop "  %33 = load i8*, i8** %21, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %132 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %130" (0.000000e+00%)
Noelle:     Loop "  %173 = load i32, i32* %26, align 8, !tbaa !59" (0.000000e+00%)
Noelle:     Loop "  %182 = add nsw i64 %180, %179" (0.000000e+00%)
Noelle:     Loop "  %51 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %49" (0.000000e+00%)
Noelle:     Loop "  %83 = load i32, i32* %26, align 8, !tbaa !59" (0.000000e+00%)
Noelle:     Loop "  %92 = add nsw i64 %90, %89" (0.000000e+00%)
Noelle:  Function "decompress_smooth_data"
Noelle:     Loop "  %17 = load i32, i32* %11, align 4, !tbaa !39" (0.000000e+00%)
Noelle:     Loop "  %57 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %56, i64 0, i32 12" (0.000000e+00%)
Noelle:     Loop "  %163 = getelementptr inbounds [64 x i16]*, [64 x i16]** %104, i64 %161" (0.000000e+00%)
Noelle:     Loop "  call void @jcopy_block_row([64 x i16]* nonnull %197, [64 x i16]* nonnull %3, i32 1) #18" (0.000000e+00%)
Noelle:  Function "post_process_1pass"
Noelle:  Function "post_process_prepass"
Noelle:  Function "post_process_2pass"
Noelle:  Function "skip_input_data"
Noelle:     Loop "  %18 = sub nsw i64 %17, %16" (0.000000e+00%)
Noelle:  Function "jpeg_new_colormap"
Noelle:  Function "finish_output_tga"
Noelle:  Function "jinit_write_gif"
Noelle:  Function "start_output_gif"
Noelle:  Function "put_pixel_rows.52"
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %38, i64 1" (0.000000e+00%)
Noelle:     Loop "  %74 = sub nsw i32 %73, %72" (0.000000e+00%)
Noelle:     Loop "  %100 = trunc i64 %99 to i8" (0.000000e+00%)
Noelle:     Loop "  %165 = trunc i64 %164 to i8" (0.000000e+00%)
Noelle:  Function "finish_output_gif"
Noelle:     Loop "  %42 = trunc i64 %41 to i8" (0.000000e+00%)
Noelle:     Loop "  %113 = trunc i64 %112 to i8" (0.000000e+00%)
Noelle:  Function "emit_header"
Noelle:     Loop "  %22 = shl i32 1, %21" (0.000000e+00%)
Noelle:     Loop "  %104 = icmp slt i64 %103, %78" (0.000000e+00%)
Noelle:     Loop "  %81 = icmp slt i64 %80, %78" (0.000000e+00%)
Noelle:     Loop "  %218 = trunc i64 %217 to i8" (0.000000e+00%)
Noelle:  Function "jinit_write_targa"
Noelle:  Function "put_demapped_gray.55"
Noelle:     Loop "  %23 = getelementptr inbounds i8, i8* %20, i64 1" (0.000000e+00%)
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %37, i64 1" (0.000000e+00%)
Noelle:  Function "put_gray_rows"
Noelle:     Loop "  %39 = getelementptr i8, i8* %6, i64 %37" (0.000000e+00%)
Noelle:     Loop "  %89 = getelementptr i8, i8* %6, i64 %87" (0.000000e+00%)
Noelle:     Loop "  %111 = getelementptr inbounds i8, i8* %109, i64 1" (0.000000e+00%)
Noelle:     Loop "  %124 = getelementptr inbounds i8, i8* %123, i64 1" (0.000000e+00%)
Noelle:  Function "put_pixel_rows.56"
Noelle:     Loop "  %34 = getelementptr inbounds i8, i8* %33, i64 2" (0.000000e+00%)
Noelle:  Function "jinit_write_bmp"
Noelle:  Function "start_output_bmp"
Noelle:  Function "finish_output_bmp"
Noelle:     Loop "  %272 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %241, align 8, !tbaa !61" (0.000000e+00%)
Noelle:     Loop "  %284 = load i8, i8* %282, align 1, !tbaa !46" (0.000000e+00%)
Noelle:     Loop "  %247 = sub i32 %245, %246" (0.000000e+00%)
Noelle:     Loop "  %263 = load i8, i8* %261, align 1, !tbaa !46" (0.000000e+00%)
Noelle:  Function "put_gray_rows.59"
Noelle:     Loop "  %51 = getelementptr i8, i8* %18, i64 %49" (0.000000e+00%)
Noelle:     Loop "  %101 = getelementptr i8, i8* %18, i64 %99" (0.000000e+00%)
Noelle:     Loop "  %123 = getelementptr inbounds i8, i8* %121, i64 1" (0.000000e+00%)
Noelle:     Loop "  %137 = getelementptr inbounds i8, i8* %136, i64 1" (0.000000e+00%)
Noelle:  Function "put_pixel_rows.60"
Noelle:     Loop "  %47 = getelementptr inbounds i8, i8* %46, i64 1" (0.000000e+00%)
Noelle:  Function "write_colormap"
Noelle:     Loop "  %93 = load i8*, i8** %6, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %31 = load i8*, i8** %6, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %75 = load i8*, i8** %51, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %56 = load i8*, i8** %51, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %111 = tail call i32 @putc(i32 %110, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %15 = tail call i32 @putc(i32 %14, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %138 = tail call i32 @putc(i32 0, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %131 = tail call i32 @putc(i32 0, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:  Function "main"
Noelle:     Loop "  %95 = load i8**, i8*** %92, align 8, !tbaa !55" (8.500675e+01%)
Noelle:  Function "decode_mcu_AC_refine"
Noelle:     Loop "  %41 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %40" (0.000000e+00%)
Noelle:     Loop "  %87 = icmp slt i32 %85, 8" (7.532378e-01%)
Noelle:     Loop "  %172 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %167" (4.414490e-01%)
Noelle:     Loop "  %255 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %252" (3.128522e+00%)
Noelle:     Loop "  %312 = add nsw i64 %310, -1" (0.000000e+00%)
Noelle:     Loop "  %322 = add nsw i64 %321, -1" (0.000000e+00%)
Noelle:  Function "ycc_rgb_convert"
Noelle:     Loop "  %34 = load i8**, i8*** %1, align 8, !tbaa !49" (3.166153e+00%)
Noelle:     Loop "  %47 = getelementptr inbounds i8, i8* %37, i64 %45" (3.166014e+00%)
Noelle:  Function "jpeg_idct_islow"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8" (1.321381e+00%)
Noelle:     Loop "  %177 = getelementptr inbounds i8*, i8** %3, i64 %175" (1.634890e+00%)
Noelle:  Function "h2v2_fancy_upsample"
Noelle:     Loop "  %13 = getelementptr inbounds i8*, i8** %2, i64 %11" (2.303133e+00%)
Noelle:     Loop "  %63 = getelementptr inbounds i8, i8* %62, i64 1" (1.151099e+00%)
Noelle:     Loop "  %142 = getelementptr inbounds i8, i8* %141, i64 1" (1.151099e+00%)
Noelle:  Function "decode_mcu_AC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %6, i64 0, i32 2, i32 1, i64 %36" (0.000000e+00%)
Noelle:     Loop "  %79 = icmp slt i32 %76, 8" (1.332269e+00%)
Noelle:  Function "jpeg_fill_bit_buffer"
Noelle:     Loop "  %18 = load i32, i32* %11, align 8, !tbaa !39" (4.196499e-01%)
Noelle:     Loop "  %47 = icmp eq i64 %46, 0" (1.862061e-03%)
Noelle:  Function "consume_data"
Noelle:     Loop "  %15 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %14" (1.422721e-04%)
Noelle:     Loop "  %52 = icmp ult i32 %50, %49" (5.557591e-01%)
Noelle:     Loop "  %54 = load i32, i32* %7, align 8, !tbaa !39" (5.556535e-01%)
Noelle:     Loop "  %60 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %58" (4.441899e-01%)
Noelle:     Loop "  %129 = add nsw i64 %127, %51" (0.000000e+00%)
Noelle:     Loop "  %135 = add i64 %134, %133" (0.000000e+00%)
Noelle:     Loop "  %158 = getelementptr inbounds [64 x i16], [64 x i16]* %156, i64 1" (0.000000e+00%)
Noelle:     Loop "  %101 = add nsw i64 %99, %51" (0.000000e+00%)
Noelle:     Loop "  %107 = add i64 %106, %105" (0.000000e+00%)
Noelle:     Loop "  %83 = sext i32 %82 to i64" (1.942275e-01%)
Noelle:     Loop "  %91 = getelementptr inbounds [64 x i16], [64 x i16]* %89, i64 1" (9.120248e-02%)
Noelle:  Function "decode_mcu_DC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %36" (0.000000e+00%)
Noelle:     Loop "  %72 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %69" (1.631177e-01%)
Noelle:  Function "decode_mcu_DC_refine"
Noelle:     Loop "  %36 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %6, i64 0, i32 2, i32 1, i64 %35" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %67" (4.839573e-02%)
Noelle:  Function "decompress_data"
Noelle:     Loop "  %14 = load i32, i32* %9, align 4, !tbaa !40" (4.364175e-06%)
Noelle:     Loop "  %39 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %38, i64 0, i32 12" (2.204084e-02%)
Noelle:     Loop "  %80 = icmp eq i32 %77, 0" (2.198628e-02%)
Noelle:     Loop "  %89 = getelementptr inbounds [64 x i16], [64 x i16]* %87, i64 0, i64 0" (2.195442e-02%)
Noelle:  Function "jpeg_huff_decode"
Noelle:     Loop "  %36 = shl i64 %33, 1" (4.188309e-03%)
Noelle:  Function "sep_upsample"
Noelle:     Loop "  %25 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %10, i64 0, i32 2, i64 %23" (2.162790e-04%)
Noelle:  Function "access_virt_barray"
Noelle:     Loop "  %80 = mul nsw i64 %77, %47" (0.000000e+00%)
Noelle:     Loop "  %162 = mul nsw i64 %159, %131" (0.000000e+00%)
Noelle:     Loop "  %226 = load [64 x i16]**, [64 x i16]*** %223, align 8, !tbaa !40" (1.963978e-05%)
Noelle:  Function "process_data_context_main"
Noelle:     Loop "  %74 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %73, i64 0, i32 3" (1.830776e-07%)
Noelle:     Loop "  %103 = load i64, i64* %99, align 8, !tbaa !47" (7.619988e-08%)
Noelle:     Loop "  %151 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %150, i64 0, i32 3" (2.196932e-07%)
Noelle:     Loop "  %177 = add nsw i64 %175, %168" (6.036614e-08%)
Noelle:  Function "jpeg_read_scanlines"
Noelle:  Function "jpeg_start_decompress"
Noelle:     Loop "  %23 = icmp eq %struct.jpeg_progress_mgr* %22, null" (8.747251e-05%)
Noelle:  Function "fill_input_buffer"
Noelle:  Function "put_pixel_rows"
Noelle:  Function "start_pass_phuff_decoder"
Noelle:     Loop "  %101 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %100" (7.601185e-06%)
Noelle:     Loop "  %125 = getelementptr inbounds [64 x i32], [64 x i32]* %105, i64 %106, i64 %124" (7.411180e-06%)
Noelle:     Loop "  %63 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %62" (2.355269e-07%)
Noelle:     Loop "  %74 = getelementptr inbounds [64 x i32], [64 x i32]* %67, i64 %68, i64 %73" (9.500244e-08%)
Noelle:     Loop "  %194 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %193" (2.525581e-05%)
Noelle:     Loop "  %166 = icmp eq i32 %164, 0" (9.518057e-06%)
Noelle:  Function "jpeg_make_d_derived_tbl"
Noelle:     Loop "  %24 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %21" (6.196930e-06%)
Noelle:     Loop "  %50 = add nsw <2 x i64> %47, <i64 8, i64 8>" (0.000000e+00%)
Noelle:     Loop "  %62 = add nsw <2 x i64> %59, <i64 1, i64 1>" (3.305293e-07%)
Noelle:     Loop "  %97 = sext i8 %93 to i32" (7.383471e-06%)
Noelle:     Loop "  %103 = add nsw i64 %101, 1" (4.026718e-06%)
Noelle:     Loop "  %124 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %122" (4.675902e-06%)
Noelle:     Loop "  %155 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %153" (1.579713e-05%)
Noelle:     Loop "  %262 = add nsw i64 %170, %259" (8.395841e-06%)
Noelle:     Loop "  %292 = add i64 %290, %268" (5.114298e-06%)
Noelle:     Loop "  %332 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %330" (0.000000e+00%)
Noelle:     Loop "  %188 = add nsw i64 %170, %185" (7.728845e-07%)
Noelle:     Loop "  %227 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %225" (0.000000e+00%)
Noelle:     Loop "  %241 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 1, i64 %239" (3.145966e-06%)
Noelle:     Loop "  %248 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %246" (2.076199e-06%)
Noelle:  Function "read_markers"
Noelle:     Loop "  %34 = icmp eq i32 %33, 0" (1.519247e-05%)
Noelle:     Loop "  %682 = icmp eq i64 %679, 0" (2.787728e-06%)
Noelle:     Loop "  %748 = icmp eq i64 %746, 0" (0.000000e+00%)
Noelle:     Loop "  %725 = icmp eq i64 %723, 0" (2.658089e-06%)
Noelle:     Loop "  %406 = icmp eq i64 %403, 0" (0.000000e+00%)
Noelle:     Loop "  %516 = icmp eq i64 %514, 0" (9.937651e-06%)
Noelle:     Loop "  %540 = icmp eq i64 %537, 0" (3.156852e-06%)
Noelle:     Loop "  %597 = icmp eq i64 %595, 0" (5.766450e-06%)
Noelle:     Loop "  br i1 %221, label %224, label %.loopexit._crit_edge.._crit_edge204_crit_edge, !prof !80" (9.797127e-07%)
Noelle:     Loop "  %254 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %252, i64 0, i32 0" (2.137555e-07%)
Noelle:  Function "realize_virt_arrays"
Noelle:     Loop "  %11 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %8, i64 0, i32 0" (0.000000e+00%)
Noelle:     Loop "  %41 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %38, i64 0, i32 0" (8.807518e-08%)
Noelle:     Loop "  %92 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %91, i64 0, i32 0" (1.805046e-06%)
Noelle:     Loop "  %143 = sub i32 %119, %141" (0.000000e+00%)
Noelle:     Loop "  %191 = add i32 %189, 1" (0.000000e+00%)
Noelle:     Loop "  %206 = add i32 %205, 1" (0.000000e+00%)
Noelle:     Loop "  %234 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %233, i64 0, i32 0" (1.227709e-05%)
Noelle:     Loop "  %288 = sub i32 %262, %286" (1.197427e-05%)
Noelle:     Loop "  %332 = add i32 %330, 1" (4.453240e-08%)
Noelle:     Loop "  %347 = add i32 %346, 1" (1.175358e-05%)
Noelle:  Function "jinit_master_decompress"
Noelle:  Function "fullsize_upsample"
Noelle:  Function "jinit_color_deconverter"
Noelle:     Loop "  %187 = mul nsw i64 %186, 91881" (0.000000e+00%)
Noelle:     Loop "  %124 = mul nsw i64 %123, 91881" (6.585847e-06%)
Noelle:     Loop "  %72 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 %70, i32 12" (0.000000e+00%)
Noelle:     Loop "  %231 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 %229, i32 12" (0.000000e+00%)
Noelle:  Function "parse_switches"
Noelle:     Loop "  %27 = sext i32 %26 to i64" (4.213754e-06%)
Noelle:  Function "keymatch"
Noelle:     Loop "  %10 = getelementptr inbounds i8, i8* %7, i64 1" (3.002473e-06%)
Noelle:  Function "jzero_far"
Noelle:  Function "alloc_small"
Noelle:     Loop "  %35 = getelementptr inbounds %union.small_pool_struct, %union.small_pool_struct* %34, i64 0, i32 0, i32 2" (3.137060e-07%)
Noelle:     Loop "  %59 = lshr i64 %58, 1" (0.000000e+00%)
Noelle:  Function "consume_markers"
Noelle:     Loop "  %76 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %74, i64 0, i32 2" (9.401284e-08%)
Noelle:     Loop "  %127 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %125, i64 0, i32 9" (1.464621e-07%)
Noelle:  Function "start_input_pass"
Noelle:     Loop "  %72 = getelementptr inbounds %struct.jpeg_decompress_struct.261, %struct.jpeg_decompress_struct.261* %0, i64 0, i32 63, i64 %71" (4.393863e-07%)
Noelle:     Loop "  %112 = load i32, i32* %64, align 8, !tbaa !55" (3.958435e-08%)
Noelle:     Loop "  %122 = load i32, i32* %64, align 8, !tbaa !55" (5.541809e-08%)
Noelle:     Loop "  %153 = getelementptr inbounds %struct.jpeg_decompress_struct.261, %struct.jpeg_decompress_struct.261* %0, i64 0, i32 63, i64 %152" (2.602671e-07%)
Noelle:  Function "alloc_sarray"
Noelle:     Loop "  %29 = sub i32 %3, %27" (6.778820e-07%)
Noelle:     Loop "  %43 = add i32 %41, 1" (9.104401e-08%)
Noelle:     Loop "  %58 = add i32 %57, 1" (2.375061e-07%)
Noelle:  Function "next_marker"
Noelle:     Loop "  %13 = icmp eq i64 %12, 0" (6.056406e-07%)
Noelle:     Loop "  %29 = load %struct.jpeg_marker_reader.278*, %struct.jpeg_marker_reader.278** %9, align 8, !tbaa !47" (0.000000e+00%)
Noelle:     Loop "  %51 = icmp eq i64 %50, 0" (2.018802e-07%)
Noelle:  Function "start_pass_main"
Noelle:     Loop "  %28 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %27, i64 0, i32 3" (7.234040e-07%)
Noelle:     Loop "  %92 = getelementptr inbounds i8*, i8** %41, i64 %90" (1.712023e-07%)
Noelle:     Loop "  %54 = getelementptr inbounds i8*, i8** %41, i64 %52" (6.135575e-08%)
Noelle:     Loop "  %270 = getelementptr inbounds i8*, i8** %41, i64 %269" (0.000000e+00%)
Noelle:     Loop "  %195 = add nsw i64 %193, %148" (0.000000e+00%)
Noelle:     Loop "  %312 = add nsw i64 %311, %148" (7.323105e-08%)
Noelle:     Loop "  %328 = load i64, i64* %303, align 8, !tbaa !53" (0.000000e+00%)
Noelle:     Loop "  %354 = load i64, i64* %303, align 8, !tbaa !53" (4.453240e-08%)
Noelle:  Function "emit_message"
Noelle:  Function "start_pass"
Noelle:     Loop "  %18 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %15, i64 0, i32 9" (4.769914e-07%)
Noelle:     Loop "  %186 = getelementptr inbounds [8 x double], [8 x double]* @start_pass.aanscalefactor, i64 0, i64 %185" (0.000000e+00%)
Noelle:     Loop "  %155 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %50, i64 0, i32 0, i64 %154" (0.000000e+00%)
Noelle:  Function "jpeg_calc_output_dimensions"
Noelle:     Loop "  %113 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 0, i32 9" (5.145966e-08%)
Noelle:     Loop "  %85 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %83, i64 0, i32 3" (0.000000e+00%)
Noelle:     Loop "  %89 = shl i32 %88, 1" (0.000000e+00%)
Noelle:     Loop "  %118 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %116, i64 0, i32 2" (1.959425e-07%)
Noelle:  Function "get_sof"
Noelle:     Loop "  %217 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %216, i64 0, i32 1" (1.979218e-07%)
Noelle:  Function "free_pool"
Noelle:     Loop "  %22 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %21, i64 0, i32 10" (0.000000e+00%)
Noelle:     Loop "  %36 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %35, i64 0, i32 10" (3.166748e-08%)
Noelle:     Loop "  %54 = bitcast %union.large_pool_struct* %53 to i8*" (1.425037e-07%)
Noelle:     Loop "  %73 = bitcast %union.small_pool_struct* %72 to i8*" (8.807518e-08%)
Noelle:  Function "get_app0"
Noelle:     Loop "  %47 = icmp eq i64 %45, 0" (2.345373e-07%)
Noelle:  Function "start_output_pass"
Noelle:     Loop "  %48 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 0, i32 19" (2.246412e-07%)
Noelle:  Function "jinit_write_ppm"
Noelle:  Function "self_destruct"
Noelle:  Function "jinit_d_main_controller"
Noelle:     Loop "  %65 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %64, i64 0, i32 3" (1.029193e-07%)
Noelle:     Loop "  %112 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 0, i32 3" (7.718949e-08%)
Noelle:  Function "start_input_pass.105"
Noelle:  Function "request_virt_barray"
Noelle:  Function "jinit_upsampler"
Noelle:     Loop "  %53 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %52, i64 0, i32 2" (2.303203e+00%)
Noelle:  Function "alloc_large"
Noelle:  Function "jpeg_CreateDecompress"
Noelle:  Function "jinit_d_coef_controller"
Noelle:     Loop "  %29 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %28, i64 0, i32 3" (1.286491e-07%)
Noelle:  Function "jdiv_round_up"
Noelle:  Function "jinit_marker_reader"
Noelle:  Function "jpeg_read_header"
Noelle:  Function "jinit_inverse_dct"
Noelle:     Loop "  %21 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (5.244927e-08%)
Noelle:  Function "jpeg_consume_input"
Noelle:  Function "prepare_for_output_pass"
Noelle:  Function "jinit_memory_mgr"
Noelle:  Function "jinit_phuff_decoder"
Noelle:     Loop "  %29 = bitcast i32* %28 to i8*" (2.869865e-08%)
Noelle:  Function "jpeg_finish_decompress"
Noelle:     Loop "  %37 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %36, align 8, !tbaa !53" (4.948044e-09%)
Noelle:  Function "finish_input_pass"
Noelle:  Function "jpeg_alloc_huff_table"
Noelle:  Function "jround_up"
Noelle:  Function "jpeg_stdio_src"
Noelle:  Function "output_pass_setup"
Noelle:     Loop "  %25 = load i32, i32* %18, align 4, !tbaa !47" (0.000000e+00%)
Noelle:  Function "jinit_input_controller"
Noelle:  Function "start_pass_dpost"
Noelle:  Function "reset_input_controller"
Noelle:  Function "jpeg_std_error"
Noelle:  Function "jinit_d_post_controller"
Noelle:  Function "jpeg_alloc_quant_table"
Noelle:  Function "start_output_ppm"
Noelle:  Function "jpeg_destroy_decompress"
Noelle:  Function "jpeg_get_large"
Noelle:  Function "jpeg_free_large"
Noelle:  Function "reset_marker_reader"
Noelle:  Function "jpeg_destroy"
Noelle:  Function "finish_output_pass"
Noelle:  Function "jpeg_free_small"
Noelle:  Function "start_pass_upsample"
Noelle:  Function "jpeg_abort"
Noelle:  Function "jpeg_get_small"
Noelle:  Function "finish_output_ppm"
Noelle:  Function "jpeg_set_marker_processor"
Noelle:  Function "reset_error_mgr"
Noelle:  Function "init_source"
Noelle:  Function "start_pass_dcolor"
Noelle:  Function "term_source"
Noelle:  Function "jpeg_mem_available"
Noelle:  Function "read_restart_marker"
Noelle:  Function "skip_variable"
Noelle:  Function "jcopy_sample_rows"
Noelle:     Loop "  %29 = getelementptr inbounds i8*, i8** %27, i64 1" (0.000000e+00%)
Noelle:  Function "get_app14"
Noelle:     Loop "  %47 = icmp eq i64 %45, 0" (0.000000e+00%)
Noelle:  Function "jcopy_block_row"
Noelle:  Function "error_exit"
Noelle:  Function "output_message"
Noelle:  Function "format_message"
Noelle:     Loop "  %41 = getelementptr inbounds i8, i8* %40, i64 1" (0.000000e+00%)
Noelle:  Function "jpeg_resync_to_restart"
Noelle:     Loop "  %29 = icmp slt i32 %28, 192" (0.000000e+00%)
Noelle:  Function "jpeg_mem_init"
Noelle:  Function "jpeg_mem_term"
Noelle:  Function "prescan_quantize"
Noelle:     Loop "  %17 = getelementptr inbounds i8*, i8** %1, i64 %16" (0.000000e+00%)
Noelle:     Loop "  %21 = load i8, i8* %19, align 1, !tbaa !43" (0.000000e+00%)
Noelle:  Function "access_virt_sarray"
Noelle:     Loop "  %79 = mul nsw i64 %76, %46" (0.000000e+00%)
Noelle:     Loop "  %159 = mul nsw i64 %156, %128" (0.000000e+00%)
Noelle:     Loop "  %221 = load i8**, i8*** %218, align 8, !tbaa !38" (0.000000e+00%)
Noelle:  Function "jpeg_open_backing_store"
Noelle:  Function "process_data_simple_main"
Noelle:  Function "process_data_crank_post"
Noelle:  Function "request_virt_sarray"
Noelle:  Function "alloc_barray"
Noelle:     Loop "  %31 = sub i32 %3, %29" (0.000000e+00%)
Noelle:     Loop "  %46 = add i32 %44, 1" (0.000000e+00%)
Noelle:     Loop "  %61 = add i32 %60, 1" (0.000000e+00%)
Noelle:  Function "start_pass_huff_decoder"
Noelle:     Loop "  %33 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 63, i64 %32" (9.896088e-09%)
Noelle:  Function "dummy_consume_data"
Noelle:  Function "jpeg_idct_ifast"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8" (0.000000e+00%)
Noelle:     Loop "  %151 = getelementptr inbounds i8*, i8** %3, i64 %149" (0.000000e+00%)
Noelle:  Function "jpeg_idct_float"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8" (0.000000e+00%)
Noelle:     Loop "  %132 = getelementptr inbounds i8*, i8** %3, i64 %130" (0.000000e+00%)
Noelle:  Function "h2v1_merged_upsample"
Noelle:     Loop "  %40 = getelementptr inbounds i8, i8* %37, i64 1" (0.000000e+00%)
Noelle:  Function "finish_pass1"
Noelle:     Loop "  %32 = add nuw i64 %29, 1" (0.000000e+00%)
Noelle:     Loop "  %50 = getelementptr inbounds %struct.box, %struct.box* %48, i64 0, i32 7" (0.000000e+00%)
Noelle:     Loop "  %68 = getelementptr inbounds %struct.box, %struct.box* %66, i64 0, i32 6" (0.000000e+00%)
Noelle:     Loop "  %103 = getelementptr inbounds %struct.box, %struct.box* %101, i64 0, i32 6" (0.000000e+00%)
Noelle:     Loop "  %181 = load %struct.my_cquantizer.611*, %struct.my_cquantizer.611** %3, align 8, !tbaa !30" (0.000000e+00%)
Noelle:     Loop "  %211 = getelementptr inbounds [32 x i16]*, [32 x i16]** %183, i64 %206" (0.000000e+00%)
Noelle:     Loop "  %222 = getelementptr inbounds [32 x i16], [32 x i16]* %212, i64 %217, i64 %199" (0.000000e+00%)
Noelle:     Loop "  %233 = getelementptr inbounds i16, i16* %232, i64 1" (0.000000e+00%)
Noelle:  Function "pass2_fs_dither"
Noelle:     Loop "  %48 = getelementptr inbounds i8*, i8** %1, i64 %47" (0.000000e+00%)
Noelle:     Loop "  %86 = getelementptr inbounds i16, i16* %83, i64 %68" (0.000000e+00%)
Noelle:     Loop "  %40 = icmp eq i32 %38, 0" (0.000000e+00%)
Noelle:  Function "jinit_huff_decoder"
Noelle:  Function "pass2_no_dither"
Noelle:     Loop "  %17 = getelementptr inbounds i8*, i8** %2, i64 %16" (0.000000e+00%)
Noelle:     Loop "  %24 = getelementptr inbounds i8, i8* %21, i64 1" (0.000000e+00%)
Noelle:  Function "finish_pass2"
Noelle:  Function "fill_inverse_cmap"
Noelle:     Loop "  %49 = getelementptr inbounds i8, i8* %41, i64 %47" (0.000000e+00%)
Noelle:     Loop "  %179 = getelementptr inbounds [256 x i64], [256 x i64]* %6, i64 0, i64 %176" (0.000000e+00%)
Noelle:     Loop "  %340 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %339" (0.000000e+00%)
Noelle:     Loop "  %382 = load i64, i64* %380, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %599 = load i64, i64* %597, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %634 = load i64, i64* %632, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %669 = load i64, i64* %667, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %428 = add nuw nsw i64 %426, %418" (0.000000e+00%)
Noelle:  Function "update_box"
Noelle:     Loop "  %30 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %29" (0.000000e+00%)
Noelle:     Loop "  %33 = getelementptr inbounds [32 x i16], [32 x i16]* %31, i64 %32, i64 %23" (0.000000e+00%)
Noelle:     Loop "  %36 = load i16, i16* %34, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %57 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %56" (0.000000e+00%)
Noelle:     Loop "  %60 = getelementptr inbounds [32 x i16], [32 x i16]* %58, i64 %59, i64 %50" (0.000000e+00%)
Noelle:     Loop "  %63 = load i16, i16* %61, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader18" (0.000000e+00%)
Noelle:     Loop "  %86 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %85" (0.000000e+00%)
Noelle:     Loop "  %91 = load i16, i16* %89, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader14" (0.000000e+00%)
Noelle:     Loop "  %112 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %111" (0.000000e+00%)
Noelle:     Loop "  %117 = load i16, i16* %115, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader10" (0.000000e+00%)
Noelle:     Loop "  %139 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %138" (0.000000e+00%)
Noelle:     Loop "  %144 = load i16, i16* %142, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader6" (0.000000e+00%)
Noelle:     Loop "  %165 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %164" (0.000000e+00%)
Noelle:     Loop "  %170 = load i16, i16* %168, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %248 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %246" (0.000000e+00%)
Noelle:     Loop "  %254 = load i16, i16* %252, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %263 = getelementptr inbounds [32 x i16], [32 x i16]* %249, i64 %261, i64 %199" (0.000000e+00%)
Noelle:     Loop "  %267 = load i16, i16* %265, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %283 = load i16, i16* %281, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %215 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %213" (0.000000e+00%)
Noelle:     Loop "  %219 = getelementptr inbounds [32 x i16], [32 x i16]* %216, i64 %217, i64 %199" (0.000000e+00%)
Noelle:     Loop "  %223 = load i16, i16* %221, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %235 = load i16, i16* %233, align 2, !tbaa !50" (0.000000e+00%)
Noelle:  Function "jinit_merged_upsampler"
Noelle:     Loop "  %75 = mul nsw i64 %74, 91881" (0.000000e+00%)
Noelle:  Function "start_pass_merged_upsample"
Noelle:  Function "merged_2v_upsample"
Noelle:  Function "h2v2_merged_upsample"
Noelle:     Loop "  %50 = getelementptr inbounds i8, i8* %45, i64 1" (0.000000e+00%)
Noelle:  Function "merged_1v_upsample"
Noelle:  Function "jpeg_idct_4x4"
Noelle:     Loop "  %21 = icmp eq i32 %17, 4" (0.000000e+00%)
Noelle:     Loop "  %132 = getelementptr inbounds i8*, i8** %3, i64 %130" (0.000000e+00%)
Noelle:  Function "quantize_fs_dither"
Noelle:     Loop "  %124 = getelementptr inbounds i8*, i8** %2, i64 %123" (0.000000e+00%)
Noelle:     Loop "  %32 = getelementptr inbounds i8*, i8** %2, i64 %31" (0.000000e+00%)
Noelle:     Loop "  %36 = load i8*, i8** %34, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds i16, i16* %67, i64 %54" (0.000000e+00%)
Noelle:     Loop "  %108 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %7, i64 0, i32 8, i64 %107" (0.000000e+00%)
Noelle:     Loop "  %119 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %7, i64 0, i32 8, i64 %118" (0.000000e+00%)
Noelle:  Function "jinit_2pass_quantizer"
Noelle:     Loop "  %34 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (0.000000e+00%)
Noelle:  Function "start_pass_2_quant"
Noelle:     Loop "  %80 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %79" (0.000000e+00%)
Noelle:  Function "new_color_map_2_quant"
Noelle:  Function "init_error_limit"
Noelle:     Loop "  %37 = getelementptr inbounds i32, i32* %12, i64 %35" (0.000000e+00%)
Noelle:     Loop "  %49 = getelementptr inbounds i32, i32* %12, i64 %48" (0.000000e+00%)
Noelle:  Function "quantize_ord_dither"
Noelle:     Loop "  %25 = getelementptr inbounds i8*, i8** %2, i64 %24" (0.000000e+00%)
Noelle:     Loop "  %79 = load i8*, i8** %25, align 8, !tbaa !40" (0.000000e+00%)
Noelle:     Loop "  %100 = load i8**, i8*** %17, align 8, !tbaa !44" (0.000000e+00%)
Noelle:     Loop "  %112 = load i8, i8* %108, align 1, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %32 = load i8**, i8*** %17, align 8, !tbaa !44" (0.000000e+00%)
Noelle:     Loop "  %44 = load i8, i8* %40, align 1, !tbaa !45" (0.000000e+00%)
Noelle:  Function "jpeg_idct_2x2"
Noelle:     Loop "  %Pivot6 = icmp ult i32 %32, 4" (0.000000e+00%)
Noelle:  Function "jpeg_idct_1x1"
Noelle:  Function "noop_upsample"
Noelle:  Function "h2v1_fancy_upsample"
Noelle:     Loop "  %12 = getelementptr inbounds i8*, i8** %2, i64 %11" (0.000000e+00%)
Noelle:     Loop "  %48 = shl i64 %47, 1" (0.000000e+00%)
Noelle:     Loop "  %121 = getelementptr inbounds i8, i8* %120, i64 1" (0.000000e+00%)
Noelle:  Function "h2v1_upsample"
Noelle:     Loop "  %13 = getelementptr inbounds i8*, i8** %5, i64 %12" (0.000000e+00%)
Noelle:     Loop "  %24 = getelementptr inbounds i8, i8* %22, i64 1" (0.000000e+00%)
Noelle:  Function "h2v2_upsample"
Noelle:     Loop "  %14 = getelementptr inbounds i8*, i8** %5, i64 %12" (0.000000e+00%)
Noelle:     Loop "  %25 = getelementptr inbounds i8, i8* %23, i64 1" (0.000000e+00%)
Noelle:  Function "int_upsample"
Noelle:     Loop "  %92 = getelementptr inbounds i8*, i8** %8, i64 %90" (0.000000e+00%)
Noelle:     Loop "  %102 = load i8, i8* %100, align 1, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %61 = getelementptr inbounds i8*, i8** %8, i64 %59" (0.000000e+00%)
Noelle:     Loop "  %71 = getelementptr inbounds i8, i8* %69, i64 1" (0.000000e+00%)
Noelle:     Loop "  %85 = icmp eq i32 %.pre, 0" (0.000000e+00%)
Noelle:     Loop "  %32 = load i32, i32* %22, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  br label %.loopexit.us.us" (0.000000e+00%)
Noelle:  Function "grayscale_convert"
Noelle:  Function "start_output_tga"
Noelle:     Loop "  %114 = load i8**, i8*** %111, align 8, !tbaa !53" (0.000000e+00%)
Noelle:  Function "null_convert"
Noelle:     Loop "  %24 = add nsw i32 %21, -1" (0.000000e+00%)
Noelle:     Loop "  %83 = getelementptr inbounds i8**, i8*** %1, i64 %82" (0.000000e+00%)
Noelle:     Loop "  %92 = getelementptr inbounds i8, i8* %90, i64 1" (0.000000e+00%)
Noelle:     Loop "  %100 = getelementptr inbounds i8, i8* %99, i64 1" (0.000000e+00%)
Noelle:     Loop "  %28 = getelementptr inbounds i8**, i8*** %1, i64 %27" (0.000000e+00%)
Noelle:     Loop "  %37 = getelementptr inbounds i8, i8* %35, i64 1" (0.000000e+00%)
Noelle:     Loop "  %45 = getelementptr inbounds i8**, i8*** %1, i64 %44" (0.000000e+00%)
Noelle:     Loop "  %54 = getelementptr inbounds i8, i8* %53, i64 1" (0.000000e+00%)
Noelle:  Function "COM_handler"
Noelle:     Loop "  %115 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %7, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %65 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %7, align 8, !tbaa !41" (0.000000e+00%)
Noelle:  Function "usage"
Noelle:  Function "copy_pixel_rows"
Noelle:     Loop "  %40 = getelementptr i8, i8* %14, i64 %38" (0.000000e+00%)
Noelle:     Loop "  %90 = getelementptr i8, i8* %14, i64 %88" (0.000000e+00%)
Noelle:     Loop "  %112 = getelementptr inbounds i8, i8* %109, i64 1" (0.000000e+00%)
Noelle:     Loop "  %125 = getelementptr inbounds i8, i8* %123, i64 1" (0.000000e+00%)
Noelle:  Function "put_demapped_gray"
Noelle:     Loop "  %23 = getelementptr inbounds i8, i8* %21, i64 1" (0.000000e+00%)
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %38, i64 1" (0.000000e+00%)
Noelle:  Function "put_demapped_rgb"
Noelle:     Loop "  %44 = getelementptr inbounds i8, i8* %43, i64 1" (0.000000e+00%)
Noelle:  Function "ycck_cmyk_convert"
Noelle:     Loop "  %35 = load i8**, i8*** %1, align 8, !tbaa !46" (0.000000e+00%)
Noelle:     Loop "  %51 = getelementptr inbounds i8, i8* %38, i64 %49" (0.000000e+00%)
Noelle:  Function "jinit_1pass_quantizer"
Noelle:     Loop "  %78 = add nuw i64 %77, 1" (0.000000e+00%)
Noelle:     Loop "  %81 = mul nsw i64 %79, %78" (0.000000e+00%)
Noelle:     Loop "  %93 = mul nsw i64 %91, %78" (0.000000e+00%)
Noelle:     Loop "  %55 = add nuw i64 %54, 1" (0.000000e+00%)
Noelle:     Loop "  %58 = mul nsw i64 %56, %55" (0.000000e+00%)
Noelle:     Loop "  %70 = add nuw i64 %69, 1" (0.000000e+00%)
Noelle:     Loop "  %74 = mul nsw i64 %72, %70" (0.000000e+00%)
Noelle:     Loop "  %130 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %126" (0.000000e+00%)
Noelle:     Loop "  %170 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %166" (0.000000e+00%)
Noelle:     Loop "  %235 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %233" (0.000000e+00%)
Noelle:     Loop "  br label %._crit_edge132" (0.000000e+00%)
Noelle:     Loop "  %sext = shl i64 %214, 32" (0.000000e+00%)
Noelle:     Loop "  br label %._crit_edge133.us" (0.000000e+00%)
Noelle:     Loop "  %195 = getelementptr inbounds [3 x i32], [3 x i32]* @select_ncolors.RGB_order, i64 0, i64 %192" (0.000000e+00%)
Noelle:     Loop "  %276 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %274" (0.000000e+00%)
Noelle:     Loop "  %297 = trunc i64 %295 to i32" (0.000000e+00%)
Noelle:     Loop "  %349 = add i64 %348, %287" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader3.us" (0.000000e+00%)
Noelle:     Loop "  %320 = load i8*, i8** %286, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %340 = load i8*, i8** %286, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  br i1 %294, label %.split.us.us..loopexit2.us.us_crit_edge, label %.preheader1.us.preheader.us" (0.000000e+00%)
Noelle:     Loop "  %309 = load i8*, i8** %286, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %375 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (0.000000e+00%)
Noelle:     Loop "  br label %.loopexit15.us.us.us" (0.000000e+00%)
Noelle:  Function "start_pass_1_quant"
Noelle:     Loop "  %115 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %112, align 8, !tbaa !51" (0.000000e+00%)
Noelle:     Loop "  %134 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 8, i64 %133" (0.000000e+00%)
Noelle:     Loop "  %45 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %37, i64 0, i32 5, i64 %44" (0.000000e+00%)
Noelle:     Loop "  %51 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %37, i64 0, i32 5, i64 %50" (0.000000e+00%)
Noelle:     Loop "  br label %._crit_edge27" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @base_dither_matrix, i64 0, i64 %68, i64 %69" (0.000000e+00%)
Noelle:  Function "finish_pass_1_quant"
Noelle:  Function "new_color_map_1_quant"
Noelle:  Function "create_colorindex"
Noelle:     Loop "  %98 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 5, i64 %96" (0.000000e+00%)
Noelle:     Loop "  %113 = sext i32 %112 to i64" (0.000000e+00%)
Noelle:     Loop "  %118 = add i64 %117, 1" (0.000000e+00%)
Noelle:     Loop "  %28 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 5, i64 %26" (0.000000e+00%)
Noelle:     Loop "  %47 = sext i32 %46 to i64" (0.000000e+00%)
Noelle:     Loop "  %52 = add i64 %51, 1" (0.000000e+00%)
Noelle:     Loop "  %76 = load i8, i8* %36, align 1, !tbaa !51" (0.000000e+00%)
Noelle:  Function "color_quantize3"
Noelle:     Loop "  %97 = getelementptr inbounds i8*, i8** %2, i64 %96" (0.000000e+00%)
Noelle:     Loop "  %122 = getelementptr inbounds i8, i8* %119, i64 1" (0.000000e+00%)
Noelle:     Loop "  %26 = getelementptr inbounds i8*, i8** %2, i64 %25" (0.000000e+00%)
Noelle:     Loop "  %49 = getelementptr inbounds i8*, i8** %1, i64 %48" (0.000000e+00%)
Noelle:     Loop "  %56 = getelementptr inbounds i8, i8* %53, i64 1" (0.000000e+00%)
Noelle:  Function "color_quantize"
Noelle:     Loop "  %29 = getelementptr inbounds i8*, i8** %2, i64 %28" (0.000000e+00%)
Noelle:     Loop "  %131 = getelementptr inbounds i8, i8* %130, i64 1" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader1.us" (0.000000e+00%)
Noelle:     Loop "  %65 = getelementptr inbounds i8*, i8** %9, i64 %61" (0.000000e+00%)
Noelle:     Loop "  %111 = getelementptr inbounds i8*, i8** %9, i64 %107" (0.000000e+00%)
Noelle:     Loop "  br i1 %27, label %.loopexit.us._crit_edge.us..loopexit.us.us_crit_edge, label %.preheader.us.preheader.us" (0.000000e+00%)
Noelle:     Loop "  %40 = getelementptr inbounds i8*, i8** %9, i64 %36" (0.000000e+00%)
Noelle:  Function "quantize3_ord_dither"
Noelle:     Loop "  %34 = load [16 x i32]*, [16 x i32]** %20, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %46 = getelementptr inbounds i8, i8* %42, i64 1" (0.000000e+00%)
Noelle:     Loop "  %28 = add nsw i32 %26, 1" (0.000000e+00%)
Noelle:  Function "jpeg_start_output"
Noelle:  Function "read_pbm_integer"
Noelle:     Loop "  %4 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %6 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %31 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %33 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:  Function "read_stdin"
Noelle:  Function "decode_mcu"
Noelle:     Loop "  %35 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %7, i64 0, i32 2, i32 0, i64 %34" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %67" (2.975754e-05%)
Noelle:     Loop "  %97 = icmp eq i32 %92, 0" (0.000000e+00%)
Noelle:     Loop "  %123 = icmp eq i64 %122, 0" (0.000000e+00%)
Noelle:     Loop "  %214 = icmp eq i32 %209, 0" (0.000000e+00%)
Noelle:     Loop "  %240 = icmp eq i64 %239, 0" (0.000000e+00%)
Noelle:     Loop "  %327 = icmp slt i32 %326, 8" (0.000000e+00%)
Noelle:     Loop "  %337 = icmp eq i32 %332, 0" (0.000000e+00%)
Noelle:     Loop "  %363 = icmp eq i64 %362, 0" (0.000000e+00%)
Noelle:     Loop "  %457 = icmp eq i32 %452, 0" (0.000000e+00%)
Noelle:     Loop "  %483 = icmp eq i64 %482, 0" (0.000000e+00%)
Noelle:     Loop "  %572 = icmp slt i32 %571, 8" (0.000000e+00%)
Noelle:     Loop "  %582 = icmp eq i32 %577, 0" (0.000000e+00%)
Noelle:     Loop "  %608 = icmp eq i64 %607, 0" (0.000000e+00%)
Noelle:     Loop "  %701 = icmp eq i32 %696, 0" (0.000000e+00%)
Noelle:     Loop "  %727 = icmp eq i64 %726, 0" (0.000000e+00%)
Noelle:  Function "write_stdout"
Noelle:  Function "jpeg_abort_decompress"
Noelle:  Function "jpeg_input_complete"
Noelle:  Function "jpeg_has_multiple_scans"
Noelle:  Function "jpeg_read_raw_data"
Noelle:  Function "read_color_map"
Noelle:     Loop "  br label %.preheader13" (0.000000e+00%)
Noelle:     Loop "  %196 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %198 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %202 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %206 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %229 = getelementptr inbounds i8, i8* %219, i64 %228" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader3" (0.000000e+00%)
Noelle:     Loop "  %142 = tail call fastcc i32 @read_pbm_integer(%struct.jpeg_decompress_struct* %0, %struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %156 = getelementptr inbounds i8, i8* %146, i64 %155" (0.000000e+00%)
Noelle:     Loop "  %16 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %51 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %75 = getelementptr inbounds i8, i8* %65, i64 %74" (0.000000e+00%)
Noelle:  Function "jpeg_finish_output"
Noelle:     Loop "  %28 = load i32, i32* %25, align 4, !tbaa !48" (0.000000e+00%)
Noelle:  Function "decompress_onepass"
Noelle:     Loop "  %31 = icmp ugt i32 %29, %8" (0.000000e+00%)
Noelle:     Loop "  %33 = load i8*, i8** %21, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %132 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %130" (0.000000e+00%)
Noelle:     Loop "  %173 = load i32, i32* %26, align 8, !tbaa !59" (0.000000e+00%)
Noelle:     Loop "  %182 = add nsw i64 %180, %179" (0.000000e+00%)
Noelle:     Loop "  %51 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %49" (0.000000e+00%)
Noelle:     Loop "  %83 = load i32, i32* %26, align 8, !tbaa !59" (0.000000e+00%)
Noelle:     Loop "  %92 = add nsw i64 %90, %89" (0.000000e+00%)
Noelle:  Function "decompress_smooth_data"
Noelle:     Loop "  %17 = load i32, i32* %11, align 4, !tbaa !39" (0.000000e+00%)
Noelle:     Loop "  %57 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %56, i64 0, i32 12" (0.000000e+00%)
Noelle:     Loop "  %163 = getelementptr inbounds [64 x i16]*, [64 x i16]** %104, i64 %161" (0.000000e+00%)
Noelle:     Loop "  call void @jcopy_block_row([64 x i16]* nonnull %197, [64 x i16]* nonnull %3, i32 1) #18" (0.000000e+00%)
Noelle:  Function "post_process_1pass"
Noelle:  Function "post_process_prepass"
Noelle:  Function "post_process_2pass"
Noelle:  Function "skip_input_data"
Noelle:     Loop "  %18 = sub nsw i64 %17, %16" (0.000000e+00%)
Noelle:  Function "jpeg_new_colormap"
Noelle:  Function "finish_output_tga"
Noelle:  Function "jinit_write_gif"
Noelle:  Function "start_output_gif"
Noelle:  Function "put_pixel_rows.52"
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %38, i64 1" (0.000000e+00%)
Noelle:     Loop "  %74 = sub nsw i32 %73, %72" (0.000000e+00%)
Noelle:     Loop "  %100 = trunc i64 %99 to i8" (0.000000e+00%)
Noelle:     Loop "  %165 = trunc i64 %164 to i8" (0.000000e+00%)
Noelle:  Function "finish_output_gif"
Noelle:     Loop "  %42 = trunc i64 %41 to i8" (0.000000e+00%)
Noelle:     Loop "  %113 = trunc i64 %112 to i8" (0.000000e+00%)
Noelle:  Function "emit_header"
Noelle:     Loop "  %22 = shl i32 1, %21" (0.000000e+00%)
Noelle:     Loop "  %104 = icmp slt i64 %103, %78" (0.000000e+00%)
Noelle:     Loop "  %81 = icmp slt i64 %80, %78" (0.000000e+00%)
Noelle:     Loop "  %218 = trunc i64 %217 to i8" (0.000000e+00%)
Noelle:  Function "jinit_write_targa"
Noelle:  Function "put_demapped_gray.55"
Noelle:     Loop "  %23 = getelementptr inbounds i8, i8* %20, i64 1" (0.000000e+00%)
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %37, i64 1" (0.000000e+00%)
Noelle:  Function "put_gray_rows"
Noelle:     Loop "  %39 = getelementptr i8, i8* %6, i64 %37" (0.000000e+00%)
Noelle:     Loop "  %89 = getelementptr i8, i8* %6, i64 %87" (0.000000e+00%)
Noelle:     Loop "  %111 = getelementptr inbounds i8, i8* %109, i64 1" (0.000000e+00%)
Noelle:     Loop "  %124 = getelementptr inbounds i8, i8* %123, i64 1" (0.000000e+00%)
Noelle:  Function "put_pixel_rows.56"
Noelle:     Loop "  %34 = getelementptr inbounds i8, i8* %33, i64 2" (0.000000e+00%)
Noelle:  Function "jinit_write_bmp"
Noelle:  Function "start_output_bmp"
Noelle:  Function "finish_output_bmp"
Noelle:     Loop "  %272 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %241, align 8, !tbaa !61" (0.000000e+00%)
Noelle:     Loop "  %284 = load i8, i8* %282, align 1, !tbaa !46" (0.000000e+00%)
Noelle:     Loop "  %247 = sub i32 %245, %246" (0.000000e+00%)
Noelle:     Loop "  %263 = load i8, i8* %261, align 1, !tbaa !46" (0.000000e+00%)
Noelle:  Function "put_gray_rows.59"
Noelle:     Loop "  %51 = getelementptr i8, i8* %18, i64 %49" (0.000000e+00%)
Noelle:     Loop "  %101 = getelementptr i8, i8* %18, i64 %99" (0.000000e+00%)
Noelle:     Loop "  %123 = getelementptr inbounds i8, i8* %121, i64 1" (0.000000e+00%)
Noelle:     Loop "  %137 = getelementptr inbounds i8, i8* %136, i64 1" (0.000000e+00%)
Noelle:  Function "put_pixel_rows.60"
Noelle:     Loop "  %47 = getelementptr inbounds i8, i8* %46, i64 1" (0.000000e+00%)
Noelle:  Function "write_colormap"
Noelle:     Loop "  %93 = load i8*, i8** %6, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %31 = load i8*, i8** %6, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %75 = load i8*, i8** %51, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %56 = load i8*, i8** %51, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %111 = tail call i32 @putc(i32 %110, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %15 = tail call i32 @putc(i32 %14, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %138 = tail call i32 @putc(i32 0, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %131 = tail call i32 @putc(i32 0, %struct._IO_FILE* %10)" (0.000000e+00%)
NOELLE: FixedPoint:       There are 56 different instructions and 55 different loop instructions
NOELLE: FixedPoint:       Normalize the code
noelle-norm /tmp/tmp.11kQ96bN2c -o /tmp/tmp.11kQ96bN2c
opt -basicaa -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -mem2reg -simplifycfg-sink-common=false -break-constgeps -lowerswitch -mergereturn --break-crit-edges -loop-simplify -lcssa -indvars --functionattrs --rpo-functionattrs /tmp/tmp.11kQ96bN2c -o /tmp/tmp.11kQ96bN2c
NOELLE: FixedPoint:     Invocation 1
noelle-parallel-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Inliner.so -inliner -noelle-inliner-verbose=1 -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier /tmp/tmp.2laNWI9ONE -o /tmp/tmp.11kQ96bN2c
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Inliner.so -inliner -noelle-inliner-verbose=1 -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier /tmp/tmp.2laNWI9ONE -o /tmp/tmp.11kQ96bN2c
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Inliner.so -inliner -noelle-inliner-verbose=1 -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier /tmp/tmp.2laNWI9ONE -o /tmp/tmp.11kQ96bN2c
Inliner: Start
Inliner:   Number of program instructions = 27198
Inliner:   Profiles are available and will be used
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca %struct.jpeg_error_mgr, align 8
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca i32, align 4
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %3 = alloca i32, align 4 can be cloned
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.jpeg_decompress_struct, align 8
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
DOALL: WARNING: function NOELLE_DOALLDispatcher couldn't be found. DOALL is disabled
Inliner:   No remaining calls need to be inlined due to loop-carried data dependences
Inliner:   The code has not been modified
Inliner: Exit
Noelle:  Function "main"
Noelle:     Loop "  %95 = load i8**, i8*** %92, align 8, !tbaa !55" (8.500675e+01%)
Noelle:  Function "decode_mcu_AC_refine"
Noelle:     Loop "  %41 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %40" (0.000000e+00%)
Noelle:     Loop "  %87 = icmp slt i32 %85, 8" (7.532378e-01%)
Noelle:     Loop "  %172 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %167" (4.414490e-01%)
Noelle:     Loop "  %255 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %252" (3.128522e+00%)
Noelle:     Loop "  %312 = add nsw i64 %310, -1" (0.000000e+00%)
Noelle:     Loop "  %322 = add nsw i64 %321, -1" (0.000000e+00%)
Noelle:  Function "ycc_rgb_convert"
Noelle:     Loop "  %34 = load i8**, i8*** %1, align 8, !tbaa !49" (3.166153e+00%)
Noelle:     Loop "  %47 = getelementptr inbounds i8, i8* %37, i64 %45" (3.166014e+00%)
Noelle:  Function "jpeg_idct_islow"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8" (1.321381e+00%)
Noelle:     Loop "  %177 = getelementptr inbounds i8*, i8** %3, i64 %175" (1.634890e+00%)
Noelle:  Function "h2v2_fancy_upsample"
Noelle:     Loop "  %13 = getelementptr inbounds i8*, i8** %2, i64 %11" (2.303133e+00%)
Noelle:     Loop "  %63 = getelementptr inbounds i8, i8* %62, i64 1" (1.151099e+00%)
Noelle:     Loop "  %142 = getelementptr inbounds i8, i8* %141, i64 1" (1.151099e+00%)
Noelle:  Function "decode_mcu_AC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %6, i64 0, i32 2, i32 1, i64 %36" (0.000000e+00%)
Noelle:     Loop "  %79 = icmp slt i32 %76, 8" (1.332269e+00%)
Noelle:  Function "jpeg_fill_bit_buffer"
Noelle:     Loop "  %18 = load i32, i32* %11, align 8, !tbaa !39" (4.196499e-01%)
Noelle:     Loop "  %47 = icmp eq i64 %46, 0" (1.862061e-03%)
Noelle:  Function "consume_data"
Noelle:     Loop "  %15 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %14" (1.422721e-04%)
Noelle:     Loop "  %52 = icmp ult i32 %50, %49" (5.557591e-01%)
Noelle:     Loop "  %54 = load i32, i32* %7, align 8, !tbaa !39" (5.556535e-01%)
Noelle:     Loop "  %60 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %58" (4.441899e-01%)
Noelle:     Loop "  %129 = add nsw i64 %127, %51" (0.000000e+00%)
Noelle:     Loop "  %135 = add i64 %134, %133" (0.000000e+00%)
Noelle:     Loop "  %158 = getelementptr inbounds [64 x i16], [64 x i16]* %156, i64 1" (0.000000e+00%)
Noelle:     Loop "  %101 = add nsw i64 %99, %51" (0.000000e+00%)
Noelle:     Loop "  %107 = add i64 %106, %105" (0.000000e+00%)
Noelle:     Loop "  %83 = sext i32 %82 to i64" (1.942275e-01%)
Noelle:     Loop "  %91 = getelementptr inbounds [64 x i16], [64 x i16]* %89, i64 1" (9.120248e-02%)
Noelle:  Function "decode_mcu_DC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %36" (0.000000e+00%)
Noelle:     Loop "  %72 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %69" (1.631177e-01%)
Noelle:  Function "decode_mcu_DC_refine"
Noelle:     Loop "  %36 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %6, i64 0, i32 2, i32 1, i64 %35" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %67" (4.839573e-02%)
Noelle:  Function "decompress_data"
Noelle:     Loop "  %14 = load i32, i32* %9, align 4, !tbaa !40" (4.364175e-06%)
Noelle:     Loop "  %39 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %38, i64 0, i32 12" (2.204084e-02%)
Noelle:     Loop "  %80 = icmp eq i32 %77, 0" (2.198628e-02%)
Noelle:     Loop "  %89 = getelementptr inbounds [64 x i16], [64 x i16]* %87, i64 0, i64 0" (2.195442e-02%)
Noelle:  Function "jpeg_huff_decode"
Noelle:     Loop "  %36 = shl i64 %33, 1" (4.188309e-03%)
Noelle:  Function "sep_upsample"
Noelle:     Loop "  %25 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %10, i64 0, i32 2, i64 %23" (2.162790e-04%)
Noelle:  Function "access_virt_barray"
Noelle:     Loop "  %80 = mul nsw i64 %77, %47" (0.000000e+00%)
Noelle:     Loop "  %162 = mul nsw i64 %159, %131" (0.000000e+00%)
Noelle:     Loop "  %226 = load [64 x i16]**, [64 x i16]*** %223, align 8, !tbaa !40" (1.963978e-05%)
Noelle:  Function "process_data_context_main"
Noelle:     Loop "  %74 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %73, i64 0, i32 3" (1.830776e-07%)
Noelle:     Loop "  %103 = load i64, i64* %99, align 8, !tbaa !47" (7.619988e-08%)
Noelle:     Loop "  %151 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %150, i64 0, i32 3" (2.196932e-07%)
Noelle:     Loop "  %177 = add nsw i64 %175, %168" (6.036614e-08%)
Noelle:  Function "jpeg_read_scanlines"
Noelle:  Function "jpeg_start_decompress"
Noelle:     Loop "  %23 = icmp eq %struct.jpeg_progress_mgr* %22, null" (8.747251e-05%)
Noelle:  Function "fill_input_buffer"
Noelle:  Function "put_pixel_rows"
Noelle:  Function "start_pass_phuff_decoder"
Noelle:     Loop "  %101 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %100" (7.601185e-06%)
Noelle:     Loop "  %125 = getelementptr inbounds [64 x i32], [64 x i32]* %105, i64 %106, i64 %124" (7.411180e-06%)
Noelle:     Loop "  %63 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %62" (2.355269e-07%)
Noelle:     Loop "  %74 = getelementptr inbounds [64 x i32], [64 x i32]* %67, i64 %68, i64 %73" (9.500244e-08%)
Noelle:     Loop "  %194 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %193" (2.525581e-05%)
Noelle:     Loop "  %166 = icmp eq i32 %164, 0" (9.518057e-06%)
Noelle:  Function "jpeg_make_d_derived_tbl"
Noelle:     Loop "  %24 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %21" (6.196930e-06%)
Noelle:     Loop "  %50 = add nsw <2 x i64> %47, <i64 8, i64 8>" (0.000000e+00%)
Noelle:     Loop "  %62 = add nsw <2 x i64> %59, <i64 1, i64 1>" (3.305293e-07%)
Noelle:     Loop "  %97 = sext i8 %93 to i32" (7.383471e-06%)
Noelle:     Loop "  %103 = add nsw i64 %101, 1" (4.026718e-06%)
Noelle:     Loop "  %124 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %122" (4.675902e-06%)
Noelle:     Loop "  %155 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %153" (1.579713e-05%)
Noelle:     Loop "  %262 = add nsw i64 %170, %259" (8.395841e-06%)
Noelle:     Loop "  %292 = add i64 %290, %268" (5.114298e-06%)
Noelle:     Loop "  %332 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %330" (0.000000e+00%)
Noelle:     Loop "  %188 = add nsw i64 %170, %185" (7.728845e-07%)
Noelle:     Loop "  %227 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %225" (0.000000e+00%)
Noelle:     Loop "  %241 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 1, i64 %239" (3.145966e-06%)
Noelle:     Loop "  %248 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %246" (2.076199e-06%)
Noelle:  Function "read_markers"
Noelle:     Loop "  %34 = icmp eq i32 %33, 0" (1.519247e-05%)
Noelle:     Loop "  %682 = icmp eq i64 %679, 0" (2.787728e-06%)
Noelle:     Loop "  %748 = icmp eq i64 %746, 0" (0.000000e+00%)
Noelle:     Loop "  %725 = icmp eq i64 %723, 0" (2.658089e-06%)
Noelle:     Loop "  %406 = icmp eq i64 %403, 0" (0.000000e+00%)
Noelle:     Loop "  %516 = icmp eq i64 %514, 0" (9.937651e-06%)
Noelle:     Loop "  %540 = icmp eq i64 %537, 0" (3.156852e-06%)
Noelle:     Loop "  %597 = icmp eq i64 %595, 0" (5.766450e-06%)
Noelle:     Loop "  br i1 %221, label %224, label %.loopexit._crit_edge.._crit_edge204_crit_edge, !prof !80" (9.797127e-07%)
Noelle:     Loop "  %254 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %252, i64 0, i32 0" (2.137555e-07%)
Noelle:  Function "realize_virt_arrays"
Noelle:     Loop "  %11 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %8, i64 0, i32 0" (0.000000e+00%)
Noelle:     Loop "  %41 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %38, i64 0, i32 0" (8.807518e-08%)
Noelle:     Loop "  %92 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %91, i64 0, i32 0" (1.805046e-06%)
Noelle:     Loop "  %143 = sub i32 %119, %141" (0.000000e+00%)
Noelle:     Loop "  %191 = add i32 %189, 1" (0.000000e+00%)
Noelle:     Loop "  %206 = add i32 %205, 1" (0.000000e+00%)
Noelle:     Loop "  %234 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %233, i64 0, i32 0" (1.227709e-05%)
Noelle:     Loop "  %288 = sub i32 %262, %286" (1.197427e-05%)
Noelle:     Loop "  %332 = add i32 %330, 1" (4.453240e-08%)
Noelle:     Loop "  %347 = add i32 %346, 1" (1.175358e-05%)
Noelle:  Function "jinit_master_decompress"
Noelle:  Function "fullsize_upsample"
Noelle:  Function "jinit_color_deconverter"
Noelle:     Loop "  %187 = mul nsw i64 %186, 91881" (0.000000e+00%)
Noelle:     Loop "  %124 = mul nsw i64 %123, 91881" (6.585847e-06%)
Noelle:     Loop "  %72 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 %70, i32 12" (0.000000e+00%)
Noelle:     Loop "  %231 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 %229, i32 12" (0.000000e+00%)
Noelle:  Function "parse_switches"
Noelle:     Loop "  %27 = sext i32 %26 to i64" (4.213754e-06%)
Noelle:  Function "keymatch"
Noelle:     Loop "  %10 = getelementptr inbounds i8, i8* %7, i64 1" (3.002473e-06%)
Noelle:  Function "jzero_far"
Noelle:  Function "alloc_small"
Noelle:     Loop "  %35 = getelementptr inbounds %union.small_pool_struct, %union.small_pool_struct* %34, i64 0, i32 0, i32 2" (3.137060e-07%)
Noelle:     Loop "  %59 = lshr i64 %58, 1" (0.000000e+00%)
Noelle:  Function "consume_markers"
Noelle:     Loop "  %76 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %74, i64 0, i32 2" (9.401284e-08%)
Noelle:     Loop "  %127 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %125, i64 0, i32 9" (1.464621e-07%)
Noelle:  Function "start_input_pass"
Noelle:     Loop "  %72 = getelementptr inbounds %struct.jpeg_decompress_struct.261, %struct.jpeg_decompress_struct.261* %0, i64 0, i32 63, i64 %71" (4.393863e-07%)
Noelle:     Loop "  %112 = load i32, i32* %64, align 8, !tbaa !55" (3.958435e-08%)
Noelle:     Loop "  %122 = load i32, i32* %64, align 8, !tbaa !55" (5.541809e-08%)
Noelle:     Loop "  %153 = getelementptr inbounds %struct.jpeg_decompress_struct.261, %struct.jpeg_decompress_struct.261* %0, i64 0, i32 63, i64 %152" (2.602671e-07%)
Noelle:  Function "alloc_sarray"
Noelle:     Loop "  %29 = sub i32 %3, %27" (6.778820e-07%)
Noelle:     Loop "  %43 = add i32 %41, 1" (9.104401e-08%)
Noelle:     Loop "  %58 = add i32 %57, 1" (2.375061e-07%)
Noelle:  Function "next_marker"
Noelle:     Loop "  %13 = icmp eq i64 %12, 0" (6.056406e-07%)
Noelle:     Loop "  %29 = load %struct.jpeg_marker_reader.278*, %struct.jpeg_marker_reader.278** %9, align 8, !tbaa !47" (0.000000e+00%)
Noelle:     Loop "  %51 = icmp eq i64 %50, 0" (2.018802e-07%)
Noelle:  Function "start_pass_main"
Noelle:     Loop "  %28 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %27, i64 0, i32 3" (7.234040e-07%)
Noelle:     Loop "  %92 = getelementptr inbounds i8*, i8** %41, i64 %90" (1.712023e-07%)
Noelle:     Loop "  %54 = getelementptr inbounds i8*, i8** %41, i64 %52" (6.135575e-08%)
Noelle:     Loop "  %270 = getelementptr inbounds i8*, i8** %41, i64 %269" (0.000000e+00%)
Noelle:     Loop "  %195 = add nsw i64 %193, %148" (0.000000e+00%)
Noelle:     Loop "  %312 = add nsw i64 %311, %148" (7.323105e-08%)
Noelle:     Loop "  %328 = load i64, i64* %303, align 8, !tbaa !53" (0.000000e+00%)
Noelle:     Loop "  %354 = load i64, i64* %303, align 8, !tbaa !53" (4.453240e-08%)
Noelle:  Function "emit_message"
Noelle:  Function "start_pass"
Noelle:     Loop "  %18 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %15, i64 0, i32 9" (4.769914e-07%)
Noelle:     Loop "  %186 = getelementptr inbounds [8 x double], [8 x double]* @start_pass.aanscalefactor, i64 0, i64 %185" (0.000000e+00%)
Noelle:     Loop "  %155 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %50, i64 0, i32 0, i64 %154" (0.000000e+00%)
Noelle:  Function "jpeg_calc_output_dimensions"
Noelle:     Loop "  %113 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 0, i32 9" (5.145966e-08%)
Noelle:     Loop "  %85 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %83, i64 0, i32 3" (0.000000e+00%)
Noelle:     Loop "  %89 = shl i32 %88, 1" (0.000000e+00%)
Noelle:     Loop "  %118 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %116, i64 0, i32 2" (1.959425e-07%)
Noelle:  Function "get_sof"
Noelle:     Loop "  %217 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %216, i64 0, i32 1" (1.979218e-07%)
Noelle:  Function "free_pool"
Noelle:     Loop "  %22 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %21, i64 0, i32 10" (0.000000e+00%)
Noelle:     Loop "  %36 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %35, i64 0, i32 10" (3.166748e-08%)
Noelle:     Loop "  %54 = bitcast %union.large_pool_struct* %53 to i8*" (1.425037e-07%)
Noelle:     Loop "  %73 = bitcast %union.small_pool_struct* %72 to i8*" (8.807518e-08%)
Noelle:  Function "get_app0"
Noelle:     Loop "  %47 = icmp eq i64 %45, 0" (2.345373e-07%)
Noelle:  Function "start_output_pass"
Noelle:     Loop "  %48 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 0, i32 19" (2.246412e-07%)
Noelle:  Function "jinit_write_ppm"
Noelle:  Function "self_destruct"
Noelle:  Function "jinit_d_main_controller"
Noelle:     Loop "  %65 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %64, i64 0, i32 3" (1.029193e-07%)
Noelle:     Loop "  %112 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 0, i32 3" (7.718949e-08%)
Noelle:  Function "start_input_pass.105"
Noelle:  Function "request_virt_barray"
Noelle:  Function "jinit_upsampler"
Noelle:     Loop "  %53 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %52, i64 0, i32 2" (2.303203e+00%)
Noelle:  Function "alloc_large"
Noelle:  Function "jpeg_CreateDecompress"
Noelle:  Function "jinit_d_coef_controller"
Noelle:     Loop "  %29 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %28, i64 0, i32 3" (1.286491e-07%)
Noelle:  Function "jdiv_round_up"
Noelle:  Function "jinit_marker_reader"
Noelle:  Function "jpeg_read_header"
Noelle:  Function "jinit_inverse_dct"
Noelle:     Loop "  %21 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (5.244927e-08%)
Noelle:  Function "jpeg_consume_input"
Noelle:  Function "prepare_for_output_pass"
Noelle:  Function "jinit_memory_mgr"
Noelle:  Function "jinit_phuff_decoder"
Noelle:     Loop "  %29 = bitcast i32* %28 to i8*" (2.869865e-08%)
Noelle:  Function "jpeg_finish_decompress"
Noelle:     Loop "  %37 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %36, align 8, !tbaa !53" (4.948044e-09%)
Noelle:  Function "finish_input_pass"
Noelle:  Function "jpeg_alloc_huff_table"
Noelle:  Function "jround_up"
Noelle:  Function "jpeg_stdio_src"
Noelle:  Function "output_pass_setup"
Noelle:     Loop "  %25 = load i32, i32* %18, align 4, !tbaa !47" (0.000000e+00%)
Noelle:  Function "jinit_input_controller"
Noelle:  Function "start_pass_dpost"
Noelle:  Function "reset_input_controller"
Noelle:  Function "jpeg_std_error"
Noelle:  Function "jinit_d_post_controller"
Noelle:  Function "jpeg_alloc_quant_table"
Noelle:  Function "start_output_ppm"
Noelle:  Function "jpeg_destroy_decompress"
Noelle:  Function "jpeg_get_large"
Noelle:  Function "jpeg_free_large"
Noelle:  Function "reset_marker_reader"
Noelle:  Function "jpeg_destroy"
Noelle:  Function "finish_output_pass"
Noelle:  Function "jpeg_free_small"
Noelle:  Function "start_pass_upsample"
Noelle:  Function "jpeg_abort"
Noelle:  Function "jpeg_get_small"
Noelle:  Function "finish_output_ppm"
Noelle:  Function "jpeg_set_marker_processor"
Noelle:  Function "reset_error_mgr"
Noelle:  Function "init_source"
Noelle:  Function "start_pass_dcolor"
Noelle:  Function "term_source"
Noelle:  Function "jpeg_mem_available"
Noelle:  Function "read_restart_marker"
Noelle:  Function "skip_variable"
Noelle:  Function "jcopy_sample_rows"
Noelle:     Loop "  %29 = getelementptr inbounds i8*, i8** %27, i64 1" (0.000000e+00%)
Noelle:  Function "get_app14"
Noelle:     Loop "  %47 = icmp eq i64 %45, 0" (0.000000e+00%)
Noelle:  Function "jcopy_block_row"
Noelle:  Function "error_exit"
Noelle:  Function "output_message"
Noelle:  Function "format_message"
Noelle:     Loop "  %41 = getelementptr inbounds i8, i8* %40, i64 1" (0.000000e+00%)
Noelle:  Function "jpeg_resync_to_restart"
Noelle:     Loop "  %29 = icmp slt i32 %28, 192" (0.000000e+00%)
Noelle:  Function "jpeg_mem_init"
Noelle:  Function "jpeg_mem_term"
Noelle:  Function "prescan_quantize"
Noelle:     Loop "  %17 = getelementptr inbounds i8*, i8** %1, i64 %16" (0.000000e+00%)
Noelle:     Loop "  %21 = load i8, i8* %19, align 1, !tbaa !43" (0.000000e+00%)
Noelle:  Function "access_virt_sarray"
Noelle:     Loop "  %79 = mul nsw i64 %76, %46" (0.000000e+00%)
Noelle:     Loop "  %159 = mul nsw i64 %156, %128" (0.000000e+00%)
Noelle:     Loop "  %221 = load i8**, i8*** %218, align 8, !tbaa !38" (0.000000e+00%)
Noelle:  Function "jpeg_open_backing_store"
Noelle:  Function "process_data_simple_main"
Noelle:  Function "process_data_crank_post"
Noelle:  Function "request_virt_sarray"
Noelle:  Function "alloc_barray"
Noelle:     Loop "  %31 = sub i32 %3, %29" (0.000000e+00%)
Noelle:     Loop "  %46 = add i32 %44, 1" (0.000000e+00%)
Noelle:     Loop "  %61 = add i32 %60, 1" (0.000000e+00%)
Noelle:  Function "start_pass_huff_decoder"
Noelle:     Loop "  %33 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 63, i64 %32" (9.896088e-09%)
Noelle:  Function "dummy_consume_data"
Noelle:  Function "jpeg_idct_ifast"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8" (0.000000e+00%)
Noelle:     Loop "  %151 = getelementptr inbounds i8*, i8** %3, i64 %149" (0.000000e+00%)
Noelle:  Function "jpeg_idct_float"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8" (0.000000e+00%)
Noelle:     Loop "  %132 = getelementptr inbounds i8*, i8** %3, i64 %130" (0.000000e+00%)
Noelle:  Function "h2v1_merged_upsample"
Noelle:     Loop "  %40 = getelementptr inbounds i8, i8* %37, i64 1" (0.000000e+00%)
Noelle:  Function "finish_pass1"
Noelle:     Loop "  %32 = add nuw i64 %29, 1" (0.000000e+00%)
Noelle:     Loop "  %50 = getelementptr inbounds %struct.box, %struct.box* %48, i64 0, i32 7" (0.000000e+00%)
Noelle:     Loop "  %68 = getelementptr inbounds %struct.box, %struct.box* %66, i64 0, i32 6" (0.000000e+00%)
Noelle:     Loop "  %103 = getelementptr inbounds %struct.box, %struct.box* %101, i64 0, i32 6" (0.000000e+00%)
Noelle:     Loop "  %181 = load %struct.my_cquantizer.611*, %struct.my_cquantizer.611** %3, align 8, !tbaa !30" (0.000000e+00%)
Noelle:     Loop "  %211 = getelementptr inbounds [32 x i16]*, [32 x i16]** %183, i64 %206" (0.000000e+00%)
Noelle:     Loop "  %222 = getelementptr inbounds [32 x i16], [32 x i16]* %212, i64 %217, i64 %199" (0.000000e+00%)
Noelle:     Loop "  %233 = getelementptr inbounds i16, i16* %232, i64 1" (0.000000e+00%)
Noelle:  Function "pass2_fs_dither"
Noelle:     Loop "  %48 = getelementptr inbounds i8*, i8** %1, i64 %47" (0.000000e+00%)
Noelle:     Loop "  %86 = getelementptr inbounds i16, i16* %83, i64 %68" (0.000000e+00%)
Noelle:     Loop "  %40 = icmp eq i32 %38, 0" (0.000000e+00%)
Noelle:  Function "jinit_huff_decoder"
Noelle:  Function "pass2_no_dither"
Noelle:     Loop "  %17 = getelementptr inbounds i8*, i8** %2, i64 %16" (0.000000e+00%)
Noelle:     Loop "  %24 = getelementptr inbounds i8, i8* %21, i64 1" (0.000000e+00%)
Noelle:  Function "finish_pass2"
Noelle:  Function "fill_inverse_cmap"
Noelle:     Loop "  %49 = getelementptr inbounds i8, i8* %41, i64 %47" (0.000000e+00%)
Noelle:     Loop "  %179 = getelementptr inbounds [256 x i64], [256 x i64]* %6, i64 0, i64 %176" (0.000000e+00%)
Noelle:     Loop "  %340 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %339" (0.000000e+00%)
Noelle:     Loop "  %382 = load i64, i64* %380, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %599 = load i64, i64* %597, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %634 = load i64, i64* %632, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %669 = load i64, i64* %667, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %428 = add nuw nsw i64 %426, %418" (0.000000e+00%)
Noelle:  Function "update_box"
Noelle:     Loop "  %30 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %29" (0.000000e+00%)
Noelle:     Loop "  %33 = getelementptr inbounds [32 x i16], [32 x i16]* %31, i64 %32, i64 %23" (0.000000e+00%)
Noelle:     Loop "  %36 = load i16, i16* %34, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %57 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %56" (0.000000e+00%)
Noelle:     Loop "  %60 = getelementptr inbounds [32 x i16], [32 x i16]* %58, i64 %59, i64 %50" (0.000000e+00%)
Noelle:     Loop "  %63 = load i16, i16* %61, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader18" (0.000000e+00%)
Noelle:     Loop "  %86 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %85" (0.000000e+00%)
Noelle:     Loop "  %91 = load i16, i16* %89, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader14" (0.000000e+00%)
Noelle:     Loop "  %112 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %111" (0.000000e+00%)
Noelle:     Loop "  %117 = load i16, i16* %115, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader10" (0.000000e+00%)
Noelle:     Loop "  %139 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %138" (0.000000e+00%)
Noelle:     Loop "  %144 = load i16, i16* %142, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader6" (0.000000e+00%)
Noelle:     Loop "  %165 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %164" (0.000000e+00%)
Noelle:     Loop "  %170 = load i16, i16* %168, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %248 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %246" (0.000000e+00%)
Noelle:     Loop "  %254 = load i16, i16* %252, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %263 = getelementptr inbounds [32 x i16], [32 x i16]* %249, i64 %261, i64 %199" (0.000000e+00%)
Noelle:     Loop "  %267 = load i16, i16* %265, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %283 = load i16, i16* %281, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %215 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %213" (0.000000e+00%)
Noelle:     Loop "  %219 = getelementptr inbounds [32 x i16], [32 x i16]* %216, i64 %217, i64 %199" (0.000000e+00%)
Noelle:     Loop "  %223 = load i16, i16* %221, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %235 = load i16, i16* %233, align 2, !tbaa !50" (0.000000e+00%)
Noelle:  Function "jinit_merged_upsampler"
Noelle:     Loop "  %75 = mul nsw i64 %74, 91881" (0.000000e+00%)
Noelle:  Function "start_pass_merged_upsample"
Noelle:  Function "merged_2v_upsample"
Noelle:  Function "h2v2_merged_upsample"
Noelle:     Loop "  %50 = getelementptr inbounds i8, i8* %45, i64 1" (0.000000e+00%)
Noelle:  Function "merged_1v_upsample"
Noelle:  Function "jpeg_idct_4x4"
Noelle:     Loop "  %21 = icmp eq i32 %17, 4" (0.000000e+00%)
Noelle:     Loop "  %132 = getelementptr inbounds i8*, i8** %3, i64 %130" (0.000000e+00%)
Noelle:  Function "quantize_fs_dither"
Noelle:     Loop "  %124 = getelementptr inbounds i8*, i8** %2, i64 %123" (0.000000e+00%)
Noelle:     Loop "  %32 = getelementptr inbounds i8*, i8** %2, i64 %31" (0.000000e+00%)
Noelle:     Loop "  %36 = load i8*, i8** %34, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds i16, i16* %67, i64 %54" (0.000000e+00%)
Noelle:     Loop "  %108 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %7, i64 0, i32 8, i64 %107" (0.000000e+00%)
Noelle:     Loop "  %119 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %7, i64 0, i32 8, i64 %118" (0.000000e+00%)
Noelle:  Function "jinit_2pass_quantizer"
Noelle:     Loop "  %34 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (0.000000e+00%)
Noelle:  Function "start_pass_2_quant"
Noelle:     Loop "  %80 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %79" (0.000000e+00%)
Noelle:  Function "new_color_map_2_quant"
Noelle:  Function "init_error_limit"
Noelle:     Loop "  %37 = getelementptr inbounds i32, i32* %12, i64 %35" (0.000000e+00%)
Noelle:     Loop "  %49 = getelementptr inbounds i32, i32* %12, i64 %48" (0.000000e+00%)
Noelle:  Function "quantize_ord_dither"
Noelle:     Loop "  %25 = getelementptr inbounds i8*, i8** %2, i64 %24" (0.000000e+00%)
Noelle:     Loop "  %79 = load i8*, i8** %25, align 8, !tbaa !40" (0.000000e+00%)
Noelle:     Loop "  %100 = load i8**, i8*** %17, align 8, !tbaa !44" (0.000000e+00%)
Noelle:     Loop "  %112 = load i8, i8* %108, align 1, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %32 = load i8**, i8*** %17, align 8, !tbaa !44" (0.000000e+00%)
Noelle:     Loop "  %44 = load i8, i8* %40, align 1, !tbaa !45" (0.000000e+00%)
Noelle:  Function "jpeg_idct_2x2"
Noelle:     Loop "  %Pivot6 = icmp ult i32 %32, 4" (0.000000e+00%)
Noelle:  Function "jpeg_idct_1x1"
Noelle:  Function "noop_upsample"
Noelle:  Function "h2v1_fancy_upsample"
Noelle:     Loop "  %12 = getelementptr inbounds i8*, i8** %2, i64 %11" (0.000000e+00%)
Noelle:     Loop "  %48 = shl i64 %47, 1" (0.000000e+00%)
Noelle:     Loop "  %121 = getelementptr inbounds i8, i8* %120, i64 1" (0.000000e+00%)
Noelle:  Function "h2v1_upsample"
Noelle:     Loop "  %13 = getelementptr inbounds i8*, i8** %5, i64 %12" (0.000000e+00%)
Noelle:     Loop "  %24 = getelementptr inbounds i8, i8* %22, i64 1" (0.000000e+00%)
Noelle:  Function "h2v2_upsample"
Noelle:     Loop "  %14 = getelementptr inbounds i8*, i8** %5, i64 %12" (0.000000e+00%)
Noelle:     Loop "  %25 = getelementptr inbounds i8, i8* %23, i64 1" (0.000000e+00%)
Noelle:  Function "int_upsample"
Noelle:     Loop "  %92 = getelementptr inbounds i8*, i8** %8, i64 %90" (0.000000e+00%)
Noelle:     Loop "  %102 = load i8, i8* %100, align 1, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %61 = getelementptr inbounds i8*, i8** %8, i64 %59" (0.000000e+00%)
Noelle:     Loop "  %71 = getelementptr inbounds i8, i8* %69, i64 1" (0.000000e+00%)
Noelle:     Loop "  %85 = icmp eq i32 %.pre, 0" (0.000000e+00%)
Noelle:     Loop "  %32 = load i32, i32* %22, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  br label %.loopexit.us.us" (0.000000e+00%)
Noelle:  Function "grayscale_convert"
Noelle:  Function "start_output_tga"
Noelle:     Loop "  %114 = load i8**, i8*** %111, align 8, !tbaa !53" (0.000000e+00%)
Noelle:  Function "null_convert"
Noelle:     Loop "  %24 = add nsw i32 %21, -1" (0.000000e+00%)
Noelle:     Loop "  %83 = getelementptr inbounds i8**, i8*** %1, i64 %82" (0.000000e+00%)
Noelle:     Loop "  %92 = getelementptr inbounds i8, i8* %90, i64 1" (0.000000e+00%)
Noelle:     Loop "  %100 = getelementptr inbounds i8, i8* %99, i64 1" (0.000000e+00%)
Noelle:     Loop "  %28 = getelementptr inbounds i8**, i8*** %1, i64 %27" (0.000000e+00%)
Noelle:     Loop "  %37 = getelementptr inbounds i8, i8* %35, i64 1" (0.000000e+00%)
Noelle:     Loop "  %45 = getelementptr inbounds i8**, i8*** %1, i64 %44" (0.000000e+00%)
Noelle:     Loop "  %54 = getelementptr inbounds i8, i8* %53, i64 1" (0.000000e+00%)
Noelle:  Function "COM_handler"
Noelle:     Loop "  %115 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %7, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %65 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %7, align 8, !tbaa !41" (0.000000e+00%)
Noelle:  Function "usage"
Noelle:  Function "copy_pixel_rows"
Noelle:     Loop "  %40 = getelementptr i8, i8* %14, i64 %38" (0.000000e+00%)
Noelle:     Loop "  %90 = getelementptr i8, i8* %14, i64 %88" (0.000000e+00%)
Noelle:     Loop "  %112 = getelementptr inbounds i8, i8* %109, i64 1" (0.000000e+00%)
Noelle:     Loop "  %125 = getelementptr inbounds i8, i8* %123, i64 1" (0.000000e+00%)
Noelle:  Function "put_demapped_gray"
Noelle:     Loop "  %23 = getelementptr inbounds i8, i8* %21, i64 1" (0.000000e+00%)
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %38, i64 1" (0.000000e+00%)
Noelle:  Function "put_demapped_rgb"
Noelle:     Loop "  %44 = getelementptr inbounds i8, i8* %43, i64 1" (0.000000e+00%)
Noelle:  Function "ycck_cmyk_convert"
Noelle:     Loop "  %35 = load i8**, i8*** %1, align 8, !tbaa !46" (0.000000e+00%)
Noelle:     Loop "  %51 = getelementptr inbounds i8, i8* %38, i64 %49" (0.000000e+00%)
Noelle:  Function "jinit_1pass_quantizer"
Noelle:     Loop "  %78 = add nuw i64 %77, 1" (0.000000e+00%)
Noelle:     Loop "  %81 = mul nsw i64 %79, %78" (0.000000e+00%)
Noelle:     Loop "  %93 = mul nsw i64 %91, %78" (0.000000e+00%)
Noelle:     Loop "  %55 = add nuw i64 %54, 1" (0.000000e+00%)
Noelle:     Loop "  %58 = mul nsw i64 %56, %55" (0.000000e+00%)
Noelle:     Loop "  %70 = add nuw i64 %69, 1" (0.000000e+00%)
Noelle:     Loop "  %74 = mul nsw i64 %72, %70" (0.000000e+00%)
Noelle:     Loop "  %130 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %126" (0.000000e+00%)
Noelle:     Loop "  %170 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %166" (0.000000e+00%)
Noelle:     Loop "  %235 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %233" (0.000000e+00%)
Noelle:     Loop "  br label %._crit_edge132" (0.000000e+00%)
Noelle:     Loop "  %sext = shl i64 %214, 32" (0.000000e+00%)
Noelle:     Loop "  br label %._crit_edge133.us" (0.000000e+00%)
Noelle:     Loop "  %195 = getelementptr inbounds [3 x i32], [3 x i32]* @select_ncolors.RGB_order, i64 0, i64 %192" (0.000000e+00%)
Noelle:     Loop "  %276 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %274" (0.000000e+00%)
Noelle:     Loop "  %297 = trunc i64 %295 to i32" (0.000000e+00%)
Noelle:     Loop "  %349 = add i64 %348, %287" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader3.us" (0.000000e+00%)
Noelle:     Loop "  %320 = load i8*, i8** %286, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %340 = load i8*, i8** %286, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  br i1 %294, label %.split.us.us..loopexit2.us.us_crit_edge, label %.preheader1.us.preheader.us" (0.000000e+00%)
Noelle:     Loop "  %309 = load i8*, i8** %286, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %375 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (0.000000e+00%)
Noelle:     Loop "  br label %.loopexit15.us.us.us" (0.000000e+00%)
Noelle:  Function "start_pass_1_quant"
Noelle:     Loop "  %115 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %112, align 8, !tbaa !51" (0.000000e+00%)
Noelle:     Loop "  %134 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 8, i64 %133" (0.000000e+00%)
Noelle:     Loop "  %45 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %37, i64 0, i32 5, i64 %44" (0.000000e+00%)
Noelle:     Loop "  %51 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %37, i64 0, i32 5, i64 %50" (0.000000e+00%)
Noelle:     Loop "  br label %._crit_edge27" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @base_dither_matrix, i64 0, i64 %68, i64 %69" (0.000000e+00%)
Noelle:  Function "finish_pass_1_quant"
Noelle:  Function "new_color_map_1_quant"
Noelle:  Function "create_colorindex"
Noelle:     Loop "  %98 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 5, i64 %96" (0.000000e+00%)
Noelle:     Loop "  %113 = sext i32 %112 to i64" (0.000000e+00%)
Noelle:     Loop "  %118 = add i64 %117, 1" (0.000000e+00%)
Noelle:     Loop "  %28 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 5, i64 %26" (0.000000e+00%)
Noelle:     Loop "  %47 = sext i32 %46 to i64" (0.000000e+00%)
Noelle:     Loop "  %52 = add i64 %51, 1" (0.000000e+00%)
Noelle:     Loop "  %76 = load i8, i8* %36, align 1, !tbaa !51" (0.000000e+00%)
Noelle:  Function "color_quantize3"
Noelle:     Loop "  %97 = getelementptr inbounds i8*, i8** %2, i64 %96" (0.000000e+00%)
Noelle:     Loop "  %122 = getelementptr inbounds i8, i8* %119, i64 1" (0.000000e+00%)
Noelle:     Loop "  %26 = getelementptr inbounds i8*, i8** %2, i64 %25" (0.000000e+00%)
Noelle:     Loop "  %49 = getelementptr inbounds i8*, i8** %1, i64 %48" (0.000000e+00%)
Noelle:     Loop "  %56 = getelementptr inbounds i8, i8* %53, i64 1" (0.000000e+00%)
Noelle:  Function "color_quantize"
Noelle:     Loop "  %29 = getelementptr inbounds i8*, i8** %2, i64 %28" (0.000000e+00%)
Noelle:     Loop "  %131 = getelementptr inbounds i8, i8* %130, i64 1" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader1.us" (0.000000e+00%)
Noelle:     Loop "  %65 = getelementptr inbounds i8*, i8** %9, i64 %61" (0.000000e+00%)
Noelle:     Loop "  %111 = getelementptr inbounds i8*, i8** %9, i64 %107" (0.000000e+00%)
Noelle:     Loop "  br i1 %27, label %.loopexit.us._crit_edge.us..loopexit.us.us_crit_edge, label %.preheader.us.preheader.us" (0.000000e+00%)
Noelle:     Loop "  %40 = getelementptr inbounds i8*, i8** %9, i64 %36" (0.000000e+00%)
Noelle:  Function "quantize3_ord_dither"
Noelle:     Loop "  %34 = load [16 x i32]*, [16 x i32]** %20, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %46 = getelementptr inbounds i8, i8* %42, i64 1" (0.000000e+00%)
Noelle:     Loop "  %28 = add nsw i32 %26, 1" (0.000000e+00%)
Noelle:  Function "jpeg_start_output"
Noelle:  Function "read_pbm_integer"
Noelle:     Loop "  %4 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %6 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %31 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %33 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:  Function "read_stdin"
Noelle:  Function "decode_mcu"
Noelle:     Loop "  %35 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %7, i64 0, i32 2, i32 0, i64 %34" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %67" (2.975754e-05%)
Noelle:     Loop "  %97 = icmp eq i32 %92, 0" (0.000000e+00%)
Noelle:     Loop "  %123 = icmp eq i64 %122, 0" (0.000000e+00%)
Noelle:     Loop "  %214 = icmp eq i32 %209, 0" (0.000000e+00%)
Noelle:     Loop "  %240 = icmp eq i64 %239, 0" (0.000000e+00%)
Noelle:     Loop "  %327 = icmp slt i32 %326, 8" (0.000000e+00%)
Noelle:     Loop "  %337 = icmp eq i32 %332, 0" (0.000000e+00%)
Noelle:     Loop "  %363 = icmp eq i64 %362, 0" (0.000000e+00%)
Noelle:     Loop "  %457 = icmp eq i32 %452, 0" (0.000000e+00%)
Noelle:     Loop "  %483 = icmp eq i64 %482, 0" (0.000000e+00%)
Noelle:     Loop "  %572 = icmp slt i32 %571, 8" (0.000000e+00%)
Noelle:     Loop "  %582 = icmp eq i32 %577, 0" (0.000000e+00%)
Noelle:     Loop "  %608 = icmp eq i64 %607, 0" (0.000000e+00%)
Noelle:     Loop "  %701 = icmp eq i32 %696, 0" (0.000000e+00%)
Noelle:     Loop "  %727 = icmp eq i64 %726, 0" (0.000000e+00%)
Noelle:  Function "write_stdout"
Noelle:  Function "jpeg_abort_decompress"
Noelle:  Function "jpeg_input_complete"
Noelle:  Function "jpeg_has_multiple_scans"
Noelle:  Function "jpeg_read_raw_data"
Noelle:  Function "read_color_map"
Noelle:     Loop "  br label %.preheader13" (0.000000e+00%)
Noelle:     Loop "  %196 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %198 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %202 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %206 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %229 = getelementptr inbounds i8, i8* %219, i64 %228" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader3" (0.000000e+00%)
Noelle:     Loop "  %142 = tail call fastcc i32 @read_pbm_integer(%struct.jpeg_decompress_struct* %0, %struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %156 = getelementptr inbounds i8, i8* %146, i64 %155" (0.000000e+00%)
Noelle:     Loop "  %16 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %51 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %75 = getelementptr inbounds i8, i8* %65, i64 %74" (0.000000e+00%)
Noelle:  Function "jpeg_finish_output"
Noelle:     Loop "  %28 = load i32, i32* %25, align 4, !tbaa !48" (0.000000e+00%)
Noelle:  Function "decompress_onepass"
Noelle:     Loop "  %31 = icmp ugt i32 %29, %8" (0.000000e+00%)
Noelle:     Loop "  %33 = load i8*, i8** %21, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %132 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %130" (0.000000e+00%)
Noelle:     Loop "  %173 = load i32, i32* %26, align 8, !tbaa !59" (0.000000e+00%)
Noelle:     Loop "  %182 = add nsw i64 %180, %179" (0.000000e+00%)
Noelle:     Loop "  %51 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %49" (0.000000e+00%)
Noelle:     Loop "  %83 = load i32, i32* %26, align 8, !tbaa !59" (0.000000e+00%)
Noelle:     Loop "  %92 = add nsw i64 %90, %89" (0.000000e+00%)
Noelle:  Function "decompress_smooth_data"
Noelle:     Loop "  %17 = load i32, i32* %11, align 4, !tbaa !39" (0.000000e+00%)
Noelle:     Loop "  %57 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %56, i64 0, i32 12" (0.000000e+00%)
Noelle:     Loop "  %163 = getelementptr inbounds [64 x i16]*, [64 x i16]** %104, i64 %161" (0.000000e+00%)
Noelle:     Loop "  call void @jcopy_block_row([64 x i16]* nonnull %197, [64 x i16]* nonnull %3, i32 1) #18" (0.000000e+00%)
Noelle:  Function "post_process_1pass"
Noelle:  Function "post_process_prepass"
Noelle:  Function "post_process_2pass"
Noelle:  Function "skip_input_data"
Noelle:     Loop "  %18 = sub nsw i64 %17, %16" (0.000000e+00%)
Noelle:  Function "jpeg_new_colormap"
Noelle:  Function "finish_output_tga"
Noelle:  Function "jinit_write_gif"
Noelle:  Function "start_output_gif"
Noelle:  Function "put_pixel_rows.52"
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %38, i64 1" (0.000000e+00%)
Noelle:     Loop "  %74 = sub nsw i32 %73, %72" (0.000000e+00%)
Noelle:     Loop "  %100 = trunc i64 %99 to i8" (0.000000e+00%)
Noelle:     Loop "  %165 = trunc i64 %164 to i8" (0.000000e+00%)
Noelle:  Function "finish_output_gif"
Noelle:     Loop "  %42 = trunc i64 %41 to i8" (0.000000e+00%)
Noelle:     Loop "  %113 = trunc i64 %112 to i8" (0.000000e+00%)
Noelle:  Function "emit_header"
Noelle:     Loop "  %22 = shl i32 1, %21" (0.000000e+00%)
Noelle:     Loop "  %104 = icmp slt i64 %103, %78" (0.000000e+00%)
Noelle:     Loop "  %81 = icmp slt i64 %80, %78" (0.000000e+00%)
Noelle:     Loop "  %218 = trunc i64 %217 to i8" (0.000000e+00%)
Noelle:  Function "jinit_write_targa"
Noelle:  Function "put_demapped_gray.55"
Noelle:     Loop "  %23 = getelementptr inbounds i8, i8* %20, i64 1" (0.000000e+00%)
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %37, i64 1" (0.000000e+00%)
Noelle:  Function "put_gray_rows"
Noelle:     Loop "  %39 = getelementptr i8, i8* %6, i64 %37" (0.000000e+00%)
Noelle:     Loop "  %89 = getelementptr i8, i8* %6, i64 %87" (0.000000e+00%)
Noelle:     Loop "  %111 = getelementptr inbounds i8, i8* %109, i64 1" (0.000000e+00%)
Noelle:     Loop "  %124 = getelementptr inbounds i8, i8* %123, i64 1" (0.000000e+00%)
Noelle:  Function "put_pixel_rows.56"
Noelle:     Loop "  %34 = getelementptr inbounds i8, i8* %33, i64 2" (0.000000e+00%)
Noelle:  Function "jinit_write_bmp"
Noelle:  Function "start_output_bmp"
Noelle:  Function "finish_output_bmp"
Noelle:     Loop "  %272 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %241, align 8, !tbaa !61" (0.000000e+00%)
Noelle:     Loop "  %284 = load i8, i8* %282, align 1, !tbaa !46" (0.000000e+00%)
Noelle:     Loop "  %247 = sub i32 %245, %246" (0.000000e+00%)
Noelle:     Loop "  %263 = load i8, i8* %261, align 1, !tbaa !46" (0.000000e+00%)
Noelle:  Function "put_gray_rows.59"
Noelle:     Loop "  %51 = getelementptr i8, i8* %18, i64 %49" (0.000000e+00%)
Noelle:     Loop "  %101 = getelementptr i8, i8* %18, i64 %99" (0.000000e+00%)
Noelle:     Loop "  %123 = getelementptr inbounds i8, i8* %121, i64 1" (0.000000e+00%)
Noelle:     Loop "  %137 = getelementptr inbounds i8, i8* %136, i64 1" (0.000000e+00%)
Noelle:  Function "put_pixel_rows.60"
Noelle:     Loop "  %47 = getelementptr inbounds i8, i8* %46, i64 1" (0.000000e+00%)
Noelle:  Function "write_colormap"
Noelle:     Loop "  %93 = load i8*, i8** %6, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %31 = load i8*, i8** %6, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %75 = load i8*, i8** %51, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %56 = load i8*, i8** %51, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %111 = tail call i32 @putc(i32 %110, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %15 = tail call i32 @putc(i32 %14, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %138 = tail call i32 @putc(i32 0, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %131 = tail call i32 @putc(i32 0, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:  Function "main"
Noelle:     Loop "  %95 = load i8**, i8*** %92, align 8, !tbaa !55" (8.500675e+01%)
Noelle:  Function "decode_mcu_AC_refine"
Noelle:     Loop "  %41 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %40" (0.000000e+00%)
Noelle:     Loop "  %87 = icmp slt i32 %85, 8" (7.532378e-01%)
Noelle:     Loop "  %172 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %167" (4.414490e-01%)
Noelle:     Loop "  %255 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %252" (3.128522e+00%)
Noelle:     Loop "  %312 = add nsw i64 %310, -1" (0.000000e+00%)
Noelle:     Loop "  %322 = add nsw i64 %321, -1" (0.000000e+00%)
Noelle:  Function "ycc_rgb_convert"
Noelle:     Loop "  %34 = load i8**, i8*** %1, align 8, !tbaa !49" (3.166153e+00%)
Noelle:     Loop "  %47 = getelementptr inbounds i8, i8* %37, i64 %45" (3.166014e+00%)
Noelle:  Function "jpeg_idct_islow"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8" (1.321381e+00%)
Noelle:     Loop "  %177 = getelementptr inbounds i8*, i8** %3, i64 %175" (1.634890e+00%)
Noelle:  Function "h2v2_fancy_upsample"
Noelle:     Loop "  %13 = getelementptr inbounds i8*, i8** %2, i64 %11" (2.303133e+00%)
Noelle:     Loop "  %63 = getelementptr inbounds i8, i8* %62, i64 1" (1.151099e+00%)
Noelle:     Loop "  %142 = getelementptr inbounds i8, i8* %141, i64 1" (1.151099e+00%)
Noelle:  Function "decode_mcu_AC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %6, i64 0, i32 2, i32 1, i64 %36" (0.000000e+00%)
Noelle:     Loop "  %79 = icmp slt i32 %76, 8" (1.332269e+00%)
Noelle:  Function "jpeg_fill_bit_buffer"
Noelle:     Loop "  %18 = load i32, i32* %11, align 8, !tbaa !39" (4.196499e-01%)
Noelle:     Loop "  %47 = icmp eq i64 %46, 0" (1.862061e-03%)
Noelle:  Function "consume_data"
Noelle:     Loop "  %15 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %14" (1.422721e-04%)
Noelle:     Loop "  %52 = icmp ult i32 %50, %49" (5.557591e-01%)
Noelle:     Loop "  %54 = load i32, i32* %7, align 8, !tbaa !39" (5.556535e-01%)
Noelle:     Loop "  %60 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %58" (4.441899e-01%)
Noelle:     Loop "  %129 = add nsw i64 %127, %51" (0.000000e+00%)
Noelle:     Loop "  %135 = add i64 %134, %133" (0.000000e+00%)
Noelle:     Loop "  %158 = getelementptr inbounds [64 x i16], [64 x i16]* %156, i64 1" (0.000000e+00%)
Noelle:     Loop "  %101 = add nsw i64 %99, %51" (0.000000e+00%)
Noelle:     Loop "  %107 = add i64 %106, %105" (0.000000e+00%)
Noelle:     Loop "  %83 = sext i32 %82 to i64" (1.942275e-01%)
Noelle:     Loop "  %91 = getelementptr inbounds [64 x i16], [64 x i16]* %89, i64 1" (9.120248e-02%)
Noelle:  Function "decode_mcu_DC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %36" (0.000000e+00%)
Noelle:     Loop "  %72 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %69" (1.631177e-01%)
Noelle:  Function "decode_mcu_DC_refine"
Noelle:     Loop "  %36 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %6, i64 0, i32 2, i32 1, i64 %35" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %67" (4.839573e-02%)
Noelle:  Function "decompress_data"
Noelle:     Loop "  %14 = load i32, i32* %9, align 4, !tbaa !40" (4.364175e-06%)
Noelle:     Loop "  %39 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %38, i64 0, i32 12" (2.204084e-02%)
Noelle:     Loop "  %80 = icmp eq i32 %77, 0" (2.198628e-02%)
Noelle:     Loop "  %89 = getelementptr inbounds [64 x i16], [64 x i16]* %87, i64 0, i64 0" (2.195442e-02%)
Noelle:  Function "jpeg_huff_decode"
Noelle:     Loop "  %36 = shl i64 %33, 1" (4.188309e-03%)
Noelle:  Function "sep_upsample"
Noelle:     Loop "  %25 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %10, i64 0, i32 2, i64 %23" (2.162790e-04%)
Noelle:  Function "access_virt_barray"
Noelle:     Loop "  %80 = mul nsw i64 %77, %47" (0.000000e+00%)
Noelle:     Loop "  %162 = mul nsw i64 %159, %131" (0.000000e+00%)
Noelle:     Loop "  %226 = load [64 x i16]**, [64 x i16]*** %223, align 8, !tbaa !40" (1.963978e-05%)
Noelle:  Function "process_data_context_main"
Noelle:     Loop "  %74 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %73, i64 0, i32 3" (1.830776e-07%)
Noelle:     Loop "  %103 = load i64, i64* %99, align 8, !tbaa !47" (7.619988e-08%)
Noelle:     Loop "  %151 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %150, i64 0, i32 3" (2.196932e-07%)
Noelle:     Loop "  %177 = add nsw i64 %175, %168" (6.036614e-08%)
Noelle:  Function "jpeg_read_scanlines"
Noelle:  Function "jpeg_start_decompress"
Noelle:     Loop "  %23 = icmp eq %struct.jpeg_progress_mgr* %22, null" (8.747251e-05%)
Noelle:  Function "fill_input_buffer"
Noelle:  Function "put_pixel_rows"
Noelle:  Function "start_pass_phuff_decoder"
Noelle:     Loop "  %101 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %100" (7.601185e-06%)
Noelle:     Loop "  %125 = getelementptr inbounds [64 x i32], [64 x i32]* %105, i64 %106, i64 %124" (7.411180e-06%)
Noelle:     Loop "  %63 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %62" (2.355269e-07%)
Noelle:     Loop "  %74 = getelementptr inbounds [64 x i32], [64 x i32]* %67, i64 %68, i64 %73" (9.500244e-08%)
Noelle:     Loop "  %194 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %193" (2.525581e-05%)
Noelle:     Loop "  %166 = icmp eq i32 %164, 0" (9.518057e-06%)
Noelle:  Function "jpeg_make_d_derived_tbl"
Noelle:     Loop "  %24 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %21" (6.196930e-06%)
Noelle:     Loop "  %50 = add nsw <2 x i64> %47, <i64 8, i64 8>" (0.000000e+00%)
Noelle:     Loop "  %62 = add nsw <2 x i64> %59, <i64 1, i64 1>" (3.305293e-07%)
Noelle:     Loop "  %97 = sext i8 %93 to i32" (7.383471e-06%)
Noelle:     Loop "  %103 = add nsw i64 %101, 1" (4.026718e-06%)
Noelle:     Loop "  %124 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %122" (4.675902e-06%)
Noelle:     Loop "  %155 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %153" (1.579713e-05%)
Noelle:     Loop "  %262 = add nsw i64 %170, %259" (8.395841e-06%)
Noelle:     Loop "  %292 = add i64 %290, %268" (5.114298e-06%)
Noelle:     Loop "  %332 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %330" (0.000000e+00%)
Noelle:     Loop "  %188 = add nsw i64 %170, %185" (7.728845e-07%)
Noelle:     Loop "  %227 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %225" (0.000000e+00%)
Noelle:     Loop "  %241 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 1, i64 %239" (3.145966e-06%)
Noelle:     Loop "  %248 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %246" (2.076199e-06%)
Noelle:  Function "read_markers"
Noelle:     Loop "  %34 = icmp eq i32 %33, 0" (1.519247e-05%)
Noelle:     Loop "  %682 = icmp eq i64 %679, 0" (2.787728e-06%)
Noelle:     Loop "  %748 = icmp eq i64 %746, 0" (0.000000e+00%)
Noelle:     Loop "  %725 = icmp eq i64 %723, 0" (2.658089e-06%)
Noelle:     Loop "  %406 = icmp eq i64 %403, 0" (0.000000e+00%)
Noelle:     Loop "  %516 = icmp eq i64 %514, 0" (9.937651e-06%)
Noelle:     Loop "  %540 = icmp eq i64 %537, 0" (3.156852e-06%)
Noelle:     Loop "  %597 = icmp eq i64 %595, 0" (5.766450e-06%)
Noelle:     Loop "  br i1 %221, label %224, label %.loopexit._crit_edge.._crit_edge204_crit_edge, !prof !80" (9.797127e-07%)
Noelle:     Loop "  %254 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %252, i64 0, i32 0" (2.137555e-07%)
Noelle:  Function "realize_virt_arrays"
Noelle:     Loop "  %11 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %8, i64 0, i32 0" (0.000000e+00%)
Noelle:     Loop "  %41 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %38, i64 0, i32 0" (8.807518e-08%)
Noelle:     Loop "  %92 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %91, i64 0, i32 0" (1.805046e-06%)
Noelle:     Loop "  %143 = sub i32 %119, %141" (0.000000e+00%)
Noelle:     Loop "  %191 = add i32 %189, 1" (0.000000e+00%)
Noelle:     Loop "  %206 = add i32 %205, 1" (0.000000e+00%)
Noelle:     Loop "  %234 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %233, i64 0, i32 0" (1.227709e-05%)
Noelle:     Loop "  %288 = sub i32 %262, %286" (1.197427e-05%)
Noelle:     Loop "  %332 = add i32 %330, 1" (4.453240e-08%)
Noelle:     Loop "  %347 = add i32 %346, 1" (1.175358e-05%)
Noelle:  Function "jinit_master_decompress"
Noelle:  Function "fullsize_upsample"
Noelle:  Function "jinit_color_deconverter"
Noelle:     Loop "  %187 = mul nsw i64 %186, 91881" (0.000000e+00%)
Noelle:     Loop "  %124 = mul nsw i64 %123, 91881" (6.585847e-06%)
Noelle:     Loop "  %72 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 %70, i32 12" (0.000000e+00%)
Noelle:     Loop "  %231 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 %229, i32 12" (0.000000e+00%)
Noelle:  Function "parse_switches"
Noelle:     Loop "  %27 = sext i32 %26 to i64" (4.213754e-06%)
Noelle:  Function "keymatch"
Noelle:     Loop "  %10 = getelementptr inbounds i8, i8* %7, i64 1" (3.002473e-06%)
Noelle:  Function "jzero_far"
Noelle:  Function "alloc_small"
Noelle:     Loop "  %35 = getelementptr inbounds %union.small_pool_struct, %union.small_pool_struct* %34, i64 0, i32 0, i32 2" (3.137060e-07%)
Noelle:     Loop "  %59 = lshr i64 %58, 1" (0.000000e+00%)
Noelle:  Function "consume_markers"
Noelle:     Loop "  %76 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %74, i64 0, i32 2" (9.401284e-08%)
Noelle:     Loop "  %127 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %125, i64 0, i32 9" (1.464621e-07%)
Noelle:  Function "start_input_pass"
Noelle:     Loop "  %72 = getelementptr inbounds %struct.jpeg_decompress_struct.261, %struct.jpeg_decompress_struct.261* %0, i64 0, i32 63, i64 %71" (4.393863e-07%)
Noelle:     Loop "  %112 = load i32, i32* %64, align 8, !tbaa !55" (3.958435e-08%)
Noelle:     Loop "  %122 = load i32, i32* %64, align 8, !tbaa !55" (5.541809e-08%)
Noelle:     Loop "  %153 = getelementptr inbounds %struct.jpeg_decompress_struct.261, %struct.jpeg_decompress_struct.261* %0, i64 0, i32 63, i64 %152" (2.602671e-07%)
Noelle:  Function "alloc_sarray"
Noelle:     Loop "  %29 = sub i32 %3, %27" (6.778820e-07%)
Noelle:     Loop "  %43 = add i32 %41, 1" (9.104401e-08%)
Noelle:     Loop "  %58 = add i32 %57, 1" (2.375061e-07%)
Noelle:  Function "next_marker"
Noelle:     Loop "  %13 = icmp eq i64 %12, 0" (6.056406e-07%)
Noelle:     Loop "  %29 = load %struct.jpeg_marker_reader.278*, %struct.jpeg_marker_reader.278** %9, align 8, !tbaa !47" (0.000000e+00%)
Noelle:     Loop "  %51 = icmp eq i64 %50, 0" (2.018802e-07%)
Noelle:  Function "start_pass_main"
Noelle:     Loop "  %28 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %27, i64 0, i32 3" (7.234040e-07%)
Noelle:     Loop "  %92 = getelementptr inbounds i8*, i8** %41, i64 %90" (1.712023e-07%)
Noelle:     Loop "  %54 = getelementptr inbounds i8*, i8** %41, i64 %52" (6.135575e-08%)
Noelle:     Loop "  %270 = getelementptr inbounds i8*, i8** %41, i64 %269" (0.000000e+00%)
Noelle:     Loop "  %195 = add nsw i64 %193, %148" (0.000000e+00%)
Noelle:     Loop "  %312 = add nsw i64 %311, %148" (7.323105e-08%)
Noelle:     Loop "  %328 = load i64, i64* %303, align 8, !tbaa !53" (0.000000e+00%)
Noelle:     Loop "  %354 = load i64, i64* %303, align 8, !tbaa !53" (4.453240e-08%)
Noelle:  Function "emit_message"
Noelle:  Function "start_pass"
Noelle:     Loop "  %18 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %15, i64 0, i32 9" (4.769914e-07%)
Noelle:     Loop "  %186 = getelementptr inbounds [8 x double], [8 x double]* @start_pass.aanscalefactor, i64 0, i64 %185" (0.000000e+00%)
Noelle:     Loop "  %155 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %50, i64 0, i32 0, i64 %154" (0.000000e+00%)
Noelle:  Function "jpeg_calc_output_dimensions"
Noelle:     Loop "  %113 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 0, i32 9" (5.145966e-08%)
Noelle:     Loop "  %85 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %83, i64 0, i32 3" (0.000000e+00%)
Noelle:     Loop "  %89 = shl i32 %88, 1" (0.000000e+00%)
Noelle:     Loop "  %118 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %116, i64 0, i32 2" (1.959425e-07%)
Noelle:  Function "get_sof"
Noelle:     Loop "  %217 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %216, i64 0, i32 1" (1.979218e-07%)
Noelle:  Function "free_pool"
Noelle:     Loop "  %22 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %21, i64 0, i32 10" (0.000000e+00%)
Noelle:     Loop "  %36 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %35, i64 0, i32 10" (3.166748e-08%)
Noelle:     Loop "  %54 = bitcast %union.large_pool_struct* %53 to i8*" (1.425037e-07%)
Noelle:     Loop "  %73 = bitcast %union.small_pool_struct* %72 to i8*" (8.807518e-08%)
Noelle:  Function "get_app0"
Noelle:     Loop "  %47 = icmp eq i64 %45, 0" (2.345373e-07%)
Noelle:  Function "start_output_pass"
Noelle:     Loop "  %48 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 0, i32 19" (2.246412e-07%)
Noelle:  Function "jinit_write_ppm"
Noelle:  Function "self_destruct"
Noelle:  Function "jinit_d_main_controller"
Noelle:     Loop "  %65 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %64, i64 0, i32 3" (1.029193e-07%)
Noelle:     Loop "  %112 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 0, i32 3" (7.718949e-08%)
Noelle:  Function "start_input_pass.105"
Noelle:  Function "request_virt_barray"
Noelle:  Function "jinit_upsampler"
Noelle:     Loop "  %53 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %52, i64 0, i32 2" (2.303203e+00%)
Noelle:  Function "alloc_large"
Noelle:  Function "jpeg_CreateDecompress"
Noelle:  Function "jinit_d_coef_controller"
Noelle:     Loop "  %29 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %28, i64 0, i32 3" (1.286491e-07%)
Noelle:  Function "jdiv_round_up"
Noelle:  Function "jinit_marker_reader"
Noelle:  Function "jpeg_read_header"
Noelle:  Function "jinit_inverse_dct"
Noelle:     Loop "  %21 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (5.244927e-08%)
Noelle:  Function "jpeg_consume_input"
Noelle:  Function "prepare_for_output_pass"
Noelle:  Function "jinit_memory_mgr"
Noelle:  Function "jinit_phuff_decoder"
Noelle:     Loop "  %29 = bitcast i32* %28 to i8*" (2.869865e-08%)
Noelle:  Function "jpeg_finish_decompress"
Noelle:     Loop "  %37 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %36, align 8, !tbaa !53" (4.948044e-09%)
Noelle:  Function "finish_input_pass"
Noelle:  Function "jpeg_alloc_huff_table"
Noelle:  Function "jround_up"
Noelle:  Function "jpeg_stdio_src"
Noelle:  Function "output_pass_setup"
Noelle:     Loop "  %25 = load i32, i32* %18, align 4, !tbaa !47" (0.000000e+00%)
Noelle:  Function "jinit_input_controller"
Noelle:  Function "start_pass_dpost"
Noelle:  Function "reset_input_controller"
Noelle:  Function "jpeg_std_error"
Noelle:  Function "jinit_d_post_controller"
Noelle:  Function "jpeg_alloc_quant_table"
Noelle:  Function "start_output_ppm"
Noelle:  Function "jpeg_destroy_decompress"
Noelle:  Function "jpeg_get_large"
Noelle:  Function "jpeg_free_large"
Noelle:  Function "reset_marker_reader"
Noelle:  Function "jpeg_destroy"
Noelle:  Function "finish_output_pass"
Noelle:  Function "jpeg_free_small"
Noelle:  Function "start_pass_upsample"
Noelle:  Function "jpeg_abort"
Noelle:  Function "jpeg_get_small"
Noelle:  Function "finish_output_ppm"
Noelle:  Function "jpeg_set_marker_processor"
Noelle:  Function "reset_error_mgr"
Noelle:  Function "init_source"
Noelle:  Function "start_pass_dcolor"
Noelle:  Function "term_source"
Noelle:  Function "jpeg_mem_available"
Noelle:  Function "read_restart_marker"
Noelle:  Function "skip_variable"
Noelle:  Function "jcopy_sample_rows"
Noelle:     Loop "  %29 = getelementptr inbounds i8*, i8** %27, i64 1" (0.000000e+00%)
Noelle:  Function "get_app14"
Noelle:     Loop "  %47 = icmp eq i64 %45, 0" (0.000000e+00%)
Noelle:  Function "jcopy_block_row"
Noelle:  Function "error_exit"
Noelle:  Function "output_message"
Noelle:  Function "format_message"
Noelle:     Loop "  %41 = getelementptr inbounds i8, i8* %40, i64 1" (0.000000e+00%)
Noelle:  Function "jpeg_resync_to_restart"
Noelle:     Loop "  %29 = icmp slt i32 %28, 192" (0.000000e+00%)
Noelle:  Function "jpeg_mem_init"
Noelle:  Function "jpeg_mem_term"
Noelle:  Function "prescan_quantize"
Noelle:     Loop "  %17 = getelementptr inbounds i8*, i8** %1, i64 %16" (0.000000e+00%)
Noelle:     Loop "  %21 = load i8, i8* %19, align 1, !tbaa !43" (0.000000e+00%)
Noelle:  Function "access_virt_sarray"
Noelle:     Loop "  %79 = mul nsw i64 %76, %46" (0.000000e+00%)
Noelle:     Loop "  %159 = mul nsw i64 %156, %128" (0.000000e+00%)
Noelle:     Loop "  %221 = load i8**, i8*** %218, align 8, !tbaa !38" (0.000000e+00%)
Noelle:  Function "jpeg_open_backing_store"
Noelle:  Function "process_data_simple_main"
Noelle:  Function "process_data_crank_post"
Noelle:  Function "request_virt_sarray"
Noelle:  Function "alloc_barray"
Noelle:     Loop "  %31 = sub i32 %3, %29" (0.000000e+00%)
Noelle:     Loop "  %46 = add i32 %44, 1" (0.000000e+00%)
Noelle:     Loop "  %61 = add i32 %60, 1" (0.000000e+00%)
Noelle:  Function "start_pass_huff_decoder"
Noelle:     Loop "  %33 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 63, i64 %32" (9.896088e-09%)
Noelle:  Function "dummy_consume_data"
Noelle:  Function "jpeg_idct_ifast"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8" (0.000000e+00%)
Noelle:     Loop "  %151 = getelementptr inbounds i8*, i8** %3, i64 %149" (0.000000e+00%)
Noelle:  Function "jpeg_idct_float"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8" (0.000000e+00%)
Noelle:     Loop "  %132 = getelementptr inbounds i8*, i8** %3, i64 %130" (0.000000e+00%)
Noelle:  Function "h2v1_merged_upsample"
Noelle:     Loop "  %40 = getelementptr inbounds i8, i8* %37, i64 1" (0.000000e+00%)
Noelle:  Function "finish_pass1"
Noelle:     Loop "  %32 = add nuw i64 %29, 1" (0.000000e+00%)
Noelle:     Loop "  %50 = getelementptr inbounds %struct.box, %struct.box* %48, i64 0, i32 7" (0.000000e+00%)
Noelle:     Loop "  %68 = getelementptr inbounds %struct.box, %struct.box* %66, i64 0, i32 6" (0.000000e+00%)
Noelle:     Loop "  %103 = getelementptr inbounds %struct.box, %struct.box* %101, i64 0, i32 6" (0.000000e+00%)
Noelle:     Loop "  %181 = load %struct.my_cquantizer.611*, %struct.my_cquantizer.611** %3, align 8, !tbaa !30" (0.000000e+00%)
Noelle:     Loop "  %211 = getelementptr inbounds [32 x i16]*, [32 x i16]** %183, i64 %206" (0.000000e+00%)
Noelle:     Loop "  %222 = getelementptr inbounds [32 x i16], [32 x i16]* %212, i64 %217, i64 %199" (0.000000e+00%)
Noelle:     Loop "  %233 = getelementptr inbounds i16, i16* %232, i64 1" (0.000000e+00%)
Noelle:  Function "pass2_fs_dither"
Noelle:     Loop "  %48 = getelementptr inbounds i8*, i8** %1, i64 %47" (0.000000e+00%)
Noelle:     Loop "  %86 = getelementptr inbounds i16, i16* %83, i64 %68" (0.000000e+00%)
Noelle:     Loop "  %40 = icmp eq i32 %38, 0" (0.000000e+00%)
Noelle:  Function "jinit_huff_decoder"
Noelle:  Function "pass2_no_dither"
Noelle:     Loop "  %17 = getelementptr inbounds i8*, i8** %2, i64 %16" (0.000000e+00%)
Noelle:     Loop "  %24 = getelementptr inbounds i8, i8* %21, i64 1" (0.000000e+00%)
Noelle:  Function "finish_pass2"
Noelle:  Function "fill_inverse_cmap"
Noelle:     Loop "  %49 = getelementptr inbounds i8, i8* %41, i64 %47" (0.000000e+00%)
Noelle:     Loop "  %179 = getelementptr inbounds [256 x i64], [256 x i64]* %6, i64 0, i64 %176" (0.000000e+00%)
Noelle:     Loop "  %340 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %339" (0.000000e+00%)
Noelle:     Loop "  %382 = load i64, i64* %380, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %599 = load i64, i64* %597, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %634 = load i64, i64* %632, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %669 = load i64, i64* %667, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %428 = add nuw nsw i64 %426, %418" (0.000000e+00%)
Noelle:  Function "update_box"
Noelle:     Loop "  %30 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %29" (0.000000e+00%)
Noelle:     Loop "  %33 = getelementptr inbounds [32 x i16], [32 x i16]* %31, i64 %32, i64 %23" (0.000000e+00%)
Noelle:     Loop "  %36 = load i16, i16* %34, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %57 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %56" (0.000000e+00%)
Noelle:     Loop "  %60 = getelementptr inbounds [32 x i16], [32 x i16]* %58, i64 %59, i64 %50" (0.000000e+00%)
Noelle:     Loop "  %63 = load i16, i16* %61, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader18" (0.000000e+00%)
Noelle:     Loop "  %86 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %85" (0.000000e+00%)
Noelle:     Loop "  %91 = load i16, i16* %89, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader14" (0.000000e+00%)
Noelle:     Loop "  %112 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %111" (0.000000e+00%)
Noelle:     Loop "  %117 = load i16, i16* %115, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader10" (0.000000e+00%)
Noelle:     Loop "  %139 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %138" (0.000000e+00%)
Noelle:     Loop "  %144 = load i16, i16* %142, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader6" (0.000000e+00%)
Noelle:     Loop "  %165 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %164" (0.000000e+00%)
Noelle:     Loop "  %170 = load i16, i16* %168, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %248 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %246" (0.000000e+00%)
Noelle:     Loop "  %254 = load i16, i16* %252, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %263 = getelementptr inbounds [32 x i16], [32 x i16]* %249, i64 %261, i64 %199" (0.000000e+00%)
Noelle:     Loop "  %267 = load i16, i16* %265, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %283 = load i16, i16* %281, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %215 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %213" (0.000000e+00%)
Noelle:     Loop "  %219 = getelementptr inbounds [32 x i16], [32 x i16]* %216, i64 %217, i64 %199" (0.000000e+00%)
Noelle:     Loop "  %223 = load i16, i16* %221, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %235 = load i16, i16* %233, align 2, !tbaa !50" (0.000000e+00%)
Noelle:  Function "jinit_merged_upsampler"
Noelle:     Loop "  %75 = mul nsw i64 %74, 91881" (0.000000e+00%)
Noelle:  Function "start_pass_merged_upsample"
Noelle:  Function "merged_2v_upsample"
Noelle:  Function "h2v2_merged_upsample"
Noelle:     Loop "  %50 = getelementptr inbounds i8, i8* %45, i64 1" (0.000000e+00%)
Noelle:  Function "merged_1v_upsample"
Noelle:  Function "jpeg_idct_4x4"
Noelle:     Loop "  %21 = icmp eq i32 %17, 4" (0.000000e+00%)
Noelle:     Loop "  %132 = getelementptr inbounds i8*, i8** %3, i64 %130" (0.000000e+00%)
Noelle:  Function "quantize_fs_dither"
Noelle:     Loop "  %124 = getelementptr inbounds i8*, i8** %2, i64 %123" (0.000000e+00%)
Noelle:     Loop "  %32 = getelementptr inbounds i8*, i8** %2, i64 %31" (0.000000e+00%)
Noelle:     Loop "  %36 = load i8*, i8** %34, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds i16, i16* %67, i64 %54" (0.000000e+00%)
Noelle:     Loop "  %108 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %7, i64 0, i32 8, i64 %107" (0.000000e+00%)
Noelle:     Loop "  %119 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %7, i64 0, i32 8, i64 %118" (0.000000e+00%)
Noelle:  Function "jinit_2pass_quantizer"
Noelle:     Loop "  %34 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (0.000000e+00%)
Noelle:  Function "start_pass_2_quant"
Noelle:     Loop "  %80 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %79" (0.000000e+00%)
Noelle:  Function "new_color_map_2_quant"
Noelle:  Function "init_error_limit"
Noelle:     Loop "  %37 = getelementptr inbounds i32, i32* %12, i64 %35" (0.000000e+00%)
Noelle:     Loop "  %49 = getelementptr inbounds i32, i32* %12, i64 %48" (0.000000e+00%)
Noelle:  Function "quantize_ord_dither"
Noelle:     Loop "  %25 = getelementptr inbounds i8*, i8** %2, i64 %24" (0.000000e+00%)
Noelle:     Loop "  %79 = load i8*, i8** %25, align 8, !tbaa !40" (0.000000e+00%)
Noelle:     Loop "  %100 = load i8**, i8*** %17, align 8, !tbaa !44" (0.000000e+00%)
Noelle:     Loop "  %112 = load i8, i8* %108, align 1, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %32 = load i8**, i8*** %17, align 8, !tbaa !44" (0.000000e+00%)
Noelle:     Loop "  %44 = load i8, i8* %40, align 1, !tbaa !45" (0.000000e+00%)
Noelle:  Function "jpeg_idct_2x2"
Noelle:     Loop "  %Pivot6 = icmp ult i32 %32, 4" (0.000000e+00%)
Noelle:  Function "jpeg_idct_1x1"
Noelle:  Function "noop_upsample"
Noelle:  Function "h2v1_fancy_upsample"
Noelle:     Loop "  %12 = getelementptr inbounds i8*, i8** %2, i64 %11" (0.000000e+00%)
Noelle:     Loop "  %48 = shl i64 %47, 1" (0.000000e+00%)
Noelle:     Loop "  %121 = getelementptr inbounds i8, i8* %120, i64 1" (0.000000e+00%)
Noelle:  Function "h2v1_upsample"
Noelle:     Loop "  %13 = getelementptr inbounds i8*, i8** %5, i64 %12" (0.000000e+00%)
Noelle:     Loop "  %24 = getelementptr inbounds i8, i8* %22, i64 1" (0.000000e+00%)
Noelle:  Function "h2v2_upsample"
Noelle:     Loop "  %14 = getelementptr inbounds i8*, i8** %5, i64 %12" (0.000000e+00%)
Noelle:     Loop "  %25 = getelementptr inbounds i8, i8* %23, i64 1" (0.000000e+00%)
Noelle:  Function "int_upsample"
Noelle:     Loop "  %92 = getelementptr inbounds i8*, i8** %8, i64 %90" (0.000000e+00%)
Noelle:     Loop "  %102 = load i8, i8* %100, align 1, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %61 = getelementptr inbounds i8*, i8** %8, i64 %59" (0.000000e+00%)
Noelle:     Loop "  %71 = getelementptr inbounds i8, i8* %69, i64 1" (0.000000e+00%)
Noelle:     Loop "  %85 = icmp eq i32 %.pre, 0" (0.000000e+00%)
Noelle:     Loop "  %32 = load i32, i32* %22, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  br label %.loopexit.us.us" (0.000000e+00%)
Noelle:  Function "grayscale_convert"
Noelle:  Function "start_output_tga"
Noelle:     Loop "  %114 = load i8**, i8*** %111, align 8, !tbaa !53" (0.000000e+00%)
Noelle:  Function "null_convert"
Noelle:     Loop "  %24 = add nsw i32 %21, -1" (0.000000e+00%)
Noelle:     Loop "  %83 = getelementptr inbounds i8**, i8*** %1, i64 %82" (0.000000e+00%)
Noelle:     Loop "  %92 = getelementptr inbounds i8, i8* %90, i64 1" (0.000000e+00%)
Noelle:     Loop "  %100 = getelementptr inbounds i8, i8* %99, i64 1" (0.000000e+00%)
Noelle:     Loop "  %28 = getelementptr inbounds i8**, i8*** %1, i64 %27" (0.000000e+00%)
Noelle:     Loop "  %37 = getelementptr inbounds i8, i8* %35, i64 1" (0.000000e+00%)
Noelle:     Loop "  %45 = getelementptr inbounds i8**, i8*** %1, i64 %44" (0.000000e+00%)
Noelle:     Loop "  %54 = getelementptr inbounds i8, i8* %53, i64 1" (0.000000e+00%)
Noelle:  Function "COM_handler"
Noelle:     Loop "  %115 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %7, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %65 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %7, align 8, !tbaa !41" (0.000000e+00%)
Noelle:  Function "usage"
Noelle:  Function "copy_pixel_rows"
Noelle:     Loop "  %40 = getelementptr i8, i8* %14, i64 %38" (0.000000e+00%)
Noelle:     Loop "  %90 = getelementptr i8, i8* %14, i64 %88" (0.000000e+00%)
Noelle:     Loop "  %112 = getelementptr inbounds i8, i8* %109, i64 1" (0.000000e+00%)
Noelle:     Loop "  %125 = getelementptr inbounds i8, i8* %123, i64 1" (0.000000e+00%)
Noelle:  Function "put_demapped_gray"
Noelle:     Loop "  %23 = getelementptr inbounds i8, i8* %21, i64 1" (0.000000e+00%)
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %38, i64 1" (0.000000e+00%)
Noelle:  Function "put_demapped_rgb"
Noelle:     Loop "  %44 = getelementptr inbounds i8, i8* %43, i64 1" (0.000000e+00%)
Noelle:  Function "ycck_cmyk_convert"
Noelle:     Loop "  %35 = load i8**, i8*** %1, align 8, !tbaa !46" (0.000000e+00%)
Noelle:     Loop "  %51 = getelementptr inbounds i8, i8* %38, i64 %49" (0.000000e+00%)
Noelle:  Function "jinit_1pass_quantizer"
Noelle:     Loop "  %78 = add nuw i64 %77, 1" (0.000000e+00%)
Noelle:     Loop "  %81 = mul nsw i64 %79, %78" (0.000000e+00%)
Noelle:     Loop "  %93 = mul nsw i64 %91, %78" (0.000000e+00%)
Noelle:     Loop "  %55 = add nuw i64 %54, 1" (0.000000e+00%)
Noelle:     Loop "  %58 = mul nsw i64 %56, %55" (0.000000e+00%)
Noelle:     Loop "  %70 = add nuw i64 %69, 1" (0.000000e+00%)
Noelle:     Loop "  %74 = mul nsw i64 %72, %70" (0.000000e+00%)
Noelle:     Loop "  %130 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %126" (0.000000e+00%)
Noelle:     Loop "  %170 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %166" (0.000000e+00%)
Noelle:     Loop "  %235 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %233" (0.000000e+00%)
Noelle:     Loop "  br label %._crit_edge132" (0.000000e+00%)
Noelle:     Loop "  %sext = shl i64 %214, 32" (0.000000e+00%)
Noelle:     Loop "  br label %._crit_edge133.us" (0.000000e+00%)
Noelle:     Loop "  %195 = getelementptr inbounds [3 x i32], [3 x i32]* @select_ncolors.RGB_order, i64 0, i64 %192" (0.000000e+00%)
Noelle:     Loop "  %276 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %274" (0.000000e+00%)
Noelle:     Loop "  %297 = trunc i64 %295 to i32" (0.000000e+00%)
Noelle:     Loop "  %349 = add i64 %348, %287" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader3.us" (0.000000e+00%)
Noelle:     Loop "  %320 = load i8*, i8** %286, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %340 = load i8*, i8** %286, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  br i1 %294, label %.split.us.us..loopexit2.us.us_crit_edge, label %.preheader1.us.preheader.us" (0.000000e+00%)
Noelle:     Loop "  %309 = load i8*, i8** %286, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %375 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (0.000000e+00%)
Noelle:     Loop "  br label %.loopexit15.us.us.us" (0.000000e+00%)
Noelle:  Function "start_pass_1_quant"
Noelle:     Loop "  %115 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %112, align 8, !tbaa !51" (0.000000e+00%)
Noelle:     Loop "  %134 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 8, i64 %133" (0.000000e+00%)
Noelle:     Loop "  %45 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %37, i64 0, i32 5, i64 %44" (0.000000e+00%)
Noelle:     Loop "  %51 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %37, i64 0, i32 5, i64 %50" (0.000000e+00%)
Noelle:     Loop "  br label %._crit_edge27" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @base_dither_matrix, i64 0, i64 %68, i64 %69" (0.000000e+00%)
Noelle:  Function "finish_pass_1_quant"
Noelle:  Function "new_color_map_1_quant"
Noelle:  Function "create_colorindex"
Noelle:     Loop "  %98 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 5, i64 %96" (0.000000e+00%)
Noelle:     Loop "  %113 = sext i32 %112 to i64" (0.000000e+00%)
Noelle:     Loop "  %118 = add i64 %117, 1" (0.000000e+00%)
Noelle:     Loop "  %28 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 5, i64 %26" (0.000000e+00%)
Noelle:     Loop "  %47 = sext i32 %46 to i64" (0.000000e+00%)
Noelle:     Loop "  %52 = add i64 %51, 1" (0.000000e+00%)
Noelle:     Loop "  %76 = load i8, i8* %36, align 1, !tbaa !51" (0.000000e+00%)
Noelle:  Function "color_quantize3"
Noelle:     Loop "  %97 = getelementptr inbounds i8*, i8** %2, i64 %96" (0.000000e+00%)
Noelle:     Loop "  %122 = getelementptr inbounds i8, i8* %119, i64 1" (0.000000e+00%)
Noelle:     Loop "  %26 = getelementptr inbounds i8*, i8** %2, i64 %25" (0.000000e+00%)
Noelle:     Loop "  %49 = getelementptr inbounds i8*, i8** %1, i64 %48" (0.000000e+00%)
Noelle:     Loop "  %56 = getelementptr inbounds i8, i8* %53, i64 1" (0.000000e+00%)
Noelle:  Function "color_quantize"
Noelle:     Loop "  %29 = getelementptr inbounds i8*, i8** %2, i64 %28" (0.000000e+00%)
Noelle:     Loop "  %131 = getelementptr inbounds i8, i8* %130, i64 1" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader1.us" (0.000000e+00%)
Noelle:     Loop "  %65 = getelementptr inbounds i8*, i8** %9, i64 %61" (0.000000e+00%)
Noelle:     Loop "  %111 = getelementptr inbounds i8*, i8** %9, i64 %107" (0.000000e+00%)
Noelle:     Loop "  br i1 %27, label %.loopexit.us._crit_edge.us..loopexit.us.us_crit_edge, label %.preheader.us.preheader.us" (0.000000e+00%)
Noelle:     Loop "  %40 = getelementptr inbounds i8*, i8** %9, i64 %36" (0.000000e+00%)
Noelle:  Function "quantize3_ord_dither"
Noelle:     Loop "  %34 = load [16 x i32]*, [16 x i32]** %20, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %46 = getelementptr inbounds i8, i8* %42, i64 1" (0.000000e+00%)
Noelle:     Loop "  %28 = add nsw i32 %26, 1" (0.000000e+00%)
Noelle:  Function "jpeg_start_output"
Noelle:  Function "read_pbm_integer"
Noelle:     Loop "  %4 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %6 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %31 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %33 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:  Function "read_stdin"
Noelle:  Function "decode_mcu"
Noelle:     Loop "  %35 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %7, i64 0, i32 2, i32 0, i64 %34" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %67" (2.975754e-05%)
Noelle:     Loop "  %97 = icmp eq i32 %92, 0" (0.000000e+00%)
Noelle:     Loop "  %123 = icmp eq i64 %122, 0" (0.000000e+00%)
Noelle:     Loop "  %214 = icmp eq i32 %209, 0" (0.000000e+00%)
Noelle:     Loop "  %240 = icmp eq i64 %239, 0" (0.000000e+00%)
Noelle:     Loop "  %327 = icmp slt i32 %326, 8" (0.000000e+00%)
Noelle:     Loop "  %337 = icmp eq i32 %332, 0" (0.000000e+00%)
Noelle:     Loop "  %363 = icmp eq i64 %362, 0" (0.000000e+00%)
Noelle:     Loop "  %457 = icmp eq i32 %452, 0" (0.000000e+00%)
Noelle:     Loop "  %483 = icmp eq i64 %482, 0" (0.000000e+00%)
Noelle:     Loop "  %572 = icmp slt i32 %571, 8" (0.000000e+00%)
Noelle:     Loop "  %582 = icmp eq i32 %577, 0" (0.000000e+00%)
Noelle:     Loop "  %608 = icmp eq i64 %607, 0" (0.000000e+00%)
Noelle:     Loop "  %701 = icmp eq i32 %696, 0" (0.000000e+00%)
Noelle:     Loop "  %727 = icmp eq i64 %726, 0" (0.000000e+00%)
Noelle:  Function "write_stdout"
Noelle:  Function "jpeg_abort_decompress"
Noelle:  Function "jpeg_input_complete"
Noelle:  Function "jpeg_has_multiple_scans"
Noelle:  Function "jpeg_read_raw_data"
Noelle:  Function "read_color_map"
Noelle:     Loop "  br label %.preheader13" (0.000000e+00%)
Noelle:     Loop "  %196 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %198 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %202 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %206 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %229 = getelementptr inbounds i8, i8* %219, i64 %228" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader3" (0.000000e+00%)
Noelle:     Loop "  %142 = tail call fastcc i32 @read_pbm_integer(%struct.jpeg_decompress_struct* %0, %struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %156 = getelementptr inbounds i8, i8* %146, i64 %155" (0.000000e+00%)
Noelle:     Loop "  %16 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %51 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %75 = getelementptr inbounds i8, i8* %65, i64 %74" (0.000000e+00%)
Noelle:  Function "jpeg_finish_output"
Noelle:     Loop "  %28 = load i32, i32* %25, align 4, !tbaa !48" (0.000000e+00%)
Noelle:  Function "decompress_onepass"
Noelle:     Loop "  %31 = icmp ugt i32 %29, %8" (0.000000e+00%)
Noelle:     Loop "  %33 = load i8*, i8** %21, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %132 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %130" (0.000000e+00%)
Noelle:     Loop "  %173 = load i32, i32* %26, align 8, !tbaa !59" (0.000000e+00%)
Noelle:     Loop "  %182 = add nsw i64 %180, %179" (0.000000e+00%)
Noelle:     Loop "  %51 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %49" (0.000000e+00%)
Noelle:     Loop "  %83 = load i32, i32* %26, align 8, !tbaa !59" (0.000000e+00%)
Noelle:     Loop "  %92 = add nsw i64 %90, %89" (0.000000e+00%)
Noelle:  Function "decompress_smooth_data"
Noelle:     Loop "  %17 = load i32, i32* %11, align 4, !tbaa !39" (0.000000e+00%)
Noelle:     Loop "  %57 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %56, i64 0, i32 12" (0.000000e+00%)
Noelle:     Loop "  %163 = getelementptr inbounds [64 x i16]*, [64 x i16]** %104, i64 %161" (0.000000e+00%)
Noelle:     Loop "  call void @jcopy_block_row([64 x i16]* nonnull %197, [64 x i16]* nonnull %3, i32 1) #18" (0.000000e+00%)
Noelle:  Function "post_process_1pass"
Noelle:  Function "post_process_prepass"
Noelle:  Function "post_process_2pass"
Noelle:  Function "skip_input_data"
Noelle:     Loop "  %18 = sub nsw i64 %17, %16" (0.000000e+00%)
Noelle:  Function "jpeg_new_colormap"
Noelle:  Function "finish_output_tga"
Noelle:  Function "jinit_write_gif"
Noelle:  Function "start_output_gif"
Noelle:  Function "put_pixel_rows.52"
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %38, i64 1" (0.000000e+00%)
Noelle:     Loop "  %74 = sub nsw i32 %73, %72" (0.000000e+00%)
Noelle:     Loop "  %100 = trunc i64 %99 to i8" (0.000000e+00%)
Noelle:     Loop "  %165 = trunc i64 %164 to i8" (0.000000e+00%)
Noelle:  Function "finish_output_gif"
Noelle:     Loop "  %42 = trunc i64 %41 to i8" (0.000000e+00%)
Noelle:     Loop "  %113 = trunc i64 %112 to i8" (0.000000e+00%)
Noelle:  Function "emit_header"
Noelle:     Loop "  %22 = shl i32 1, %21" (0.000000e+00%)
Noelle:     Loop "  %104 = icmp slt i64 %103, %78" (0.000000e+00%)
Noelle:     Loop "  %81 = icmp slt i64 %80, %78" (0.000000e+00%)
Noelle:     Loop "  %218 = trunc i64 %217 to i8" (0.000000e+00%)
Noelle:  Function "jinit_write_targa"
Noelle:  Function "put_demapped_gray.55"
Noelle:     Loop "  %23 = getelementptr inbounds i8, i8* %20, i64 1" (0.000000e+00%)
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %37, i64 1" (0.000000e+00%)
Noelle:  Function "put_gray_rows"
Noelle:     Loop "  %39 = getelementptr i8, i8* %6, i64 %37" (0.000000e+00%)
Noelle:     Loop "  %89 = getelementptr i8, i8* %6, i64 %87" (0.000000e+00%)
Noelle:     Loop "  %111 = getelementptr inbounds i8, i8* %109, i64 1" (0.000000e+00%)
Noelle:     Loop "  %124 = getelementptr inbounds i8, i8* %123, i64 1" (0.000000e+00%)
Noelle:  Function "put_pixel_rows.56"
Noelle:     Loop "  %34 = getelementptr inbounds i8, i8* %33, i64 2" (0.000000e+00%)
Noelle:  Function "jinit_write_bmp"
Noelle:  Function "start_output_bmp"
Noelle:  Function "finish_output_bmp"
Noelle:     Loop "  %272 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %241, align 8, !tbaa !61" (0.000000e+00%)
Noelle:     Loop "  %284 = load i8, i8* %282, align 1, !tbaa !46" (0.000000e+00%)
Noelle:     Loop "  %247 = sub i32 %245, %246" (0.000000e+00%)
Noelle:     Loop "  %263 = load i8, i8* %261, align 1, !tbaa !46" (0.000000e+00%)
Noelle:  Function "put_gray_rows.59"
Noelle:     Loop "  %51 = getelementptr i8, i8* %18, i64 %49" (0.000000e+00%)
Noelle:     Loop "  %101 = getelementptr i8, i8* %18, i64 %99" (0.000000e+00%)
Noelle:     Loop "  %123 = getelementptr inbounds i8, i8* %121, i64 1" (0.000000e+00%)
Noelle:     Loop "  %137 = getelementptr inbounds i8, i8* %136, i64 1" (0.000000e+00%)
Noelle:  Function "put_pixel_rows.60"
Noelle:     Loop "  %47 = getelementptr inbounds i8, i8* %46, i64 1" (0.000000e+00%)
Noelle:  Function "write_colormap"
Noelle:     Loop "  %93 = load i8*, i8** %6, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %31 = load i8*, i8** %6, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %75 = load i8*, i8** %51, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %56 = load i8*, i8** %51, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %111 = tail call i32 @putc(i32 %110, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %15 = tail call i32 @putc(i32 %14, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %138 = tail call i32 @putc(i32 0, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %131 = tail call i32 @putc(i32 0, %struct._IO_FILE* %10)" (0.000000e+00%)
NOELLE: FixedPoint: Exit
NOELLE: Inliner: Exit
noelle-simplification baseline_pre.bc -o baseline_pre.bc
opt -basicaa -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -mem2reg -tbaa -early-cse-memssa -licm -simplifycfg -simplifycfg-sink-common=false -instcombine -tailcallelim -loop-simplify -lcssa -licm -loop-unswitch -globalopt -instcombine -ipsccp -dce -gvn -dse -adce -loop-simplify -lcssa -indvars -loop-deletion -instcombine -indvars -break-constgeps -lowerswitch -mergereturn --break-crit-edges -loop-simplify -lcssa --functionattrs --rpo-functionattrs baseline_pre.bc -o baseline_pre.bc
noelle-deadcode baseline_pre.bc baseline_pre.bc
NOELLE: DeadFunctions: Start
noelle-fixedpoint baseline_pre.bc baseline_pre.bc "noelle-load" -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DeadFunction.so -noelle-dfe
NOELLE: FixedPoint: Start
NOELLE: FixedPoint:   Loader: noelle-load
NOELLE: FixedPoint:   Options: -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DeadFunction.so -noelle-dfe
NOELLE: FixedPoint:   Input: baseline_pre.bc
NOELLE: FixedPoint:   Output: baseline_pre.bc
NOELLE: FixedPoint:   Temporary input: /tmp/tmp.8rt73jbhnH (.ll version is /tmp/tmp.3yl6aqOPUd)
NOELLE: FixedPoint:   Temporary output: /tmp/tmp.GFUo1C1LNU (.ll version is /tmp/tmp.6jYOf3tDcN)
NOELLE: FixedPoint:   Normalize the code
noelle-norm /tmp/tmp.8rt73jbhnH -o /tmp/tmp.GFUo1C1LNU
opt -basicaa -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -mem2reg -simplifycfg-sink-common=false -break-constgeps -lowerswitch -mergereturn --break-crit-edges -loop-simplify -lcssa -indvars --functionattrs --rpo-functionattrs /tmp/tmp.8rt73jbhnH -o /tmp/tmp.GFUo1C1LNU
NOELLE: FixedPoint:   Run until a fixed point is reached
NOELLE: FixedPoint:     Invocation 0
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DeadFunction.so -noelle-dfe /tmp/tmp.8rt73jbhnH -o /tmp/tmp.GFUo1C1LNU
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DeadFunction.so -noelle-dfe /tmp/tmp.8rt73jbhnH -o /tmp/tmp.GFUo1C1LNU
DeadFunctionEliminator: Start
DeadFunctionEliminator:   Inline functions that are invoked only by one call instruction and that do not escape into memory
DeadFunctionEliminator:   Get the islands
DeadFunctionEliminator:   Identify the islands reachable from the entry points
DeadFunctionEliminator:     Island
DeadFunctionEliminator:       llvm.lifetime.start.p0i8
DeadFunctionEliminator:       main
DeadFunctionEliminator:       COM_handler
DeadFunctionEliminator:       parse_switches
DeadFunctionEliminator:       fprintf
DeadFunctionEliminator:       usage
DeadFunctionEliminator:       llvm.lifetime.end.p0i8
DeadFunctionEliminator:       fputc
DeadFunctionEliminator:       __ctype_b_loc
DeadFunctionEliminator:       putc
DeadFunctionEliminator:       jinit_write_ppm
DeadFunctionEliminator:       start_output_ppm
DeadFunctionEliminator:       finish_output_ppm
DeadFunctionEliminator:       copy_pixel_rows
DeadFunctionEliminator:       put_demapped_gray
DeadFunctionEliminator:       ycc_rgb_convert
DeadFunctionEliminator:       null_convert
DeadFunctionEliminator:       ycck_cmyk_convert
DeadFunctionEliminator:       jinit_1pass_quantizer
DeadFunctionEliminator:       start_pass_1_quant
DeadFunctionEliminator:       create_colorindex
DeadFunctionEliminator:       color_quantize3
DeadFunctionEliminator:       color_quantize
DeadFunctionEliminator:       quantize3_ord_dither
DeadFunctionEliminator:       quantize_ord_dither
DeadFunctionEliminator:       quantize_fs_dither
DeadFunctionEliminator:       jinit_2pass_quantizer
DeadFunctionEliminator:       start_pass_2_quant
DeadFunctionEliminator:       new_color_map_2_quant
DeadFunctionEliminator:       init_error_limit
DeadFunctionEliminator:       fopen
DeadFunctionEliminator:       exit
DeadFunctionEliminator:       fclose
DeadFunctionEliminator:       fwrite
DeadFunctionEliminator:       __isoc99_sscanf
DeadFunctionEliminator:       jpeg_idct_islow
DeadFunctionEliminator:       jpeg_idct_4x4
DeadFunctionEliminator:       jpeg_idct_2x2
DeadFunctionEliminator:       jinit_upsampler
DeadFunctionEliminator:       start_pass_upsample
DeadFunctionEliminator:       sep_upsample
DeadFunctionEliminator:       noop_upsample
DeadFunctionEliminator:       fullsize_upsample
DeadFunctionEliminator:       h2v1_fancy_upsample
DeadFunctionEliminator:       h2v1_upsample
DeadFunctionEliminator:       h2v2_fancy_upsample
DeadFunctionEliminator:       h2v2_upsample
DeadFunctionEliminator:       int_upsample
DeadFunctionEliminator:       jinit_color_deconverter
DeadFunctionEliminator:       start_pass_dcolor
DeadFunctionEliminator:       grayscale_convert
DeadFunctionEliminator:       start_output_tga
DeadFunctionEliminator:       put_demapped_rgb
DeadFunctionEliminator:       put_pixel_rows
DeadFunctionEliminator:       fflush
DeadFunctionEliminator:       ferror
DeadFunctionEliminator:       jinit_write_gif
DeadFunctionEliminator:       start_output_gif
DeadFunctionEliminator:       put_pixel_rows.52
DeadFunctionEliminator:       finish_output_gif
DeadFunctionEliminator:       llvm.memset.p0i8.i64
DeadFunctionEliminator:       emit_header
DeadFunctionEliminator:       jinit_write_targa
DeadFunctionEliminator:       finish_output_tga
DeadFunctionEliminator:       put_demapped_gray.55
DeadFunctionEliminator:       put_gray_rows
DeadFunctionEliminator:       put_pixel_rows.56
DeadFunctionEliminator:       jinit_write_bmp
DeadFunctionEliminator:       start_output_bmp
DeadFunctionEliminator:       finish_output_bmp
DeadFunctionEliminator:       put_gray_rows.59
DeadFunctionEliminator:       put_pixel_rows.60
DeadFunctionEliminator:       write_colormap
DeadFunctionEliminator:       read_color_map
DeadFunctionEliminator:       getc
DeadFunctionEliminator:       read_pbm_integer
DeadFunctionEliminator:       keymatch
DeadFunctionEliminator:       __ctype_tolower_loc
DeadFunctionEliminator:       read_stdin
DeadFunctionEliminator:       decode_mcu
DeadFunctionEliminator:       jinit_phuff_decoder
DeadFunctionEliminator:       start_pass_phuff_decoder
DeadFunctionEliminator:       decode_mcu_DC_first
DeadFunctionEliminator:       decode_mcu_AC_first
DeadFunctionEliminator:       decode_mcu_DC_refine
DeadFunctionEliminator:       decode_mcu_AC_refine
DeadFunctionEliminator:       jinit_d_main_controller
DeadFunctionEliminator:       write_stdout
DeadFunctionEliminator:       jpeg_CreateDecompress
DeadFunctionEliminator:       jpeg_destroy_decompress
DeadFunctionEliminator:       jpeg_abort_decompress
DeadFunctionEliminator:       jpeg_set_marker_processor
DeadFunctionEliminator:       jpeg_read_header
DeadFunctionEliminator:       jpeg_consume_input
DeadFunctionEliminator:       jpeg_finish_decompress
DeadFunctionEliminator:       jpeg_start_decompress
DeadFunctionEliminator:       output_pass_setup
DeadFunctionEliminator:       jpeg_read_scanlines
DeadFunctionEliminator:       jpeg_start_output
DeadFunctionEliminator:       decompress_onepass
DeadFunctionEliminator:       decompress_smooth_data
DeadFunctionEliminator:       jinit_d_post_controller
DeadFunctionEliminator:       start_pass_dpost
DeadFunctionEliminator:       post_process_1pass
DeadFunctionEliminator:       post_process_prepass
DeadFunctionEliminator:       post_process_2pass
DeadFunctionEliminator:       jinit_inverse_dct
DeadFunctionEliminator:       start_pass
DeadFunctionEliminator:       jpeg_stdio_src
DeadFunctionEliminator:       init_source
DeadFunctionEliminator:       fill_input_buffer
DeadFunctionEliminator:       skip_input_data
DeadFunctionEliminator:       term_source
DeadFunctionEliminator:       fread
DeadFunctionEliminator:       jpeg_calc_output_dimensions
DeadFunctionEliminator:       jinit_master_decompress
DeadFunctionEliminator:       llvm.memcpy.p0i8.p0i8.i64
DeadFunctionEliminator:       jinit_input_controller
DeadFunctionEliminator:       consume_markers
DeadFunctionEliminator:       reset_input_controller
DeadFunctionEliminator:       start_input_pass
DeadFunctionEliminator:       finish_input_pass
DeadFunctionEliminator:       jpeg_resync_to_restart
DeadFunctionEliminator:       next_marker
DeadFunctionEliminator:       jinit_marker_reader
DeadFunctionEliminator:       reset_marker_reader
DeadFunctionEliminator:       read_markers
DeadFunctionEliminator:       read_restart_marker
DeadFunctionEliminator:       skip_variable
DeadFunctionEliminator:       get_app0
DeadFunctionEliminator:       get_app14
DeadFunctionEliminator:       get_sof
DeadFunctionEliminator:       jpeg_make_d_derived_tbl
DeadFunctionEliminator:       jpeg_fill_bit_buffer
DeadFunctionEliminator:       jpeg_huff_decode
DeadFunctionEliminator:       jinit_huff_decoder
DeadFunctionEliminator:       start_pass_huff_decoder
DeadFunctionEliminator:       alloc_barray
DeadFunctionEliminator:       request_virt_sarray
DeadFunctionEliminator:       request_virt_barray
DeadFunctionEliminator:       realize_virt_arrays
DeadFunctionEliminator:       access_virt_sarray
DeadFunctionEliminator:       access_virt_barray
DeadFunctionEliminator:       free_pool
DeadFunctionEliminator:       self_destruct
DeadFunctionEliminator:       getenv
DeadFunctionEliminator:       jpeg_get_small
DeadFunctionEliminator:       malloc
DeadFunctionEliminator:       jpeg_free_small
DeadFunctionEliminator:       free
DeadFunctionEliminator:       jpeg_get_large
DeadFunctionEliminator:       jpeg_free_large
DeadFunctionEliminator:       jpeg_mem_available
DeadFunctionEliminator:       jpeg_open_backing_store
DeadFunctionEliminator:       start_pass_main
DeadFunctionEliminator:       process_data_context_main
DeadFunctionEliminator:       process_data_simple_main
DeadFunctionEliminator:       process_data_crank_post
DeadFunctionEliminator:       jinit_d_coef_controller
DeadFunctionEliminator:       start_input_pass.105
DeadFunctionEliminator:       start_output_pass
DeadFunctionEliminator:       consume_data
DeadFunctionEliminator:       decompress_data
DeadFunctionEliminator:       dummy_consume_data
DeadFunctionEliminator:       jpeg_idct_ifast
DeadFunctionEliminator:       jpeg_idct_float
DeadFunctionEliminator:       prescan_quantize
DeadFunctionEliminator:       finish_pass1
DeadFunctionEliminator:       pass2_fs_dither
DeadFunctionEliminator:       pass2_no_dither
DeadFunctionEliminator:       finish_pass2
DeadFunctionEliminator:       fill_inverse_cmap
DeadFunctionEliminator:       update_box
DeadFunctionEliminator:       jinit_merged_upsampler
DeadFunctionEliminator:       start_pass_merged_upsample
DeadFunctionEliminator:       merged_2v_upsample
DeadFunctionEliminator:       h2v2_merged_upsample
DeadFunctionEliminator:       merged_1v_upsample
DeadFunctionEliminator:       h2v1_merged_upsample
DeadFunctionEliminator:       jpeg_abort
DeadFunctionEliminator:       jpeg_destroy
DeadFunctionEliminator:       jpeg_alloc_quant_table
DeadFunctionEliminator:       jpeg_alloc_huff_table
DeadFunctionEliminator:       jdiv_round_up
DeadFunctionEliminator:       jround_up
DeadFunctionEliminator:       jcopy_sample_rows
DeadFunctionEliminator:       jcopy_block_row
DeadFunctionEliminator:       jzero_far
DeadFunctionEliminator:       jpeg_std_error
DeadFunctionEliminator:       error_exit
DeadFunctionEliminator:       emit_message
DeadFunctionEliminator:       output_message
DeadFunctionEliminator:       format_message
DeadFunctionEliminator:       reset_error_mgr
DeadFunctionEliminator:       sprintf
DeadFunctionEliminator:       jinit_memory_mgr
DeadFunctionEliminator:       alloc_small
DeadFunctionEliminator:       alloc_large
DeadFunctionEliminator:       alloc_sarray
DeadFunctionEliminator:   Identify the functions that can be deleted
DeadFunctionEliminator: Exit
Noelle:  Function "main"
Noelle:     Loop "  %103 = load i8**, i8*** %92, align 8, !tbaa !55" (8.381509e+01%)
Noelle:  Function "decode_mcu_AC_refine"
Noelle:     Loop "  %41 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %40" (0.000000e+00%)
Noelle:     Loop "  %87 = icmp slt i32 %85, 8" (5.689921e-01%)
Noelle:     Loop "  %172 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %167" (3.160692e-01%)
Noelle:     Loop "  %255 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %252" (3.427531e+00%)
Noelle:     Loop "  %312 = add nsw i64 %310, -1" (0.000000e+00%)
Noelle:     Loop "  %322 = add nsw i64 %321, -1" (0.000000e+00%)
Noelle:  Function "ycc_rgb_convert"
Noelle:     Loop "  %34 = load i8**, i8*** %1, align 8, !tbaa !49" (3.468632e+00%)
Noelle:     Loop "  %47 = getelementptr inbounds i8, i8* %37, i64 %45" (3.468479e+00%)
Noelle:  Function "jpeg_idct_islow"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8" (1.447619e+00%)
Noelle:     Loop "  %177 = getelementptr inbounds i8*, i8** %3, i64 %175" (1.791079e+00%)
Noelle:  Function "h2v2_fancy_upsample"
Noelle:     Loop "  %13 = getelementptr inbounds i8*, i8** %2, i64 %11" (2.523164e+00%)
Noelle:     Loop "  %63 = getelementptr inbounds i8, i8* %62, i64 1" (1.261070e+00%)
Noelle:     Loop "  %142 = getelementptr inbounds i8, i8* %141, i64 1" (1.261070e+00%)
Noelle:  Function "decode_mcu_AC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %6, i64 0, i32 2, i32 1, i64 %36" (0.000000e+00%)
Noelle:     Loop "  %79 = icmp slt i32 %76, 8" (1.459547e+00%)
Noelle:  Function "jpeg_fill_bit_buffer"
Noelle:     Loop "  %18 = load i32, i32* %11, align 8, !tbaa !39" (4.597412e-01%)
Noelle:     Loop "  %47 = icmp eq i64 %46, 0" (2.039953e-03%)
Noelle:  Function "consume_data"
Noelle:     Loop "  %15 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %14" (1.558641e-04%)
Noelle:     Loop "  %52 = icmp ult i32 %50, %49" (5.928178e-01%)
Noelle:     Loop "  %54 = load i32, i32* %7, align 8, !tbaa !39" (5.927021e-01%)
Noelle:     Loop "  %60 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %58" (4.705898e-01%)
Noelle:     Loop "  %129 = add nsw i64 %127, %51" (0.000000e+00%)
Noelle:     Loop "  %135 = add i64 %134, %133" (0.000000e+00%)
Noelle:     Loop "  %158 = getelementptr inbounds [64 x i16], [64 x i16]* %156, i64 1" (0.000000e+00%)
Noelle:     Loop "  %101 = add nsw i64 %99, %51" (0.000000e+00%)
Noelle:     Loop "  %107 = add i64 %106, %105" (0.000000e+00%)
Noelle:     Loop "  %83 = sext i32 %82 to i64" (2.127831e-01%)
Noelle:     Loop "  %91 = getelementptr inbounds [64 x i16], [64 x i16]* %89, i64 1" (9.991552e-02%)
Noelle:  Function "decode_mcu_DC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %36" (0.000000e+00%)
Noelle:     Loop "  %72 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %69" (1.787012e-01%)
Noelle:  Function "decode_mcu_DC_refine"
Noelle:     Loop "  %36 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %6, i64 0, i32 2, i32 1, i64 %35" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %67" (5.301922e-02%)
Noelle:  Function "decompress_data"
Noelle:     Loop "  %14 = load i32, i32* %9, align 4, !tbaa !40" (4.781107e-06%)
Noelle:     Loop "  %39 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %38, i64 0, i32 12" (2.414652e-02%)
Noelle:     Loop "  %80 = icmp eq i32 %77, 0" (2.408674e-02%)
Noelle:     Loop "  %89 = getelementptr inbounds [64 x i16], [64 x i16]* %87, i64 0, i64 0" (2.405184e-02%)
Noelle:  Function "jpeg_huff_decode"
Noelle:     Loop "  %36 = shl i64 %33, 1" (4.588440e-03%)
Noelle:  Function "sep_upsample"
Noelle:     Loop "  %25 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %10, i64 0, i32 2, i64 %23" (2.369412e-04%)
Noelle:  Function "access_virt_barray"
Noelle:     Loop "  %80 = mul nsw i64 %77, %47" (0.000000e+00%)
Noelle:     Loop "  %162 = mul nsw i64 %159, %131" (0.000000e+00%)
Noelle:     Loop "  %226 = load [64 x i16]**, [64 x i16]*** %223, align 8, !tbaa !40" (2.151606e-05%)
Noelle:  Function "process_data_context_main"
Noelle:     Loop "  %74 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %73, i64 0, i32 3" (2.005680e-07%)
Noelle:     Loop "  %103 = load i64, i64* %99, align 8, !tbaa !47" (8.347964e-08%)
Noelle:     Loop "  %151 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %150, i64 0, i32 3" (1.734642e-07%)
Noelle:     Loop "  %177 = add nsw i64 %175, %168" (6.613322e-08%)
Noelle:  Function "jpeg_read_scanlines"
Noelle:  Function "jpeg_start_decompress"
Noelle:     Loop "  %23 = icmp eq %struct.jpeg_progress_mgr* %22, null" (9.582921e-05%)
Noelle:  Function "fill_input_buffer"
Noelle:  Function "put_pixel_rows"
Noelle:  Function "start_pass_phuff_decoder"
Noelle:     Loop "  %101 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %100" (8.327365e-06%)
Noelle:     Loop "  %125 = getelementptr inbounds [64 x i32], [64 x i32]* %105, i64 %106, i64 %124" (8.119208e-06%)
Noelle:     Loop "  %63 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %62" (2.580280e-07%)
Noelle:     Loop "  %74 = getelementptr inbounds [64 x i32], [64 x i32]* %67, i64 %68, i64 %73" (1.040785e-07%)
Noelle:     Loop "  %194 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %193" (2.753852e-05%)
Noelle:     Loop "  %166 = icmp eq i32 %164, 0" (1.037858e-05%)
Noelle:  Function "jpeg_make_d_derived_tbl"
Noelle:     Loop "  %24 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %21" (6.788955e-06%)
Noelle:     Loop "  %50 = add nsw <2 x i64> %47, <i64 8, i64 8>" (0.000000e+00%)
Noelle:     Loop "  %62 = add nsw <2 x i64> %59, <i64 1, i64 1>" (3.621065e-07%)
Noelle:     Loop "  %97 = sext i8 %93 to i32" (8.088852e-06%)
Noelle:     Loop "  %103 = add nsw i64 %101, 1" (4.411411e-06%)
Noelle:     Loop "  %124 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %122" (5.122614e-06%)
Noelle:     Loop "  %155 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %153" (1.712308e-05%)
Noelle:     Loop "  %378 = add nsw i64 %170, %375" (2.067476e-06%)
Noelle:     Loop "  %408 = add i64 %406, %384" (1.164378e-06%)
Noelle:     Loop "  %447 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %445" (0.000000e+00%)
Noelle:     Loop "  %188 = add nsw i64 %170, %185" (6.925558e-06%)
Noelle:     Loop "  %218 = add i64 %216, %194" (4.438515e-06%)
Noelle:     Loop "  %245 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %243" (0.000000e+00%)
Noelle:     Loop "  %305 = add nsw i64 %170, %302" (2.233351e-07%)
Noelle:     Loop "  %343 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %341" (0.000000e+00%)
Noelle:     Loop "  %261 = add nsw i64 %170, %258" (5.995356e-07%)
Noelle:     Loop "  %290 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %288" (0.000000e+00%)
Noelle:     Loop "  %357 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 1, i64 %355" (3.446517e-06%)
Noelle:     Loop "  %364 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %362" (2.274549e-06%)
Noelle:  Function "read_markers"
Noelle:     Loop "  %34 = icmp eq i32 %33, 0" (1.664389e-05%)
Noelle:     Loop "  %682 = icmp eq i64 %679, 0" (3.054054e-06%)
Noelle:     Loop "  %748 = icmp eq i64 %746, 0" (0.000000e+00%)
Noelle:     Loop "  %725 = icmp eq i64 %723, 0" (2.912030e-06%)
Noelle:     Loop "  %406 = icmp eq i64 %403, 0" (0.000000e+00%)
Noelle:     Loop "  %516 = icmp eq i64 %514, 0" (1.088705e-05%)
Noelle:     Loop "  %540 = icmp eq i64 %537, 0" (3.458442e-06%)
Noelle:     Loop "  %597 = icmp eq i64 %595, 0" (6.317349e-06%)
Noelle:     Loop "  br i1 %221, label %224, label %.loopexit._crit_edge.._crit_edge204_crit_edge, !prof !80" (1.073310e-06%)
Noelle:     Loop "  %254 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %252, i64 0, i32 0" (2.341767e-07%)
Noelle:  Function "realize_virt_arrays"
Noelle:     Loop "  %11 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %8, i64 0, i32 0" (0.000000e+00%)
Noelle:     Loop "  %41 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %38, i64 0, i32 0" (9.648946e-08%)
Noelle:     Loop "  %92 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %91, i64 0, i32 0" (1.977492e-06%)
Noelle:     Loop "  %143 = sub i32 %119, %141" (0.000000e+00%)
Noelle:     Loop "  %191 = add i32 %189, 1" (0.000000e+00%)
Noelle:     Loop "  %206 = add i32 %205, 1" (0.000000e+00%)
Noelle:     Loop "  %234 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %233, i64 0, i32 0" (1.344998e-05%)
Noelle:     Loop "  %288 = sub i32 %262, %286" (1.311823e-05%)
Noelle:     Loop "  %332 = add i32 %330, 1" (4.878680e-08%)
Noelle:     Loop "  %347 = add i32 %346, 1" (1.287646e-05%)
Noelle:  Function "jinit_master_decompress"
Noelle:  Function "fullsize_upsample"
Noelle:  Function "jinit_color_deconverter"
Noelle:     Loop "  %187 = mul nsw i64 %186, 91881" (0.000000e+00%)
Noelle:     Loop "  %124 = mul nsw i64 %123, 91881" (7.215026e-06%)
Noelle:     Loop "  %72 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 %70, i32 12" (0.000000e+00%)
Noelle:     Loop "  %231 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 %229, i32 12" (0.000000e+00%)
Noelle:  Function "parse_switches"
Noelle:     Loop "  %27 = sext i32 %26 to i64" (4.616316e-06%)
Noelle:  Function "keymatch"
Noelle:     Loop "  %10 = getelementptr inbounds i8, i8* %7, i64 1" (3.289315e-06%)
Noelle:  Function "jzero_far"
Noelle:  Function "alloc_small"
Noelle:     Loop "  %35 = getelementptr inbounds %union.small_pool_struct, %union.small_pool_struct* %34, i64 0, i32 0, i32 2" (3.436759e-07%)
Noelle:     Loop "  %59 = lshr i64 %58, 1" (0.000000e+00%)
Noelle:  Function "consume_markers"
Noelle:     Loop "  %76 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %74, i64 0, i32 2" (1.029944e-07%)
Noelle:     Loop "  %127 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %125, i64 0, i32 9" (1.604544e-07%)
Noelle:  Function "start_input_pass"
Noelle:     Loop "  %72 = getelementptr inbounds %struct.jpeg_decompress_struct.261, %struct.jpeg_decompress_struct.261* %0, i64 0, i32 63, i64 %71" (4.813631e-07%)
Noelle:     Loop "  %112 = load i32, i32* %64, align 8, !tbaa !55" (4.336605e-08%)
Noelle:     Loop "  %122 = load i32, i32* %64, align 8, !tbaa !55" (6.071247e-08%)
Noelle:     Loop "  %153 = getelementptr inbounds %struct.jpeg_decompress_struct.261, %struct.jpeg_decompress_struct.261* %0, i64 0, i32 63, i64 %152" (2.851318e-07%)
Noelle:  Function "alloc_sarray"
Noelle:     Loop "  %29 = sub i32 %3, %27" (7.426436e-07%)
Noelle:     Loop "  %43 = add i32 %41, 1" (9.974191e-08%)
Noelle:     Loop "  %58 = add i32 %57, 1" (2.601963e-07%)
Noelle:  Function "next_marker"
Noelle:     Loop "  %13 = icmp eq i64 %12, 0" (6.635005e-07%)
Noelle:     Loop "  %29 = load %struct.jpeg_marker_reader.278*, %struct.jpeg_marker_reader.278** %9, align 8, !tbaa !47" (0.000000e+00%)
Noelle:     Loop "  %51 = icmp eq i64 %50, 0" (2.211668e-07%)
Noelle:  Function "start_pass_main"
Noelle:     Loop "  %28 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %27, i64 0, i32 3" (7.925145e-07%)
Noelle:     Loop "  %92 = getelementptr inbounds i8*, i8** %41, i64 %90" (1.875582e-07%)
Noelle:     Loop "  %54 = getelementptr inbounds i8*, i8** %41, i64 %52" (6.721737e-08%)
Noelle:     Loop "  %270 = getelementptr inbounds i8*, i8** %41, i64 %269" (0.000000e+00%)
Noelle:     Loop "  %195 = add nsw i64 %193, %148" (0.000000e+00%)
Noelle:     Loop "  %312 = add nsw i64 %311, %148" (8.022719e-08%)
Noelle:     Loop "  %328 = load i64, i64* %303, align 8, !tbaa !53" (0.000000e+00%)
Noelle:     Loop "  %354 = load i64, i64* %303, align 8, !tbaa !53" (4.878680e-08%)
Noelle:  Function "emit_message"
Noelle:  Function "start_pass"
Noelle:     Loop "  %18 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %15, i64 0, i32 9" (5.225609e-07%)
Noelle:     Loop "  %186 = getelementptr inbounds [8 x double], [8 x double]* @start_pass.aanscalefactor, i64 0, i64 %185" (0.000000e+00%)
Noelle:     Loop "  %155 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %50, i64 0, i32 0, i64 %154" (0.000000e+00%)
Noelle:  Function "jpeg_calc_output_dimensions"
Noelle:     Loop "  %113 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 0, i32 9" (5.637586e-08%)
Noelle:     Loop "  %85 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %83, i64 0, i32 3" (0.000000e+00%)
Noelle:     Loop "  %89 = shl i32 %88, 1" (0.000000e+00%)
Noelle:     Loop "  %118 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %116, i64 0, i32 2" (2.146619e-07%)
Noelle:  Function "get_sof"
Noelle:     Loop "  %217 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %216, i64 0, i32 1" (2.168302e-07%)
Noelle:  Function "free_pool"
Noelle:     Loop "  %22 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %21, i64 0, i32 10" (0.000000e+00%)
Noelle:     Loop "  %36 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %35, i64 0, i32 10" (3.469284e-08%)
Noelle:     Loop "  %54 = bitcast %union.large_pool_struct* %53 to i8*" (1.561178e-07%)
Noelle:     Loop "  %73 = bitcast %union.small_pool_struct* %72 to i8*" (9.648946e-08%)
Noelle:  Function "get_app0"
Noelle:     Loop "  %47 = icmp eq i64 %45, 0" (2.569438e-07%)
Noelle:  Function "start_output_pass"
Noelle:     Loop "  %48 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 0, i32 19" (2.461023e-07%)
Noelle:  Function "jinit_write_ppm"
Noelle:  Function "self_destruct"
Noelle:  Function "jinit_d_main_controller"
Noelle:     Loop "  %65 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %64, i64 0, i32 3" (1.127517e-07%)
Noelle:     Loop "  %112 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 0, i32 3" (8.456379e-08%)
Noelle:  Function "start_input_pass.105"
Noelle:  Function "request_virt_barray"
Noelle:  Function "jinit_upsampler"
Noelle:     Loop "  %53 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %52, i64 0, i32 2" (2.523240e+00%)
Noelle:  Function "alloc_large"
Noelle:  Function "jpeg_CreateDecompress"
Noelle:  Function "jinit_d_coef_controller"
Noelle:     Loop "  %29 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %28, i64 0, i32 3" (1.409397e-07%)
Noelle:  Function "jdiv_round_up"
Noelle:  Function "jinit_marker_reader"
Noelle:  Function "jinit_inverse_dct"
Noelle:     Loop "  %21 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (5.746001e-08%)
Noelle:  Function "prepare_for_output_pass"
Noelle:  Function "jinit_memory_mgr"
Noelle:  Function "jpeg_read_header"
Noelle:  Function "jinit_phuff_decoder"
Noelle:     Loop "  %29 = bitcast i32* %28 to i8*" (3.144038e-08%)
Noelle:  Function "jpeg_consume_input"
Noelle:  Function "jpeg_finish_decompress"
Noelle:     Loop "  %37 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %36, align 8, !tbaa !53" (5.420756e-09%)
Noelle:  Function "finish_input_pass"
Noelle:  Function "jround_up"
Noelle:  Function "jpeg_alloc_huff_table"
Noelle:  Function "jpeg_stdio_src"
Noelle:  Function "output_pass_setup"
Noelle:     Loop "  %25 = load i32, i32* %18, align 4, !tbaa !47" (0.000000e+00%)
Noelle:  Function "jinit_input_controller"
Noelle:  Function "reset_input_controller"
Noelle:  Function "jpeg_std_error"
Noelle:  Function "start_pass_dpost"
Noelle:  Function "jinit_d_post_controller"
Noelle:  Function "jpeg_alloc_quant_table"
Noelle:  Function "start_output_ppm"
Noelle:  Function "jpeg_get_large"
Noelle:  Function "jpeg_free_large"
Noelle:  Function "jpeg_destroy_decompress"
Noelle:  Function "reset_marker_reader"
Noelle:  Function "finish_output_pass"
Noelle:  Function "jpeg_destroy"
Noelle:  Function "start_pass_upsample"
Noelle:  Function "jpeg_get_small"
Noelle:  Function "jpeg_free_small"
Noelle:  Function "jpeg_abort"
Noelle:  Function "finish_output_ppm"
Noelle:  Function "jpeg_set_marker_processor"
Noelle:  Function "reset_error_mgr"
Noelle:  Function "init_source"
Noelle:  Function "jpeg_mem_available"
Noelle:  Function "start_pass_dcolor"
Noelle:  Function "term_source"
Noelle:  Function "get_app14"
Noelle:     Loop "  %47 = icmp eq i64 %45, 0" (0.000000e+00%)
Noelle:  Function "skip_variable"
Noelle:  Function "read_restart_marker"
Noelle:  Function "alloc_barray"
Noelle:     Loop "  %31 = sub i32 %3, %29" (0.000000e+00%)
Noelle:     Loop "  %46 = add i32 %44, 1" (0.000000e+00%)
Noelle:     Loop "  %61 = add i32 %60, 1" (0.000000e+00%)
Noelle:  Function "jpeg_mem_init"
Noelle:  Function "jpeg_resync_to_restart"
Noelle:     Loop "  %28 = icmp slt i32 %27, 192" (0.000000e+00%)
Noelle:  Function "jpeg_mem_term"
Noelle:  Function "process_data_crank_post"
Noelle:  Function "merged_2v_upsample"
Noelle:  Function "start_pass_merged_upsample"
Noelle:  Function "jinit_merged_upsampler"
Noelle:     Loop "  %75 = mul nsw i64 %74, 91881" (0.000000e+00%)
Noelle:  Function "update_box"
Noelle:     Loop "  %30 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %29" (0.000000e+00%)
Noelle:     Loop "  %33 = getelementptr inbounds [32 x i16], [32 x i16]* %31, i64 %32, i64 %23" (0.000000e+00%)
Noelle:     Loop "  %36 = load i16, i16* %34, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %57 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %56" (0.000000e+00%)
Noelle:     Loop "  %60 = getelementptr inbounds [32 x i16], [32 x i16]* %58, i64 %59, i64 %50" (0.000000e+00%)
Noelle:     Loop "  %63 = load i16, i16* %61, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader18" (0.000000e+00%)
Noelle:     Loop "  %86 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %85" (0.000000e+00%)
Noelle:     Loop "  %91 = load i16, i16* %89, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader14" (0.000000e+00%)
Noelle:     Loop "  %112 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %111" (0.000000e+00%)
Noelle:     Loop "  %117 = load i16, i16* %115, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader10" (0.000000e+00%)
Noelle:     Loop "  %139 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %138" (0.000000e+00%)
Noelle:     Loop "  %144 = load i16, i16* %142, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader6" (0.000000e+00%)
Noelle:     Loop "  %165 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %164" (0.000000e+00%)
Noelle:     Loop "  %170 = load i16, i16* %168, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %263 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %261" (0.000000e+00%)
Noelle:     Loop "  %269 = load i16, i16* %267, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %278 = getelementptr inbounds [32 x i16], [32 x i16]* %264, i64 %276, i64 %199" (0.000000e+00%)
Noelle:     Loop "  %282 = load i16, i16* %280, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %297 = load i16, i16* %295, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %215 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %213" (0.000000e+00%)
Noelle:     Loop "  %221 = load i16, i16* %219, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %231 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %229" (0.000000e+00%)
Noelle:     Loop "  %235 = getelementptr inbounds [32 x i16], [32 x i16]* %232, i64 %233, i64 %199" (0.000000e+00%)
Noelle:     Loop "  %239 = load i16, i16* %237, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %251 = load i16, i16* %249, align 2, !tbaa !50" (0.000000e+00%)
Noelle:  Function "fill_inverse_cmap"
Noelle:     Loop "  %49 = getelementptr inbounds i8, i8* %41, i64 %47" (0.000000e+00%)
Noelle:     Loop "  %179 = getelementptr inbounds [256 x i64], [256 x i64]* %6, i64 0, i64 %176" (0.000000e+00%)
Noelle:     Loop "  %340 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %339" (0.000000e+00%)
Noelle:     Loop "  %382 = load i64, i64* %380, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %599 = load i64, i64* %597, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %634 = load i64, i64* %632, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %669 = load i64, i64* %667, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %428 = add nuw nsw i64 %426, %418" (0.000000e+00%)
Noelle:  Function "merged_1v_upsample"
Noelle:  Function "finish_pass2"
Noelle:  Function "pass2_no_dither"
Noelle:     Loop "  %17 = getelementptr inbounds i8*, i8** %2, i64 %16" (0.000000e+00%)
Noelle:     Loop "  %24 = getelementptr inbounds i8, i8* %21, i64 1" (0.000000e+00%)
Noelle:  Function "pass2_fs_dither"
Noelle:     Loop "  %48 = getelementptr inbounds i8*, i8** %1, i64 %47" (0.000000e+00%)
Noelle:     Loop "  %86 = getelementptr inbounds i16, i16* %83, i64 %68" (0.000000e+00%)
Noelle:     Loop "  %40 = icmp eq i32 %38, 0" (0.000000e+00%)
Noelle:  Function "h2v1_merged_upsample"
Noelle:     Loop "  %40 = getelementptr inbounds i8, i8* %37, i64 1" (0.000000e+00%)
Noelle:  Function "finish_pass1"
Noelle:     Loop "  %32 = add nuw i64 %29, 1" (0.000000e+00%)
Noelle:     Loop "  %50 = getelementptr inbounds %struct.box, %struct.box* %48, i64 0, i32 7" (0.000000e+00%)
Noelle:     Loop "  %68 = getelementptr inbounds %struct.box, %struct.box* %66, i64 0, i32 6" (0.000000e+00%)
Noelle:     Loop "  %103 = getelementptr inbounds %struct.box, %struct.box* %101, i64 0, i32 6" (0.000000e+00%)
Noelle:     Loop "  %181 = load %struct.my_cquantizer.611*, %struct.my_cquantizer.611** %3, align 8, !tbaa !30" (0.000000e+00%)
Noelle:     Loop "  %211 = getelementptr inbounds [32 x i16]*, [32 x i16]** %183, i64 %206" (0.000000e+00%)
Noelle:     Loop "  %222 = getelementptr inbounds [32 x i16], [32 x i16]* %212, i64 %217, i64 %199" (0.000000e+00%)
Noelle:     Loop "  %233 = getelementptr inbounds i16, i16* %232, i64 1" (0.000000e+00%)
Noelle:  Function "prescan_quantize"
Noelle:     Loop "  %17 = getelementptr inbounds i8*, i8** %1, i64 %16" (0.000000e+00%)
Noelle:     Loop "  %21 = load i8, i8* %19, align 1, !tbaa !43" (0.000000e+00%)
Noelle:  Function "jpeg_idct_float"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8" (0.000000e+00%)
Noelle:     Loop "  %132 = getelementptr inbounds i8*, i8** %3, i64 %130" (0.000000e+00%)
Noelle:  Function "jpeg_idct_ifast"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8" (0.000000e+00%)
Noelle:     Loop "  %151 = getelementptr inbounds i8*, i8** %3, i64 %149" (0.000000e+00%)
Noelle:  Function "dummy_consume_data"
Noelle:  Function "process_data_simple_main"
Noelle:  Function "jcopy_sample_rows"
Noelle:     Loop "  %29 = getelementptr inbounds i8*, i8** %27, i64 1" (0.000000e+00%)
Noelle:  Function "jpeg_open_backing_store"
Noelle:  Function "jcopy_block_row"
Noelle:  Function "access_virt_sarray"
Noelle:     Loop "  %79 = mul nsw i64 %76, %46" (0.000000e+00%)
Noelle:     Loop "  %159 = mul nsw i64 %156, %128" (0.000000e+00%)
Noelle:     Loop "  %221 = load i8**, i8*** %218, align 8, !tbaa !38" (0.000000e+00%)
Noelle:  Function "request_virt_sarray"
Noelle:  Function "error_exit"
Noelle:  Function "h2v2_merged_upsample"
Noelle:     Loop "  %50 = getelementptr inbounds i8, i8* %45, i64 1" (0.000000e+00%)
Noelle:  Function "start_pass_huff_decoder"
Noelle:     Loop "  %33 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 63, i64 %32" (6.504907e-09%)
Noelle:  Function "jinit_huff_decoder"
Noelle:  Function "output_message"
Noelle:  Function "format_message"
Noelle:     Loop "  %41 = getelementptr inbounds i8, i8* %40, i64 1" (0.000000e+00%)
Noelle:  Function "jpeg_idct_4x4"
Noelle:     Loop "  %21 = icmp eq i32 %17, 4" (0.000000e+00%)
Noelle:     Loop "  %132 = getelementptr inbounds i8*, i8** %3, i64 %130" (0.000000e+00%)
Noelle:  Function "quantize_fs_dither"
Noelle:     Loop "  %129 = getelementptr inbounds i8*, i8** %2, i64 %128" (0.000000e+00%)
Noelle:     Loop "  %50 = getelementptr inbounds i8*, i8** %2, i64 %49" (0.000000e+00%)
Noelle:     Loop "  %54 = load i8*, i8** %52, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %88 = getelementptr inbounds i16, i16* %85, i64 %72" (0.000000e+00%)
Noelle:     Loop "  %32 = getelementptr inbounds i8*, i8** %2, i64 %31" (0.000000e+00%)
Noelle:     Loop "  %36 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %7, i64 0, i32 8, i64 %35" (0.000000e+00%)
Noelle:     Loop "  %42 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %7, i64 0, i32 8, i64 %41" (0.000000e+00%)
Noelle:  Function "jinit_2pass_quantizer"
Noelle:     Loop "  %34 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (0.000000e+00%)
Noelle:  Function "start_pass_2_quant"
Noelle:     Loop "  %80 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %79" (0.000000e+00%)
Noelle:  Function "new_color_map_2_quant"
Noelle:  Function "init_error_limit"
Noelle:     Loop "  %37 = getelementptr inbounds i32, i32* %12, i64 %35" (0.000000e+00%)
Noelle:     Loop "  %49 = getelementptr inbounds i32, i32* %12, i64 %48" (0.000000e+00%)
Noelle:  Function "quantize_ord_dither"
Noelle:     Loop "  %25 = getelementptr inbounds i8*, i8** %2, i64 %24" (0.000000e+00%)
Noelle:     Loop "  %78 = load i8*, i8** %25, align 8, !tbaa !40" (0.000000e+00%)
Noelle:     Loop "  %99 = load i8**, i8*** %17, align 8, !tbaa !44" (0.000000e+00%)
Noelle:     Loop "  %111 = load i8, i8* %107, align 1, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %31 = load i8**, i8*** %17, align 8, !tbaa !44" (0.000000e+00%)
Noelle:     Loop "  %43 = load i8, i8* %39, align 1, !tbaa !45" (0.000000e+00%)
Noelle:  Function "jpeg_idct_2x2"
Noelle:     Loop "  %Pivot6 = icmp ult i32 %32, 4" (0.000000e+00%)
Noelle:  Function "jpeg_idct_1x1"
Noelle:  Function "noop_upsample"
Noelle:  Function "h2v1_fancy_upsample"
Noelle:     Loop "  %12 = getelementptr inbounds i8*, i8** %2, i64 %11" (0.000000e+00%)
Noelle:     Loop "  %48 = shl i64 %47, 1" (0.000000e+00%)
Noelle:     Loop "  %121 = getelementptr inbounds i8, i8* %120, i64 1" (0.000000e+00%)
Noelle:  Function "h2v1_upsample"
Noelle:     Loop "  %13 = getelementptr inbounds i8*, i8** %5, i64 %12" (0.000000e+00%)
Noelle:     Loop "  %24 = getelementptr inbounds i8, i8* %22, i64 1" (0.000000e+00%)
Noelle:  Function "h2v2_upsample"
Noelle:     Loop "  %14 = getelementptr inbounds i8*, i8** %5, i64 %12" (0.000000e+00%)
Noelle:     Loop "  %25 = getelementptr inbounds i8, i8* %23, i64 1" (0.000000e+00%)
Noelle:  Function "int_upsample"
Noelle:     Loop "  %138 = getelementptr inbounds i8*, i8** %8, i64 %137" (0.000000e+00%)
Noelle:     Loop "  %148 = load i8, i8* %146, align 1, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %62 = getelementptr inbounds i8*, i8** %8, i64 %60" (0.000000e+00%)
Noelle:     Loop "  %72 = load i8, i8* %70, align 1, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %113 = getelementptr inbounds i8*, i8** %8, i64 %112" (0.000000e+00%)
Noelle:     Loop "  %123 = getelementptr inbounds i8, i8* %121, i64 1" (0.000000e+00%)
Noelle:     Loop "  %88 = getelementptr inbounds i8*, i8** %8, i64 %86" (0.000000e+00%)
Noelle:     Loop "  %98 = getelementptr inbounds i8, i8* %96, i64 1" (0.000000e+00%)
Noelle:     Loop "  %132 = add i64 %131, %27" (0.000000e+00%)
Noelle:     Loop "  %33 = load i32, i32* %22, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  br label %.loopexit.us.us" (0.000000e+00%)
Noelle:  Function "grayscale_convert"
Noelle:  Function "start_output_tga"
Noelle:     Loop "  %114 = load i8**, i8*** %111, align 8, !tbaa !53" (0.000000e+00%)
Noelle:  Function "null_convert"
Noelle:     Loop "  %24 = add nsw i32 %21, -1" (0.000000e+00%)
Noelle:     Loop "  %27 = getelementptr inbounds i8**, i8*** %1, i64 %26" (0.000000e+00%)
Noelle:     Loop "  %36 = getelementptr inbounds i8, i8* %34, i64 1" (0.000000e+00%)
Noelle:     Loop "  %44 = getelementptr inbounds i8, i8* %43, i64 1" (0.000000e+00%)
Noelle:     Loop "  %73 = getelementptr inbounds i8**, i8*** %1, i64 %72" (0.000000e+00%)
Noelle:     Loop "  %82 = getelementptr inbounds i8, i8* %80, i64 1" (0.000000e+00%)
Noelle:     Loop "  %90 = getelementptr inbounds i8**, i8*** %1, i64 %89" (0.000000e+00%)
Noelle:     Loop "  %99 = getelementptr inbounds i8, i8* %98, i64 1" (0.000000e+00%)
Noelle:  Function "COM_handler"
Noelle:     Loop "  %115 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %7, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %65 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %7, align 8, !tbaa !41" (0.000000e+00%)
Noelle:  Function "usage"
Noelle:  Function "copy_pixel_rows"
Noelle:     Loop "  %40 = getelementptr i8, i8* %14, i64 %38" (0.000000e+00%)
Noelle:     Loop "  %90 = getelementptr i8, i8* %14, i64 %88" (0.000000e+00%)
Noelle:     Loop "  %112 = getelementptr inbounds i8, i8* %109, i64 1" (0.000000e+00%)
Noelle:     Loop "  %125 = getelementptr inbounds i8, i8* %123, i64 1" (0.000000e+00%)
Noelle:  Function "put_demapped_gray"
Noelle:     Loop "  %23 = getelementptr inbounds i8, i8* %21, i64 1" (0.000000e+00%)
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %38, i64 1" (0.000000e+00%)
Noelle:  Function "put_demapped_rgb"
Noelle:     Loop "  %44 = getelementptr inbounds i8, i8* %43, i64 1" (0.000000e+00%)
Noelle:  Function "ycck_cmyk_convert"
Noelle:     Loop "  %35 = load i8**, i8*** %1, align 8, !tbaa !46" (0.000000e+00%)
Noelle:     Loop "  %51 = getelementptr inbounds i8, i8* %38, i64 %49" (0.000000e+00%)
Noelle:  Function "jinit_1pass_quantizer"
Noelle:     Loop "  %78 = add nuw i64 %77, 1" (0.000000e+00%)
Noelle:     Loop "  %81 = mul nsw i64 %79, %78" (0.000000e+00%)
Noelle:     Loop "  %93 = mul nsw i64 %91, %78" (0.000000e+00%)
Noelle:     Loop "  %55 = add nuw i64 %54, 1" (0.000000e+00%)
Noelle:     Loop "  %58 = mul nsw i64 %56, %55" (0.000000e+00%)
Noelle:     Loop "  %70 = add nuw i64 %69, 1" (0.000000e+00%)
Noelle:     Loop "  %74 = mul nsw i64 %72, %70" (0.000000e+00%)
Noelle:     Loop "  %130 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %126" (0.000000e+00%)
Noelle:     Loop "  %170 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %166" (0.000000e+00%)
Noelle:     Loop "  %235 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %233" (0.000000e+00%)
Noelle:     Loop "  br label %._crit_edge132" (0.000000e+00%)
Noelle:     Loop "  %sext = shl i64 %214, 32" (0.000000e+00%)
Noelle:     Loop "  br label %._crit_edge133.us" (0.000000e+00%)
Noelle:     Loop "  %195 = getelementptr inbounds [3 x i32], [3 x i32]* @select_ncolors.RGB_order, i64 0, i64 %192" (0.000000e+00%)
Noelle:     Loop "  %276 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %274" (0.000000e+00%)
Noelle:     Loop "  %297 = trunc i64 %295 to i32" (0.000000e+00%)
Noelle:     Loop "  %375 = add i64 %374, %287" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader3.us" (0.000000e+00%)
Noelle:     Loop "  %346 = load i8*, i8** %286, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %366 = load i8*, i8** %286, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader3.us.us" (0.000000e+00%)
Noelle:     Loop "  %309 = load i8*, i8** %286, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader1.us.us" (0.000000e+00%)
Noelle:     Loop "  %335 = load i8*, i8** %286, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %330 = add i64 %329, %287" (0.000000e+00%)
Noelle:     Loop "  %401 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (0.000000e+00%)
Noelle:     Loop "  br label %.loopexit15.us.us.us" (0.000000e+00%)
Noelle:  Function "start_pass_1_quant"
Noelle:     Loop "  %115 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %112, align 8, !tbaa !51" (0.000000e+00%)
Noelle:     Loop "  %134 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 8, i64 %133" (0.000000e+00%)
Noelle:     Loop "  %45 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %37, i64 0, i32 5, i64 %44" (0.000000e+00%)
Noelle:     Loop "  %51 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %37, i64 0, i32 5, i64 %50" (0.000000e+00%)
Noelle:     Loop "  br label %._crit_edge27" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @base_dither_matrix, i64 0, i64 %68, i64 %69" (0.000000e+00%)
Noelle:  Function "finish_pass_1_quant"
Noelle:  Function "new_color_map_1_quant"
Noelle:  Function "create_colorindex"
Noelle:     Loop "  %98 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 5, i64 %96" (0.000000e+00%)
Noelle:     Loop "  %113 = sext i32 %112 to i64" (0.000000e+00%)
Noelle:     Loop "  %118 = add i64 %117, 1" (0.000000e+00%)
Noelle:     Loop "  %28 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 5, i64 %26" (0.000000e+00%)
Noelle:     Loop "  %47 = sext i32 %46 to i64" (0.000000e+00%)
Noelle:     Loop "  %52 = add i64 %51, 1" (0.000000e+00%)
Noelle:     Loop "  %76 = load i8, i8* %36, align 1, !tbaa !51" (0.000000e+00%)
Noelle:  Function "color_quantize3"
Noelle:     Loop "  %97 = getelementptr inbounds i8*, i8** %2, i64 %96" (0.000000e+00%)
Noelle:     Loop "  %122 = getelementptr inbounds i8, i8* %119, i64 1" (0.000000e+00%)
Noelle:     Loop "  %26 = getelementptr inbounds i8*, i8** %2, i64 %25" (0.000000e+00%)
Noelle:     Loop "  %49 = getelementptr inbounds i8*, i8** %1, i64 %48" (0.000000e+00%)
Noelle:     Loop "  %56 = getelementptr inbounds i8, i8* %53, i64 1" (0.000000e+00%)
Noelle:  Function "color_quantize"
Noelle:     Loop "  %29 = getelementptr inbounds i8*, i8** %2, i64 %28" (0.000000e+00%)
Noelle:     Loop "  %183 = getelementptr inbounds i8, i8* %182, i64 1" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader1.us" (0.000000e+00%)
Noelle:     Loop "  %118 = getelementptr inbounds i8*, i8** %9, i64 %114" (0.000000e+00%)
Noelle:     Loop "  %164 = getelementptr inbounds i8*, i8** %9, i64 %160" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader1.us.us" (0.000000e+00%)
Noelle:     Loop "  %40 = getelementptr inbounds i8*, i8** %9, i64 %36" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader.us.us" (0.000000e+00%)
Noelle:     Loop "  %94 = getelementptr inbounds i8*, i8** %9, i64 %90" (0.000000e+00%)
Noelle:  Function "quantize3_ord_dither"
Noelle:     Loop "  %34 = load [16 x i32]*, [16 x i32]** %20, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %46 = getelementptr inbounds i8, i8* %42, i64 1" (0.000000e+00%)
Noelle:     Loop "  %28 = add nsw i32 %26, 1" (0.000000e+00%)
Noelle:  Function "jpeg_start_output"
Noelle:  Function "read_pbm_integer"
Noelle:     Loop "  %4 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %6 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %31 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %33 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:  Function "read_stdin"
Noelle:  Function "decode_mcu"
Noelle:     Loop "  %35 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %7, i64 0, i32 2, i32 0, i64 %34" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %67" (6.257200e-04%)
Noelle:     Loop "  %97 = icmp eq i32 %92, 0" (0.000000e+00%)
Noelle:     Loop "  %123 = icmp eq i64 %122, 0" (0.000000e+00%)
Noelle:     Loop "  %214 = icmp eq i32 %209, 0" (0.000000e+00%)
Noelle:     Loop "  %240 = icmp eq i64 %239, 0" (0.000000e+00%)
Noelle:     Loop "  %327 = icmp slt i32 %326, 8" (0.000000e+00%)
Noelle:     Loop "  %337 = icmp eq i32 %332, 0" (0.000000e+00%)
Noelle:     Loop "  %363 = icmp eq i64 %362, 0" (0.000000e+00%)
Noelle:     Loop "  %457 = icmp eq i32 %452, 0" (0.000000e+00%)
Noelle:     Loop "  %483 = icmp eq i64 %482, 0" (0.000000e+00%)
Noelle:     Loop "  %572 = icmp slt i32 %571, 8" (0.000000e+00%)
Noelle:     Loop "  %582 = icmp eq i32 %577, 0" (0.000000e+00%)
Noelle:     Loop "  %608 = icmp eq i64 %607, 0" (0.000000e+00%)
Noelle:     Loop "  %701 = icmp eq i32 %696, 0" (0.000000e+00%)
Noelle:     Loop "  %727 = icmp eq i64 %726, 0" (0.000000e+00%)
Noelle:  Function "write_stdout"
Noelle:  Function "jpeg_abort_decompress"
Noelle:  Function "jpeg_input_complete"
Noelle:  Function "jpeg_has_multiple_scans"
Noelle:  Function "jpeg_read_raw_data"
Noelle:  Function "read_color_map"
Noelle:     Loop "  br label %.preheader13" (0.000000e+00%)
Noelle:     Loop "  %196 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %198 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %202 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %206 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %229 = getelementptr inbounds i8, i8* %219, i64 %228" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader3" (0.000000e+00%)
Noelle:     Loop "  %142 = tail call fastcc i32 @read_pbm_integer(%struct.jpeg_decompress_struct* %0, %struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %156 = getelementptr inbounds i8, i8* %146, i64 %155" (0.000000e+00%)
Noelle:     Loop "  %16 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %51 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %75 = getelementptr inbounds i8, i8* %65, i64 %74" (0.000000e+00%)
Noelle:  Function "jpeg_finish_output"
Noelle:     Loop "  %28 = load i32, i32* %25, align 4, !tbaa !48" (0.000000e+00%)
Noelle:  Function "decompress_onepass"
Noelle:     Loop "  %31 = icmp ugt i32 %29, %8" (0.000000e+00%)
Noelle:     Loop "  %33 = load i8*, i8** %21, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %132 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %130" (0.000000e+00%)
Noelle:     Loop "  %173 = load i32, i32* %26, align 8, !tbaa !59" (0.000000e+00%)
Noelle:     Loop "  %182 = add nsw i64 %180, %179" (0.000000e+00%)
Noelle:     Loop "  %51 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %49" (0.000000e+00%)
Noelle:     Loop "  %83 = load i32, i32* %26, align 8, !tbaa !59" (0.000000e+00%)
Noelle:     Loop "  %92 = add nsw i64 %90, %89" (0.000000e+00%)
Noelle:  Function "decompress_smooth_data"
Noelle:     Loop "  %17 = load i32, i32* %11, align 4, !tbaa !39" (0.000000e+00%)
Noelle:     Loop "  %57 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %56, i64 0, i32 12" (0.000000e+00%)
Noelle:     Loop "  %163 = getelementptr inbounds [64 x i16]*, [64 x i16]** %104, i64 %161" (0.000000e+00%)
Noelle:     Loop "  call void @jcopy_block_row([64 x i16]* nonnull %197, [64 x i16]* nonnull %3, i32 1) #18" (0.000000e+00%)
Noelle:  Function "post_process_1pass"
Noelle:  Function "post_process_prepass"
Noelle:  Function "post_process_2pass"
Noelle:  Function "skip_input_data"
Noelle:     Loop "  %18 = sub nsw i64 %17, %16" (0.000000e+00%)
Noelle:  Function "jpeg_new_colormap"
Noelle:  Function "finish_output_tga"
Noelle:  Function "jinit_write_gif"
Noelle:  Function "start_output_gif"
Noelle:  Function "put_pixel_rows.52"
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %38, i64 1" (0.000000e+00%)
Noelle:     Loop "  %74 = sub nsw i32 %73, %72" (0.000000e+00%)
Noelle:     Loop "  %100 = trunc i64 %99 to i8" (0.000000e+00%)
Noelle:     Loop "  %165 = trunc i64 %164 to i8" (0.000000e+00%)
Noelle:  Function "finish_output_gif"
Noelle:     Loop "  %42 = trunc i64 %41 to i8" (0.000000e+00%)
Noelle:     Loop "  %113 = trunc i64 %112 to i8" (0.000000e+00%)
Noelle:  Function "emit_header"
Noelle:     Loop "  %22 = shl i32 1, %21" (0.000000e+00%)
Noelle:     Loop "  %104 = icmp slt i64 %103, %78" (0.000000e+00%)
Noelle:     Loop "  %81 = icmp slt i64 %80, %78" (0.000000e+00%)
Noelle:     Loop "  %218 = trunc i64 %217 to i8" (0.000000e+00%)
Noelle:  Function "jinit_write_targa"
Noelle:  Function "put_demapped_gray.55"
Noelle:     Loop "  %23 = getelementptr inbounds i8, i8* %20, i64 1" (0.000000e+00%)
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %37, i64 1" (0.000000e+00%)
Noelle:  Function "put_gray_rows"
Noelle:     Loop "  %39 = getelementptr i8, i8* %6, i64 %37" (0.000000e+00%)
Noelle:     Loop "  %89 = getelementptr i8, i8* %6, i64 %87" (0.000000e+00%)
Noelle:     Loop "  %111 = getelementptr inbounds i8, i8* %109, i64 1" (0.000000e+00%)
Noelle:     Loop "  %124 = getelementptr inbounds i8, i8* %123, i64 1" (0.000000e+00%)
Noelle:  Function "put_pixel_rows.56"
Noelle:     Loop "  %34 = getelementptr inbounds i8, i8* %33, i64 2" (0.000000e+00%)
Noelle:  Function "jinit_write_bmp"
Noelle:  Function "start_output_bmp"
Noelle:  Function "finish_output_bmp"
Noelle:     Loop "  %272 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %241, align 8, !tbaa !61" (0.000000e+00%)
Noelle:     Loop "  %284 = load i8, i8* %282, align 1, !tbaa !46" (0.000000e+00%)
Noelle:     Loop "  %247 = sub i32 %245, %246" (0.000000e+00%)
Noelle:     Loop "  %263 = load i8, i8* %261, align 1, !tbaa !46" (0.000000e+00%)
Noelle:  Function "put_gray_rows.59"
Noelle:     Loop "  %51 = getelementptr i8, i8* %18, i64 %49" (0.000000e+00%)
Noelle:     Loop "  %101 = getelementptr i8, i8* %18, i64 %99" (0.000000e+00%)
Noelle:     Loop "  %123 = getelementptr inbounds i8, i8* %121, i64 1" (0.000000e+00%)
Noelle:     Loop "  %137 = getelementptr inbounds i8, i8* %136, i64 1" (0.000000e+00%)
Noelle:  Function "put_pixel_rows.60"
Noelle:     Loop "  %47 = getelementptr inbounds i8, i8* %46, i64 1" (0.000000e+00%)
Noelle:  Function "write_colormap"
Noelle:     Loop "  %93 = load i8*, i8** %6, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %31 = load i8*, i8** %6, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %75 = load i8*, i8** %51, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %56 = load i8*, i8** %51, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %111 = tail call i32 @putc(i32 %110, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %15 = tail call i32 @putc(i32 %14, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %138 = tail call i32 @putc(i32 0, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %131 = tail call i32 @putc(i32 0, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:  Function "main"
Noelle:     Loop "  %103 = load i8**, i8*** %92, align 8, !tbaa !55" (8.381509e+01%)
Noelle:  Function "decode_mcu_AC_refine"
Noelle:     Loop "  %41 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %40" (0.000000e+00%)
Noelle:     Loop "  %87 = icmp slt i32 %85, 8" (5.689921e-01%)
Noelle:     Loop "  %172 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %167" (3.160692e-01%)
Noelle:     Loop "  %255 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %252" (3.427531e+00%)
Noelle:     Loop "  %312 = add nsw i64 %310, -1" (0.000000e+00%)
Noelle:     Loop "  %322 = add nsw i64 %321, -1" (0.000000e+00%)
Noelle:  Function "ycc_rgb_convert"
Noelle:     Loop "  %34 = load i8**, i8*** %1, align 8, !tbaa !49" (3.468632e+00%)
Noelle:     Loop "  %47 = getelementptr inbounds i8, i8* %37, i64 %45" (3.468479e+00%)
Noelle:  Function "jpeg_idct_islow"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8" (1.447619e+00%)
Noelle:     Loop "  %177 = getelementptr inbounds i8*, i8** %3, i64 %175" (1.791079e+00%)
Noelle:  Function "h2v2_fancy_upsample"
Noelle:     Loop "  %13 = getelementptr inbounds i8*, i8** %2, i64 %11" (2.523164e+00%)
Noelle:     Loop "  %63 = getelementptr inbounds i8, i8* %62, i64 1" (1.261070e+00%)
Noelle:     Loop "  %142 = getelementptr inbounds i8, i8* %141, i64 1" (1.261070e+00%)
Noelle:  Function "decode_mcu_AC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %6, i64 0, i32 2, i32 1, i64 %36" (0.000000e+00%)
Noelle:     Loop "  %79 = icmp slt i32 %76, 8" (1.459547e+00%)
Noelle:  Function "jpeg_fill_bit_buffer"
Noelle:     Loop "  %18 = load i32, i32* %11, align 8, !tbaa !39" (4.597412e-01%)
Noelle:     Loop "  %47 = icmp eq i64 %46, 0" (2.039953e-03%)
Noelle:  Function "consume_data"
Noelle:     Loop "  %15 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %14" (1.558641e-04%)
Noelle:     Loop "  %52 = icmp ult i32 %50, %49" (5.928178e-01%)
Noelle:     Loop "  %54 = load i32, i32* %7, align 8, !tbaa !39" (5.927021e-01%)
Noelle:     Loop "  %60 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %58" (4.705898e-01%)
Noelle:     Loop "  %129 = add nsw i64 %127, %51" (0.000000e+00%)
Noelle:     Loop "  %135 = add i64 %134, %133" (0.000000e+00%)
Noelle:     Loop "  %158 = getelementptr inbounds [64 x i16], [64 x i16]* %156, i64 1" (0.000000e+00%)
Noelle:     Loop "  %101 = add nsw i64 %99, %51" (0.000000e+00%)
Noelle:     Loop "  %107 = add i64 %106, %105" (0.000000e+00%)
Noelle:     Loop "  %83 = sext i32 %82 to i64" (2.127831e-01%)
Noelle:     Loop "  %91 = getelementptr inbounds [64 x i16], [64 x i16]* %89, i64 1" (9.991552e-02%)
Noelle:  Function "decode_mcu_DC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %36" (0.000000e+00%)
Noelle:     Loop "  %72 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %69" (1.787012e-01%)
Noelle:  Function "decode_mcu_DC_refine"
Noelle:     Loop "  %36 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %6, i64 0, i32 2, i32 1, i64 %35" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %67" (5.301922e-02%)
Noelle:  Function "decompress_data"
Noelle:     Loop "  %14 = load i32, i32* %9, align 4, !tbaa !40" (4.781107e-06%)
Noelle:     Loop "  %39 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %38, i64 0, i32 12" (2.414652e-02%)
Noelle:     Loop "  %80 = icmp eq i32 %77, 0" (2.408674e-02%)
Noelle:     Loop "  %89 = getelementptr inbounds [64 x i16], [64 x i16]* %87, i64 0, i64 0" (2.405184e-02%)
Noelle:  Function "jpeg_huff_decode"
Noelle:     Loop "  %36 = shl i64 %33, 1" (4.588440e-03%)
Noelle:  Function "sep_upsample"
Noelle:     Loop "  %25 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %10, i64 0, i32 2, i64 %23" (2.369412e-04%)
Noelle:  Function "access_virt_barray"
Noelle:     Loop "  %80 = mul nsw i64 %77, %47" (0.000000e+00%)
Noelle:     Loop "  %162 = mul nsw i64 %159, %131" (0.000000e+00%)
Noelle:     Loop "  %226 = load [64 x i16]**, [64 x i16]*** %223, align 8, !tbaa !40" (2.151606e-05%)
Noelle:  Function "process_data_context_main"
Noelle:     Loop "  %74 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %73, i64 0, i32 3" (2.005680e-07%)
Noelle:     Loop "  %103 = load i64, i64* %99, align 8, !tbaa !47" (8.347964e-08%)
Noelle:     Loop "  %151 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %150, i64 0, i32 3" (1.734642e-07%)
Noelle:     Loop "  %177 = add nsw i64 %175, %168" (6.613322e-08%)
Noelle:  Function "jpeg_read_scanlines"
Noelle:  Function "jpeg_start_decompress"
Noelle:     Loop "  %23 = icmp eq %struct.jpeg_progress_mgr* %22, null" (9.582921e-05%)
Noelle:  Function "fill_input_buffer"
Noelle:  Function "put_pixel_rows"
Noelle:  Function "start_pass_phuff_decoder"
Noelle:     Loop "  %101 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %100" (8.327365e-06%)
Noelle:     Loop "  %125 = getelementptr inbounds [64 x i32], [64 x i32]* %105, i64 %106, i64 %124" (8.119208e-06%)
Noelle:     Loop "  %63 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %62" (2.580280e-07%)
Noelle:     Loop "  %74 = getelementptr inbounds [64 x i32], [64 x i32]* %67, i64 %68, i64 %73" (1.040785e-07%)
Noelle:     Loop "  %194 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %193" (2.753852e-05%)
Noelle:     Loop "  %166 = icmp eq i32 %164, 0" (1.037858e-05%)
Noelle:  Function "jpeg_make_d_derived_tbl"
Noelle:     Loop "  %24 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %21" (6.788955e-06%)
Noelle:     Loop "  %50 = add nsw <2 x i64> %47, <i64 8, i64 8>" (0.000000e+00%)
Noelle:     Loop "  %62 = add nsw <2 x i64> %59, <i64 1, i64 1>" (3.621065e-07%)
Noelle:     Loop "  %97 = sext i8 %93 to i32" (8.088852e-06%)
Noelle:     Loop "  %103 = add nsw i64 %101, 1" (4.411411e-06%)
Noelle:     Loop "  %124 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %122" (5.122614e-06%)
Noelle:     Loop "  %155 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %153" (1.712308e-05%)
Noelle:     Loop "  %378 = add nsw i64 %170, %375" (2.067476e-06%)
Noelle:     Loop "  %408 = add i64 %406, %384" (1.164378e-06%)
Noelle:     Loop "  %447 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %445" (0.000000e+00%)
Noelle:     Loop "  %188 = add nsw i64 %170, %185" (6.925558e-06%)
Noelle:     Loop "  %218 = add i64 %216, %194" (4.438515e-06%)
Noelle:     Loop "  %245 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %243" (0.000000e+00%)
Noelle:     Loop "  %305 = add nsw i64 %170, %302" (2.233351e-07%)
Noelle:     Loop "  %343 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %341" (0.000000e+00%)
Noelle:     Loop "  %261 = add nsw i64 %170, %258" (5.995356e-07%)
Noelle:     Loop "  %290 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %288" (0.000000e+00%)
Noelle:     Loop "  %357 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 1, i64 %355" (3.446517e-06%)
Noelle:     Loop "  %364 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %362" (2.274549e-06%)
Noelle:  Function "read_markers"
Noelle:     Loop "  %34 = icmp eq i32 %33, 0" (1.664389e-05%)
Noelle:     Loop "  %682 = icmp eq i64 %679, 0" (3.054054e-06%)
Noelle:     Loop "  %748 = icmp eq i64 %746, 0" (0.000000e+00%)
Noelle:     Loop "  %725 = icmp eq i64 %723, 0" (2.912030e-06%)
Noelle:     Loop "  %406 = icmp eq i64 %403, 0" (0.000000e+00%)
Noelle:     Loop "  %516 = icmp eq i64 %514, 0" (1.088705e-05%)
Noelle:     Loop "  %540 = icmp eq i64 %537, 0" (3.458442e-06%)
Noelle:     Loop "  %597 = icmp eq i64 %595, 0" (6.317349e-06%)
Noelle:     Loop "  br i1 %221, label %224, label %.loopexit._crit_edge.._crit_edge204_crit_edge, !prof !80" (1.073310e-06%)
Noelle:     Loop "  %254 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %252, i64 0, i32 0" (2.341767e-07%)
Noelle:  Function "realize_virt_arrays"
Noelle:     Loop "  %11 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %8, i64 0, i32 0" (0.000000e+00%)
Noelle:     Loop "  %41 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %38, i64 0, i32 0" (9.648946e-08%)
Noelle:     Loop "  %92 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %91, i64 0, i32 0" (1.977492e-06%)
Noelle:     Loop "  %143 = sub i32 %119, %141" (0.000000e+00%)
Noelle:     Loop "  %191 = add i32 %189, 1" (0.000000e+00%)
Noelle:     Loop "  %206 = add i32 %205, 1" (0.000000e+00%)
Noelle:     Loop "  %234 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %233, i64 0, i32 0" (1.344998e-05%)
Noelle:     Loop "  %288 = sub i32 %262, %286" (1.311823e-05%)
Noelle:     Loop "  %332 = add i32 %330, 1" (4.878680e-08%)
Noelle:     Loop "  %347 = add i32 %346, 1" (1.287646e-05%)
Noelle:  Function "jinit_master_decompress"
Noelle:  Function "fullsize_upsample"
Noelle:  Function "jinit_color_deconverter"
Noelle:     Loop "  %187 = mul nsw i64 %186, 91881" (0.000000e+00%)
Noelle:     Loop "  %124 = mul nsw i64 %123, 91881" (7.215026e-06%)
Noelle:     Loop "  %72 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 %70, i32 12" (0.000000e+00%)
Noelle:     Loop "  %231 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 %229, i32 12" (0.000000e+00%)
Noelle:  Function "parse_switches"
Noelle:     Loop "  %27 = sext i32 %26 to i64" (4.616316e-06%)
Noelle:  Function "keymatch"
Noelle:     Loop "  %10 = getelementptr inbounds i8, i8* %7, i64 1" (3.289315e-06%)
Noelle:  Function "jzero_far"
Noelle:  Function "alloc_small"
Noelle:     Loop "  %35 = getelementptr inbounds %union.small_pool_struct, %union.small_pool_struct* %34, i64 0, i32 0, i32 2" (3.436759e-07%)
Noelle:     Loop "  %59 = lshr i64 %58, 1" (0.000000e+00%)
Noelle:  Function "consume_markers"
Noelle:     Loop "  %76 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %74, i64 0, i32 2" (1.029944e-07%)
Noelle:     Loop "  %127 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %125, i64 0, i32 9" (1.604544e-07%)
Noelle:  Function "start_input_pass"
Noelle:     Loop "  %72 = getelementptr inbounds %struct.jpeg_decompress_struct.261, %struct.jpeg_decompress_struct.261* %0, i64 0, i32 63, i64 %71" (4.813631e-07%)
Noelle:     Loop "  %112 = load i32, i32* %64, align 8, !tbaa !55" (4.336605e-08%)
Noelle:     Loop "  %122 = load i32, i32* %64, align 8, !tbaa !55" (6.071247e-08%)
Noelle:     Loop "  %153 = getelementptr inbounds %struct.jpeg_decompress_struct.261, %struct.jpeg_decompress_struct.261* %0, i64 0, i32 63, i64 %152" (2.851318e-07%)
Noelle:  Function "alloc_sarray"
Noelle:     Loop "  %29 = sub i32 %3, %27" (7.426436e-07%)
Noelle:     Loop "  %43 = add i32 %41, 1" (9.974191e-08%)
Noelle:     Loop "  %58 = add i32 %57, 1" (2.601963e-07%)
Noelle:  Function "next_marker"
Noelle:     Loop "  %13 = icmp eq i64 %12, 0" (6.635005e-07%)
Noelle:     Loop "  %29 = load %struct.jpeg_marker_reader.278*, %struct.jpeg_marker_reader.278** %9, align 8, !tbaa !47" (0.000000e+00%)
Noelle:     Loop "  %51 = icmp eq i64 %50, 0" (2.211668e-07%)
Noelle:  Function "start_pass_main"
Noelle:     Loop "  %28 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %27, i64 0, i32 3" (7.925145e-07%)
Noelle:     Loop "  %92 = getelementptr inbounds i8*, i8** %41, i64 %90" (1.875582e-07%)
Noelle:     Loop "  %54 = getelementptr inbounds i8*, i8** %41, i64 %52" (6.721737e-08%)
Noelle:     Loop "  %270 = getelementptr inbounds i8*, i8** %41, i64 %269" (0.000000e+00%)
Noelle:     Loop "  %195 = add nsw i64 %193, %148" (0.000000e+00%)
Noelle:     Loop "  %312 = add nsw i64 %311, %148" (8.022719e-08%)
Noelle:     Loop "  %328 = load i64, i64* %303, align 8, !tbaa !53" (0.000000e+00%)
Noelle:     Loop "  %354 = load i64, i64* %303, align 8, !tbaa !53" (4.878680e-08%)
Noelle:  Function "emit_message"
Noelle:  Function "start_pass"
Noelle:     Loop "  %18 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %15, i64 0, i32 9" (5.225609e-07%)
Noelle:     Loop "  %186 = getelementptr inbounds [8 x double], [8 x double]* @start_pass.aanscalefactor, i64 0, i64 %185" (0.000000e+00%)
Noelle:     Loop "  %155 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %50, i64 0, i32 0, i64 %154" (0.000000e+00%)
Noelle:  Function "jpeg_calc_output_dimensions"
Noelle:     Loop "  %113 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 0, i32 9" (5.637586e-08%)
Noelle:     Loop "  %85 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %83, i64 0, i32 3" (0.000000e+00%)
Noelle:     Loop "  %89 = shl i32 %88, 1" (0.000000e+00%)
Noelle:     Loop "  %118 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %116, i64 0, i32 2" (2.146619e-07%)
Noelle:  Function "get_sof"
Noelle:     Loop "  %217 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %216, i64 0, i32 1" (2.168302e-07%)
Noelle:  Function "free_pool"
Noelle:     Loop "  %22 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %21, i64 0, i32 10" (0.000000e+00%)
Noelle:     Loop "  %36 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %35, i64 0, i32 10" (3.469284e-08%)
Noelle:     Loop "  %54 = bitcast %union.large_pool_struct* %53 to i8*" (1.561178e-07%)
Noelle:     Loop "  %73 = bitcast %union.small_pool_struct* %72 to i8*" (9.648946e-08%)
Noelle:  Function "get_app0"
Noelle:     Loop "  %47 = icmp eq i64 %45, 0" (2.569438e-07%)
Noelle:  Function "start_output_pass"
Noelle:     Loop "  %48 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 0, i32 19" (2.461023e-07%)
Noelle:  Function "jinit_write_ppm"
Noelle:  Function "self_destruct"
Noelle:  Function "jinit_d_main_controller"
Noelle:     Loop "  %65 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %64, i64 0, i32 3" (1.127517e-07%)
Noelle:     Loop "  %112 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 0, i32 3" (8.456379e-08%)
Noelle:  Function "start_input_pass.105"
Noelle:  Function "request_virt_barray"
Noelle:  Function "jinit_upsampler"
Noelle:     Loop "  %53 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %52, i64 0, i32 2" (2.523240e+00%)
Noelle:  Function "alloc_large"
Noelle:  Function "jpeg_CreateDecompress"
Noelle:  Function "jinit_d_coef_controller"
Noelle:     Loop "  %29 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %28, i64 0, i32 3" (1.409397e-07%)
Noelle:  Function "jdiv_round_up"
Noelle:  Function "jinit_marker_reader"
Noelle:  Function "jinit_inverse_dct"
Noelle:     Loop "  %21 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (5.746001e-08%)
Noelle:  Function "prepare_for_output_pass"
Noelle:  Function "jinit_memory_mgr"
Noelle:  Function "jpeg_read_header"
Noelle:  Function "jinit_phuff_decoder"
Noelle:     Loop "  %29 = bitcast i32* %28 to i8*" (3.144038e-08%)
Noelle:  Function "jpeg_consume_input"
Noelle:  Function "jpeg_finish_decompress"
Noelle:     Loop "  %37 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %36, align 8, !tbaa !53" (5.420756e-09%)
Noelle:  Function "finish_input_pass"
Noelle:  Function "jround_up"
Noelle:  Function "jpeg_alloc_huff_table"
Noelle:  Function "jpeg_stdio_src"
Noelle:  Function "output_pass_setup"
Noelle:     Loop "  %25 = load i32, i32* %18, align 4, !tbaa !47" (0.000000e+00%)
Noelle:  Function "jinit_input_controller"
Noelle:  Function "reset_input_controller"
Noelle:  Function "jpeg_std_error"
Noelle:  Function "start_pass_dpost"
Noelle:  Function "jinit_d_post_controller"
Noelle:  Function "jpeg_alloc_quant_table"
Noelle:  Function "start_output_ppm"
Noelle:  Function "jpeg_get_large"
Noelle:  Function "jpeg_free_large"
Noelle:  Function "jpeg_destroy_decompress"
Noelle:  Function "reset_marker_reader"
Noelle:  Function "finish_output_pass"
Noelle:  Function "jpeg_destroy"
Noelle:  Function "start_pass_upsample"
Noelle:  Function "jpeg_get_small"
Noelle:  Function "jpeg_free_small"
Noelle:  Function "jpeg_abort"
Noelle:  Function "finish_output_ppm"
Noelle:  Function "jpeg_set_marker_processor"
Noelle:  Function "reset_error_mgr"
Noelle:  Function "init_source"
Noelle:  Function "jpeg_mem_available"
Noelle:  Function "start_pass_dcolor"
Noelle:  Function "term_source"
Noelle:  Function "get_app14"
Noelle:     Loop "  %47 = icmp eq i64 %45, 0" (0.000000e+00%)
Noelle:  Function "skip_variable"
Noelle:  Function "read_restart_marker"
Noelle:  Function "alloc_barray"
Noelle:     Loop "  %31 = sub i32 %3, %29" (0.000000e+00%)
Noelle:     Loop "  %46 = add i32 %44, 1" (0.000000e+00%)
Noelle:     Loop "  %61 = add i32 %60, 1" (0.000000e+00%)
Noelle:  Function "jpeg_mem_init"
Noelle:  Function "jpeg_resync_to_restart"
Noelle:     Loop "  %28 = icmp slt i32 %27, 192" (0.000000e+00%)
Noelle:  Function "jpeg_mem_term"
Noelle:  Function "process_data_crank_post"
Noelle:  Function "merged_2v_upsample"
Noelle:  Function "start_pass_merged_upsample"
Noelle:  Function "jinit_merged_upsampler"
Noelle:     Loop "  %75 = mul nsw i64 %74, 91881" (0.000000e+00%)
Noelle:  Function "update_box"
Noelle:     Loop "  %30 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %29" (0.000000e+00%)
Noelle:     Loop "  %33 = getelementptr inbounds [32 x i16], [32 x i16]* %31, i64 %32, i64 %23" (0.000000e+00%)
Noelle:     Loop "  %36 = load i16, i16* %34, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %57 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %56" (0.000000e+00%)
Noelle:     Loop "  %60 = getelementptr inbounds [32 x i16], [32 x i16]* %58, i64 %59, i64 %50" (0.000000e+00%)
Noelle:     Loop "  %63 = load i16, i16* %61, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader18" (0.000000e+00%)
Noelle:     Loop "  %86 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %85" (0.000000e+00%)
Noelle:     Loop "  %91 = load i16, i16* %89, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader14" (0.000000e+00%)
Noelle:     Loop "  %112 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %111" (0.000000e+00%)
Noelle:     Loop "  %117 = load i16, i16* %115, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader10" (0.000000e+00%)
Noelle:     Loop "  %139 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %138" (0.000000e+00%)
Noelle:     Loop "  %144 = load i16, i16* %142, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader6" (0.000000e+00%)
Noelle:     Loop "  %165 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %164" (0.000000e+00%)
Noelle:     Loop "  %170 = load i16, i16* %168, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %263 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %261" (0.000000e+00%)
Noelle:     Loop "  %269 = load i16, i16* %267, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %278 = getelementptr inbounds [32 x i16], [32 x i16]* %264, i64 %276, i64 %199" (0.000000e+00%)
Noelle:     Loop "  %282 = load i16, i16* %280, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %297 = load i16, i16* %295, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %215 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %213" (0.000000e+00%)
Noelle:     Loop "  %221 = load i16, i16* %219, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %231 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %229" (0.000000e+00%)
Noelle:     Loop "  %235 = getelementptr inbounds [32 x i16], [32 x i16]* %232, i64 %233, i64 %199" (0.000000e+00%)
Noelle:     Loop "  %239 = load i16, i16* %237, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %251 = load i16, i16* %249, align 2, !tbaa !50" (0.000000e+00%)
Noelle:  Function "fill_inverse_cmap"
Noelle:     Loop "  %49 = getelementptr inbounds i8, i8* %41, i64 %47" (0.000000e+00%)
Noelle:     Loop "  %179 = getelementptr inbounds [256 x i64], [256 x i64]* %6, i64 0, i64 %176" (0.000000e+00%)
Noelle:     Loop "  %340 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %339" (0.000000e+00%)
Noelle:     Loop "  %382 = load i64, i64* %380, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %599 = load i64, i64* %597, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %634 = load i64, i64* %632, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %669 = load i64, i64* %667, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %428 = add nuw nsw i64 %426, %418" (0.000000e+00%)
Noelle:  Function "merged_1v_upsample"
Noelle:  Function "finish_pass2"
Noelle:  Function "pass2_no_dither"
Noelle:     Loop "  %17 = getelementptr inbounds i8*, i8** %2, i64 %16" (0.000000e+00%)
Noelle:     Loop "  %24 = getelementptr inbounds i8, i8* %21, i64 1" (0.000000e+00%)
Noelle:  Function "pass2_fs_dither"
Noelle:     Loop "  %48 = getelementptr inbounds i8*, i8** %1, i64 %47" (0.000000e+00%)
Noelle:     Loop "  %86 = getelementptr inbounds i16, i16* %83, i64 %68" (0.000000e+00%)
Noelle:     Loop "  %40 = icmp eq i32 %38, 0" (0.000000e+00%)
Noelle:  Function "h2v1_merged_upsample"
Noelle:     Loop "  %40 = getelementptr inbounds i8, i8* %37, i64 1" (0.000000e+00%)
Noelle:  Function "finish_pass1"
Noelle:     Loop "  %32 = add nuw i64 %29, 1" (0.000000e+00%)
Noelle:     Loop "  %50 = getelementptr inbounds %struct.box, %struct.box* %48, i64 0, i32 7" (0.000000e+00%)
Noelle:     Loop "  %68 = getelementptr inbounds %struct.box, %struct.box* %66, i64 0, i32 6" (0.000000e+00%)
Noelle:     Loop "  %103 = getelementptr inbounds %struct.box, %struct.box* %101, i64 0, i32 6" (0.000000e+00%)
Noelle:     Loop "  %181 = load %struct.my_cquantizer.611*, %struct.my_cquantizer.611** %3, align 8, !tbaa !30" (0.000000e+00%)
Noelle:     Loop "  %211 = getelementptr inbounds [32 x i16]*, [32 x i16]** %183, i64 %206" (0.000000e+00%)
Noelle:     Loop "  %222 = getelementptr inbounds [32 x i16], [32 x i16]* %212, i64 %217, i64 %199" (0.000000e+00%)
Noelle:     Loop "  %233 = getelementptr inbounds i16, i16* %232, i64 1" (0.000000e+00%)
Noelle:  Function "prescan_quantize"
Noelle:     Loop "  %17 = getelementptr inbounds i8*, i8** %1, i64 %16" (0.000000e+00%)
Noelle:     Loop "  %21 = load i8, i8* %19, align 1, !tbaa !43" (0.000000e+00%)
Noelle:  Function "jpeg_idct_float"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8" (0.000000e+00%)
Noelle:     Loop "  %132 = getelementptr inbounds i8*, i8** %3, i64 %130" (0.000000e+00%)
Noelle:  Function "jpeg_idct_ifast"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8" (0.000000e+00%)
Noelle:     Loop "  %151 = getelementptr inbounds i8*, i8** %3, i64 %149" (0.000000e+00%)
Noelle:  Function "dummy_consume_data"
Noelle:  Function "process_data_simple_main"
Noelle:  Function "jcopy_sample_rows"
Noelle:     Loop "  %29 = getelementptr inbounds i8*, i8** %27, i64 1" (0.000000e+00%)
Noelle:  Function "jpeg_open_backing_store"
Noelle:  Function "jcopy_block_row"
Noelle:  Function "access_virt_sarray"
Noelle:     Loop "  %79 = mul nsw i64 %76, %46" (0.000000e+00%)
Noelle:     Loop "  %159 = mul nsw i64 %156, %128" (0.000000e+00%)
Noelle:     Loop "  %221 = load i8**, i8*** %218, align 8, !tbaa !38" (0.000000e+00%)
Noelle:  Function "request_virt_sarray"
Noelle:  Function "error_exit"
Noelle:  Function "h2v2_merged_upsample"
Noelle:     Loop "  %50 = getelementptr inbounds i8, i8* %45, i64 1" (0.000000e+00%)
Noelle:  Function "start_pass_huff_decoder"
Noelle:     Loop "  %33 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 63, i64 %32" (6.504907e-09%)
Noelle:  Function "jinit_huff_decoder"
Noelle:  Function "output_message"
Noelle:  Function "format_message"
Noelle:     Loop "  %41 = getelementptr inbounds i8, i8* %40, i64 1" (0.000000e+00%)
Noelle:  Function "jpeg_idct_4x4"
Noelle:     Loop "  %21 = icmp eq i32 %17, 4" (0.000000e+00%)
Noelle:     Loop "  %132 = getelementptr inbounds i8*, i8** %3, i64 %130" (0.000000e+00%)
Noelle:  Function "quantize_fs_dither"
Noelle:     Loop "  %129 = getelementptr inbounds i8*, i8** %2, i64 %128" (0.000000e+00%)
Noelle:     Loop "  %50 = getelementptr inbounds i8*, i8** %2, i64 %49" (0.000000e+00%)
Noelle:     Loop "  %54 = load i8*, i8** %52, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %88 = getelementptr inbounds i16, i16* %85, i64 %72" (0.000000e+00%)
Noelle:     Loop "  %32 = getelementptr inbounds i8*, i8** %2, i64 %31" (0.000000e+00%)
Noelle:     Loop "  %36 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %7, i64 0, i32 8, i64 %35" (0.000000e+00%)
Noelle:     Loop "  %42 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %7, i64 0, i32 8, i64 %41" (0.000000e+00%)
Noelle:  Function "jinit_2pass_quantizer"
Noelle:     Loop "  %34 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (0.000000e+00%)
Noelle:  Function "start_pass_2_quant"
Noelle:     Loop "  %80 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %79" (0.000000e+00%)
Noelle:  Function "new_color_map_2_quant"
Noelle:  Function "init_error_limit"
Noelle:     Loop "  %37 = getelementptr inbounds i32, i32* %12, i64 %35" (0.000000e+00%)
Noelle:     Loop "  %49 = getelementptr inbounds i32, i32* %12, i64 %48" (0.000000e+00%)
Noelle:  Function "quantize_ord_dither"
Noelle:     Loop "  %25 = getelementptr inbounds i8*, i8** %2, i64 %24" (0.000000e+00%)
Noelle:     Loop "  %78 = load i8*, i8** %25, align 8, !tbaa !40" (0.000000e+00%)
Noelle:     Loop "  %99 = load i8**, i8*** %17, align 8, !tbaa !44" (0.000000e+00%)
Noelle:     Loop "  %111 = load i8, i8* %107, align 1, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %31 = load i8**, i8*** %17, align 8, !tbaa !44" (0.000000e+00%)
Noelle:     Loop "  %43 = load i8, i8* %39, align 1, !tbaa !45" (0.000000e+00%)
Noelle:  Function "jpeg_idct_2x2"
Noelle:     Loop "  %Pivot6 = icmp ult i32 %32, 4" (0.000000e+00%)
Noelle:  Function "jpeg_idct_1x1"
Noelle:  Function "noop_upsample"
Noelle:  Function "h2v1_fancy_upsample"
Noelle:     Loop "  %12 = getelementptr inbounds i8*, i8** %2, i64 %11" (0.000000e+00%)
Noelle:     Loop "  %48 = shl i64 %47, 1" (0.000000e+00%)
Noelle:     Loop "  %121 = getelementptr inbounds i8, i8* %120, i64 1" (0.000000e+00%)
Noelle:  Function "h2v1_upsample"
Noelle:     Loop "  %13 = getelementptr inbounds i8*, i8** %5, i64 %12" (0.000000e+00%)
Noelle:     Loop "  %24 = getelementptr inbounds i8, i8* %22, i64 1" (0.000000e+00%)
Noelle:  Function "h2v2_upsample"
Noelle:     Loop "  %14 = getelementptr inbounds i8*, i8** %5, i64 %12" (0.000000e+00%)
Noelle:     Loop "  %25 = getelementptr inbounds i8, i8* %23, i64 1" (0.000000e+00%)
Noelle:  Function "int_upsample"
Noelle:     Loop "  %138 = getelementptr inbounds i8*, i8** %8, i64 %137" (0.000000e+00%)
Noelle:     Loop "  %148 = load i8, i8* %146, align 1, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %62 = getelementptr inbounds i8*, i8** %8, i64 %60" (0.000000e+00%)
Noelle:     Loop "  %72 = load i8, i8* %70, align 1, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %113 = getelementptr inbounds i8*, i8** %8, i64 %112" (0.000000e+00%)
Noelle:     Loop "  %123 = getelementptr inbounds i8, i8* %121, i64 1" (0.000000e+00%)
Noelle:     Loop "  %88 = getelementptr inbounds i8*, i8** %8, i64 %86" (0.000000e+00%)
Noelle:     Loop "  %98 = getelementptr inbounds i8, i8* %96, i64 1" (0.000000e+00%)
Noelle:     Loop "  %132 = add i64 %131, %27" (0.000000e+00%)
Noelle:     Loop "  %33 = load i32, i32* %22, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  br label %.loopexit.us.us" (0.000000e+00%)
Noelle:  Function "grayscale_convert"
Noelle:  Function "start_output_tga"
Noelle:     Loop "  %114 = load i8**, i8*** %111, align 8, !tbaa !53" (0.000000e+00%)
Noelle:  Function "null_convert"
Noelle:     Loop "  %24 = add nsw i32 %21, -1" (0.000000e+00%)
Noelle:     Loop "  %27 = getelementptr inbounds i8**, i8*** %1, i64 %26" (0.000000e+00%)
Noelle:     Loop "  %36 = getelementptr inbounds i8, i8* %34, i64 1" (0.000000e+00%)
Noelle:     Loop "  %44 = getelementptr inbounds i8, i8* %43, i64 1" (0.000000e+00%)
Noelle:     Loop "  %73 = getelementptr inbounds i8**, i8*** %1, i64 %72" (0.000000e+00%)
Noelle:     Loop "  %82 = getelementptr inbounds i8, i8* %80, i64 1" (0.000000e+00%)
Noelle:     Loop "  %90 = getelementptr inbounds i8**, i8*** %1, i64 %89" (0.000000e+00%)
Noelle:     Loop "  %99 = getelementptr inbounds i8, i8* %98, i64 1" (0.000000e+00%)
Noelle:  Function "COM_handler"
Noelle:     Loop "  %115 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %7, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %65 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %7, align 8, !tbaa !41" (0.000000e+00%)
Noelle:  Function "usage"
Noelle:  Function "copy_pixel_rows"
Noelle:     Loop "  %40 = getelementptr i8, i8* %14, i64 %38" (0.000000e+00%)
Noelle:     Loop "  %90 = getelementptr i8, i8* %14, i64 %88" (0.000000e+00%)
Noelle:     Loop "  %112 = getelementptr inbounds i8, i8* %109, i64 1" (0.000000e+00%)
Noelle:     Loop "  %125 = getelementptr inbounds i8, i8* %123, i64 1" (0.000000e+00%)
Noelle:  Function "put_demapped_gray"
Noelle:     Loop "  %23 = getelementptr inbounds i8, i8* %21, i64 1" (0.000000e+00%)
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %38, i64 1" (0.000000e+00%)
Noelle:  Function "put_demapped_rgb"
Noelle:     Loop "  %44 = getelementptr inbounds i8, i8* %43, i64 1" (0.000000e+00%)
Noelle:  Function "ycck_cmyk_convert"
Noelle:     Loop "  %35 = load i8**, i8*** %1, align 8, !tbaa !46" (0.000000e+00%)
Noelle:     Loop "  %51 = getelementptr inbounds i8, i8* %38, i64 %49" (0.000000e+00%)
Noelle:  Function "jinit_1pass_quantizer"
Noelle:     Loop "  %78 = add nuw i64 %77, 1" (0.000000e+00%)
Noelle:     Loop "  %81 = mul nsw i64 %79, %78" (0.000000e+00%)
Noelle:     Loop "  %93 = mul nsw i64 %91, %78" (0.000000e+00%)
Noelle:     Loop "  %55 = add nuw i64 %54, 1" (0.000000e+00%)
Noelle:     Loop "  %58 = mul nsw i64 %56, %55" (0.000000e+00%)
Noelle:     Loop "  %70 = add nuw i64 %69, 1" (0.000000e+00%)
Noelle:     Loop "  %74 = mul nsw i64 %72, %70" (0.000000e+00%)
Noelle:     Loop "  %130 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %126" (0.000000e+00%)
Noelle:     Loop "  %170 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %166" (0.000000e+00%)
Noelle:     Loop "  %235 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %233" (0.000000e+00%)
Noelle:     Loop "  br label %._crit_edge132" (0.000000e+00%)
Noelle:     Loop "  %sext = shl i64 %214, 32" (0.000000e+00%)
Noelle:     Loop "  br label %._crit_edge133.us" (0.000000e+00%)
Noelle:     Loop "  %195 = getelementptr inbounds [3 x i32], [3 x i32]* @select_ncolors.RGB_order, i64 0, i64 %192" (0.000000e+00%)
Noelle:     Loop "  %276 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %274" (0.000000e+00%)
Noelle:     Loop "  %297 = trunc i64 %295 to i32" (0.000000e+00%)
Noelle:     Loop "  %375 = add i64 %374, %287" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader3.us" (0.000000e+00%)
Noelle:     Loop "  %346 = load i8*, i8** %286, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %366 = load i8*, i8** %286, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader3.us.us" (0.000000e+00%)
Noelle:     Loop "  %309 = load i8*, i8** %286, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader1.us.us" (0.000000e+00%)
Noelle:     Loop "  %335 = load i8*, i8** %286, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %330 = add i64 %329, %287" (0.000000e+00%)
Noelle:     Loop "  %401 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (0.000000e+00%)
Noelle:     Loop "  br label %.loopexit15.us.us.us" (0.000000e+00%)
Noelle:  Function "start_pass_1_quant"
Noelle:     Loop "  %115 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %112, align 8, !tbaa !51" (0.000000e+00%)
Noelle:     Loop "  %134 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 8, i64 %133" (0.000000e+00%)
Noelle:     Loop "  %45 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %37, i64 0, i32 5, i64 %44" (0.000000e+00%)
Noelle:     Loop "  %51 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %37, i64 0, i32 5, i64 %50" (0.000000e+00%)
Noelle:     Loop "  br label %._crit_edge27" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @base_dither_matrix, i64 0, i64 %68, i64 %69" (0.000000e+00%)
Noelle:  Function "finish_pass_1_quant"
Noelle:  Function "new_color_map_1_quant"
Noelle:  Function "create_colorindex"
Noelle:     Loop "  %98 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 5, i64 %96" (0.000000e+00%)
Noelle:     Loop "  %113 = sext i32 %112 to i64" (0.000000e+00%)
Noelle:     Loop "  %118 = add i64 %117, 1" (0.000000e+00%)
Noelle:     Loop "  %28 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 5, i64 %26" (0.000000e+00%)
Noelle:     Loop "  %47 = sext i32 %46 to i64" (0.000000e+00%)
Noelle:     Loop "  %52 = add i64 %51, 1" (0.000000e+00%)
Noelle:     Loop "  %76 = load i8, i8* %36, align 1, !tbaa !51" (0.000000e+00%)
Noelle:  Function "color_quantize3"
Noelle:     Loop "  %97 = getelementptr inbounds i8*, i8** %2, i64 %96" (0.000000e+00%)
Noelle:     Loop "  %122 = getelementptr inbounds i8, i8* %119, i64 1" (0.000000e+00%)
Noelle:     Loop "  %26 = getelementptr inbounds i8*, i8** %2, i64 %25" (0.000000e+00%)
Noelle:     Loop "  %49 = getelementptr inbounds i8*, i8** %1, i64 %48" (0.000000e+00%)
Noelle:     Loop "  %56 = getelementptr inbounds i8, i8* %53, i64 1" (0.000000e+00%)
Noelle:  Function "color_quantize"
Noelle:     Loop "  %29 = getelementptr inbounds i8*, i8** %2, i64 %28" (0.000000e+00%)
Noelle:     Loop "  %183 = getelementptr inbounds i8, i8* %182, i64 1" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader1.us" (0.000000e+00%)
Noelle:     Loop "  %118 = getelementptr inbounds i8*, i8** %9, i64 %114" (0.000000e+00%)
Noelle:     Loop "  %164 = getelementptr inbounds i8*, i8** %9, i64 %160" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader1.us.us" (0.000000e+00%)
Noelle:     Loop "  %40 = getelementptr inbounds i8*, i8** %9, i64 %36" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader.us.us" (0.000000e+00%)
Noelle:     Loop "  %94 = getelementptr inbounds i8*, i8** %9, i64 %90" (0.000000e+00%)
Noelle:  Function "quantize3_ord_dither"
Noelle:     Loop "  %34 = load [16 x i32]*, [16 x i32]** %20, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %46 = getelementptr inbounds i8, i8* %42, i64 1" (0.000000e+00%)
Noelle:     Loop "  %28 = add nsw i32 %26, 1" (0.000000e+00%)
Noelle:  Function "jpeg_start_output"
Noelle:  Function "read_pbm_integer"
Noelle:     Loop "  %4 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %6 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %31 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %33 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:  Function "read_stdin"
Noelle:  Function "decode_mcu"
Noelle:     Loop "  %35 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %7, i64 0, i32 2, i32 0, i64 %34" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %67" (6.257200e-04%)
Noelle:     Loop "  %97 = icmp eq i32 %92, 0" (0.000000e+00%)
Noelle:     Loop "  %123 = icmp eq i64 %122, 0" (0.000000e+00%)
Noelle:     Loop "  %214 = icmp eq i32 %209, 0" (0.000000e+00%)
Noelle:     Loop "  %240 = icmp eq i64 %239, 0" (0.000000e+00%)
Noelle:     Loop "  %327 = icmp slt i32 %326, 8" (0.000000e+00%)
Noelle:     Loop "  %337 = icmp eq i32 %332, 0" (0.000000e+00%)
Noelle:     Loop "  %363 = icmp eq i64 %362, 0" (0.000000e+00%)
Noelle:     Loop "  %457 = icmp eq i32 %452, 0" (0.000000e+00%)
Noelle:     Loop "  %483 = icmp eq i64 %482, 0" (0.000000e+00%)
Noelle:     Loop "  %572 = icmp slt i32 %571, 8" (0.000000e+00%)
Noelle:     Loop "  %582 = icmp eq i32 %577, 0" (0.000000e+00%)
Noelle:     Loop "  %608 = icmp eq i64 %607, 0" (0.000000e+00%)
Noelle:     Loop "  %701 = icmp eq i32 %696, 0" (0.000000e+00%)
Noelle:     Loop "  %727 = icmp eq i64 %726, 0" (0.000000e+00%)
Noelle:  Function "write_stdout"
Noelle:  Function "jpeg_abort_decompress"
Noelle:  Function "jpeg_input_complete"
Noelle:  Function "jpeg_has_multiple_scans"
Noelle:  Function "jpeg_read_raw_data"
Noelle:  Function "read_color_map"
Noelle:     Loop "  br label %.preheader13" (0.000000e+00%)
Noelle:     Loop "  %196 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %198 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %202 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %206 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %229 = getelementptr inbounds i8, i8* %219, i64 %228" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader3" (0.000000e+00%)
Noelle:     Loop "  %142 = tail call fastcc i32 @read_pbm_integer(%struct.jpeg_decompress_struct* %0, %struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %156 = getelementptr inbounds i8, i8* %146, i64 %155" (0.000000e+00%)
Noelle:     Loop "  %16 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %51 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %75 = getelementptr inbounds i8, i8* %65, i64 %74" (0.000000e+00%)
Noelle:  Function "jpeg_finish_output"
Noelle:     Loop "  %28 = load i32, i32* %25, align 4, !tbaa !48" (0.000000e+00%)
Noelle:  Function "decompress_onepass"
Noelle:     Loop "  %31 = icmp ugt i32 %29, %8" (0.000000e+00%)
Noelle:     Loop "  %33 = load i8*, i8** %21, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %132 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %130" (0.000000e+00%)
Noelle:     Loop "  %173 = load i32, i32* %26, align 8, !tbaa !59" (0.000000e+00%)
Noelle:     Loop "  %182 = add nsw i64 %180, %179" (0.000000e+00%)
Noelle:     Loop "  %51 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %49" (0.000000e+00%)
Noelle:     Loop "  %83 = load i32, i32* %26, align 8, !tbaa !59" (0.000000e+00%)
Noelle:     Loop "  %92 = add nsw i64 %90, %89" (0.000000e+00%)
Noelle:  Function "decompress_smooth_data"
Noelle:     Loop "  %17 = load i32, i32* %11, align 4, !tbaa !39" (0.000000e+00%)
Noelle:     Loop "  %57 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %56, i64 0, i32 12" (0.000000e+00%)
Noelle:     Loop "  %163 = getelementptr inbounds [64 x i16]*, [64 x i16]** %104, i64 %161" (0.000000e+00%)
Noelle:     Loop "  call void @jcopy_block_row([64 x i16]* nonnull %197, [64 x i16]* nonnull %3, i32 1) #18" (0.000000e+00%)
Noelle:  Function "post_process_1pass"
Noelle:  Function "post_process_prepass"
Noelle:  Function "post_process_2pass"
Noelle:  Function "skip_input_data"
Noelle:     Loop "  %18 = sub nsw i64 %17, %16" (0.000000e+00%)
Noelle:  Function "jpeg_new_colormap"
Noelle:  Function "finish_output_tga"
Noelle:  Function "jinit_write_gif"
Noelle:  Function "start_output_gif"
Noelle:  Function "put_pixel_rows.52"
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %38, i64 1" (0.000000e+00%)
Noelle:     Loop "  %74 = sub nsw i32 %73, %72" (0.000000e+00%)
Noelle:     Loop "  %100 = trunc i64 %99 to i8" (0.000000e+00%)
Noelle:     Loop "  %165 = trunc i64 %164 to i8" (0.000000e+00%)
Noelle:  Function "finish_output_gif"
Noelle:     Loop "  %42 = trunc i64 %41 to i8" (0.000000e+00%)
Noelle:     Loop "  %113 = trunc i64 %112 to i8" (0.000000e+00%)
Noelle:  Function "emit_header"
Noelle:     Loop "  %22 = shl i32 1, %21" (0.000000e+00%)
Noelle:     Loop "  %104 = icmp slt i64 %103, %78" (0.000000e+00%)
Noelle:     Loop "  %81 = icmp slt i64 %80, %78" (0.000000e+00%)
Noelle:     Loop "  %218 = trunc i64 %217 to i8" (0.000000e+00%)
Noelle:  Function "jinit_write_targa"
Noelle:  Function "put_demapped_gray.55"
Noelle:     Loop "  %23 = getelementptr inbounds i8, i8* %20, i64 1" (0.000000e+00%)
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %37, i64 1" (0.000000e+00%)
Noelle:  Function "put_gray_rows"
Noelle:     Loop "  %39 = getelementptr i8, i8* %6, i64 %37" (0.000000e+00%)
Noelle:     Loop "  %89 = getelementptr i8, i8* %6, i64 %87" (0.000000e+00%)
Noelle:     Loop "  %111 = getelementptr inbounds i8, i8* %109, i64 1" (0.000000e+00%)
Noelle:     Loop "  %124 = getelementptr inbounds i8, i8* %123, i64 1" (0.000000e+00%)
Noelle:  Function "put_pixel_rows.56"
Noelle:     Loop "  %34 = getelementptr inbounds i8, i8* %33, i64 2" (0.000000e+00%)
Noelle:  Function "jinit_write_bmp"
Noelle:  Function "start_output_bmp"
Noelle:  Function "finish_output_bmp"
Noelle:     Loop "  %272 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %241, align 8, !tbaa !61" (0.000000e+00%)
Noelle:     Loop "  %284 = load i8, i8* %282, align 1, !tbaa !46" (0.000000e+00%)
Noelle:     Loop "  %247 = sub i32 %245, %246" (0.000000e+00%)
Noelle:     Loop "  %263 = load i8, i8* %261, align 1, !tbaa !46" (0.000000e+00%)
Noelle:  Function "put_gray_rows.59"
Noelle:     Loop "  %51 = getelementptr i8, i8* %18, i64 %49" (0.000000e+00%)
Noelle:     Loop "  %101 = getelementptr i8, i8* %18, i64 %99" (0.000000e+00%)
Noelle:     Loop "  %123 = getelementptr inbounds i8, i8* %121, i64 1" (0.000000e+00%)
Noelle:     Loop "  %137 = getelementptr inbounds i8, i8* %136, i64 1" (0.000000e+00%)
Noelle:  Function "put_pixel_rows.60"
Noelle:     Loop "  %47 = getelementptr inbounds i8, i8* %46, i64 1" (0.000000e+00%)
Noelle:  Function "write_colormap"
Noelle:     Loop "  %93 = load i8*, i8** %6, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %31 = load i8*, i8** %6, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %75 = load i8*, i8** %51, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %56 = load i8*, i8** %51, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %111 = tail call i32 @putc(i32 %110, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %15 = tail call i32 @putc(i32 %14, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %138 = tail call i32 @putc(i32 0, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %131 = tail call i32 @putc(i32 0, %struct._IO_FILE* %10)" (0.000000e+00%)
NOELLE: FixedPoint: Exit
NOELLE: DeadFunctions: Exit
noelle-simplification baseline_pre.bc -o baseline_pre.bc
opt -basicaa -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -mem2reg -tbaa -early-cse-memssa -licm -simplifycfg -simplifycfg-sink-common=false -instcombine -tailcallelim -loop-simplify -lcssa -licm -loop-unswitch -globalopt -instcombine -ipsccp -dce -gvn -dse -adce -loop-simplify -lcssa -indvars -loop-deletion -instcombine -indvars -break-constgeps -lowerswitch -mergereturn --break-crit-edges -loop-simplify -lcssa --functionattrs --rpo-functionattrs baseline_pre.bc -o baseline_pre.bc
noelle-enable baseline_pre.bc baseline_pre.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier
NOELLE: Enablers: Start
noelle-fixedpoint baseline_pre.bc baseline_pre.bc "noelle-parallel-load" -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopDistribution.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopUnroll.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopWhilify.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopInvariantCodeMotion.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/SCEVSimplification.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Enablers.so -enablers -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier
NOELLE: FixedPoint: Start
NOELLE: FixedPoint:   Loader: noelle-parallel-load
NOELLE: FixedPoint:   Options: -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopDistribution.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopUnroll.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopWhilify.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopInvariantCodeMotion.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/SCEVSimplification.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Enablers.so -enablers -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier
NOELLE: FixedPoint:   Input: baseline_pre.bc
NOELLE: FixedPoint:   Output: baseline_pre.bc
NOELLE: FixedPoint:   Temporary input: /tmp/tmp.TMnCIcGWb2 (.ll version is /tmp/tmp.P8lX879aLW)
NOELLE: FixedPoint:   Temporary output: /tmp/tmp.SqeZLAq2zI (.ll version is /tmp/tmp.lyKnT5uz5i)
NOELLE: FixedPoint:   Normalize the code
noelle-norm /tmp/tmp.TMnCIcGWb2 -o /tmp/tmp.SqeZLAq2zI
opt -basicaa -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -mem2reg -simplifycfg-sink-common=false -break-constgeps -lowerswitch -mergereturn --break-crit-edges -loop-simplify -lcssa -indvars --functionattrs --rpo-functionattrs /tmp/tmp.TMnCIcGWb2 -o /tmp/tmp.SqeZLAq2zI
NOELLE: FixedPoint:   Run until a fixed point is reached
NOELLE: FixedPoint:     Invocation 0
noelle-parallel-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopDistribution.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopUnroll.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopWhilify.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopInvariantCodeMotion.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/SCEVSimplification.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Enablers.so -enablers -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier /tmp/tmp.TMnCIcGWb2 -o /tmp/tmp.SqeZLAq2zI
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopDistribution.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopUnroll.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopWhilify.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopInvariantCodeMotion.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/SCEVSimplification.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Enablers.so -enablers -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier /tmp/tmp.TMnCIcGWb2 -o /tmp/tmp.SqeZLAq2zI
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopDistribution.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopUnroll.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopWhilify.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopInvariantCodeMotion.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/SCEVSimplification.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Enablers.so -enablers -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier /tmp/tmp.TMnCIcGWb2 -o /tmp/tmp.SqeZLAq2zI
EnablersManager: Start
Noelle: Filter out cold code
Noelle:  Function "main"
Noelle:     Loop "  %103 = load i8**, i8*** %92, align 8, !tbaa !55" (8.381813e+01%)
Noelle:  Function "jpeg_start_decompress"
Noelle:  Disable "jpeg_start_decompress" as cold function
Noelle:  Function "realize_virt_arrays"
Noelle:  Disable "realize_virt_arrays" as cold function
Noelle:  Function "jinit_master_decompress"
Noelle:  Disable "jinit_master_decompress" as cold function
Noelle:  Function "jinit_color_deconverter"
Noelle:  Disable "jinit_color_deconverter" as cold function
Noelle:  Function "parse_switches"
Noelle:  Disable "parse_switches" as cold function
Noelle:  Function "keymatch"
Noelle:  Disable "keymatch" as cold function
Noelle:  Function "alloc_small"
Noelle:  Disable "alloc_small" as cold function
Noelle:  Function "alloc_sarray"
Noelle:  Disable "alloc_sarray" as cold function
Noelle:  Function "emit_message"
Noelle:  Disable "emit_message" as cold function
Noelle:  Function "jpeg_calc_output_dimensions"
Noelle:  Disable "jpeg_calc_output_dimensions" as cold function
Noelle:  Function "free_pool"
Noelle:  Disable "free_pool" as cold function
Noelle:  Function "jinit_write_ppm"
Noelle:  Disable "jinit_write_ppm" as cold function
Noelle:  Function "self_destruct"
Noelle:  Disable "self_destruct" as cold function
Noelle:  Function "jinit_d_main_controller"
Noelle:  Disable "jinit_d_main_controller" as cold function
Noelle:  Function "request_virt_barray"
Noelle:  Disable "request_virt_barray" as cold function
Noelle:  Function "jinit_upsampler"
Noelle:  Disable "jinit_upsampler" as cold function
Noelle:  Function "alloc_large"
Noelle:  Disable "alloc_large" as cold function
Noelle:  Function "jpeg_CreateDecompress"
Noelle:  Disable "jpeg_CreateDecompress" as cold function
Noelle:  Function "jinit_d_coef_controller"
Noelle:  Disable "jinit_d_coef_controller" as cold function
Noelle:  Function "jdiv_round_up"
Noelle:  Disable "jdiv_round_up" as cold function
Noelle:  Function "jinit_marker_reader"
Noelle:  Disable "jinit_marker_reader" as cold function
Noelle:  Function "jinit_inverse_dct"
Noelle:  Disable "jinit_inverse_dct" as cold function
Noelle:  Function "jinit_memory_mgr"
Noelle:  Disable "jinit_memory_mgr" as cold function
Noelle:  Function "jpeg_read_header"
Noelle:  Disable "jpeg_read_header" as cold function
Noelle:  Function "jinit_phuff_decoder"
Noelle:  Disable "jinit_phuff_decoder" as cold function
Noelle:  Function "jpeg_finish_decompress"
Noelle:  Disable "jpeg_finish_decompress" as cold function
Noelle:  Function "jpeg_consume_input"
Noelle:  Disable "jpeg_consume_input" as cold function
Noelle:  Function "jround_up"
Noelle:  Disable "jround_up" as cold function
Noelle:  Function "jpeg_stdio_src"
Noelle:  Disable "jpeg_stdio_src" as cold function
Noelle:  Function "output_pass_setup"
Noelle:  Disable "output_pass_setup" as cold function
Noelle:  Function "jinit_input_controller"
Noelle:  Disable "jinit_input_controller" as cold function
Noelle:  Function "jpeg_std_error"
Noelle:  Disable "jpeg_std_error" as cold function
Noelle:  Function "jinit_d_post_controller"
Noelle:  Disable "jinit_d_post_controller" as cold function
Noelle:  Function "jpeg_free_large"
Noelle:  Disable "jpeg_free_large" as cold function
Noelle:  Function "jpeg_get_large"
Noelle:  Disable "jpeg_get_large" as cold function
Noelle:  Function "jpeg_destroy_decompress"
Noelle:  Disable "jpeg_destroy_decompress" as cold function
Noelle:  Function "jpeg_destroy"
Noelle:  Disable "jpeg_destroy" as cold function
Noelle:  Function "jpeg_abort"
Noelle:  Disable "jpeg_abort" as cold function
Noelle:  Function "jpeg_get_small"
Noelle:  Disable "jpeg_get_small" as cold function
Noelle:  Function "jpeg_free_small"
Noelle:  Disable "jpeg_free_small" as cold function
Noelle:  Function "jpeg_set_marker_processor"
Noelle:  Disable "jpeg_set_marker_processor" as cold function
Noelle:  Function "jpeg_mem_available"
Noelle:  Disable "jpeg_mem_available" as cold function
Noelle:  Function "output_message"
Noelle:  Disable "output_message" as cold function
Noelle:  Function "jinit_merged_upsampler"
Noelle:  Disable "jinit_merged_upsampler" as cold function
Noelle:  Function "usage"
Noelle:  Disable "usage" as cold function
Noelle:  Function "format_message"
Noelle:  Disable "format_message" as cold function
Noelle:  Function "error_exit"
Noelle:  Disable "error_exit" as cold function
Noelle:  Function "alloc_barray"
Noelle:  Disable "alloc_barray" as cold function
Noelle:  Function "jpeg_open_backing_store"
Noelle:  Disable "jpeg_open_backing_store" as cold function
Noelle:  Function "jinit_1pass_quantizer"
Noelle:  Disable "jinit_1pass_quantizer" as cold function
Noelle:  Function "request_virt_sarray"
Noelle:  Disable "request_virt_sarray" as cold function
Noelle:  Function "jinit_huff_decoder"
Noelle:  Disable "jinit_huff_decoder" as cold function
Noelle:  Function "create_colorindex"
Noelle:  Disable "create_colorindex" as cold function
Noelle:  Function "jinit_2pass_quantizer"
Noelle:  Disable "jinit_2pass_quantizer" as cold function
Noelle:  Function "write_stdout"
Noelle:  Disable "write_stdout" as cold function
Noelle:  Function "read_stdin"
Noelle:  Disable "read_stdin" as cold function
Noelle:  Function "init_error_limit"
Noelle:  Disable "init_error_limit" as cold function
Noelle:  Function "read_pbm_integer"
Noelle:  Disable "read_pbm_integer" as cold function
Noelle:  Function "read_color_map"
Noelle:  Disable "read_color_map" as cold function
Noelle:  Function "jinit_write_bmp"
Noelle:  Disable "jinit_write_bmp" as cold function
Noelle:  Function "jinit_write_targa"
Noelle:  Disable "jinit_write_targa" as cold function
Noelle:  Function "jinit_write_gif"
Noelle:  Disable "jinit_write_gif" as cold function
EnablersManager:   Try to improve all 1 loops, one at a time
EnablersManager:   Loop:
EnablersManager:     Function = "main"
EnablersManager:     Entry instruction =   %103 = load i8**, i8*** %92, align 8, !tbaa !55
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca %struct.jpeg_error_mgr, align 8
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca i32, align 4
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %3 = alloca i32, align 4 can be cloned
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.jpeg_decompress_struct, align 8
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
EnablersManager:     Try to apply loop distribution
EnablersManager:     Try to devirtualize indirect calls
EnablersManager:     Try to extract invariants out of loops
LICM: Start
LICM:   Loop "  %103 = load i8**, i8*** %92, align 8, !tbaa !55"
LICM:     Check invariants that can be hoisted conditionally
LICM:       Check the invariants
LICM:   The loop has not been modified
LICM: Exit
Mem2Reg: Start
Mem2Reg:   Checking loop:   br i1 %106, label %._crit_edge21.._crit_edge.i_crit_edge, label %107, !prof !58
Mem2Reg:   The loop has 0SCCs that each one access the same memory location
Mem2Reg:   No changes have been made
Mem2Reg: Exit
EnablersManager:     Try to simplify IV related SCEVs and their corresponding instructions in loops
SCEVSimplification:  Start
EnablersManager:     Try to simplify constant SCEVs and their corresponding instructions in loops
EnablersManager: Exit
Noelle:  Function "main"
Noelle:     Loop "  %103 = load i8**, i8*** %92, align 8, !tbaa !55" (8.381813e+01%)
Noelle:  Function "decode_mcu_AC_refine"
Noelle:     Loop "  %41 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %40" (0.000000e+00%)
Noelle:     Loop "  %87 = icmp slt i32 %85, 8" (5.653943e-01%)
Noelle:     Loop "  %172 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %167" (3.160807e-01%)
Noelle:     Loop "  %255 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %252" (3.427655e+00%)
Noelle:     Loop "  %312 = add nsw i64 %310, -1" (0.000000e+00%)
Noelle:     Loop "  %322 = add nsw i64 %321, -1" (0.000000e+00%)
Noelle:  Function "ycc_rgb_convert"
Noelle:     Loop "  %34 = load i8**, i8*** %1, align 8, !tbaa !49" (3.468758e+00%)
Noelle:     Loop "  %47 = getelementptr inbounds i8, i8* %37, i64 %45" (3.468605e+00%)
Noelle:  Function "jpeg_idct_islow"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8" (1.447672e+00%)
Noelle:     Loop "  %177 = getelementptr inbounds i8*, i8** %3, i64 %175" (1.791144e+00%)
Noelle:  Function "h2v2_fancy_upsample"
Noelle:     Loop "  %13 = getelementptr inbounds i8*, i8** %2, i64 %11" (2.523255e+00%)
Noelle:     Loop "  %63 = getelementptr inbounds i8, i8* %62, i64 1" (1.261115e+00%)
Noelle:     Loop "  %142 = getelementptr inbounds i8, i8* %141, i64 1" (1.261115e+00%)
Noelle:  Function "decode_mcu_AC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %6, i64 0, i32 2, i32 1, i64 %36" (0.000000e+00%)
Noelle:     Loop "  %79 = icmp slt i32 %76, 8" (1.459600e+00%)
Noelle:  Function "jpeg_fill_bit_buffer"
Noelle:     Loop "  %18 = load i32, i32* %11, align 8, !tbaa !39" (4.597579e-01%)
Noelle:     Loop "  %47 = icmp eq i64 %46, 0" (2.040027e-03%)
Noelle:  Function "consume_data"
Noelle:     Loop "  %15 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %14" (1.558697e-04%)
Noelle:     Loop "  %52 = icmp ult i32 %50, %49" (5.928393e-01%)
Noelle:     Loop "  %54 = load i32, i32* %7, align 8, !tbaa !39" (5.927236e-01%)
Noelle:     Loop "  %60 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %58" (4.706068e-01%)
Noelle:     Loop "  %129 = add nsw i64 %127, %51" (0.000000e+00%)
Noelle:     Loop "  %135 = add i64 %134, %133" (0.000000e+00%)
Noelle:     Loop "  %158 = getelementptr inbounds [64 x i16], [64 x i16]* %156, i64 1" (0.000000e+00%)
Noelle:     Loop "  %101 = add nsw i64 %99, %51" (0.000000e+00%)
Noelle:     Loop "  %107 = add i64 %106, %105" (0.000000e+00%)
Noelle:     Loop "  %83 = sext i32 %82 to i64" (2.127908e-01%)
Noelle:     Loop "  %91 = getelementptr inbounds [64 x i16], [64 x i16]* %89, i64 1" (9.991915e-02%)
Noelle:  Function "decode_mcu_DC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %36" (0.000000e+00%)
Noelle:     Loop "  %72 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %69" (1.787077e-01%)
Noelle:  Function "decode_mcu_DC_refine"
Noelle:     Loop "  %36 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %6, i64 0, i32 2, i32 1, i64 %35" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %67" (5.302114e-02%)
Noelle:  Function "decompress_data"
Noelle:     Loop "  %14 = load i32, i32* %9, align 4, !tbaa !40" (4.781280e-06%)
Noelle:     Loop "  %39 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %38, i64 0, i32 12" (2.414739e-02%)
Noelle:     Loop "  %80 = icmp eq i32 %77, 0" (2.408761e-02%)
Noelle:     Loop "  %89 = getelementptr inbounds [64 x i16], [64 x i16]* %87, i64 0, i64 0" (2.405271e-02%)
Noelle:  Function "jpeg_huff_decode"
Noelle:     Loop "  %36 = shl i64 %33, 1" (4.588606e-03%)
Noelle:  Function "sep_upsample"
Noelle:     Loop "  %25 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %10, i64 0, i32 2, i64 %23" (2.369498e-04%)
Noelle:  Function "access_virt_barray"
Noelle:     Loop "  %80 = mul nsw i64 %77, %47" (0.000000e+00%)
Noelle:     Loop "  %162 = mul nsw i64 %159, %131" (0.000000e+00%)
Noelle:     Loop "  %226 = load [64 x i16]**, [64 x i16]*** %223, align 8, !tbaa !40" (2.151684e-05%)
Noelle:  Function "process_data_context_main"
Noelle:     Loop "  %74 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %73, i64 0, i32 3" (2.005752e-07%)
Noelle:     Loop "  %103 = load i64, i64* %99, align 8, !tbaa !47" (8.348267e-08%)
Noelle:     Loop "  %151 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %150, i64 0, i32 3" (1.734705e-07%)
Noelle:     Loop "  %177 = add nsw i64 %175, %168" (6.613562e-08%)
Noelle:  Function "jpeg_read_scanlines"
Noelle:  Function "jpeg_start_decompress"
Noelle:     Loop "  %23 = icmp eq %struct.jpeg_progress_mgr* %22, null" (9.583268e-05%)
Noelle:  Function "fill_input_buffer"
Noelle:  Function "put_pixel_rows"
Noelle:  Function "start_pass_phuff_decoder"
Noelle:     Loop "  %101 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %100" (8.327667e-06%)
Noelle:     Loop "  %125 = getelementptr inbounds [64 x i32], [64 x i32]* %105, i64 %106, i64 %124" (8.119503e-06%)
Noelle:     Loop "  %63 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %62" (2.580373e-07%)
Noelle:     Loop "  %74 = getelementptr inbounds [64 x i32], [64 x i32]* %67, i64 %68, i64 %73" (1.040823e-07%)
Noelle:     Loop "  %194 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %193" (2.743544e-05%)
Noelle:     Loop "  %166 = icmp eq i32 %164, 0" (1.033992e-05%)
Noelle:  Function "jpeg_make_d_derived_tbl"
Noelle:     Loop "  %24 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %21" (6.789201e-06%)
Noelle:     Loop "  %50 = add nsw <2 x i64> %47, <i64 8, i64 8>" (0.000000e+00%)
Noelle:     Loop "  %62 = add nsw <2 x i64> %59, <i64 1, i64 1>" (3.621196e-07%)
Noelle:     Loop "  %97 = sext i8 %93 to i32" (8.089145e-06%)
Noelle:     Loop "  %103 = add nsw i64 %101, 1" (4.411571e-06%)
Noelle:     Loop "  %124 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %122" (5.122800e-06%)
Noelle:     Loop "  %155 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %153" (1.698276e-05%)
Noelle:     Loop "  %618 = add nsw i64 %170, %615" (0.000000e+00%)
Noelle:     Loop "  %648 = add i64 %646, %624" (0.000000e+00%)
Noelle:     Loop "  %687 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %685" (0.000000e+00%)
Noelle:     Loop "  %188 = add nsw i64 %170, %185" (2.037194e-06%)
Noelle:     Loop "  %218 = add i64 %216, %194" (1.164421e-06%)
Noelle:     Loop "  %254 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %252" (0.000000e+00%)
Noelle:     Loop "  %338 = add nsw i64 %170, %335" (0.000000e+00%)
Noelle:     Loop "  %368 = add i64 %366, %344" (0.000000e+00%)
Noelle:     Loop "  %395 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %393" (0.000000e+00%)
Noelle:     Loop "  %269 = add nsw i64 %170, %266" (6.808716e-06%)
Noelle:     Loop "  %299 = add i64 %297, %275" (4.438676e-06%)
Noelle:     Loop "  %323 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %321" (0.000000e+00%)
Noelle:     Loop "  %545 = add nsw i64 %170, %542" (0.000000e+00%)
Noelle:     Loop "  %583 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %581" (0.000000e+00%)
Noelle:     Loop "  %410 = add nsw i64 %170, %407" (2.146697e-07%)
Noelle:     Loop "  %445 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %443" (0.000000e+00%)
Noelle:     Loop "  %502 = add nsw i64 %170, %499" (0.000000e+00%)
Noelle:     Loop "  %531 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %529" (0.000000e+00%)
Noelle:     Loop "  %461 = add nsw i64 %170, %458" (5.692000e-07%)
Noelle:     Loop "  %487 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %485" (0.000000e+00%)
Noelle:     Loop "  %597 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 1, i64 %595" (3.446642e-06%)
Noelle:     Loop "  %604 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %602" (2.274632e-06%)
Noelle:  Function "read_markers"
Noelle:     Loop "  %34 = icmp eq i32 %33, 0" (1.664449e-05%)
Noelle:     Loop "  %682 = icmp eq i64 %679, 0" (3.054165e-06%)
Noelle:     Loop "  %748 = icmp eq i64 %746, 0" (0.000000e+00%)
Noelle:     Loop "  %725 = icmp eq i64 %723, 0" (2.912136e-06%)
Noelle:     Loop "  %406 = icmp eq i64 %403, 0" (0.000000e+00%)
Noelle:     Loop "  %516 = icmp eq i64 %514, 0" (1.088744e-05%)
Noelle:     Loop "  %540 = icmp eq i64 %537, 0" (3.458568e-06%)
Noelle:     Loop "  %597 = icmp eq i64 %595, 0" (6.317578e-06%)
Noelle:     Loop "  br i1 %221, label %224, label %.loopexit._crit_edge.._crit_edge204_crit_edge, !prof !80" (1.073349e-06%)
Noelle:     Loop "  %254 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %252, i64 0, i32 0" (2.341851e-07%)
Noelle:  Function "realize_virt_arrays"
Noelle:     Loop "  %11 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %8, i64 0, i32 0" (0.000000e+00%)
Noelle:     Loop "  %41 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %38, i64 0, i32 0" (9.649295e-08%)
Noelle:     Loop "  %92 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %91, i64 0, i32 0" (1.977563e-06%)
Noelle:     Loop "  %143 = sub i32 %119, %141" (0.000000e+00%)
Noelle:     Loop "  %191 = add i32 %189, 1" (0.000000e+00%)
Noelle:     Loop "  %206 = add i32 %205, 1" (0.000000e+00%)
Noelle:     Loop "  %234 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %233, i64 0, i32 0" (1.345047e-05%)
Noelle:     Loop "  %288 = sub i32 %262, %286" (1.311871e-05%)
Noelle:     Loop "  %332 = add i32 %330, 1" (4.878857e-08%)
Noelle:     Loop "  %347 = add i32 %346, 1" (1.287693e-05%)
Noelle:  Function "jinit_master_decompress"
Noelle:  Function "fullsize_upsample"
Noelle:  Function "jinit_color_deconverter"
Noelle:     Loop "  %187 = mul nsw i64 %186, 91881" (0.000000e+00%)
Noelle:     Loop "  %124 = mul nsw i64 %123, 91881" (7.215288e-06%)
Noelle:     Loop "  %72 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 %70, i32 12" (0.000000e+00%)
Noelle:     Loop "  %231 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 %229, i32 12" (0.000000e+00%)
Noelle:  Function "parse_switches"
Noelle:     Loop "  %27 = sext i32 %26 to i64" (4.616483e-06%)
Noelle:  Function "keymatch"
Noelle:     Loop "  %10 = getelementptr inbounds i8, i8* %7, i64 1" (3.289434e-06%)
Noelle:  Function "jzero_far"
Noelle:  Function "alloc_small"
Noelle:     Loop "  %35 = getelementptr inbounds %union.small_pool_struct, %union.small_pool_struct* %34, i64 0, i32 0, i32 2" (3.436884e-07%)
Noelle:     Loop "  %59 = lshr i64 %58, 1" (0.000000e+00%)
Noelle:  Function "consume_markers"
Noelle:     Loop "  %76 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %74, i64 0, i32 2" (1.029981e-07%)
Noelle:     Loop "  %127 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %125, i64 0, i32 9" (1.604602e-07%)
Noelle:  Function "start_input_pass"
Noelle:     Loop "  %72 = getelementptr inbounds %struct.jpeg_decompress_struct.261, %struct.jpeg_decompress_struct.261* %0, i64 0, i32 63, i64 %71" (4.813806e-07%)
Noelle:     Loop "  %112 = load i32, i32* %64, align 8, !tbaa !55" (4.336762e-08%)
Noelle:     Loop "  %122 = load i32, i32* %64, align 8, !tbaa !55" (6.071467e-08%)
Noelle:     Loop "  %153 = getelementptr inbounds %struct.jpeg_decompress_struct.261, %struct.jpeg_decompress_struct.261* %0, i64 0, i32 63, i64 %152" (2.851421e-07%)
Noelle:  Function "alloc_sarray"
Noelle:     Loop "  %29 = sub i32 %3, %27" (7.426705e-07%)
Noelle:     Loop "  %43 = add i32 %41, 1" (9.974553e-08%)
Noelle:     Loop "  %58 = add i32 %57, 1" (2.602057e-07%)
Noelle:  Function "next_marker"
Noelle:     Loop "  %13 = icmp eq i64 %12, 0" (6.635246e-07%)
Noelle:     Loop "  %29 = load %struct.jpeg_marker_reader.278*, %struct.jpeg_marker_reader.278** %9, align 8, !tbaa !47" (0.000000e+00%)
Noelle:     Loop "  %51 = icmp eq i64 %50, 0" (2.211749e-07%)
Noelle:  Function "start_pass_main"
Noelle:     Loop "  %28 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %27, i64 0, i32 3" (7.925433e-07%)
Noelle:     Loop "  %92 = getelementptr inbounds i8*, i8** %41, i64 %90" (1.875650e-07%)
Noelle:     Loop "  %54 = getelementptr inbounds i8*, i8** %41, i64 %52" (6.721981e-08%)
Noelle:     Loop "  %270 = getelementptr inbounds i8*, i8** %41, i64 %269" (0.000000e+00%)
Noelle:     Loop "  %195 = add nsw i64 %193, %148" (0.000000e+00%)
Noelle:     Loop "  %312 = add nsw i64 %311, %148" (8.023010e-08%)
Noelle:     Loop "  %328 = load i64, i64* %303, align 8, !tbaa !53" (0.000000e+00%)
Noelle:     Loop "  %354 = load i64, i64* %303, align 8, !tbaa !53" (4.878857e-08%)
Noelle:  Function "emit_message"
Noelle:  Function "start_pass"
Noelle:     Loop "  %18 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %15, i64 0, i32 9" (5.225798e-07%)
Noelle:     Loop "  %186 = getelementptr inbounds [8 x double], [8 x double]* @start_pass.aanscalefactor, i64 0, i64 %185" (0.000000e+00%)
Noelle:     Loop "  %155 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %50, i64 0, i32 0, i64 %154" (0.000000e+00%)
Noelle:  Function "jpeg_calc_output_dimensions"
Noelle:     Loop "  %113 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 0, i32 9" (5.637791e-08%)
Noelle:     Loop "  %85 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %83, i64 0, i32 3" (0.000000e+00%)
Noelle:     Loop "  %89 = shl i32 %88, 1" (0.000000e+00%)
Noelle:     Loop "  %118 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %116, i64 0, i32 2" (2.146697e-07%)
Noelle:  Function "get_sof"
Noelle:     Loop "  %217 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %216, i64 0, i32 1" (2.168381e-07%)
Noelle:  Function "free_pool"
Noelle:     Loop "  %22 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %21, i64 0, i32 10" (0.000000e+00%)
Noelle:     Loop "  %36 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %35, i64 0, i32 10" (3.469410e-08%)
Noelle:     Loop "  %54 = bitcast %union.large_pool_struct* %53 to i8*" (1.561234e-07%)
Noelle:     Loop "  %73 = bitcast %union.small_pool_struct* %72 to i8*" (9.649295e-08%)
Noelle:  Function "get_app0"
Noelle:     Loop "  %47 = icmp eq i64 %45, 0" (2.569531e-07%)
Noelle:  Function "start_output_pass"
Noelle:     Loop "  %48 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 0, i32 19" (2.461112e-07%)
Noelle:  Function "jinit_write_ppm"
Noelle:  Function "self_destruct"
Noelle:  Function "jinit_d_main_controller"
Noelle:     Loop "  %65 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %64, i64 0, i32 3" (1.127558e-07%)
Noelle:     Loop "  %112 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 0, i32 3" (8.456686e-08%)
Noelle:  Function "start_input_pass.105"
Noelle:  Function "request_virt_barray"
Noelle:  Function "jinit_upsampler"
Noelle:     Loop "  %53 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %52, i64 0, i32 2" (2.523332e+00%)
Noelle:  Function "alloc_large"
Noelle:  Function "jpeg_CreateDecompress"
Noelle:  Function "jinit_d_coef_controller"
Noelle:     Loop "  %29 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %28, i64 0, i32 3" (1.409448e-07%)
Noelle:  Function "jdiv_round_up"
Noelle:  Function "jinit_marker_reader"
Noelle:  Function "jinit_inverse_dct"
Noelle:     Loop "  %21 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (5.746210e-08%)
Noelle:  Function "prepare_for_output_pass"
Noelle:  Function "jinit_memory_mgr"
Noelle:  Function "jpeg_read_header"
Noelle:  Function "jinit_phuff_decoder"
Noelle:     Loop "  %29 = bitcast i32* %28 to i8*" (3.144152e-08%)
Noelle:  Function "jpeg_finish_decompress"
Noelle:     Loop "  %37 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %36, align 8, !tbaa !53" (5.420952e-09%)
Noelle:  Function "jpeg_consume_input"
Noelle:  Function "finish_input_pass"
Noelle:  Function "jround_up"
Noelle:  Function "jpeg_alloc_huff_table"
Noelle:  Function "jpeg_stdio_src"
Noelle:  Function "output_pass_setup"
Noelle:     Loop "  %25 = load i32, i32* %18, align 4, !tbaa !47" (0.000000e+00%)
Noelle:  Function "jinit_input_controller"
Noelle:  Function "reset_input_controller"
Noelle:  Function "jpeg_std_error"
Noelle:  Function "start_pass_dpost"
Noelle:  Function "jinit_d_post_controller"
Noelle:  Function "jpeg_alloc_quant_table"
Noelle:  Function "start_output_ppm"
Noelle:  Function "jpeg_get_large"
Noelle:  Function "jpeg_free_large"
Noelle:  Function "jpeg_destroy_decompress"
Noelle:  Function "reset_marker_reader"
Noelle:  Function "finish_output_pass"
Noelle:  Function "jpeg_destroy"
Noelle:  Function "start_pass_upsample"
Noelle:  Function "jpeg_get_small"
Noelle:  Function "jpeg_free_small"
Noelle:  Function "jpeg_abort"
Noelle:  Function "finish_output_ppm"
Noelle:  Function "jpeg_set_marker_processor"
Noelle:  Function "reset_error_mgr"
Noelle:  Function "init_source"
Noelle:  Function "jpeg_mem_available"
Noelle:  Function "start_pass_dcolor"
Noelle:  Function "term_source"
Noelle:  Function "get_app14"
Noelle:     Loop "  %47 = icmp eq i64 %45, 0" (0.000000e+00%)
Noelle:  Function "skip_variable"
Noelle:  Function "read_restart_marker"
Noelle:  Function "alloc_barray"
Noelle:     Loop "  %31 = sub i32 %3, %29" (0.000000e+00%)
Noelle:     Loop "  %46 = add i32 %44, 1" (0.000000e+00%)
Noelle:     Loop "  %61 = add i32 %60, 1" (0.000000e+00%)
Noelle:  Function "jpeg_mem_init"
Noelle:  Function "jpeg_resync_to_restart"
Noelle:     Loop "  %28 = icmp slt i32 %27, 192" (0.000000e+00%)
Noelle:  Function "jpeg_mem_term"
Noelle:  Function "process_data_crank_post"
Noelle:  Function "merged_2v_upsample"
Noelle:  Function "start_pass_merged_upsample"
Noelle:  Function "jinit_merged_upsampler"
Noelle:     Loop "  %75 = mul nsw i64 %74, 91881" (0.000000e+00%)
Noelle:  Function "update_box"
Noelle:     Loop "  %30 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %29" (0.000000e+00%)
Noelle:     Loop "  %33 = getelementptr inbounds [32 x i16], [32 x i16]* %31, i64 %32, i64 %23" (0.000000e+00%)
Noelle:     Loop "  %36 = load i16, i16* %34, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %57 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %56" (0.000000e+00%)
Noelle:     Loop "  %60 = getelementptr inbounds [32 x i16], [32 x i16]* %58, i64 %59, i64 %50" (0.000000e+00%)
Noelle:     Loop "  %63 = load i16, i16* %61, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader18" (0.000000e+00%)
Noelle:     Loop "  %86 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %85" (0.000000e+00%)
Noelle:     Loop "  %91 = load i16, i16* %89, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader14" (0.000000e+00%)
Noelle:     Loop "  %112 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %111" (0.000000e+00%)
Noelle:     Loop "  %117 = load i16, i16* %115, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader10" (0.000000e+00%)
Noelle:     Loop "  %139 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %138" (0.000000e+00%)
Noelle:     Loop "  %144 = load i16, i16* %142, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader6" (0.000000e+00%)
Noelle:     Loop "  %165 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %164" (0.000000e+00%)
Noelle:     Loop "  %170 = load i16, i16* %168, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %263 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %261" (0.000000e+00%)
Noelle:     Loop "  %269 = load i16, i16* %267, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %278 = getelementptr inbounds [32 x i16], [32 x i16]* %264, i64 %276, i64 %199" (0.000000e+00%)
Noelle:     Loop "  %282 = load i16, i16* %280, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %297 = load i16, i16* %295, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %215 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %213" (0.000000e+00%)
Noelle:     Loop "  %221 = load i16, i16* %219, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %231 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %229" (0.000000e+00%)
Noelle:     Loop "  %235 = getelementptr inbounds [32 x i16], [32 x i16]* %232, i64 %233, i64 %199" (0.000000e+00%)
Noelle:     Loop "  %239 = load i16, i16* %237, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %251 = load i16, i16* %249, align 2, !tbaa !50" (0.000000e+00%)
Noelle:  Function "fill_inverse_cmap"
Noelle:     Loop "  %49 = getelementptr inbounds i8, i8* %41, i64 %47" (0.000000e+00%)
Noelle:     Loop "  %179 = getelementptr inbounds [256 x i64], [256 x i64]* %6, i64 0, i64 %176" (0.000000e+00%)
Noelle:     Loop "  %340 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %339" (0.000000e+00%)
Noelle:     Loop "  %382 = load i64, i64* %380, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %599 = load i64, i64* %597, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %634 = load i64, i64* %632, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %669 = load i64, i64* %667, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %428 = add nuw nsw i64 %426, %418" (0.000000e+00%)
Noelle:  Function "merged_1v_upsample"
Noelle:  Function "finish_pass2"
Noelle:  Function "pass2_no_dither"
Noelle:     Loop "  %17 = getelementptr inbounds i8*, i8** %2, i64 %16" (0.000000e+00%)
Noelle:     Loop "  %24 = getelementptr inbounds i8, i8* %21, i64 1" (0.000000e+00%)
Noelle:  Function "pass2_fs_dither"
Noelle:     Loop "  %48 = getelementptr inbounds i8*, i8** %1, i64 %47" (0.000000e+00%)
Noelle:     Loop "  %86 = getelementptr inbounds i16, i16* %83, i64 %68" (0.000000e+00%)
Noelle:     Loop "  %40 = icmp eq i32 %38, 0" (0.000000e+00%)
Noelle:  Function "h2v1_merged_upsample"
Noelle:     Loop "  %40 = getelementptr inbounds i8, i8* %37, i64 1" (0.000000e+00%)
Noelle:  Function "finish_pass1"
Noelle:     Loop "  %32 = add nuw i64 %29, 1" (0.000000e+00%)
Noelle:     Loop "  %50 = getelementptr inbounds %struct.box, %struct.box* %48, i64 0, i32 7" (0.000000e+00%)
Noelle:     Loop "  %68 = getelementptr inbounds %struct.box, %struct.box* %66, i64 0, i32 6" (0.000000e+00%)
Noelle:     Loop "  %103 = getelementptr inbounds %struct.box, %struct.box* %101, i64 0, i32 6" (0.000000e+00%)
Noelle:     Loop "  %181 = load %struct.my_cquantizer.611*, %struct.my_cquantizer.611** %3, align 8, !tbaa !30" (0.000000e+00%)
Noelle:     Loop "  %211 = getelementptr inbounds [32 x i16]*, [32 x i16]** %183, i64 %206" (0.000000e+00%)
Noelle:     Loop "  %222 = getelementptr inbounds [32 x i16], [32 x i16]* %212, i64 %217, i64 %199" (0.000000e+00%)
Noelle:     Loop "  %233 = getelementptr inbounds i16, i16* %232, i64 1" (0.000000e+00%)
Noelle:  Function "prescan_quantize"
Noelle:     Loop "  %17 = getelementptr inbounds i8*, i8** %1, i64 %16" (0.000000e+00%)
Noelle:     Loop "  %21 = load i8, i8* %19, align 1, !tbaa !43" (0.000000e+00%)
Noelle:  Function "jpeg_idct_float"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8" (0.000000e+00%)
Noelle:     Loop "  %132 = getelementptr inbounds i8*, i8** %3, i64 %130" (0.000000e+00%)
Noelle:  Function "jpeg_idct_ifast"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8" (0.000000e+00%)
Noelle:     Loop "  %151 = getelementptr inbounds i8*, i8** %3, i64 %149" (0.000000e+00%)
Noelle:  Function "dummy_consume_data"
Noelle:  Function "process_data_simple_main"
Noelle:  Function "jcopy_sample_rows"
Noelle:     Loop "  %29 = getelementptr inbounds i8*, i8** %27, i64 1" (0.000000e+00%)
Noelle:  Function "jpeg_open_backing_store"
Noelle:  Function "jcopy_block_row"
Noelle:  Function "access_virt_sarray"
Noelle:     Loop "  %79 = mul nsw i64 %76, %46" (0.000000e+00%)
Noelle:     Loop "  %159 = mul nsw i64 %156, %128" (0.000000e+00%)
Noelle:     Loop "  %221 = load i8**, i8*** %218, align 8, !tbaa !38" (0.000000e+00%)
Noelle:  Function "request_virt_sarray"
Noelle:  Function "error_exit"
Noelle:  Function "h2v2_merged_upsample"
Noelle:     Loop "  %50 = getelementptr inbounds i8, i8* %45, i64 1" (0.000000e+00%)
Noelle:  Function "start_pass_huff_decoder"
Noelle:     Loop "  %33 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 63, i64 %32" (8.673524e-09%)
Noelle:  Function "jinit_huff_decoder"
Noelle:  Function "output_message"
Noelle:  Function "format_message"
Noelle:     Loop "  %41 = getelementptr inbounds i8, i8* %40, i64 1" (0.000000e+00%)
Noelle:  Function "jpeg_idct_4x4"
Noelle:     Loop "  %21 = icmp eq i32 %17, 4" (0.000000e+00%)
Noelle:     Loop "  %132 = getelementptr inbounds i8*, i8** %3, i64 %130" (0.000000e+00%)
Noelle:  Function "quantize_fs_dither"
Noelle:     Loop "  %129 = getelementptr inbounds i8*, i8** %2, i64 %128" (0.000000e+00%)
Noelle:     Loop "  %50 = getelementptr inbounds i8*, i8** %2, i64 %49" (0.000000e+00%)
Noelle:     Loop "  %54 = load i8*, i8** %52, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %88 = getelementptr inbounds i16, i16* %85, i64 %72" (0.000000e+00%)
Noelle:     Loop "  %32 = getelementptr inbounds i8*, i8** %2, i64 %31" (0.000000e+00%)
Noelle:     Loop "  %36 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %7, i64 0, i32 8, i64 %35" (0.000000e+00%)
Noelle:     Loop "  %42 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %7, i64 0, i32 8, i64 %41" (0.000000e+00%)
Noelle:  Function "jinit_2pass_quantizer"
Noelle:     Loop "  %34 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (0.000000e+00%)
Noelle:  Function "start_pass_2_quant"
Noelle:     Loop "  %80 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %79" (0.000000e+00%)
Noelle:  Function "new_color_map_2_quant"
Noelle:  Function "init_error_limit"
Noelle:     Loop "  %37 = getelementptr inbounds i32, i32* %12, i64 %35" (0.000000e+00%)
Noelle:     Loop "  %49 = getelementptr inbounds i32, i32* %12, i64 %48" (0.000000e+00%)
Noelle:  Function "quantize_ord_dither"
Noelle:     Loop "  %25 = getelementptr inbounds i8*, i8** %2, i64 %24" (0.000000e+00%)
Noelle:     Loop "  %78 = load i8*, i8** %25, align 8, !tbaa !40" (0.000000e+00%)
Noelle:     Loop "  %99 = load i8**, i8*** %17, align 8, !tbaa !44" (0.000000e+00%)
Noelle:     Loop "  %111 = load i8, i8* %107, align 1, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %31 = load i8**, i8*** %17, align 8, !tbaa !44" (0.000000e+00%)
Noelle:     Loop "  %43 = load i8, i8* %39, align 1, !tbaa !45" (0.000000e+00%)
Noelle:  Function "jpeg_idct_2x2"
Noelle:     Loop "  %Pivot6 = icmp ult i32 %32, 4" (0.000000e+00%)
Noelle:  Function "jpeg_idct_1x1"
Noelle:  Function "noop_upsample"
Noelle:  Function "h2v1_fancy_upsample"
Noelle:     Loop "  %12 = getelementptr inbounds i8*, i8** %2, i64 %11" (0.000000e+00%)
Noelle:     Loop "  %48 = shl i64 %47, 1" (0.000000e+00%)
Noelle:     Loop "  %121 = getelementptr inbounds i8, i8* %120, i64 1" (0.000000e+00%)
Noelle:  Function "h2v1_upsample"
Noelle:     Loop "  %13 = getelementptr inbounds i8*, i8** %5, i64 %12" (0.000000e+00%)
Noelle:     Loop "  %24 = getelementptr inbounds i8, i8* %22, i64 1" (0.000000e+00%)
Noelle:  Function "h2v2_upsample"
Noelle:     Loop "  %14 = getelementptr inbounds i8*, i8** %5, i64 %12" (0.000000e+00%)
Noelle:     Loop "  %25 = getelementptr inbounds i8, i8* %23, i64 1" (0.000000e+00%)
Noelle:  Function "int_upsample"
Noelle:     Loop "  %138 = getelementptr inbounds i8*, i8** %8, i64 %137" (0.000000e+00%)
Noelle:     Loop "  %148 = load i8, i8* %146, align 1, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %62 = getelementptr inbounds i8*, i8** %8, i64 %60" (0.000000e+00%)
Noelle:     Loop "  %72 = load i8, i8* %70, align 1, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %113 = getelementptr inbounds i8*, i8** %8, i64 %112" (0.000000e+00%)
Noelle:     Loop "  %123 = getelementptr inbounds i8, i8* %121, i64 1" (0.000000e+00%)
Noelle:     Loop "  %88 = getelementptr inbounds i8*, i8** %8, i64 %86" (0.000000e+00%)
Noelle:     Loop "  %98 = getelementptr inbounds i8, i8* %96, i64 1" (0.000000e+00%)
Noelle:     Loop "  %132 = add i64 %131, %27" (0.000000e+00%)
Noelle:     Loop "  %33 = load i32, i32* %22, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  br label %.loopexit.us.us" (0.000000e+00%)
Noelle:  Function "grayscale_convert"
Noelle:  Function "start_output_tga"
Noelle:     Loop "  %114 = load i8**, i8*** %111, align 8, !tbaa !53" (0.000000e+00%)
Noelle:  Function "null_convert"
Noelle:     Loop "  %24 = add nsw i32 %21, -1" (0.000000e+00%)
Noelle:     Loop "  %27 = getelementptr inbounds i8**, i8*** %1, i64 %26" (0.000000e+00%)
Noelle:     Loop "  %36 = getelementptr inbounds i8, i8* %34, i64 1" (0.000000e+00%)
Noelle:     Loop "  %44 = getelementptr inbounds i8, i8* %43, i64 1" (0.000000e+00%)
Noelle:     Loop "  %73 = getelementptr inbounds i8**, i8*** %1, i64 %72" (0.000000e+00%)
Noelle:     Loop "  %82 = getelementptr inbounds i8, i8* %80, i64 1" (0.000000e+00%)
Noelle:     Loop "  %90 = getelementptr inbounds i8**, i8*** %1, i64 %89" (0.000000e+00%)
Noelle:     Loop "  %99 = getelementptr inbounds i8, i8* %98, i64 1" (0.000000e+00%)
Noelle:  Function "COM_handler"
Noelle:     Loop "  %115 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %7, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %65 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %7, align 8, !tbaa !41" (0.000000e+00%)
Noelle:  Function "usage"
Noelle:  Function "copy_pixel_rows"
Noelle:     Loop "  %40 = getelementptr i8, i8* %14, i64 %38" (0.000000e+00%)
Noelle:     Loop "  %90 = getelementptr i8, i8* %14, i64 %88" (0.000000e+00%)
Noelle:     Loop "  %112 = getelementptr inbounds i8, i8* %109, i64 1" (0.000000e+00%)
Noelle:     Loop "  %125 = getelementptr inbounds i8, i8* %123, i64 1" (0.000000e+00%)
Noelle:  Function "put_demapped_gray"
Noelle:     Loop "  %23 = getelementptr inbounds i8, i8* %21, i64 1" (0.000000e+00%)
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %38, i64 1" (0.000000e+00%)
Noelle:  Function "put_demapped_rgb"
Noelle:     Loop "  %44 = getelementptr inbounds i8, i8* %43, i64 1" (0.000000e+00%)
Noelle:  Function "ycck_cmyk_convert"
Noelle:     Loop "  %35 = load i8**, i8*** %1, align 8, !tbaa !46" (0.000000e+00%)
Noelle:     Loop "  %51 = getelementptr inbounds i8, i8* %38, i64 %49" (0.000000e+00%)
Noelle:  Function "jinit_1pass_quantizer"
Noelle:     Loop "  %78 = add nuw i64 %77, 1" (0.000000e+00%)
Noelle:     Loop "  %81 = mul nsw i64 %79, %78" (0.000000e+00%)
Noelle:     Loop "  %93 = mul nsw i64 %91, %78" (0.000000e+00%)
Noelle:     Loop "  %55 = add nuw i64 %54, 1" (0.000000e+00%)
Noelle:     Loop "  %58 = mul nsw i64 %56, %55" (0.000000e+00%)
Noelle:     Loop "  %70 = add nuw i64 %69, 1" (0.000000e+00%)
Noelle:     Loop "  %74 = mul nsw i64 %72, %70" (0.000000e+00%)
Noelle:     Loop "  %130 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %126" (0.000000e+00%)
Noelle:     Loop "  %170 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %166" (0.000000e+00%)
Noelle:     Loop "  %235 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %233" (0.000000e+00%)
Noelle:     Loop "  br label %._crit_edge132" (0.000000e+00%)
Noelle:     Loop "  %sext = shl i64 %214, 32" (0.000000e+00%)
Noelle:     Loop "  br label %._crit_edge133.us" (0.000000e+00%)
Noelle:     Loop "  %195 = getelementptr inbounds [3 x i32], [3 x i32]* @select_ncolors.RGB_order, i64 0, i64 %192" (0.000000e+00%)
Noelle:     Loop "  %276 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %274" (0.000000e+00%)
Noelle:     Loop "  %297 = trunc i64 %295 to i32" (0.000000e+00%)
Noelle:     Loop "  %375 = add i64 %374, %287" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader3.us" (0.000000e+00%)
Noelle:     Loop "  %346 = load i8*, i8** %286, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %366 = load i8*, i8** %286, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader3.us.us" (0.000000e+00%)
Noelle:     Loop "  %309 = load i8*, i8** %286, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader1.us.us" (0.000000e+00%)
Noelle:     Loop "  %335 = load i8*, i8** %286, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %330 = add i64 %329, %287" (0.000000e+00%)
Noelle:     Loop "  %401 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (0.000000e+00%)
Noelle:     Loop "  br label %.loopexit15.us.us.us" (0.000000e+00%)
Noelle:  Function "start_pass_1_quant"
Noelle:     Loop "  %115 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %112, align 8, !tbaa !51" (0.000000e+00%)
Noelle:     Loop "  %134 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 8, i64 %133" (0.000000e+00%)
Noelle:     Loop "  %45 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %37, i64 0, i32 5, i64 %44" (0.000000e+00%)
Noelle:     Loop "  %51 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %37, i64 0, i32 5, i64 %50" (0.000000e+00%)
Noelle:     Loop "  br label %._crit_edge27" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @base_dither_matrix, i64 0, i64 %68, i64 %69" (0.000000e+00%)
Noelle:  Function "finish_pass_1_quant"
Noelle:  Function "new_color_map_1_quant"
Noelle:  Function "create_colorindex"
Noelle:     Loop "  %98 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 5, i64 %96" (0.000000e+00%)
Noelle:     Loop "  %113 = sext i32 %112 to i64" (0.000000e+00%)
Noelle:     Loop "  %118 = add i64 %117, 1" (0.000000e+00%)
Noelle:     Loop "  %28 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 5, i64 %26" (0.000000e+00%)
Noelle:     Loop "  %47 = sext i32 %46 to i64" (0.000000e+00%)
Noelle:     Loop "  %52 = add i64 %51, 1" (0.000000e+00%)
Noelle:     Loop "  %76 = load i8, i8* %36, align 1, !tbaa !51" (0.000000e+00%)
Noelle:  Function "color_quantize3"
Noelle:     Loop "  %97 = getelementptr inbounds i8*, i8** %2, i64 %96" (0.000000e+00%)
Noelle:     Loop "  %122 = getelementptr inbounds i8, i8* %119, i64 1" (0.000000e+00%)
Noelle:     Loop "  %26 = getelementptr inbounds i8*, i8** %2, i64 %25" (0.000000e+00%)
Noelle:     Loop "  %49 = getelementptr inbounds i8*, i8** %1, i64 %48" (0.000000e+00%)
Noelle:     Loop "  %56 = getelementptr inbounds i8, i8* %53, i64 1" (0.000000e+00%)
Noelle:  Function "color_quantize"
Noelle:     Loop "  %184 = getelementptr inbounds i8*, i8** %2, i64 %183" (0.000000e+00%)
Noelle:     Loop "  %188 = getelementptr inbounds i8, i8* %187, i64 1" (0.000000e+00%)
Noelle:     Loop "  %29 = getelementptr inbounds i8*, i8** %2, i64 %28" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader1.us.us17" (0.000000e+00%)
Noelle:     Loop "  %40 = getelementptr inbounds i8*, i8** %9, i64 %36" (0.000000e+00%)
Noelle:     Loop "  %86 = getelementptr inbounds i8*, i8** %9, i64 %82" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader1.us.us.us" (0.000000e+00%)
Noelle:     Loop "  %110 = getelementptr inbounds i8*, i8** %9, i64 %106" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader.us.us.us" (0.000000e+00%)
Noelle:     Loop "  %164 = getelementptr inbounds i8*, i8** %9, i64 %160" (0.000000e+00%)
Noelle:  Function "quantize3_ord_dither"
Noelle:     Loop "  %34 = load [16 x i32]*, [16 x i32]** %20, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %46 = getelementptr inbounds i8, i8* %42, i64 1" (0.000000e+00%)
Noelle:     Loop "  %28 = add nsw i32 %26, 1" (0.000000e+00%)
Noelle:  Function "jpeg_start_output"
Noelle:  Function "read_pbm_integer"
Noelle:     Loop "  %4 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %6 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %31 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %33 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:  Function "read_stdin"
Noelle:  Function "decode_mcu"
Noelle:     Loop "  %35 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %7, i64 0, i32 2, i32 0, i64 %34" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %67" (6.257427e-04%)
Noelle:     Loop "  %97 = icmp eq i32 %92, 0" (0.000000e+00%)
Noelle:     Loop "  %123 = icmp eq i64 %122, 0" (0.000000e+00%)
Noelle:     Loop "  %214 = icmp eq i32 %209, 0" (0.000000e+00%)
Noelle:     Loop "  %240 = icmp eq i64 %239, 0" (0.000000e+00%)
Noelle:     Loop "  %327 = icmp slt i32 %326, 8" (0.000000e+00%)
Noelle:     Loop "  %337 = icmp eq i32 %332, 0" (0.000000e+00%)
Noelle:     Loop "  %363 = icmp eq i64 %362, 0" (0.000000e+00%)
Noelle:     Loop "  %457 = icmp eq i32 %452, 0" (0.000000e+00%)
Noelle:     Loop "  %483 = icmp eq i64 %482, 0" (0.000000e+00%)
Noelle:     Loop "  %572 = icmp slt i32 %571, 8" (0.000000e+00%)
Noelle:     Loop "  %582 = icmp eq i32 %577, 0" (0.000000e+00%)
Noelle:     Loop "  %608 = icmp eq i64 %607, 0" (0.000000e+00%)
Noelle:     Loop "  %701 = icmp eq i32 %696, 0" (0.000000e+00%)
Noelle:     Loop "  %727 = icmp eq i64 %726, 0" (0.000000e+00%)
Noelle:  Function "write_stdout"
Noelle:  Function "jpeg_abort_decompress"
Noelle:  Function "jpeg_input_complete"
Noelle:  Function "jpeg_has_multiple_scans"
Noelle:  Function "jpeg_read_raw_data"
Noelle:  Function "read_color_map"
Noelle:     Loop "  br label %.preheader13" (0.000000e+00%)
Noelle:     Loop "  %196 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %198 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %202 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %206 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %229 = getelementptr inbounds i8, i8* %219, i64 %228" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader3" (0.000000e+00%)
Noelle:     Loop "  %142 = tail call fastcc i32 @read_pbm_integer(%struct.jpeg_decompress_struct* %0, %struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %156 = getelementptr inbounds i8, i8* %146, i64 %155" (0.000000e+00%)
Noelle:     Loop "  %16 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %51 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %75 = getelementptr inbounds i8, i8* %65, i64 %74" (0.000000e+00%)
Noelle:  Function "jpeg_finish_output"
Noelle:     Loop "  %28 = load i32, i32* %25, align 4, !tbaa !48" (0.000000e+00%)
Noelle:  Function "decompress_onepass"
Noelle:     Loop "  %31 = icmp ugt i32 %29, %8" (0.000000e+00%)
Noelle:     Loop "  %33 = load i8*, i8** %21, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %132 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %130" (0.000000e+00%)
Noelle:     Loop "  %173 = load i32, i32* %26, align 8, !tbaa !59" (0.000000e+00%)
Noelle:     Loop "  %182 = add nsw i64 %180, %179" (0.000000e+00%)
Noelle:     Loop "  %51 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %49" (0.000000e+00%)
Noelle:     Loop "  %83 = load i32, i32* %26, align 8, !tbaa !59" (0.000000e+00%)
Noelle:     Loop "  %92 = add nsw i64 %90, %89" (0.000000e+00%)
Noelle:  Function "decompress_smooth_data"
Noelle:     Loop "  %17 = load i32, i32* %11, align 4, !tbaa !39" (0.000000e+00%)
Noelle:     Loop "  %57 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %56, i64 0, i32 12" (0.000000e+00%)
Noelle:     Loop "  %163 = getelementptr inbounds [64 x i16]*, [64 x i16]** %104, i64 %161" (0.000000e+00%)
Noelle:     Loop "  call void @jcopy_block_row([64 x i16]* nonnull %197, [64 x i16]* nonnull %3, i32 1) #18" (0.000000e+00%)
Noelle:  Function "post_process_1pass"
Noelle:  Function "post_process_prepass"
Noelle:  Function "post_process_2pass"
Noelle:  Function "skip_input_data"
Noelle:     Loop "  %18 = sub nsw i64 %17, %16" (0.000000e+00%)
Noelle:  Function "jpeg_new_colormap"
Noelle:  Function "finish_output_tga"
Noelle:  Function "jinit_write_gif"
Noelle:  Function "start_output_gif"
Noelle:  Function "put_pixel_rows.52"
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %38, i64 1" (0.000000e+00%)
Noelle:     Loop "  %74 = sub nsw i32 %73, %72" (0.000000e+00%)
Noelle:     Loop "  %100 = trunc i64 %99 to i8" (0.000000e+00%)
Noelle:     Loop "  %165 = trunc i64 %164 to i8" (0.000000e+00%)
Noelle:  Function "finish_output_gif"
Noelle:     Loop "  %42 = trunc i64 %41 to i8" (0.000000e+00%)
Noelle:     Loop "  %113 = trunc i64 %112 to i8" (0.000000e+00%)
Noelle:  Function "emit_header"
Noelle:     Loop "  %22 = shl i32 1, %21" (0.000000e+00%)
Noelle:     Loop "  %104 = icmp slt i64 %103, %78" (0.000000e+00%)
Noelle:     Loop "  %81 = icmp slt i64 %80, %78" (0.000000e+00%)
Noelle:     Loop "  %218 = trunc i64 %217 to i8" (0.000000e+00%)
Noelle:  Function "jinit_write_targa"
Noelle:  Function "put_demapped_gray.55"
Noelle:     Loop "  %23 = getelementptr inbounds i8, i8* %20, i64 1" (0.000000e+00%)
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %37, i64 1" (0.000000e+00%)
Noelle:  Function "put_gray_rows"
Noelle:     Loop "  %39 = getelementptr i8, i8* %6, i64 %37" (0.000000e+00%)
Noelle:     Loop "  %89 = getelementptr i8, i8* %6, i64 %87" (0.000000e+00%)
Noelle:     Loop "  %111 = getelementptr inbounds i8, i8* %109, i64 1" (0.000000e+00%)
Noelle:     Loop "  %124 = getelementptr inbounds i8, i8* %123, i64 1" (0.000000e+00%)
Noelle:  Function "put_pixel_rows.56"
Noelle:     Loop "  %34 = getelementptr inbounds i8, i8* %33, i64 2" (0.000000e+00%)
Noelle:  Function "jinit_write_bmp"
Noelle:  Function "start_output_bmp"
Noelle:  Function "finish_output_bmp"
Noelle:     Loop "  %272 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %241, align 8, !tbaa !61" (0.000000e+00%)
Noelle:     Loop "  %284 = load i8, i8* %282, align 1, !tbaa !46" (0.000000e+00%)
Noelle:     Loop "  %247 = sub i32 %245, %246" (0.000000e+00%)
Noelle:     Loop "  %263 = load i8, i8* %261, align 1, !tbaa !46" (0.000000e+00%)
Noelle:  Function "put_gray_rows.59"
Noelle:     Loop "  %51 = getelementptr i8, i8* %18, i64 %49" (0.000000e+00%)
Noelle:     Loop "  %101 = getelementptr i8, i8* %18, i64 %99" (0.000000e+00%)
Noelle:     Loop "  %123 = getelementptr inbounds i8, i8* %121, i64 1" (0.000000e+00%)
Noelle:     Loop "  %137 = getelementptr inbounds i8, i8* %136, i64 1" (0.000000e+00%)
Noelle:  Function "put_pixel_rows.60"
Noelle:     Loop "  %47 = getelementptr inbounds i8, i8* %46, i64 1" (0.000000e+00%)
Noelle:  Function "write_colormap"
Noelle:     Loop "  %93 = load i8*, i8** %6, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %31 = load i8*, i8** %6, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %75 = load i8*, i8** %51, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %56 = load i8*, i8** %51, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %111 = tail call i32 @putc(i32 %110, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %15 = tail call i32 @putc(i32 %14, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %138 = tail call i32 @putc(i32 0, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %131 = tail call i32 @putc(i32 0, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:  Function "main"
Noelle:     Loop "  %103 = load i8**, i8*** %92, align 8, !tbaa !55" (8.381813e+01%)
Noelle:  Function "decode_mcu_AC_refine"
Noelle:     Loop "  %41 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %40" (0.000000e+00%)
Noelle:     Loop "  %87 = icmp slt i32 %85, 8" (5.653943e-01%)
Noelle:     Loop "  %172 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %167" (3.160807e-01%)
Noelle:     Loop "  %255 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %252" (3.427655e+00%)
Noelle:     Loop "  %312 = add nsw i64 %310, -1" (0.000000e+00%)
Noelle:     Loop "  %322 = add nsw i64 %321, -1" (0.000000e+00%)
Noelle:  Function "ycc_rgb_convert"
Noelle:     Loop "  %34 = load i8**, i8*** %1, align 8, !tbaa !49" (3.468758e+00%)
Noelle:     Loop "  %47 = getelementptr inbounds i8, i8* %37, i64 %45" (3.468605e+00%)
Noelle:  Function "jpeg_idct_islow"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8" (1.447672e+00%)
Noelle:     Loop "  %177 = getelementptr inbounds i8*, i8** %3, i64 %175" (1.791144e+00%)
Noelle:  Function "h2v2_fancy_upsample"
Noelle:     Loop "  %13 = getelementptr inbounds i8*, i8** %2, i64 %11" (2.523255e+00%)
Noelle:     Loop "  %63 = getelementptr inbounds i8, i8* %62, i64 1" (1.261115e+00%)
Noelle:     Loop "  %142 = getelementptr inbounds i8, i8* %141, i64 1" (1.261115e+00%)
Noelle:  Function "decode_mcu_AC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %6, i64 0, i32 2, i32 1, i64 %36" (0.000000e+00%)
Noelle:     Loop "  %79 = icmp slt i32 %76, 8" (1.459600e+00%)
Noelle:  Function "jpeg_fill_bit_buffer"
Noelle:     Loop "  %18 = load i32, i32* %11, align 8, !tbaa !39" (4.597579e-01%)
Noelle:     Loop "  %47 = icmp eq i64 %46, 0" (2.040027e-03%)
Noelle:  Function "consume_data"
Noelle:     Loop "  %15 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %14" (1.558697e-04%)
Noelle:     Loop "  %52 = icmp ult i32 %50, %49" (5.928393e-01%)
Noelle:     Loop "  %54 = load i32, i32* %7, align 8, !tbaa !39" (5.927236e-01%)
Noelle:     Loop "  %60 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %58" (4.706068e-01%)
Noelle:     Loop "  %129 = add nsw i64 %127, %51" (0.000000e+00%)
Noelle:     Loop "  %135 = add i64 %134, %133" (0.000000e+00%)
Noelle:     Loop "  %158 = getelementptr inbounds [64 x i16], [64 x i16]* %156, i64 1" (0.000000e+00%)
Noelle:     Loop "  %101 = add nsw i64 %99, %51" (0.000000e+00%)
Noelle:     Loop "  %107 = add i64 %106, %105" (0.000000e+00%)
Noelle:     Loop "  %83 = sext i32 %82 to i64" (2.127908e-01%)
Noelle:     Loop "  %91 = getelementptr inbounds [64 x i16], [64 x i16]* %89, i64 1" (9.991915e-02%)
Noelle:  Function "decode_mcu_DC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %36" (0.000000e+00%)
Noelle:     Loop "  %72 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %69" (1.787077e-01%)
Noelle:  Function "decode_mcu_DC_refine"
Noelle:     Loop "  %36 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %6, i64 0, i32 2, i32 1, i64 %35" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %67" (5.302114e-02%)
Noelle:  Function "decompress_data"
Noelle:     Loop "  %14 = load i32, i32* %9, align 4, !tbaa !40" (4.781280e-06%)
Noelle:     Loop "  %39 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %38, i64 0, i32 12" (2.414739e-02%)
Noelle:     Loop "  %80 = icmp eq i32 %77, 0" (2.408761e-02%)
Noelle:     Loop "  %89 = getelementptr inbounds [64 x i16], [64 x i16]* %87, i64 0, i64 0" (2.405271e-02%)
Noelle:  Function "jpeg_huff_decode"
Noelle:     Loop "  %36 = shl i64 %33, 1" (4.588606e-03%)
Noelle:  Function "sep_upsample"
Noelle:     Loop "  %25 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %10, i64 0, i32 2, i64 %23" (2.369498e-04%)
Noelle:  Function "access_virt_barray"
Noelle:     Loop "  %80 = mul nsw i64 %77, %47" (0.000000e+00%)
Noelle:     Loop "  %162 = mul nsw i64 %159, %131" (0.000000e+00%)
Noelle:     Loop "  %226 = load [64 x i16]**, [64 x i16]*** %223, align 8, !tbaa !40" (2.151684e-05%)
Noelle:  Function "process_data_context_main"
Noelle:     Loop "  %74 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %73, i64 0, i32 3" (2.005752e-07%)
Noelle:     Loop "  %103 = load i64, i64* %99, align 8, !tbaa !47" (8.348267e-08%)
Noelle:     Loop "  %151 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %150, i64 0, i32 3" (1.734705e-07%)
Noelle:     Loop "  %177 = add nsw i64 %175, %168" (6.613562e-08%)
Noelle:  Function "jpeg_read_scanlines"
Noelle:  Function "jpeg_start_decompress"
Noelle:     Loop "  %23 = icmp eq %struct.jpeg_progress_mgr* %22, null" (9.583268e-05%)
Noelle:  Function "fill_input_buffer"
Noelle:  Function "put_pixel_rows"
Noelle:  Function "start_pass_phuff_decoder"
Noelle:     Loop "  %101 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %100" (8.327667e-06%)
Noelle:     Loop "  %125 = getelementptr inbounds [64 x i32], [64 x i32]* %105, i64 %106, i64 %124" (8.119503e-06%)
Noelle:     Loop "  %63 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %62" (2.580373e-07%)
Noelle:     Loop "  %74 = getelementptr inbounds [64 x i32], [64 x i32]* %67, i64 %68, i64 %73" (1.040823e-07%)
Noelle:     Loop "  %194 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %193" (2.743544e-05%)
Noelle:     Loop "  %166 = icmp eq i32 %164, 0" (1.033992e-05%)
Noelle:  Function "jpeg_make_d_derived_tbl"
Noelle:     Loop "  %24 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %21" (6.789201e-06%)
Noelle:     Loop "  %50 = add nsw <2 x i64> %47, <i64 8, i64 8>" (0.000000e+00%)
Noelle:     Loop "  %62 = add nsw <2 x i64> %59, <i64 1, i64 1>" (3.621196e-07%)
Noelle:     Loop "  %97 = sext i8 %93 to i32" (8.089145e-06%)
Noelle:     Loop "  %103 = add nsw i64 %101, 1" (4.411571e-06%)
Noelle:     Loop "  %124 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %122" (5.122800e-06%)
Noelle:     Loop "  %155 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %153" (1.698276e-05%)
Noelle:     Loop "  %618 = add nsw i64 %170, %615" (0.000000e+00%)
Noelle:     Loop "  %648 = add i64 %646, %624" (0.000000e+00%)
Noelle:     Loop "  %687 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %685" (0.000000e+00%)
Noelle:     Loop "  %188 = add nsw i64 %170, %185" (2.037194e-06%)
Noelle:     Loop "  %218 = add i64 %216, %194" (1.164421e-06%)
Noelle:     Loop "  %254 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %252" (0.000000e+00%)
Noelle:     Loop "  %338 = add nsw i64 %170, %335" (0.000000e+00%)
Noelle:     Loop "  %368 = add i64 %366, %344" (0.000000e+00%)
Noelle:     Loop "  %395 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %393" (0.000000e+00%)
Noelle:     Loop "  %269 = add nsw i64 %170, %266" (6.808716e-06%)
Noelle:     Loop "  %299 = add i64 %297, %275" (4.438676e-06%)
Noelle:     Loop "  %323 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %321" (0.000000e+00%)
Noelle:     Loop "  %545 = add nsw i64 %170, %542" (0.000000e+00%)
Noelle:     Loop "  %583 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %581" (0.000000e+00%)
Noelle:     Loop "  %410 = add nsw i64 %170, %407" (2.146697e-07%)
Noelle:     Loop "  %445 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %443" (0.000000e+00%)
Noelle:     Loop "  %502 = add nsw i64 %170, %499" (0.000000e+00%)
Noelle:     Loop "  %531 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %529" (0.000000e+00%)
Noelle:     Loop "  %461 = add nsw i64 %170, %458" (5.692000e-07%)
Noelle:     Loop "  %487 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %485" (0.000000e+00%)
Noelle:     Loop "  %597 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 1, i64 %595" (3.446642e-06%)
Noelle:     Loop "  %604 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %602" (2.274632e-06%)
Noelle:  Function "read_markers"
Noelle:     Loop "  %34 = icmp eq i32 %33, 0" (1.664449e-05%)
Noelle:     Loop "  %682 = icmp eq i64 %679, 0" (3.054165e-06%)
Noelle:     Loop "  %748 = icmp eq i64 %746, 0" (0.000000e+00%)
Noelle:     Loop "  %725 = icmp eq i64 %723, 0" (2.912136e-06%)
Noelle:     Loop "  %406 = icmp eq i64 %403, 0" (0.000000e+00%)
Noelle:     Loop "  %516 = icmp eq i64 %514, 0" (1.088744e-05%)
Noelle:     Loop "  %540 = icmp eq i64 %537, 0" (3.458568e-06%)
Noelle:     Loop "  %597 = icmp eq i64 %595, 0" (6.317578e-06%)
Noelle:     Loop "  br i1 %221, label %224, label %.loopexit._crit_edge.._crit_edge204_crit_edge, !prof !80" (1.073349e-06%)
Noelle:     Loop "  %254 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %252, i64 0, i32 0" (2.341851e-07%)
Noelle:  Function "realize_virt_arrays"
Noelle:     Loop "  %11 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %8, i64 0, i32 0" (0.000000e+00%)
Noelle:     Loop "  %41 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %38, i64 0, i32 0" (9.649295e-08%)
Noelle:     Loop "  %92 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %91, i64 0, i32 0" (1.977563e-06%)
Noelle:     Loop "  %143 = sub i32 %119, %141" (0.000000e+00%)
Noelle:     Loop "  %191 = add i32 %189, 1" (0.000000e+00%)
Noelle:     Loop "  %206 = add i32 %205, 1" (0.000000e+00%)
Noelle:     Loop "  %234 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %233, i64 0, i32 0" (1.345047e-05%)
Noelle:     Loop "  %288 = sub i32 %262, %286" (1.311871e-05%)
Noelle:     Loop "  %332 = add i32 %330, 1" (4.878857e-08%)
Noelle:     Loop "  %347 = add i32 %346, 1" (1.287693e-05%)
Noelle:  Function "jinit_master_decompress"
Noelle:  Function "fullsize_upsample"
Noelle:  Function "jinit_color_deconverter"
Noelle:     Loop "  %187 = mul nsw i64 %186, 91881" (0.000000e+00%)
Noelle:     Loop "  %124 = mul nsw i64 %123, 91881" (7.215288e-06%)
Noelle:     Loop "  %72 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 %70, i32 12" (0.000000e+00%)
Noelle:     Loop "  %231 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 %229, i32 12" (0.000000e+00%)
Noelle:  Function "parse_switches"
Noelle:     Loop "  %27 = sext i32 %26 to i64" (4.616483e-06%)
Noelle:  Function "keymatch"
Noelle:     Loop "  %10 = getelementptr inbounds i8, i8* %7, i64 1" (3.289434e-06%)
Noelle:  Function "jzero_far"
Noelle:  Function "alloc_small"
Noelle:     Loop "  %35 = getelementptr inbounds %union.small_pool_struct, %union.small_pool_struct* %34, i64 0, i32 0, i32 2" (3.436884e-07%)
Noelle:     Loop "  %59 = lshr i64 %58, 1" (0.000000e+00%)
Noelle:  Function "consume_markers"
Noelle:     Loop "  %76 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %74, i64 0, i32 2" (1.029981e-07%)
Noelle:     Loop "  %127 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %125, i64 0, i32 9" (1.604602e-07%)
Noelle:  Function "start_input_pass"
Noelle:     Loop "  %72 = getelementptr inbounds %struct.jpeg_decompress_struct.261, %struct.jpeg_decompress_struct.261* %0, i64 0, i32 63, i64 %71" (4.813806e-07%)
Noelle:     Loop "  %112 = load i32, i32* %64, align 8, !tbaa !55" (4.336762e-08%)
Noelle:     Loop "  %122 = load i32, i32* %64, align 8, !tbaa !55" (6.071467e-08%)
Noelle:     Loop "  %153 = getelementptr inbounds %struct.jpeg_decompress_struct.261, %struct.jpeg_decompress_struct.261* %0, i64 0, i32 63, i64 %152" (2.851421e-07%)
Noelle:  Function "alloc_sarray"
Noelle:     Loop "  %29 = sub i32 %3, %27" (7.426705e-07%)
Noelle:     Loop "  %43 = add i32 %41, 1" (9.974553e-08%)
Noelle:     Loop "  %58 = add i32 %57, 1" (2.602057e-07%)
Noelle:  Function "next_marker"
Noelle:     Loop "  %13 = icmp eq i64 %12, 0" (6.635246e-07%)
Noelle:     Loop "  %29 = load %struct.jpeg_marker_reader.278*, %struct.jpeg_marker_reader.278** %9, align 8, !tbaa !47" (0.000000e+00%)
Noelle:     Loop "  %51 = icmp eq i64 %50, 0" (2.211749e-07%)
Noelle:  Function "start_pass_main"
Noelle:     Loop "  %28 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %27, i64 0, i32 3" (7.925433e-07%)
Noelle:     Loop "  %92 = getelementptr inbounds i8*, i8** %41, i64 %90" (1.875650e-07%)
Noelle:     Loop "  %54 = getelementptr inbounds i8*, i8** %41, i64 %52" (6.721981e-08%)
Noelle:     Loop "  %270 = getelementptr inbounds i8*, i8** %41, i64 %269" (0.000000e+00%)
Noelle:     Loop "  %195 = add nsw i64 %193, %148" (0.000000e+00%)
Noelle:     Loop "  %312 = add nsw i64 %311, %148" (8.023010e-08%)
Noelle:     Loop "  %328 = load i64, i64* %303, align 8, !tbaa !53" (0.000000e+00%)
Noelle:     Loop "  %354 = load i64, i64* %303, align 8, !tbaa !53" (4.878857e-08%)
Noelle:  Function "emit_message"
Noelle:  Function "start_pass"
Noelle:     Loop "  %18 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %15, i64 0, i32 9" (5.225798e-07%)
Noelle:     Loop "  %186 = getelementptr inbounds [8 x double], [8 x double]* @start_pass.aanscalefactor, i64 0, i64 %185" (0.000000e+00%)
Noelle:     Loop "  %155 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %50, i64 0, i32 0, i64 %154" (0.000000e+00%)
Noelle:  Function "jpeg_calc_output_dimensions"
Noelle:     Loop "  %113 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 0, i32 9" (5.637791e-08%)
Noelle:     Loop "  %85 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %83, i64 0, i32 3" (0.000000e+00%)
Noelle:     Loop "  %89 = shl i32 %88, 1" (0.000000e+00%)
Noelle:     Loop "  %118 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %116, i64 0, i32 2" (2.146697e-07%)
Noelle:  Function "get_sof"
Noelle:     Loop "  %217 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %216, i64 0, i32 1" (2.168381e-07%)
Noelle:  Function "free_pool"
Noelle:     Loop "  %22 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %21, i64 0, i32 10" (0.000000e+00%)
Noelle:     Loop "  %36 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %35, i64 0, i32 10" (3.469410e-08%)
Noelle:     Loop "  %54 = bitcast %union.large_pool_struct* %53 to i8*" (1.561234e-07%)
Noelle:     Loop "  %73 = bitcast %union.small_pool_struct* %72 to i8*" (9.649295e-08%)
Noelle:  Function "get_app0"
Noelle:     Loop "  %47 = icmp eq i64 %45, 0" (2.569531e-07%)
Noelle:  Function "start_output_pass"
Noelle:     Loop "  %48 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 0, i32 19" (2.461112e-07%)
Noelle:  Function "jinit_write_ppm"
Noelle:  Function "self_destruct"
Noelle:  Function "jinit_d_main_controller"
Noelle:     Loop "  %65 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %64, i64 0, i32 3" (1.127558e-07%)
Noelle:     Loop "  %112 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 0, i32 3" (8.456686e-08%)
Noelle:  Function "start_input_pass.105"
Noelle:  Function "request_virt_barray"
Noelle:  Function "jinit_upsampler"
Noelle:     Loop "  %53 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %52, i64 0, i32 2" (2.523332e+00%)
Noelle:  Function "alloc_large"
Noelle:  Function "jpeg_CreateDecompress"
Noelle:  Function "jinit_d_coef_controller"
Noelle:     Loop "  %29 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %28, i64 0, i32 3" (1.409448e-07%)
Noelle:  Function "jdiv_round_up"
Noelle:  Function "jinit_marker_reader"
Noelle:  Function "jinit_inverse_dct"
Noelle:     Loop "  %21 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (5.746210e-08%)
Noelle:  Function "prepare_for_output_pass"
Noelle:  Function "jinit_memory_mgr"
Noelle:  Function "jpeg_read_header"
Noelle:  Function "jinit_phuff_decoder"
Noelle:     Loop "  %29 = bitcast i32* %28 to i8*" (3.144152e-08%)
Noelle:  Function "jpeg_finish_decompress"
Noelle:     Loop "  %37 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %36, align 8, !tbaa !53" (5.420952e-09%)
Noelle:  Function "jpeg_consume_input"
Noelle:  Function "finish_input_pass"
Noelle:  Function "jround_up"
Noelle:  Function "jpeg_alloc_huff_table"
Noelle:  Function "jpeg_stdio_src"
Noelle:  Function "output_pass_setup"
Noelle:     Loop "  %25 = load i32, i32* %18, align 4, !tbaa !47" (0.000000e+00%)
Noelle:  Function "jinit_input_controller"
Noelle:  Function "reset_input_controller"
Noelle:  Function "jpeg_std_error"
Noelle:  Function "start_pass_dpost"
Noelle:  Function "jinit_d_post_controller"
Noelle:  Function "jpeg_alloc_quant_table"
Noelle:  Function "start_output_ppm"
Noelle:  Function "jpeg_get_large"
Noelle:  Function "jpeg_free_large"
Noelle:  Function "jpeg_destroy_decompress"
Noelle:  Function "reset_marker_reader"
Noelle:  Function "finish_output_pass"
Noelle:  Function "jpeg_destroy"
Noelle:  Function "start_pass_upsample"
Noelle:  Function "jpeg_get_small"
Noelle:  Function "jpeg_free_small"
Noelle:  Function "jpeg_abort"
Noelle:  Function "finish_output_ppm"
Noelle:  Function "jpeg_set_marker_processor"
Noelle:  Function "reset_error_mgr"
Noelle:  Function "init_source"
Noelle:  Function "jpeg_mem_available"
Noelle:  Function "start_pass_dcolor"
Noelle:  Function "term_source"
Noelle:  Function "get_app14"
Noelle:     Loop "  %47 = icmp eq i64 %45, 0" (0.000000e+00%)
Noelle:  Function "skip_variable"
Noelle:  Function "read_restart_marker"
Noelle:  Function "alloc_barray"
Noelle:     Loop "  %31 = sub i32 %3, %29" (0.000000e+00%)
Noelle:     Loop "  %46 = add i32 %44, 1" (0.000000e+00%)
Noelle:     Loop "  %61 = add i32 %60, 1" (0.000000e+00%)
Noelle:  Function "jpeg_mem_init"
Noelle:  Function "jpeg_resync_to_restart"
Noelle:     Loop "  %28 = icmp slt i32 %27, 192" (0.000000e+00%)
Noelle:  Function "jpeg_mem_term"
Noelle:  Function "process_data_crank_post"
Noelle:  Function "merged_2v_upsample"
Noelle:  Function "start_pass_merged_upsample"
Noelle:  Function "jinit_merged_upsampler"
Noelle:     Loop "  %75 = mul nsw i64 %74, 91881" (0.000000e+00%)
Noelle:  Function "update_box"
Noelle:     Loop "  %30 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %29" (0.000000e+00%)
Noelle:     Loop "  %33 = getelementptr inbounds [32 x i16], [32 x i16]* %31, i64 %32, i64 %23" (0.000000e+00%)
Noelle:     Loop "  %36 = load i16, i16* %34, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %57 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %56" (0.000000e+00%)
Noelle:     Loop "  %60 = getelementptr inbounds [32 x i16], [32 x i16]* %58, i64 %59, i64 %50" (0.000000e+00%)
Noelle:     Loop "  %63 = load i16, i16* %61, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader18" (0.000000e+00%)
Noelle:     Loop "  %86 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %85" (0.000000e+00%)
Noelle:     Loop "  %91 = load i16, i16* %89, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader14" (0.000000e+00%)
Noelle:     Loop "  %112 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %111" (0.000000e+00%)
Noelle:     Loop "  %117 = load i16, i16* %115, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader10" (0.000000e+00%)
Noelle:     Loop "  %139 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %138" (0.000000e+00%)
Noelle:     Loop "  %144 = load i16, i16* %142, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader6" (0.000000e+00%)
Noelle:     Loop "  %165 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %164" (0.000000e+00%)
Noelle:     Loop "  %170 = load i16, i16* %168, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %263 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %261" (0.000000e+00%)
Noelle:     Loop "  %269 = load i16, i16* %267, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %278 = getelementptr inbounds [32 x i16], [32 x i16]* %264, i64 %276, i64 %199" (0.000000e+00%)
Noelle:     Loop "  %282 = load i16, i16* %280, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %297 = load i16, i16* %295, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %215 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %213" (0.000000e+00%)
Noelle:     Loop "  %221 = load i16, i16* %219, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %231 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %229" (0.000000e+00%)
Noelle:     Loop "  %235 = getelementptr inbounds [32 x i16], [32 x i16]* %232, i64 %233, i64 %199" (0.000000e+00%)
Noelle:     Loop "  %239 = load i16, i16* %237, align 2, !tbaa !50" (0.000000e+00%)
Noelle:     Loop "  %251 = load i16, i16* %249, align 2, !tbaa !50" (0.000000e+00%)
Noelle:  Function "fill_inverse_cmap"
Noelle:     Loop "  %49 = getelementptr inbounds i8, i8* %41, i64 %47" (0.000000e+00%)
Noelle:     Loop "  %179 = getelementptr inbounds [256 x i64], [256 x i64]* %6, i64 0, i64 %176" (0.000000e+00%)
Noelle:     Loop "  %340 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %339" (0.000000e+00%)
Noelle:     Loop "  %382 = load i64, i64* %380, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %599 = load i64, i64* %597, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %634 = load i64, i64* %632, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %669 = load i64, i64* %667, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %428 = add nuw nsw i64 %426, %418" (0.000000e+00%)
Noelle:  Function "merged_1v_upsample"
Noelle:  Function "finish_pass2"
Noelle:  Function "pass2_no_dither"
Noelle:     Loop "  %17 = getelementptr inbounds i8*, i8** %2, i64 %16" (0.000000e+00%)
Noelle:     Loop "  %24 = getelementptr inbounds i8, i8* %21, i64 1" (0.000000e+00%)
Noelle:  Function "pass2_fs_dither"
Noelle:     Loop "  %48 = getelementptr inbounds i8*, i8** %1, i64 %47" (0.000000e+00%)
Noelle:     Loop "  %86 = getelementptr inbounds i16, i16* %83, i64 %68" (0.000000e+00%)
Noelle:     Loop "  %40 = icmp eq i32 %38, 0" (0.000000e+00%)
Noelle:  Function "h2v1_merged_upsample"
Noelle:     Loop "  %40 = getelementptr inbounds i8, i8* %37, i64 1" (0.000000e+00%)
Noelle:  Function "finish_pass1"
Noelle:     Loop "  %32 = add nuw i64 %29, 1" (0.000000e+00%)
Noelle:     Loop "  %50 = getelementptr inbounds %struct.box, %struct.box* %48, i64 0, i32 7" (0.000000e+00%)
Noelle:     Loop "  %68 = getelementptr inbounds %struct.box, %struct.box* %66, i64 0, i32 6" (0.000000e+00%)
Noelle:     Loop "  %103 = getelementptr inbounds %struct.box, %struct.box* %101, i64 0, i32 6" (0.000000e+00%)
Noelle:     Loop "  %181 = load %struct.my_cquantizer.611*, %struct.my_cquantizer.611** %3, align 8, !tbaa !30" (0.000000e+00%)
Noelle:     Loop "  %211 = getelementptr inbounds [32 x i16]*, [32 x i16]** %183, i64 %206" (0.000000e+00%)
Noelle:     Loop "  %222 = getelementptr inbounds [32 x i16], [32 x i16]* %212, i64 %217, i64 %199" (0.000000e+00%)
Noelle:     Loop "  %233 = getelementptr inbounds i16, i16* %232, i64 1" (0.000000e+00%)
Noelle:  Function "prescan_quantize"
Noelle:     Loop "  %17 = getelementptr inbounds i8*, i8** %1, i64 %16" (0.000000e+00%)
Noelle:     Loop "  %21 = load i8, i8* %19, align 1, !tbaa !43" (0.000000e+00%)
Noelle:  Function "jpeg_idct_float"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8" (0.000000e+00%)
Noelle:     Loop "  %132 = getelementptr inbounds i8*, i8** %3, i64 %130" (0.000000e+00%)
Noelle:  Function "jpeg_idct_ifast"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8" (0.000000e+00%)
Noelle:     Loop "  %151 = getelementptr inbounds i8*, i8** %3, i64 %149" (0.000000e+00%)
Noelle:  Function "dummy_consume_data"
Noelle:  Function "process_data_simple_main"
Noelle:  Function "jcopy_sample_rows"
Noelle:     Loop "  %29 = getelementptr inbounds i8*, i8** %27, i64 1" (0.000000e+00%)
Noelle:  Function "jpeg_open_backing_store"
Noelle:  Function "jcopy_block_row"
Noelle:  Function "access_virt_sarray"
Noelle:     Loop "  %79 = mul nsw i64 %76, %46" (0.000000e+00%)
Noelle:     Loop "  %159 = mul nsw i64 %156, %128" (0.000000e+00%)
Noelle:     Loop "  %221 = load i8**, i8*** %218, align 8, !tbaa !38" (0.000000e+00%)
Noelle:  Function "request_virt_sarray"
Noelle:  Function "error_exit"
Noelle:  Function "h2v2_merged_upsample"
Noelle:     Loop "  %50 = getelementptr inbounds i8, i8* %45, i64 1" (0.000000e+00%)
Noelle:  Function "start_pass_huff_decoder"
Noelle:     Loop "  %33 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 63, i64 %32" (8.673524e-09%)
Noelle:  Function "jinit_huff_decoder"
Noelle:  Function "output_message"
Noelle:  Function "format_message"
Noelle:     Loop "  %41 = getelementptr inbounds i8, i8* %40, i64 1" (0.000000e+00%)
Noelle:  Function "jpeg_idct_4x4"
Noelle:     Loop "  %21 = icmp eq i32 %17, 4" (0.000000e+00%)
Noelle:     Loop "  %132 = getelementptr inbounds i8*, i8** %3, i64 %130" (0.000000e+00%)
Noelle:  Function "quantize_fs_dither"
Noelle:     Loop "  %129 = getelementptr inbounds i8*, i8** %2, i64 %128" (0.000000e+00%)
Noelle:     Loop "  %50 = getelementptr inbounds i8*, i8** %2, i64 %49" (0.000000e+00%)
Noelle:     Loop "  %54 = load i8*, i8** %52, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %88 = getelementptr inbounds i16, i16* %85, i64 %72" (0.000000e+00%)
Noelle:     Loop "  %32 = getelementptr inbounds i8*, i8** %2, i64 %31" (0.000000e+00%)
Noelle:     Loop "  %36 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %7, i64 0, i32 8, i64 %35" (0.000000e+00%)
Noelle:     Loop "  %42 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %7, i64 0, i32 8, i64 %41" (0.000000e+00%)
Noelle:  Function "jinit_2pass_quantizer"
Noelle:     Loop "  %34 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (0.000000e+00%)
Noelle:  Function "start_pass_2_quant"
Noelle:     Loop "  %80 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %79" (0.000000e+00%)
Noelle:  Function "new_color_map_2_quant"
Noelle:  Function "init_error_limit"
Noelle:     Loop "  %37 = getelementptr inbounds i32, i32* %12, i64 %35" (0.000000e+00%)
Noelle:     Loop "  %49 = getelementptr inbounds i32, i32* %12, i64 %48" (0.000000e+00%)
Noelle:  Function "quantize_ord_dither"
Noelle:     Loop "  %25 = getelementptr inbounds i8*, i8** %2, i64 %24" (0.000000e+00%)
Noelle:     Loop "  %78 = load i8*, i8** %25, align 8, !tbaa !40" (0.000000e+00%)
Noelle:     Loop "  %99 = load i8**, i8*** %17, align 8, !tbaa !44" (0.000000e+00%)
Noelle:     Loop "  %111 = load i8, i8* %107, align 1, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %31 = load i8**, i8*** %17, align 8, !tbaa !44" (0.000000e+00%)
Noelle:     Loop "  %43 = load i8, i8* %39, align 1, !tbaa !45" (0.000000e+00%)
Noelle:  Function "jpeg_idct_2x2"
Noelle:     Loop "  %Pivot6 = icmp ult i32 %32, 4" (0.000000e+00%)
Noelle:  Function "jpeg_idct_1x1"
Noelle:  Function "noop_upsample"
Noelle:  Function "h2v1_fancy_upsample"
Noelle:     Loop "  %12 = getelementptr inbounds i8*, i8** %2, i64 %11" (0.000000e+00%)
Noelle:     Loop "  %48 = shl i64 %47, 1" (0.000000e+00%)
Noelle:     Loop "  %121 = getelementptr inbounds i8, i8* %120, i64 1" (0.000000e+00%)
Noelle:  Function "h2v1_upsample"
Noelle:     Loop "  %13 = getelementptr inbounds i8*, i8** %5, i64 %12" (0.000000e+00%)
Noelle:     Loop "  %24 = getelementptr inbounds i8, i8* %22, i64 1" (0.000000e+00%)
Noelle:  Function "h2v2_upsample"
Noelle:     Loop "  %14 = getelementptr inbounds i8*, i8** %5, i64 %12" (0.000000e+00%)
Noelle:     Loop "  %25 = getelementptr inbounds i8, i8* %23, i64 1" (0.000000e+00%)
Noelle:  Function "int_upsample"
Noelle:     Loop "  %138 = getelementptr inbounds i8*, i8** %8, i64 %137" (0.000000e+00%)
Noelle:     Loop "  %148 = load i8, i8* %146, align 1, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %62 = getelementptr inbounds i8*, i8** %8, i64 %60" (0.000000e+00%)
Noelle:     Loop "  %72 = load i8, i8* %70, align 1, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %113 = getelementptr inbounds i8*, i8** %8, i64 %112" (0.000000e+00%)
Noelle:     Loop "  %123 = getelementptr inbounds i8, i8* %121, i64 1" (0.000000e+00%)
Noelle:     Loop "  %88 = getelementptr inbounds i8*, i8** %8, i64 %86" (0.000000e+00%)
Noelle:     Loop "  %98 = getelementptr inbounds i8, i8* %96, i64 1" (0.000000e+00%)
Noelle:     Loop "  %132 = add i64 %131, %27" (0.000000e+00%)
Noelle:     Loop "  %33 = load i32, i32* %22, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  br label %.loopexit.us.us" (0.000000e+00%)
Noelle:  Function "grayscale_convert"
Noelle:  Function "start_output_tga"
Noelle:     Loop "  %114 = load i8**, i8*** %111, align 8, !tbaa !53" (0.000000e+00%)
Noelle:  Function "null_convert"
Noelle:     Loop "  %24 = add nsw i32 %21, -1" (0.000000e+00%)
Noelle:     Loop "  %27 = getelementptr inbounds i8**, i8*** %1, i64 %26" (0.000000e+00%)
Noelle:     Loop "  %36 = getelementptr inbounds i8, i8* %34, i64 1" (0.000000e+00%)
Noelle:     Loop "  %44 = getelementptr inbounds i8, i8* %43, i64 1" (0.000000e+00%)
Noelle:     Loop "  %73 = getelementptr inbounds i8**, i8*** %1, i64 %72" (0.000000e+00%)
Noelle:     Loop "  %82 = getelementptr inbounds i8, i8* %80, i64 1" (0.000000e+00%)
Noelle:     Loop "  %90 = getelementptr inbounds i8**, i8*** %1, i64 %89" (0.000000e+00%)
Noelle:     Loop "  %99 = getelementptr inbounds i8, i8* %98, i64 1" (0.000000e+00%)
Noelle:  Function "COM_handler"
Noelle:     Loop "  %115 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %7, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %65 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %7, align 8, !tbaa !41" (0.000000e+00%)
Noelle:  Function "usage"
Noelle:  Function "copy_pixel_rows"
Noelle:     Loop "  %40 = getelementptr i8, i8* %14, i64 %38" (0.000000e+00%)
Noelle:     Loop "  %90 = getelementptr i8, i8* %14, i64 %88" (0.000000e+00%)
Noelle:     Loop "  %112 = getelementptr inbounds i8, i8* %109, i64 1" (0.000000e+00%)
Noelle:     Loop "  %125 = getelementptr inbounds i8, i8* %123, i64 1" (0.000000e+00%)
Noelle:  Function "put_demapped_gray"
Noelle:     Loop "  %23 = getelementptr inbounds i8, i8* %21, i64 1" (0.000000e+00%)
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %38, i64 1" (0.000000e+00%)
Noelle:  Function "put_demapped_rgb"
Noelle:     Loop "  %44 = getelementptr inbounds i8, i8* %43, i64 1" (0.000000e+00%)
Noelle:  Function "ycck_cmyk_convert"
Noelle:     Loop "  %35 = load i8**, i8*** %1, align 8, !tbaa !46" (0.000000e+00%)
Noelle:     Loop "  %51 = getelementptr inbounds i8, i8* %38, i64 %49" (0.000000e+00%)
Noelle:  Function "jinit_1pass_quantizer"
Noelle:     Loop "  %78 = add nuw i64 %77, 1" (0.000000e+00%)
Noelle:     Loop "  %81 = mul nsw i64 %79, %78" (0.000000e+00%)
Noelle:     Loop "  %93 = mul nsw i64 %91, %78" (0.000000e+00%)
Noelle:     Loop "  %55 = add nuw i64 %54, 1" (0.000000e+00%)
Noelle:     Loop "  %58 = mul nsw i64 %56, %55" (0.000000e+00%)
Noelle:     Loop "  %70 = add nuw i64 %69, 1" (0.000000e+00%)
Noelle:     Loop "  %74 = mul nsw i64 %72, %70" (0.000000e+00%)
Noelle:     Loop "  %130 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %126" (0.000000e+00%)
Noelle:     Loop "  %170 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %166" (0.000000e+00%)
Noelle:     Loop "  %235 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %233" (0.000000e+00%)
Noelle:     Loop "  br label %._crit_edge132" (0.000000e+00%)
Noelle:     Loop "  %sext = shl i64 %214, 32" (0.000000e+00%)
Noelle:     Loop "  br label %._crit_edge133.us" (0.000000e+00%)
Noelle:     Loop "  %195 = getelementptr inbounds [3 x i32], [3 x i32]* @select_ncolors.RGB_order, i64 0, i64 %192" (0.000000e+00%)
Noelle:     Loop "  %276 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %274" (0.000000e+00%)
Noelle:     Loop "  %297 = trunc i64 %295 to i32" (0.000000e+00%)
Noelle:     Loop "  %375 = add i64 %374, %287" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader3.us" (0.000000e+00%)
Noelle:     Loop "  %346 = load i8*, i8** %286, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %366 = load i8*, i8** %286, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader3.us.us" (0.000000e+00%)
Noelle:     Loop "  %309 = load i8*, i8** %286, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader1.us.us" (0.000000e+00%)
Noelle:     Loop "  %335 = load i8*, i8** %286, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %330 = add i64 %329, %287" (0.000000e+00%)
Noelle:     Loop "  %401 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !30" (0.000000e+00%)
Noelle:     Loop "  br label %.loopexit15.us.us.us" (0.000000e+00%)
Noelle:  Function "start_pass_1_quant"
Noelle:     Loop "  %115 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %112, align 8, !tbaa !51" (0.000000e+00%)
Noelle:     Loop "  %134 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 8, i64 %133" (0.000000e+00%)
Noelle:     Loop "  %45 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %37, i64 0, i32 5, i64 %44" (0.000000e+00%)
Noelle:     Loop "  %51 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %37, i64 0, i32 5, i64 %50" (0.000000e+00%)
Noelle:     Loop "  br label %._crit_edge27" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @base_dither_matrix, i64 0, i64 %68, i64 %69" (0.000000e+00%)
Noelle:  Function "finish_pass_1_quant"
Noelle:  Function "new_color_map_1_quant"
Noelle:  Function "create_colorindex"
Noelle:     Loop "  %98 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 5, i64 %96" (0.000000e+00%)
Noelle:     Loop "  %113 = sext i32 %112 to i64" (0.000000e+00%)
Noelle:     Loop "  %118 = add i64 %117, 1" (0.000000e+00%)
Noelle:     Loop "  %28 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 5, i64 %26" (0.000000e+00%)
Noelle:     Loop "  %47 = sext i32 %46 to i64" (0.000000e+00%)
Noelle:     Loop "  %52 = add i64 %51, 1" (0.000000e+00%)
Noelle:     Loop "  %76 = load i8, i8* %36, align 1, !tbaa !51" (0.000000e+00%)
Noelle:  Function "color_quantize3"
Noelle:     Loop "  %97 = getelementptr inbounds i8*, i8** %2, i64 %96" (0.000000e+00%)
Noelle:     Loop "  %122 = getelementptr inbounds i8, i8* %119, i64 1" (0.000000e+00%)
Noelle:     Loop "  %26 = getelementptr inbounds i8*, i8** %2, i64 %25" (0.000000e+00%)
Noelle:     Loop "  %49 = getelementptr inbounds i8*, i8** %1, i64 %48" (0.000000e+00%)
Noelle:     Loop "  %56 = getelementptr inbounds i8, i8* %53, i64 1" (0.000000e+00%)
Noelle:  Function "color_quantize"
Noelle:     Loop "  %184 = getelementptr inbounds i8*, i8** %2, i64 %183" (0.000000e+00%)
Noelle:     Loop "  %188 = getelementptr inbounds i8, i8* %187, i64 1" (0.000000e+00%)
Noelle:     Loop "  %29 = getelementptr inbounds i8*, i8** %2, i64 %28" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader1.us.us17" (0.000000e+00%)
Noelle:     Loop "  %40 = getelementptr inbounds i8*, i8** %9, i64 %36" (0.000000e+00%)
Noelle:     Loop "  %86 = getelementptr inbounds i8*, i8** %9, i64 %82" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader1.us.us.us" (0.000000e+00%)
Noelle:     Loop "  %110 = getelementptr inbounds i8*, i8** %9, i64 %106" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader.us.us.us" (0.000000e+00%)
Noelle:     Loop "  %164 = getelementptr inbounds i8*, i8** %9, i64 %160" (0.000000e+00%)
Noelle:  Function "quantize3_ord_dither"
Noelle:     Loop "  %34 = load [16 x i32]*, [16 x i32]** %20, align 8, !tbaa !41" (0.000000e+00%)
Noelle:     Loop "  %46 = getelementptr inbounds i8, i8* %42, i64 1" (0.000000e+00%)
Noelle:     Loop "  %28 = add nsw i32 %26, 1" (0.000000e+00%)
Noelle:  Function "jpeg_start_output"
Noelle:  Function "read_pbm_integer"
Noelle:     Loop "  %4 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %6 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %31 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %33 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:  Function "read_stdin"
Noelle:  Function "decode_mcu"
Noelle:     Loop "  %35 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %7, i64 0, i32 2, i32 0, i64 %34" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %67" (6.257427e-04%)
Noelle:     Loop "  %97 = icmp eq i32 %92, 0" (0.000000e+00%)
Noelle:     Loop "  %123 = icmp eq i64 %122, 0" (0.000000e+00%)
Noelle:     Loop "  %214 = icmp eq i32 %209, 0" (0.000000e+00%)
Noelle:     Loop "  %240 = icmp eq i64 %239, 0" (0.000000e+00%)
Noelle:     Loop "  %327 = icmp slt i32 %326, 8" (0.000000e+00%)
Noelle:     Loop "  %337 = icmp eq i32 %332, 0" (0.000000e+00%)
Noelle:     Loop "  %363 = icmp eq i64 %362, 0" (0.000000e+00%)
Noelle:     Loop "  %457 = icmp eq i32 %452, 0" (0.000000e+00%)
Noelle:     Loop "  %483 = icmp eq i64 %482, 0" (0.000000e+00%)
Noelle:     Loop "  %572 = icmp slt i32 %571, 8" (0.000000e+00%)
Noelle:     Loop "  %582 = icmp eq i32 %577, 0" (0.000000e+00%)
Noelle:     Loop "  %608 = icmp eq i64 %607, 0" (0.000000e+00%)
Noelle:     Loop "  %701 = icmp eq i32 %696, 0" (0.000000e+00%)
Noelle:     Loop "  %727 = icmp eq i64 %726, 0" (0.000000e+00%)
Noelle:  Function "write_stdout"
Noelle:  Function "jpeg_abort_decompress"
Noelle:  Function "jpeg_input_complete"
Noelle:  Function "jpeg_has_multiple_scans"
Noelle:  Function "jpeg_read_raw_data"
Noelle:  Function "read_color_map"
Noelle:     Loop "  br label %.preheader13" (0.000000e+00%)
Noelle:     Loop "  %196 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %198 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %202 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %206 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %229 = getelementptr inbounds i8, i8* %219, i64 %228" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader3" (0.000000e+00%)
Noelle:     Loop "  %142 = tail call fastcc i32 @read_pbm_integer(%struct.jpeg_decompress_struct* %0, %struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %156 = getelementptr inbounds i8, i8* %146, i64 %155" (0.000000e+00%)
Noelle:     Loop "  %16 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %51 = tail call i32 @getc(%struct._IO_FILE* %1) #18" (0.000000e+00%)
Noelle:     Loop "  %75 = getelementptr inbounds i8, i8* %65, i64 %74" (0.000000e+00%)
Noelle:  Function "jpeg_finish_output"
Noelle:     Loop "  %28 = load i32, i32* %25, align 4, !tbaa !48" (0.000000e+00%)
Noelle:  Function "decompress_onepass"
Noelle:     Loop "  %31 = icmp ugt i32 %29, %8" (0.000000e+00%)
Noelle:     Loop "  %33 = load i8*, i8** %21, align 8, !tbaa !45" (0.000000e+00%)
Noelle:     Loop "  %132 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %130" (0.000000e+00%)
Noelle:     Loop "  %173 = load i32, i32* %26, align 8, !tbaa !59" (0.000000e+00%)
Noelle:     Loop "  %182 = add nsw i64 %180, %179" (0.000000e+00%)
Noelle:     Loop "  %51 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %49" (0.000000e+00%)
Noelle:     Loop "  %83 = load i32, i32* %26, align 8, !tbaa !59" (0.000000e+00%)
Noelle:     Loop "  %92 = add nsw i64 %90, %89" (0.000000e+00%)
Noelle:  Function "decompress_smooth_data"
Noelle:     Loop "  %17 = load i32, i32* %11, align 4, !tbaa !39" (0.000000e+00%)
Noelle:     Loop "  %57 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %56, i64 0, i32 12" (0.000000e+00%)
Noelle:     Loop "  %163 = getelementptr inbounds [64 x i16]*, [64 x i16]** %104, i64 %161" (0.000000e+00%)
Noelle:     Loop "  call void @jcopy_block_row([64 x i16]* nonnull %197, [64 x i16]* nonnull %3, i32 1) #18" (0.000000e+00%)
Noelle:  Function "post_process_1pass"
Noelle:  Function "post_process_prepass"
Noelle:  Function "post_process_2pass"
Noelle:  Function "skip_input_data"
Noelle:     Loop "  %18 = sub nsw i64 %17, %16" (0.000000e+00%)
Noelle:  Function "jpeg_new_colormap"
Noelle:  Function "finish_output_tga"
Noelle:  Function "jinit_write_gif"
Noelle:  Function "start_output_gif"
Noelle:  Function "put_pixel_rows.52"
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %38, i64 1" (0.000000e+00%)
Noelle:     Loop "  %74 = sub nsw i32 %73, %72" (0.000000e+00%)
Noelle:     Loop "  %100 = trunc i64 %99 to i8" (0.000000e+00%)
Noelle:     Loop "  %165 = trunc i64 %164 to i8" (0.000000e+00%)
Noelle:  Function "finish_output_gif"
Noelle:     Loop "  %42 = trunc i64 %41 to i8" (0.000000e+00%)
Noelle:     Loop "  %113 = trunc i64 %112 to i8" (0.000000e+00%)
Noelle:  Function "emit_header"
Noelle:     Loop "  %22 = shl i32 1, %21" (0.000000e+00%)
Noelle:     Loop "  %104 = icmp slt i64 %103, %78" (0.000000e+00%)
Noelle:     Loop "  %81 = icmp slt i64 %80, %78" (0.000000e+00%)
Noelle:     Loop "  %218 = trunc i64 %217 to i8" (0.000000e+00%)
Noelle:  Function "jinit_write_targa"
Noelle:  Function "put_demapped_gray.55"
Noelle:     Loop "  %23 = getelementptr inbounds i8, i8* %20, i64 1" (0.000000e+00%)
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %37, i64 1" (0.000000e+00%)
Noelle:  Function "put_gray_rows"
Noelle:     Loop "  %39 = getelementptr i8, i8* %6, i64 %37" (0.000000e+00%)
Noelle:     Loop "  %89 = getelementptr i8, i8* %6, i64 %87" (0.000000e+00%)
Noelle:     Loop "  %111 = getelementptr inbounds i8, i8* %109, i64 1" (0.000000e+00%)
Noelle:     Loop "  %124 = getelementptr inbounds i8, i8* %123, i64 1" (0.000000e+00%)
Noelle:  Function "put_pixel_rows.56"
Noelle:     Loop "  %34 = getelementptr inbounds i8, i8* %33, i64 2" (0.000000e+00%)
Noelle:  Function "jinit_write_bmp"
Noelle:  Function "start_output_bmp"
Noelle:  Function "finish_output_bmp"
Noelle:     Loop "  %272 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %241, align 8, !tbaa !61" (0.000000e+00%)
Noelle:     Loop "  %284 = load i8, i8* %282, align 1, !tbaa !46" (0.000000e+00%)
Noelle:     Loop "  %247 = sub i32 %245, %246" (0.000000e+00%)
Noelle:     Loop "  %263 = load i8, i8* %261, align 1, !tbaa !46" (0.000000e+00%)
Noelle:  Function "put_gray_rows.59"
Noelle:     Loop "  %51 = getelementptr i8, i8* %18, i64 %49" (0.000000e+00%)
Noelle:     Loop "  %101 = getelementptr i8, i8* %18, i64 %99" (0.000000e+00%)
Noelle:     Loop "  %123 = getelementptr inbounds i8, i8* %121, i64 1" (0.000000e+00%)
Noelle:     Loop "  %137 = getelementptr inbounds i8, i8* %136, i64 1" (0.000000e+00%)
Noelle:  Function "put_pixel_rows.60"
Noelle:     Loop "  %47 = getelementptr inbounds i8, i8* %46, i64 1" (0.000000e+00%)
Noelle:  Function "write_colormap"
Noelle:     Loop "  %93 = load i8*, i8** %6, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %31 = load i8*, i8** %6, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %75 = load i8*, i8** %51, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %56 = load i8*, i8** %51, align 8, !tbaa !43" (0.000000e+00%)
Noelle:     Loop "  %111 = tail call i32 @putc(i32 %110, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %15 = tail call i32 @putc(i32 %14, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %138 = tail call i32 @putc(i32 0, %struct._IO_FILE* %10)" (0.000000e+00%)
Noelle:     Loop "  %131 = tail call i32 @putc(i32 0, %struct._IO_FILE* %10)" (0.000000e+00%)
NOELLE: FixedPoint: Exit
NOELLE: Enablers: Exit
noelle-simplification baseline_pre.bc -o baseline_pre.bc
opt -basicaa -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -mem2reg -tbaa -early-cse-memssa -licm -simplifycfg -simplifycfg-sink-common=false -instcombine -tailcallelim -loop-simplify -lcssa -licm -loop-unswitch -globalopt -instcombine -ipsccp -dce -gvn -dse -adce -loop-simplify -lcssa -indvars -loop-deletion -instcombine -indvars -break-constgeps -lowerswitch -mergereturn --break-crit-edges -loop-simplify -lcssa --functionattrs --rpo-functionattrs baseline_pre.bc -o baseline_pre.bc
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CleanMetadata.so -CleanMetadata -clean-loop-metadata=true -clean-prof-metadata=true -clean-pdg-metadata=true baseline_pre.bc -o baseline_pre.bc
noelle/core/Clean Loop Metadata
noelle/core/Clean PDG Metadata
noelle/core/Clean profiler metadata
opt --strip-named-metadata baseline_pre.bc -o baseline_pre.bc
/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/djpeg /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/djpeg
WARNING: ./runme_djpeg.sh not found. Going up one dir.
Running: ./baseline_pre_prof -dct int -ppm -outfile output_very_large_decode.ppm input_very_large.jpeg in /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/MiBench/consumer/jpeg
--------------------------------------------------------------------------------------
/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/djpeg
DONE
opt -pgo-test-profile-file=/tmp/tmp.Y6oqjwpYBw -block-freq -pgo-instr-use baseline_pre.bc -o baseline_with_metadata.bc
noelle-load -PDGAnalysis -noelle-pdg-verbose=3 -noelle-pdg-embed baseline_with_metadata.bc -o baseline_with_metadata.bc
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -PDGAnalysis -noelle-pdg-verbose=3 -noelle-pdg-embed baseline_with_metadata.bc -o baseline_with_metadata.bc
PDGAnalysis: Construct PDG from Analysis
Embed PDG as metadata
noelle-parallelizer baseline_with_metadata.bc -o baseline_parallelized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
noelle-meta-loop-embed baseline_with_metadata.bc -o afterLoopMetadata.bc
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopMetadata.so -LoopMetadata baseline_with_metadata.bc -o afterLoopMetadata.bc
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopMetadata.so -LoopMetadata baseline_with_metadata.bc -o afterLoopMetadata.bc
noelle-parallelization-planner afterLoopMetadata.bc -o baseline_with_parallel_plan.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
noelle-parallel-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Planner.so -planner afterLoopMetadata.bc -o baseline_with_parallel_plan.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Planner.so -planner afterLoopMetadata.bc -o baseline_with_parallel_plan.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Planner.so -planner afterLoopMetadata.bc -o baseline_with_parallel_plan.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
Planner: Start
Planner:  Fetching the program loops
Noelle: Filter out cold code
Noelle:  Function "main"
Noelle:     Loop "  %103 = load i8**, i8*** %92, align 8, !tbaa !2847, !noelle.pdg.inst.id !363" (8.362432e+01%)
Noelle:  Function "decode_mcu_AC_refine"
Noelle:     Loop "  %41 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %40, !noelle.pdg.inst.id !507" (0.000000e+00%)
Noelle:  Disable loop "1" as cold code
Noelle:     Loop "  %87 = icmp slt i32 %85, 8, !noelle.pdg.inst.id !564" (8.269956e-01%)
Noelle:     Loop "  %172 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %167, !noelle.pdg.inst.id !688" (4.825221e-01%)
Noelle:     Loop "  %255 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %252, !noelle.pdg.inst.id !802" (3.419604e+00%)
Noelle:     Loop "  %312 = add nsw i64 %310, -1, !noelle.pdg.inst.id !895" (0.000000e+00%)
Noelle:  Disable loop "5" as cold code
Noelle:     Loop "  %322 = add nsw i64 %321, -1, !noelle.pdg.inst.id !915" (0.000000e+00%)
Noelle:  Disable loop "6" as cold code
Noelle:  Function "ycc_rgb_convert"
Noelle:     Loop "  %34 = load i8**, i8*** %1, align 8, !tbaa !88, !noelle.pdg.inst.id !89" (3.460737e+00%)
Noelle:     Loop "  %47 = getelementptr inbounds i8, i8* %37, i64 %45, !noelle.pdg.inst.id !104" (3.460585e+00%)
Noelle:  Function "jpeg_idct_islow"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8, !noelle.pdg.inst.id !247" (1.444324e+00%)
Noelle:     Loop "  %177 = getelementptr inbounds i8*, i8** %3, i64 %175, !noelle.pdg.inst.id !410" (1.787002e+00%)
Noelle:  Function "h2v2_fancy_upsample"
Noelle:     Loop "  %13 = getelementptr inbounds i8*, i8** %2, i64 %11, !noelle.pdg.inst.id !55" (2.517421e+00%)
Noelle:     Loop "  %63 = getelementptr inbounds i8, i8* %62, i64 1, !noelle.pdg.inst.id !114" (1.258199e+00%)
Noelle:     Loop "  %142 = getelementptr inbounds i8, i8* %141, i64 1, !noelle.pdg.inst.id !212" (1.258199e+00%)
Noelle:  Function "decode_mcu_AC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %6, i64 0, i32 2, i32 1, i64 %36, !noelle.pdg.inst.id !271" (0.000000e+00%)
Noelle:  Disable loop "14" as cold code
Noelle:     Loop "  %79 = icmp slt i32 %76, 8, !noelle.pdg.inst.id !340" (1.456225e+00%)
Noelle:  Function "jpeg_fill_bit_buffer"
Noelle:     Loop "  %18 = load i32, i32* %11, align 8, !tbaa !212, !noelle.pdg.inst.id !62" (4.586948e-01%)
Noelle:     Loop "  %47 = icmp eq i64 %46, 0, !noelle.pdg.inst.id !254" (2.035310e-03%)
Noelle:  Disable loop "17" as cold code
Noelle:  Function "consume_data"
Noelle:     Loop "  %15 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %14, !noelle.pdg.inst.id !208" (1.555093e-04%)
Noelle:  Disable loop "18" as cold code
Noelle:     Loop "  %52 = icmp ult i32 %50, %49, !noelle.pdg.inst.id !255" (5.914686e-01%)
Noelle:     Loop "  %54 = load i32, i32* %7, align 8, !tbaa !198, !noelle.pdg.inst.id !104" (5.913532e-01%)
Noelle:     Loop "  %60 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %58, !noelle.pdg.inst.id !271" (4.695188e-01%)
Noelle:     Loop "  %129 = add nsw i64 %127, %51, !noelle.pdg.inst.id !371" (7.355448e-08%)
Noelle:  Disable loop "22" as cold code
Noelle:     Loop "  %135 = add i64 %134, %133, !noelle.pdg.inst.id !378" (4.975744e-08%)
Noelle:  Disable loop "23" as cold code
Noelle:     Loop "  %158 = getelementptr inbounds [64 x i16], [64 x i16]* %156, i64 1, !noelle.pdg.inst.id !405" (2.379704e-08%)
Noelle:  Disable loop "24" as cold code
Noelle:     Loop "  %101 = add nsw i64 %99, %51, !noelle.pdg.inst.id !335" (4.975744e-08%)
Noelle:  Disable loop "25" as cold code
Noelle:     Loop "  %107 = add i64 %106, %105, !noelle.pdg.inst.id !342" (4.975744e-08%)
Noelle:  Disable loop "26" as cold code
Noelle:     Loop "  %83 = sext i32 %82 to i64, !noelle.pdg.inst.id !301" (2.122987e-01%)
Noelle:     Loop "  %91 = getelementptr inbounds [64 x i16], [64 x i16]* %89, i64 1, !noelle.pdg.inst.id !310" (9.968811e-02%)
Noelle:  Disable loop "28" as cold code
Noelle:  Function "decode_mcu_DC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %36, !noelle.pdg.inst.id !430" (0.000000e+00%)
Noelle:  Disable loop "29" as cold code
Noelle:     Loop "  %72 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %69, !noelle.pdg.inst.id !477" (1.782945e-01%)
Noelle:  Function "decode_mcu_DC_refine"
Noelle:  Disable "decode_mcu_DC_refine" as cold function
Noelle:  Function "decompress_data"
Noelle:  Disable "decompress_data" as cold function
Noelle:  Function "jpeg_huff_decode"
Noelle:  Disable "jpeg_huff_decode" as cold function
Noelle:  Function "sep_upsample"
Noelle:  Disable "sep_upsample" as cold function
Noelle:  Function "access_virt_barray"
Noelle:  Disable "access_virt_barray" as cold function
Noelle:  Function "process_data_context_main"
Noelle:  Disable "process_data_context_main" as cold function
Noelle:  Function "jpeg_start_decompress"
Noelle:  Disable "jpeg_start_decompress" as cold function
Noelle:  Function "fill_input_buffer"
Noelle:  Disable "fill_input_buffer" as cold function
Noelle:  Function "put_pixel_rows"
Noelle:  Disable "put_pixel_rows" as cold function
Noelle:  Function "start_pass_phuff_decoder"
Noelle:  Disable "start_pass_phuff_decoder" as cold function
Noelle:  Function "jpeg_make_d_derived_tbl"
Noelle:  Disable "jpeg_make_d_derived_tbl" as cold function
Noelle:  Function "read_markers"
Noelle:  Disable "read_markers" as cold function
Noelle:  Function "realize_virt_arrays"
Noelle:  Disable "realize_virt_arrays" as cold function
Noelle:  Function "jinit_master_decompress"
Noelle:  Disable "jinit_master_decompress" as cold function
Noelle:  Function "fullsize_upsample"
Noelle:  Disable "fullsize_upsample" as cold function
Noelle:  Function "jinit_color_deconverter"
Noelle:  Disable "jinit_color_deconverter" as cold function
Noelle:  Function "parse_switches"
Noelle:  Disable "parse_switches" as cold function
Noelle:  Function "keymatch"
Noelle:  Disable "keymatch" as cold function
Noelle:  Function "jzero_far"
Noelle:  Disable "jzero_far" as cold function
Noelle:  Function "alloc_small"
Noelle:  Disable "alloc_small" as cold function
Noelle:  Function "consume_markers"
Noelle:  Disable "consume_markers" as cold function
Noelle:  Function "start_input_pass"
Noelle:  Disable "start_input_pass" as cold function
Noelle:  Function "alloc_sarray"
Noelle:  Disable "alloc_sarray" as cold function
Noelle:  Function "next_marker"
Noelle:  Disable "next_marker" as cold function
Noelle:  Function "start_pass_main"
Noelle:  Disable "start_pass_main" as cold function
Noelle:  Function "emit_message"
Noelle:  Disable "emit_message" as cold function
Noelle:  Function "start_pass"
Noelle:  Disable "start_pass" as cold function
Noelle:  Function "jpeg_calc_output_dimensions"
Noelle:  Disable "jpeg_calc_output_dimensions" as cold function
Noelle:  Function "get_sof"
Noelle:  Disable "get_sof" as cold function
Noelle:  Function "free_pool"
Noelle:  Disable "free_pool" as cold function
Noelle:  Function "get_app0"
Noelle:  Disable "get_app0" as cold function
Noelle:  Function "start_output_pass"
Noelle:  Disable "start_output_pass" as cold function
Noelle:  Function "jinit_write_ppm"
Noelle:  Disable "jinit_write_ppm" as cold function
Noelle:  Function "self_destruct"
Noelle:  Disable "self_destruct" as cold function
Noelle:  Function "jinit_d_main_controller"
Noelle:  Disable "jinit_d_main_controller" as cold function
Noelle:  Function "start_input_pass.105"
Noelle:  Disable "start_input_pass.105" as cold function
Noelle:  Function "request_virt_barray"
Noelle:  Disable "request_virt_barray" as cold function
Noelle:  Function "jinit_upsampler"
Noelle:  Disable "jinit_upsampler" as cold function
Noelle:  Function "alloc_large"
Noelle:  Disable "alloc_large" as cold function
Noelle:  Function "jpeg_CreateDecompress"
Noelle:  Disable "jpeg_CreateDecompress" as cold function
Noelle:  Function "jinit_d_coef_controller"
Noelle:  Disable "jinit_d_coef_controller" as cold function
Noelle:  Function "jdiv_round_up"
Noelle:  Disable "jdiv_round_up" as cold function
Noelle:  Function "jpeg_read_header"
Noelle:  Disable "jpeg_read_header" as cold function
Noelle:  Function "jinit_marker_reader"
Noelle:  Disable "jinit_marker_reader" as cold function
Noelle:  Function "jinit_inverse_dct"
Noelle:  Disable "jinit_inverse_dct" as cold function
Noelle:  Function "jpeg_consume_input"
Noelle:  Disable "jpeg_consume_input" as cold function
Noelle:  Function "prepare_for_output_pass"
Noelle:  Disable "prepare_for_output_pass" as cold function
Noelle:  Function "jinit_memory_mgr"
Noelle:  Disable "jinit_memory_mgr" as cold function
Noelle:  Function "jinit_phuff_decoder"
Noelle:  Disable "jinit_phuff_decoder" as cold function
Noelle:  Function "jpeg_finish_decompress"
Noelle:  Disable "jpeg_finish_decompress" as cold function
Noelle:  Function "finish_input_pass"
Noelle:  Disable "finish_input_pass" as cold function
Noelle:  Function "jpeg_alloc_huff_table"
Noelle:  Disable "jpeg_alloc_huff_table" as cold function
Noelle:  Function "jround_up"
Noelle:  Disable "jround_up" as cold function
Noelle:  Function "jpeg_stdio_src"
Noelle:  Disable "jpeg_stdio_src" as cold function
Noelle:  Function "output_pass_setup"
Noelle:  Disable "output_pass_setup" as cold function
Noelle:  Function "jinit_input_controller"
Noelle:  Disable "jinit_input_controller" as cold function
Noelle:  Function "start_pass_dpost"
Noelle:  Disable "start_pass_dpost" as cold function
Noelle:  Function "reset_input_controller"
Noelle:  Disable "reset_input_controller" as cold function
Noelle:  Function "jpeg_std_error"
Noelle:  Disable "jpeg_std_error" as cold function
Noelle:  Function "jinit_d_post_controller"
Noelle:  Disable "jinit_d_post_controller" as cold function
Noelle:  Function "jpeg_alloc_quant_table"
Noelle:  Disable "jpeg_alloc_quant_table" as cold function
Noelle:  Function "start_output_ppm"
Noelle:  Disable "start_output_ppm" as cold function
Noelle:  Function "jpeg_get_large"
Noelle:  Disable "jpeg_get_large" as cold function
Noelle:  Function "jpeg_free_large"
Noelle:  Disable "jpeg_free_large" as cold function
Noelle:  Function "jpeg_destroy_decompress"
Noelle:  Disable "jpeg_destroy_decompress" as cold function
Noelle:  Function "reset_marker_reader"
Noelle:  Disable "reset_marker_reader" as cold function
Noelle:  Function "jpeg_destroy"
Noelle:  Disable "jpeg_destroy" as cold function
Noelle:  Function "finish_output_pass"
Noelle:  Disable "finish_output_pass" as cold function
Noelle:  Function "jpeg_abort"
Noelle:  Disable "jpeg_abort" as cold function
Noelle:  Function "start_pass_upsample"
Noelle:  Disable "start_pass_upsample" as cold function
Noelle:  Function "jpeg_free_small"
Noelle:  Disable "jpeg_free_small" as cold function
Noelle:  Function "jpeg_get_small"
Noelle:  Disable "jpeg_get_small" as cold function
Noelle:  Function "finish_output_ppm"
Noelle:  Disable "finish_output_ppm" as cold function
Noelle:  Function "jpeg_set_marker_processor"
Noelle:  Disable "jpeg_set_marker_processor" as cold function
Noelle:  Function "reset_error_mgr"
Noelle:  Disable "reset_error_mgr" as cold function
Noelle:  Function "init_source"
Noelle:  Disable "init_source" as cold function
Noelle:  Function "term_source"
Noelle:  Disable "term_source" as cold function
Noelle:  Function "start_pass_dcolor"
Noelle:  Disable "start_pass_dcolor" as cold function
Noelle:  Function "jpeg_mem_available"
Noelle:  Disable "jpeg_mem_available" as cold function
Noelle:  Function "jpeg_mem_term"
Noelle:  Disable "jpeg_mem_term" as cold function
Noelle:  Function "get_app14"
Noelle:  Disable "get_app14" as cold function
Noelle:  Function "skip_variable"
Noelle:  Disable "skip_variable" as cold function
Noelle:  Function "read_restart_marker"
Noelle:  Disable "read_restart_marker" as cold function
Noelle:  Function "jpeg_mem_init"
Noelle:  Disable "jpeg_mem_init" as cold function
Noelle:  Function "jcopy_sample_rows"
Noelle:  Disable "jcopy_sample_rows" as cold function
Noelle:  Function "jcopy_block_row"
Noelle:  Disable "jcopy_block_row" as cold function
Noelle:  Function "jpeg_resync_to_restart"
Noelle:  Disable "jpeg_resync_to_restart" as cold function
Noelle:  Function "error_exit"
Noelle:  Disable "error_exit" as cold function
Noelle:  Function "output_message"
Noelle:  Disable "output_message" as cold function
Noelle:  Function "format_message"
Noelle:  Disable "format_message" as cold function
Noelle:  Function "jpeg_idct_float"
Noelle:  Disable "jpeg_idct_float" as cold function
Noelle:  Function "jpeg_open_backing_store"
Noelle:  Disable "jpeg_open_backing_store" as cold function
Noelle:  Function "process_data_simple_main"
Noelle:  Disable "process_data_simple_main" as cold function
Noelle:  Function "access_virt_sarray"
Noelle:  Disable "access_virt_sarray" as cold function
Noelle:  Function "process_data_crank_post"
Noelle:  Disable "process_data_crank_post" as cold function
Noelle:  Function "request_virt_sarray"
Noelle:  Disable "request_virt_sarray" as cold function
Noelle:  Function "dummy_consume_data"
Noelle:  Disable "dummy_consume_data" as cold function
Noelle:  Function "alloc_barray"
Noelle:  Disable "alloc_barray" as cold function
Noelle:  Function "start_pass_huff_decoder"
Noelle:  Disable "start_pass_huff_decoder" as cold function
Noelle:  Function "jinit_huff_decoder"
Noelle:  Disable "jinit_huff_decoder" as cold function
Noelle:  Function "jpeg_idct_ifast"
Noelle:  Disable "jpeg_idct_ifast" as cold function
Noelle:  Function "h2v1_merged_upsample"
Noelle:  Disable "h2v1_merged_upsample" as cold function
Noelle:  Function "prescan_quantize"
Noelle:  Disable "prescan_quantize" as cold function
Noelle:  Function "finish_pass1"
Noelle:  Disable "finish_pass1" as cold function
Noelle:  Function "pass2_fs_dither"
Noelle:  Disable "pass2_fs_dither" as cold function
Noelle:  Function "pass2_no_dither"
Noelle:  Disable "pass2_no_dither" as cold function
Noelle:  Function "finish_pass2"
Noelle:  Disable "finish_pass2" as cold function
Noelle:  Function "fill_inverse_cmap"
Noelle:  Disable "fill_inverse_cmap" as cold function
Noelle:  Function "update_box"
Noelle:  Disable "update_box" as cold function
Noelle:  Function "jinit_merged_upsampler"
Noelle:  Disable "jinit_merged_upsampler" as cold function
Noelle:  Function "start_pass_merged_upsample"
Noelle:  Disable "start_pass_merged_upsample" as cold function
Noelle:  Function "merged_2v_upsample"
Noelle:  Disable "merged_2v_upsample" as cold function
Noelle:  Function "h2v2_merged_upsample"
Noelle:  Disable "h2v2_merged_upsample" as cold function
Noelle:  Function "merged_1v_upsample"
Noelle:  Disable "merged_1v_upsample" as cold function
Noelle:  Function "jpeg_idct_2x2"
Noelle:  Disable "jpeg_idct_2x2" as cold function
Noelle:  Function "jinit_2pass_quantizer"
Noelle:  Disable "jinit_2pass_quantizer" as cold function
Noelle:  Function "start_pass_2_quant"
Noelle:  Disable "start_pass_2_quant" as cold function
Noelle:  Function "new_color_map_2_quant"
Noelle:  Disable "new_color_map_2_quant" as cold function
Noelle:  Function "init_error_limit"
Noelle:  Disable "init_error_limit" as cold function
Noelle:  Function "jpeg_idct_4x4"
Noelle:  Disable "jpeg_idct_4x4" as cold function
Noelle:  Function "quantize_fs_dither"
Noelle:  Disable "quantize_fs_dither" as cold function
Noelle:  Function "jpeg_idct_1x1"
Noelle:  Disable "jpeg_idct_1x1" as cold function
Noelle:  Function "noop_upsample"
Noelle:  Disable "noop_upsample" as cold function
Noelle:  Function "h2v1_fancy_upsample"
Noelle:  Disable "h2v1_fancy_upsample" as cold function
Noelle:  Function "h2v1_upsample"
Noelle:  Disable "h2v1_upsample" as cold function
Noelle:  Function "h2v2_upsample"
Noelle:  Disable "h2v2_upsample" as cold function
Noelle:  Function "int_upsample"
Noelle:  Disable "int_upsample" as cold function
Noelle:  Function "grayscale_convert"
Noelle:  Disable "grayscale_convert" as cold function
Noelle:  Function "start_output_tga"
Noelle:  Disable "start_output_tga" as cold function
Noelle:  Function "put_demapped_rgb"
Noelle:  Disable "put_demapped_rgb" as cold function
Noelle:  Function "ycck_cmyk_convert"
Noelle:  Disable "ycck_cmyk_convert" as cold function
Noelle:  Function "COM_handler"
Noelle:  Disable "COM_handler" as cold function
Noelle:  Function "usage"
Noelle:  Disable "usage" as cold function
Noelle:  Function "copy_pixel_rows"
Noelle:  Disable "copy_pixel_rows" as cold function
Noelle:  Function "put_demapped_gray"
Noelle:  Disable "put_demapped_gray" as cold function
Noelle:  Function "null_convert"
Noelle:  Disable "null_convert" as cold function
Noelle:  Function "jinit_1pass_quantizer"
Noelle:  Disable "jinit_1pass_quantizer" as cold function
Noelle:  Function "start_pass_1_quant"
Noelle:  Disable "start_pass_1_quant" as cold function
Noelle:  Function "finish_pass_1_quant"
Noelle:  Disable "finish_pass_1_quant" as cold function
Noelle:  Function "new_color_map_1_quant"
Noelle:  Disable "new_color_map_1_quant" as cold function
Noelle:  Function "create_colorindex"
Noelle:  Disable "create_colorindex" as cold function
Noelle:  Function "color_quantize3"
Noelle:  Disable "color_quantize3" as cold function
Noelle:  Function "color_quantize"
Noelle:  Disable "color_quantize" as cold function
Noelle:  Function "quantize3_ord_dither"
Noelle:  Disable "quantize3_ord_dither" as cold function
Noelle:  Function "quantize_ord_dither"
Noelle:  Disable "quantize_ord_dither" as cold function
Noelle:  Function "jpeg_start_output"
Noelle:  Disable "jpeg_start_output" as cold function
Noelle:  Function "read_pbm_integer"
Noelle:  Disable "read_pbm_integer" as cold function
Noelle:  Function "read_stdin"
Noelle:  Disable "read_stdin" as cold function
Noelle:  Function "decode_mcu"
Noelle:  Disable "decode_mcu" as cold function
Noelle:  Function "write_stdout"
Noelle:  Disable "write_stdout" as cold function
Noelle:  Function "jpeg_abort_decompress"
Noelle:  Disable "jpeg_abort_decompress" as cold function
Noelle:  Function "jpeg_input_complete"
Noelle:  Disable "jpeg_input_complete" as cold function
Noelle:  Function "jpeg_has_multiple_scans"
Noelle:  Disable "jpeg_has_multiple_scans" as cold function
Noelle:  Function "jpeg_read_scanlines"
Noelle:  Disable "jpeg_read_scanlines" as cold function
Noelle:  Function "jpeg_read_raw_data"
Noelle:  Disable "jpeg_read_raw_data" as cold function
Noelle:  Function "jpeg_finish_output"
Noelle:  Disable "jpeg_finish_output" as cold function
Noelle:  Function "decompress_onepass"
Noelle:  Disable "decompress_onepass" as cold function
Noelle:  Function "decompress_smooth_data"
Noelle:  Disable "decompress_smooth_data" as cold function
Noelle:  Function "post_process_1pass"
Noelle:  Disable "post_process_1pass" as cold function
Noelle:  Function "post_process_prepass"
Noelle:  Disable "post_process_prepass" as cold function
Noelle:  Function "post_process_2pass"
Noelle:  Disable "post_process_2pass" as cold function
Noelle:  Function "skip_input_data"
Noelle:  Disable "skip_input_data" as cold function
Noelle:  Function "jpeg_new_colormap"
Noelle:  Disable "jpeg_new_colormap" as cold function
Noelle:  Function "put_demapped_gray.55"
Noelle:  Disable "put_demapped_gray.55" as cold function
Noelle:  Function "jinit_write_gif"
Noelle:  Disable "jinit_write_gif" as cold function
Noelle:  Function "start_output_gif"
Noelle:  Disable "start_output_gif" as cold function
Noelle:  Function "put_pixel_rows.52"
Noelle:  Disable "put_pixel_rows.52" as cold function
Noelle:  Function "finish_output_gif"
Noelle:  Disable "finish_output_gif" as cold function
Noelle:  Function "emit_header"
Noelle:  Disable "emit_header" as cold function
Noelle:  Function "jinit_write_targa"
Noelle:  Disable "jinit_write_targa" as cold function
Noelle:  Function "finish_output_tga"
Noelle:  Disable "finish_output_tga" as cold function
Noelle:  Function "put_gray_rows"
Noelle:  Disable "put_gray_rows" as cold function
Noelle:  Function "put_pixel_rows.56"
Noelle:  Disable "put_pixel_rows.56" as cold function
Noelle:  Function "jinit_write_bmp"
Noelle:  Disable "jinit_write_bmp" as cold function
Noelle:  Function "start_output_bmp"
Noelle:  Disable "start_output_bmp" as cold function
Noelle:  Function "finish_output_bmp"
Noelle:  Disable "finish_output_bmp" as cold function
Noelle:  Function "put_gray_rows.59"
Noelle:  Disable "put_gray_rows.59" as cold function
Noelle:  Function "put_pixel_rows.60"
Noelle:  Disable "put_pixel_rows.60" as cold function
Noelle:  Function "write_colormap"
Noelle:  Disable "write_colormap" as cold function
Noelle:  Function "read_color_map"
Noelle:  Disable "read_color_map" as cold function
Planner:    There are 18 loops in the program we are going to consider
Planner:  Filter out loops not worth considering
Planner:    Loop 152 has 5.794812e+02 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 124 has 8.900101e+01 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 226 has 1.000000e+00 number of iterations on average per loop invocation
Planner:      It is too low. The threshold is 12
Planner:    Loop 158 has 8.221001e+02 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 159 has 1.807380e+02 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 180 has 1.400000e+00 number of iterations on average per loop invocation
Planner:      It is too low. The threshold is 12
Planner:    Loop 182 has 6.936366e+01 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 188 has 2.653846e+01 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 154 has 5.691577e+02 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 160 has 1.111535e+03 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 215 has 9.680000e+02 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:    Loop 246 has 9.998581e-01 number of iterations on average per loop invocation
Planner:      It is too low. The threshold is 12
Planner:    Loop 214 has 7.823750e+02 number of instructions per loop invocation
Planner:      It is too low. The threshold is 2000
Planner:  There are 5 loop nesting trees in the program
Planner:    ID: 247 (1)
Planner:      Function: "ycc_rgb_convert"
Planner:      Loop: "  %47 = getelementptr inbounds i8, i8* %37, i64 %45, !noelle.pdg.inst.id !104"
Planner:      Loop nesting level: 2
Planner:      Hotness = 3.460585e+00 %
Planner:      Average instructions per invocation = 4.538598e+05 %
Planner:      Average iterations per invocation = 1.031502e+04 %
Planner:    
Planner:    ID: 181 (1)
Planner:      Function: "consume_data"
Planner:      Loop: "  %54 = load i32, i32* %7, align 8, !tbaa !198, !noelle.pdg.inst.id !104"
Planner:      Loop nesting level: 2
Planner:      Hotness = 5.913532e-01 %
Planner:      Average instructions per invocation = 8.854826e+04 %
Planner:      Average iterations per invocation = 1.013571e+03 %
Planner:    
Planner:    ID: 227 (1)
Planner:      Function: "h2v2_fancy_upsample"
Planner:      Loop: "  %63 = getelementptr inbounds i8, i8* %62, i64 1, !noelle.pdg.inst.id !114"
Planner:      Loop nesting level: 2
Planner:      Hotness = 1.258199e+00 %
Planner:      Average instructions per invocation = 1.649910e+05 %
Planner:      Average iterations per invocation = 5.155998e+03 %
Planner:    
Planner:    ID: 0 (1)
Planner:      Function: "main"
Planner:      Loop: "  %103 = load i8**, i8*** %92, align 8, !tbaa !2847, !noelle.pdg.inst.id !363"
Planner:      Loop nesting level: 1
Planner:      Hotness = 8.362432e+01 %
Planner:      Average instructions per invocation = 7.730941e+10 %
Planner:      Average iterations per invocation = 2.147484e+09 %
Planner:    
Planner:    ID: 228 (1)
Planner:      Function: "h2v2_fancy_upsample"
Planner:      Loop: "  %142 = getelementptr inbounds i8, i8* %141, i64 1, !noelle.pdg.inst.id !212"
Planner:      Loop nesting level: 2
Planner:      Hotness = 1.258199e+00 %
Planner:      Average instructions per invocation = 1.649910e+05 %
Planner:      Average iterations per invocation = 5.155998e+03 %
Planner:    
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
Planner: LoopSelector: Start
Planner: LoopSelector:   Order of loops and their maximum savings
Planner: LoopSelector:    Loop 247
Planner: LoopSelector:      Function: "ycc_rgb_convert"
Planner: LoopSelector:      Loop nesting level: 2
Planner: LoopSelector:      "  %47 = getelementptr inbounds i8, i8* %37, i64 %45, !noelle.pdg.inst.id !104"
Planner: LoopSelector:      Coverage: 3.460585e+00%
Planner: LoopSelector:      Whole-program savings = 3.460585e+00%
Planner: LoopSelector:      Loop savings = 1.000000e+02%
Planner: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [4 x [64 x i16]**], align 16, !noelle.pdg.inst.id !184
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [4 x [64 x i16]**], align 16, !noelle.pdg.inst.id !184
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
Planner: LoopSelector:  Loop 181 saves only 4.799131e-02 when parallelized. Skip it
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
Planner: LoopSelector:  Loop 227 saves only 1.218880e+00 when parallelized. Skip it
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca %struct.jpeg_error_mgr, align 8, !noelle.pdg.inst.id !2726
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca i32, align 4, !noelle.pdg.inst.id !2724
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %3 = alloca i32, align 4, !noelle.pdg.inst.id !2724 can be cloned
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.jpeg_decompress_struct, align 8, !noelle.pdg.inst.id !2725
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca %struct.jpeg_error_mgr, align 8, !noelle.pdg.inst.id !2726
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca i32, align 4, !noelle.pdg.inst.id !2724
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %3 = alloca i32, align 4, !noelle.pdg.inst.id !2724 can be cloned
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.jpeg_decompress_struct, align 8, !noelle.pdg.inst.id !2725
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
Planner: LoopSelector: Start
Planner: LoopSelector:   Order of loops and their maximum savings
Planner: LoopSelector:    Loop 0
Planner: LoopSelector:      Function: "main"
Planner: LoopSelector:      Loop nesting level: 1
Planner: LoopSelector:      "  %103 = load i8**, i8*** %92, align 8, !tbaa !2847, !noelle.pdg.inst.id !363"
Planner: LoopSelector:      Coverage: 8.362432e+01%
Planner: LoopSelector:      Whole-program savings = 2.090608e+01%
Planner: LoopSelector:      Loop savings = 2.500000e+01%
Planner: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
Planner: LoopSelector:  Loop 228 saves only 1.218880e+00 when parallelized. Skip it
Planner:   Maximum time saved = 2.436666e+01% (22526610560)
Planner:   Maximum time saved with DOALL only = 3.460585e+00% (3199257766)
Planner: Exit
noelle-rm-function -function-name=SIMONE_CAMPANONI_IS_GOING_TO_REMOVE_THIS_FUNCTION code_with_prototypes.bc -o code_to_parallelize.bc
NOELLE: DeadFunctions: Start
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/RemoveFunction.so -noelle-rm-function -function-name=SIMONE_CAMPANONI_IS_GOING_TO_REMOVE_THIS_FUNCTION code_with_prototypes.bc -o code_to_parallelize.bc
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/RemoveFunction.so -noelle-rm-function -function-name=SIMONE_CAMPANONI_IS_GOING_TO_REMOVE_THIS_FUNCTION code_with_prototypes.bc -o code_to_parallelize.bc
RemoveFunction: Start
RemoveFunction:   Check if function "SIMONE_CAMPANONI_IS_GOING_TO_REMOVE_THIS_FUNCTION" exists
RemoveFunction:     The function exists
RemoveFunction:   Remove the function
RemoveFunction: Exit
NOELLE: DeadFunctions: Exit
noelle-parallelizer-loop code_to_parallelize.bc -o parallelized_unoptimized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
noelle-parallel-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Parallelizer.so -parallelizer code_to_parallelize.bc -o parallelized_unoptimized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Parallelizer.so -parallelizer code_to_parallelize.bc -o parallelized_unoptimized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Parallelizer.so -parallelizer code_to_parallelize.bc -o parallelized_unoptimized.bc -noelle-verbose=3 -noelle-pdg-verbose=1 -noelle-min-hot=1 -noelle-max-cores=8 -noelle-inliner-avoid-hoist-to-main -noelle-disable-whilifier -noelle-disable-helix -noelle-disable-dswp -noelle-disable-doall
Parallelizer: Start
Parallelizer:  Analyzing the module code_to_parallelize.bc
Parallelizer:  Fetching the program loops
Noelle: Filter out cold code
Noelle:  Function "main"
Noelle:     Loop "  %103 = load i8**, i8*** %92, align 8, !tbaa !2849, !noelle.pdg.inst.id !365" (8.362432e+01%)
Noelle:  Function "decode_mcu_AC_refine"
Noelle:     Loop "  %41 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %40, !noelle.pdg.inst.id !509" (0.000000e+00%)
Noelle:  Disable loop "1" as cold code
Noelle:     Loop "  %87 = icmp slt i32 %85, 8, !noelle.pdg.inst.id !566" (8.269956e-01%)
Noelle:     Loop "  %172 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %167, !noelle.pdg.inst.id !690" (4.825221e-01%)
Noelle:     Loop "  %255 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %252, !noelle.pdg.inst.id !804" (3.419604e+00%)
Noelle:     Loop "  %312 = add nsw i64 %310, -1, !noelle.pdg.inst.id !897" (0.000000e+00%)
Noelle:  Disable loop "5" as cold code
Noelle:     Loop "  %322 = add nsw i64 %321, -1, !noelle.pdg.inst.id !917" (0.000000e+00%)
Noelle:  Disable loop "6" as cold code
Noelle:  Function "ycc_rgb_convert"
Noelle:     Loop "  %34 = load i8**, i8*** %1, align 8, !tbaa !90, !noelle.pdg.inst.id !91" (3.460737e+00%)
Noelle:     Loop "  %47 = getelementptr inbounds i8, i8* %37, i64 %45, !noelle.pdg.inst.id !106" (3.460585e+00%)
Noelle:  Function "jpeg_idct_islow"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8, !noelle.pdg.inst.id !249" (1.444324e+00%)
Noelle:     Loop "  %177 = getelementptr inbounds i8*, i8** %3, i64 %175, !noelle.pdg.inst.id !412" (1.787002e+00%)
Noelle:  Function "h2v2_fancy_upsample"
Noelle:     Loop "  %13 = getelementptr inbounds i8*, i8** %2, i64 %11, !noelle.pdg.inst.id !57" (2.517421e+00%)
Noelle:     Loop "  %63 = getelementptr inbounds i8, i8* %62, i64 1, !noelle.pdg.inst.id !116" (1.258199e+00%)
Noelle:     Loop "  %142 = getelementptr inbounds i8, i8* %141, i64 1, !noelle.pdg.inst.id !214" (1.258199e+00%)
Noelle:  Function "decode_mcu_AC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %6, i64 0, i32 2, i32 1, i64 %36, !noelle.pdg.inst.id !273" (0.000000e+00%)
Noelle:  Disable loop "14" as cold code
Noelle:     Loop "  %79 = icmp slt i32 %76, 8, !noelle.pdg.inst.id !342" (1.456225e+00%)
Noelle:  Function "jpeg_fill_bit_buffer"
Noelle:     Loop "  %18 = load i32, i32* %11, align 8, !tbaa !214, !noelle.pdg.inst.id !64" (4.586948e-01%)
Noelle:     Loop "  %47 = icmp eq i64 %46, 0, !noelle.pdg.inst.id !256" (2.035310e-03%)
Noelle:  Disable loop "17" as cold code
Noelle:  Function "consume_data"
Noelle:     Loop "  %15 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %14, !noelle.pdg.inst.id !210" (1.555093e-04%)
Noelle:  Disable loop "18" as cold code
Noelle:     Loop "  %52 = icmp ult i32 %50, %49, !noelle.pdg.inst.id !257" (5.914686e-01%)
Noelle:     Loop "  %54 = load i32, i32* %7, align 8, !tbaa !200, !noelle.pdg.inst.id !106" (5.913532e-01%)
Noelle:     Loop "  %60 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %58, !noelle.pdg.inst.id !273" (4.695188e-01%)
Noelle:     Loop "  %129 = add nsw i64 %127, %51, !noelle.pdg.inst.id !373" (7.355448e-08%)
Noelle:  Disable loop "22" as cold code
Noelle:     Loop "  %135 = add i64 %134, %133, !noelle.pdg.inst.id !380" (4.975744e-08%)
Noelle:  Disable loop "23" as cold code
Noelle:     Loop "  %158 = getelementptr inbounds [64 x i16], [64 x i16]* %156, i64 1, !noelle.pdg.inst.id !407" (2.379704e-08%)
Noelle:  Disable loop "24" as cold code
Noelle:     Loop "  %101 = add nsw i64 %99, %51, !noelle.pdg.inst.id !337" (4.975744e-08%)
Noelle:  Disable loop "25" as cold code
Noelle:     Loop "  %107 = add i64 %106, %105, !noelle.pdg.inst.id !344" (4.975744e-08%)
Noelle:  Disable loop "26" as cold code
Noelle:     Loop "  %83 = sext i32 %82 to i64, !noelle.pdg.inst.id !303" (2.122987e-01%)
Noelle:     Loop "  %91 = getelementptr inbounds [64 x i16], [64 x i16]* %89, i64 1, !noelle.pdg.inst.id !312" (9.968811e-02%)
Noelle:  Disable loop "28" as cold code
Noelle:  Function "decode_mcu_DC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %36, !noelle.pdg.inst.id !432" (0.000000e+00%)
Noelle:  Disable loop "29" as cold code
Noelle:     Loop "  %72 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %69, !noelle.pdg.inst.id !479" (1.782945e-01%)
Noelle:  Function "decode_mcu_DC_refine"
Noelle:  Disable "decode_mcu_DC_refine" as cold function
Noelle:  Function "decompress_data"
Noelle:  Disable "decompress_data" as cold function
Noelle:  Function "jpeg_huff_decode"
Noelle:  Disable "jpeg_huff_decode" as cold function
Noelle:  Function "sep_upsample"
Noelle:  Disable "sep_upsample" as cold function
Noelle:  Function "access_virt_barray"
Noelle:  Disable "access_virt_barray" as cold function
Noelle:  Function "process_data_context_main"
Noelle:  Disable "process_data_context_main" as cold function
Noelle:  Function "jpeg_start_decompress"
Noelle:  Disable "jpeg_start_decompress" as cold function
Noelle:  Function "fill_input_buffer"
Noelle:  Disable "fill_input_buffer" as cold function
Noelle:  Function "put_pixel_rows"
Noelle:  Disable "put_pixel_rows" as cold function
Noelle:  Function "start_pass_phuff_decoder"
Noelle:  Disable "start_pass_phuff_decoder" as cold function
Noelle:  Function "jpeg_make_d_derived_tbl"
Noelle:  Disable "jpeg_make_d_derived_tbl" as cold function
Noelle:  Function "read_markers"
Noelle:  Disable "read_markers" as cold function
Noelle:  Function "realize_virt_arrays"
Noelle:  Disable "realize_virt_arrays" as cold function
Noelle:  Function "jinit_master_decompress"
Noelle:  Disable "jinit_master_decompress" as cold function
Noelle:  Function "fullsize_upsample"
Noelle:  Disable "fullsize_upsample" as cold function
Noelle:  Function "jinit_color_deconverter"
Noelle:  Disable "jinit_color_deconverter" as cold function
Noelle:  Function "parse_switches"
Noelle:  Disable "parse_switches" as cold function
Noelle:  Function "keymatch"
Noelle:  Disable "keymatch" as cold function
Noelle:  Function "jzero_far"
Noelle:  Disable "jzero_far" as cold function
Noelle:  Function "alloc_small"
Noelle:  Disable "alloc_small" as cold function
Noelle:  Function "consume_markers"
Noelle:  Disable "consume_markers" as cold function
Noelle:  Function "start_input_pass"
Noelle:  Disable "start_input_pass" as cold function
Noelle:  Function "alloc_sarray"
Noelle:  Disable "alloc_sarray" as cold function
Noelle:  Function "next_marker"
Noelle:  Disable "next_marker" as cold function
Noelle:  Function "start_pass_main"
Noelle:  Disable "start_pass_main" as cold function
Noelle:  Function "emit_message"
Noelle:  Disable "emit_message" as cold function
Noelle:  Function "start_pass"
Noelle:  Disable "start_pass" as cold function
Noelle:  Function "jpeg_calc_output_dimensions"
Noelle:  Disable "jpeg_calc_output_dimensions" as cold function
Noelle:  Function "get_sof"
Noelle:  Disable "get_sof" as cold function
Noelle:  Function "free_pool"
Noelle:  Disable "free_pool" as cold function
Noelle:  Function "get_app0"
Noelle:  Disable "get_app0" as cold function
Noelle:  Function "start_output_pass"
Noelle:  Disable "start_output_pass" as cold function
Noelle:  Function "jinit_write_ppm"
Noelle:  Disable "jinit_write_ppm" as cold function
Noelle:  Function "self_destruct"
Noelle:  Disable "self_destruct" as cold function
Noelle:  Function "jinit_d_main_controller"
Noelle:  Disable "jinit_d_main_controller" as cold function
Noelle:  Function "start_input_pass.105"
Noelle:  Disable "start_input_pass.105" as cold function
Noelle:  Function "request_virt_barray"
Noelle:  Disable "request_virt_barray" as cold function
Noelle:  Function "jinit_upsampler"
Noelle:  Disable "jinit_upsampler" as cold function
Noelle:  Function "alloc_large"
Noelle:  Disable "alloc_large" as cold function
Noelle:  Function "jpeg_CreateDecompress"
Noelle:  Disable "jpeg_CreateDecompress" as cold function
Noelle:  Function "jinit_d_coef_controller"
Noelle:  Disable "jinit_d_coef_controller" as cold function
Noelle:  Function "jdiv_round_up"
Noelle:  Disable "jdiv_round_up" as cold function
Noelle:  Function "jpeg_read_header"
Noelle:  Disable "jpeg_read_header" as cold function
Noelle:  Function "jinit_marker_reader"
Noelle:  Disable "jinit_marker_reader" as cold function
Noelle:  Function "jinit_inverse_dct"
Noelle:  Disable "jinit_inverse_dct" as cold function
Noelle:  Function "jpeg_consume_input"
Noelle:  Disable "jpeg_consume_input" as cold function
Noelle:  Function "prepare_for_output_pass"
Noelle:  Disable "prepare_for_output_pass" as cold function
Noelle:  Function "jinit_memory_mgr"
Noelle:  Disable "jinit_memory_mgr" as cold function
Noelle:  Function "jinit_phuff_decoder"
Noelle:  Disable "jinit_phuff_decoder" as cold function
Noelle:  Function "jpeg_finish_decompress"
Noelle:  Disable "jpeg_finish_decompress" as cold function
Noelle:  Function "finish_input_pass"
Noelle:  Disable "finish_input_pass" as cold function
Noelle:  Function "jpeg_alloc_huff_table"
Noelle:  Disable "jpeg_alloc_huff_table" as cold function
Noelle:  Function "jround_up"
Noelle:  Disable "jround_up" as cold function
Noelle:  Function "jpeg_stdio_src"
Noelle:  Disable "jpeg_stdio_src" as cold function
Noelle:  Function "output_pass_setup"
Noelle:  Disable "output_pass_setup" as cold function
Noelle:  Function "jinit_input_controller"
Noelle:  Disable "jinit_input_controller" as cold function
Noelle:  Function "reset_input_controller"
Noelle:  Disable "reset_input_controller" as cold function
Noelle:  Function "jpeg_std_error"
Noelle:  Disable "jpeg_std_error" as cold function
Noelle:  Function "start_pass_dpost"
Noelle:  Disable "start_pass_dpost" as cold function
Noelle:  Function "jinit_d_post_controller"
Noelle:  Disable "jinit_d_post_controller" as cold function
Noelle:  Function "jpeg_alloc_quant_table"
Noelle:  Disable "jpeg_alloc_quant_table" as cold function
Noelle:  Function "start_output_ppm"
Noelle:  Disable "start_output_ppm" as cold function
Noelle:  Function "jpeg_get_large"
Noelle:  Disable "jpeg_get_large" as cold function
Noelle:  Function "jpeg_destroy_decompress"
Noelle:  Disable "jpeg_destroy_decompress" as cold function
Noelle:  Function "jpeg_free_large"
Noelle:  Disable "jpeg_free_large" as cold function
Noelle:  Function "reset_marker_reader"
Noelle:  Disable "reset_marker_reader" as cold function
Noelle:  Function "finish_output_pass"
Noelle:  Disable "finish_output_pass" as cold function
Noelle:  Function "jpeg_destroy"
Noelle:  Disable "jpeg_destroy" as cold function
Noelle:  Function "start_pass_upsample"
Noelle:  Disable "start_pass_upsample" as cold function
Noelle:  Function "jpeg_get_small"
Noelle:  Disable "jpeg_get_small" as cold function
Noelle:  Function "jpeg_abort"
Noelle:  Disable "jpeg_abort" as cold function
Noelle:  Function "jpeg_free_small"
Noelle:  Disable "jpeg_free_small" as cold function
Noelle:  Function "finish_output_ppm"
Noelle:  Disable "finish_output_ppm" as cold function
Noelle:  Function "jpeg_set_marker_processor"
Noelle:  Disable "jpeg_set_marker_processor" as cold function
Noelle:  Function "reset_error_mgr"
Noelle:  Disable "reset_error_mgr" as cold function
Noelle:  Function "init_source"
Noelle:  Disable "init_source" as cold function
Noelle:  Function "term_source"
Noelle:  Disable "term_source" as cold function
Noelle:  Function "start_pass_dcolor"
Noelle:  Disable "start_pass_dcolor" as cold function
Noelle:  Function "jpeg_mem_available"
Noelle:  Disable "jpeg_mem_available" as cold function
Noelle:  Function "post_process_2pass"
Noelle:  Disable "post_process_2pass" as cold function
Noelle:  Function "skip_variable"
Noelle:  Disable "skip_variable" as cold function
Noelle:  Function "jpeg_has_multiple_scans"
Noelle:  Disable "jpeg_has_multiple_scans" as cold function
Noelle:  Function "read_restart_marker"
Noelle:  Disable "read_restart_marker" as cold function
Noelle:  Function "access_virt_sarray"
Noelle:  Disable "access_virt_sarray" as cold function
Noelle:  Function "jpeg_input_complete"
Noelle:  Disable "jpeg_input_complete" as cold function
Noelle:  Function "jpeg_mem_term"
Noelle:  Disable "jpeg_mem_term" as cold function
Noelle:  Function "jpeg_idct_ifast"
Noelle:  Disable "jpeg_idct_ifast" as cold function
Noelle:  Function "jpeg_idct_float"
Noelle:  Disable "jpeg_idct_float" as cold function
Noelle:  Function "error_exit"
Noelle:  Disable "error_exit" as cold function
Noelle:  Function "jpeg_mem_init"
Noelle:  Disable "jpeg_mem_init" as cold function
Noelle:  Function "jpeg_new_colormap"
Noelle:  Disable "jpeg_new_colormap" as cold function
Noelle:  Function "jpeg_finish_output"
Noelle:  Disable "jpeg_finish_output" as cold function
Noelle:  Function "jpeg_start_output"
Noelle:  Disable "jpeg_start_output" as cold function
Noelle:  Function "get_app14"
Noelle:  Disable "get_app14" as cold function
Noelle:  Function "jpeg_read_raw_data"
Noelle:  Disable "jpeg_read_raw_data" as cold function
Noelle:  Function "jpeg_read_scanlines"
Noelle:  Disable "jpeg_read_scanlines" as cold function
Noelle:  Function "post_process_1pass"
Noelle:  Disable "post_process_1pass" as cold function
Noelle:  Function "post_process_prepass"
Noelle:  Disable "post_process_prepass" as cold function
Noelle:  Function "alloc_barray"
Noelle:  Disable "alloc_barray" as cold function
Noelle:  Function "request_virt_sarray"
Noelle:  Disable "request_virt_sarray" as cold function
Noelle:  Function "output_message"
Noelle:  Disable "output_message" as cold function
Noelle:  Function "jpeg_resync_to_restart"
Noelle:  Disable "jpeg_resync_to_restart" as cold function
Noelle:  Function "finish_pass1"
Noelle:  Disable "finish_pass1" as cold function
Noelle:  Function "prescan_quantize"
Noelle:  Disable "prescan_quantize" as cold function
Noelle:  Function "init_error_limit"
Noelle:  Disable "init_error_limit" as cold function
Noelle:  Function "new_color_map_2_quant"
Noelle:  Disable "new_color_map_2_quant" as cold function
Noelle:  Function "start_pass_2_quant"
Noelle:  Disable "start_pass_2_quant" as cold function
Noelle:  Function "h2v1_merged_upsample"
Noelle:  Disable "h2v1_merged_upsample" as cold function
Noelle:  Function "decompress_onepass"
Noelle:  Disable "decompress_onepass" as cold function
Noelle:  Function "merged_1v_upsample"
Noelle:  Disable "merged_1v_upsample" as cold function
Noelle:  Function "h2v2_merged_upsample"
Noelle:  Disable "h2v2_merged_upsample" as cold function
Noelle:  Function "read_color_map"
Noelle:  Disable "read_color_map" as cold function
Noelle:  Function "merged_2v_upsample"
Noelle:  Disable "merged_2v_upsample" as cold function
Noelle:  Function "jpeg_abort_decompress"
Noelle:  Disable "jpeg_abort_decompress" as cold function
Noelle:  Function "start_pass_merged_upsample"
Noelle:  Disable "start_pass_merged_upsample" as cold function
Noelle:  Function "ycck_cmyk_convert"
Noelle:  Disable "ycck_cmyk_convert" as cold function
Noelle:  Function "null_convert"
Noelle:  Disable "null_convert" as cold function
Noelle:  Function "format_message"
Noelle:  Disable "format_message" as cold function
Noelle:  Function "grayscale_convert"
Noelle:  Disable "grayscale_convert" as cold function
Noelle:  Function "jpeg_open_backing_store"
Noelle:  Disable "jpeg_open_backing_store" as cold function
Noelle:  Function "read_pbm_integer"
Noelle:  Disable "read_pbm_integer" as cold function
Noelle:  Function "quantize_ord_dither"
Noelle:  Disable "quantize_ord_dither" as cold function
Noelle:  Function "write_colormap"
Noelle:  Disable "write_colormap" as cold function
Noelle:  Function "skip_input_data"
Noelle:  Disable "skip_input_data" as cold function
Noelle:  Function "color_quantize3"
Noelle:  Disable "color_quantize3" as cold function
Noelle:  Function "color_quantize"
Noelle:  Disable "color_quantize" as cold function
Noelle:  Function "quantize3_ord_dither"
Noelle:  Disable "quantize3_ord_dither" as cold function
Noelle:  Function "put_pixel_rows.60"
Noelle:  Disable "put_pixel_rows.60" as cold function
Noelle:  Function "quantize_fs_dither"
Noelle:  Disable "quantize_fs_dither" as cold function
Noelle:  Function "start_output_tga"
Noelle:  Disable "start_output_tga" as cold function
Noelle:  Function "finish_output_tga"
Noelle:  Disable "finish_output_tga" as cold function
Noelle:  Function "put_demapped_gray.55"
Noelle:  Disable "put_demapped_gray.55" as cold function
Noelle:  Function "put_gray_rows"
Noelle:  Disable "put_gray_rows" as cold function
Noelle:  Function "put_pixel_rows.56"
Noelle:  Disable "put_pixel_rows.56" as cold function
Noelle:  Function "COM_handler"
Noelle:  Disable "COM_handler" as cold function
Noelle:  Function "copy_pixel_rows"
Noelle:  Disable "copy_pixel_rows" as cold function
Noelle:  Function "put_demapped_gray"
Noelle:  Disable "put_demapped_gray" as cold function
Noelle:  Function "put_demapped_rgb"
Noelle:  Disable "put_demapped_rgb" as cold function
Noelle:  Function "start_output_gif"
Noelle:  Disable "start_output_gif" as cold function
Noelle:  Function "put_pixel_rows.52"
Noelle:  Disable "put_pixel_rows.52" as cold function
Noelle:  Function "finish_output_gif"
Noelle:  Disable "finish_output_gif" as cold function
Noelle:  Function "emit_header"
Noelle:  Disable "emit_header" as cold function
Noelle:  Function "start_output_bmp"
Noelle:  Disable "start_output_bmp" as cold function
Noelle:  Function "finish_output_bmp"
Noelle:  Disable "finish_output_bmp" as cold function
Noelle:  Function "put_gray_rows.59"
Noelle:  Disable "put_gray_rows.59" as cold function
Noelle:  Function "update_box"
Noelle:  Disable "update_box" as cold function
Noelle:  Function "jinit_merged_upsampler"
Noelle:  Disable "jinit_merged_upsampler" as cold function
Noelle:  Function "jinit_huff_decoder"
Noelle:  Disable "jinit_huff_decoder" as cold function
Noelle:  Function "process_data_simple_main"
Noelle:  Disable "process_data_simple_main" as cold function
Noelle:  Function "process_data_crank_post"
Noelle:  Disable "process_data_crank_post" as cold function
Noelle:  Function "dummy_consume_data"
Noelle:  Disable "dummy_consume_data" as cold function
Noelle:  Function "pass2_fs_dither"
Noelle:  Disable "pass2_fs_dither" as cold function
Noelle:  Function "pass2_no_dither"
Noelle:  Disable "pass2_no_dither" as cold function
Noelle:  Function "finish_pass2"
Noelle:  Disable "finish_pass2" as cold function
Noelle:  Function "fill_inverse_cmap"
Noelle:  Disable "fill_inverse_cmap" as cold function
Noelle:  Function "jinit_2pass_quantizer"
Noelle:  Disable "jinit_2pass_quantizer" as cold function
Noelle:  Function "start_pass_1_quant"
Noelle:  Disable "start_pass_1_quant" as cold function
Noelle:  Function "finish_pass_1_quant"
Noelle:  Disable "finish_pass_1_quant" as cold function
Noelle:  Function "new_color_map_1_quant"
Noelle:  Disable "new_color_map_1_quant" as cold function
Noelle:  Function "create_colorindex"
Noelle:  Disable "create_colorindex" as cold function
Noelle:  Function "decompress_smooth_data"
Noelle:  Disable "decompress_smooth_data" as cold function
Noelle:  Function "jcopy_block_row"
Noelle:  Disable "jcopy_block_row" as cold function
Noelle:  Function "start_pass_huff_decoder"
Noelle:  Disable "start_pass_huff_decoder" as cold function
Noelle:  Function "decode_mcu"
Noelle:  Disable "decode_mcu" as cold function
Noelle:  Function "jpeg_idct_4x4"
Noelle:  Disable "jpeg_idct_4x4" as cold function
Noelle:  Function "jpeg_idct_2x2"
Noelle:  Disable "jpeg_idct_2x2" as cold function
Noelle:  Function "usage"
Noelle:  Disable "usage" as cold function
Noelle:  Function "read_stdin"
Noelle:  Disable "read_stdin" as cold function
Noelle:  Function "write_stdout"
Noelle:  Disable "write_stdout" as cold function
Noelle:  Function "jinit_write_bmp"
Noelle:  Disable "jinit_write_bmp" as cold function
Noelle:  Function "jinit_write_gif"
Noelle:  Disable "jinit_write_gif" as cold function
Noelle:  Function "jinit_write_targa"
Noelle:  Disable "jinit_write_targa" as cold function
Noelle:  Function "jpeg_idct_1x1"
Noelle:  Disable "jpeg_idct_1x1" as cold function
Noelle:  Function "noop_upsample"
Noelle:  Disable "noop_upsample" as cold function
Noelle:  Function "h2v1_fancy_upsample"
Noelle:  Disable "h2v1_fancy_upsample" as cold function
Noelle:  Function "h2v1_upsample"
Noelle:  Disable "h2v1_upsample" as cold function
Noelle:  Function "h2v2_upsample"
Noelle:  Disable "h2v2_upsample" as cold function
Noelle:  Function "int_upsample"
Noelle:  Disable "int_upsample" as cold function
Noelle:  Function "jcopy_sample_rows"
Noelle:  Disable "jcopy_sample_rows" as cold function
Noelle:  Function "jinit_1pass_quantizer"
Noelle:  Disable "jinit_1pass_quantizer" as cold function
Parallelizer:    There are 18 loops in the program we are going to consider
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca %struct.jpeg_error_mgr, align 8, !noelle.pdg.inst.id !2728
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca i32, align 4, !noelle.pdg.inst.id !2726
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %3 = alloca i32, align 4, !noelle.pdg.inst.id !2726 can be cloned
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.jpeg_decompress_struct, align 8, !noelle.pdg.inst.id !2727
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca %struct.jpeg_error_mgr, align 8, !noelle.pdg.inst.id !2728
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca i32, align 4, !noelle.pdg.inst.id !2726
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %3 = alloca i32, align 4, !noelle.pdg.inst.id !2726 can be cloned
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.jpeg_decompress_struct, align 8, !noelle.pdg.inst.id !2727
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
Parallelizer: parallelizerLoop: Start
Parallelizer: parallelizerLoop:   Function = "ycc_rgb_convert"
Parallelizer: parallelizerLoop:   Loop 247 = "  %47 = getelementptr inbounds i8, i8* %37, i64 %45, !noelle.pdg.inst.id !106"
Parallelizer: parallelizerLoop:   Nesting level = 2
Parallelizer: parallelizerLoop:   Number of threads to extract = 8
Parallelizer: parallelizerLoop:   Environment: live-in and live-out values
Parallelizer: parallelizerLoop:   Environment:   Live-in 0 =   %12 = load i8*, i8** %11, align 8, !tbaa !53, !noelle.pdg.inst.id !54
Parallelizer: parallelizerLoop:   Environment:   Live-in 1 =   %14 = load i32*, i32** %13, align 8, !tbaa !56, !noelle.pdg.inst.id !59
Parallelizer: parallelizerLoop:   Environment:   Live-in 2 =   %16 = load i32*, i32** %15, align 8, !tbaa !61, !noelle.pdg.inst.id !62
Parallelizer: parallelizerLoop:   Environment:   Live-in 3 =   %18 = load i64*, i64** %17, align 8, !tbaa !64, !noelle.pdg.inst.id !65
Parallelizer: parallelizerLoop:   Environment:   Live-in 4 =   %20 = load i64*, i64** %19, align 8, !tbaa !67, !noelle.pdg.inst.id !68
Parallelizer: parallelizerLoop:   Environment:   Live-in 5 =   %26 = zext i32 %10 to i64, !noelle.pdg.inst.id !76
Parallelizer: parallelizerLoop:   Environment:   Live-in 6 =   %37 = load i8*, i8** %36, align 8, !tbaa !90, !noelle.pdg.inst.id !94
Parallelizer: parallelizerLoop:   Environment:   Live-in 7 =   %40 = load i8*, i8** %39, align 8, !tbaa !90, !noelle.pdg.inst.id !97
Parallelizer: parallelizerLoop:   Environment:   Live-in 8 =   %43 = load i8*, i8** %42, align 8, !tbaa !90, !noelle.pdg.inst.id !100
Parallelizer: parallelizerLoop:   Environment:   Live-in 9 =   %44 = load i8*, i8** %33, align 8, !tbaa !90, !noelle.pdg.inst.id !101
Parallelizer: parallelizerLoop:   The loop has not been parallelized
Parallelizer: parallelizerLoop: Exit
Parallelizer: parallelizerLoop: Start
Parallelizer: parallelizerLoop:   Function = "main"
Parallelizer: parallelizerLoop:   Loop 0 = "  %103 = load i8**, i8*** %92, align 8, !tbaa !2849, !noelle.pdg.inst.id !365"
Parallelizer: parallelizerLoop:   Nesting level = 1
Parallelizer: parallelizerLoop:   Number of threads to extract = 8
Parallelizer: parallelizerLoop:   Environment: live-in and live-out values
Parallelizer: parallelizerLoop:   Environment:   Live-in 0 =   %4 = alloca %struct.jpeg_decompress_struct, align 8, !noelle.pdg.inst.id !2727
Parallelizer: parallelizerLoop:   Environment:   Live-in 1 =   %15 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 0, !noelle.pdg.inst.id !2748
Parallelizer: parallelizerLoop:   Environment:   Live-in 2 =   %80 = phi %struct.djpeg_dest_struct* [ null, %NewDefault ], [ %73, %72 ], [ %71, %70 ], [ %69, %68 ], [ %67, %66 ], [ %65, %64 ], !noelle.pdg.inst.id !2822
Parallelizer: parallelizerLoop:   Environment:   Live-in 3 =   %82 = bitcast %struct.jpeg_decompress_struct* %4 to %struct.jpeg_decompress_struct.188*, !noelle.pdg.inst.id !2826
Parallelizer: parallelizerLoop:   Environment:   Live-in 4 =   %86 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 33, !noelle.pdg.inst.id !2830
Parallelizer: parallelizerLoop:   Environment:   Live-in 5 =   %87 = load i32, i32* %86, align 8, !tbaa !2831, !noelle.pdg.inst.id !361
Parallelizer: parallelizerLoop:   Environment:   Live-in 6 =   %88 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 27, !noelle.pdg.inst.id !2832
Parallelizer: parallelizerLoop:   Environment:   Live-in 7 =   %89 = load i32, i32* %88, align 4, !tbaa !2833, !noelle.pdg.inst.id !363
Parallelizer: parallelizerLoop:   Environment:   Live-in 8 =   %92 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %80, i64 0, i32 4, !noelle.pdg.inst.id !2837
Parallelizer: parallelizerLoop:   Environment:   Live-in 9 =   %93 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %80, i64 0, i32 5, !noelle.pdg.inst.id !2838
Parallelizer: parallelizerLoop:   Environment:   Live-in 10 =   %94 = getelementptr inbounds %struct.djpeg_dest_struct, %struct.djpeg_dest_struct* %80, i64 0, i32 1, !noelle.pdg.inst.id !2839
Parallelizer: parallelizerLoop:   Environment:   Live-in 11 =   %95 = bitcast i32* %3 to i8*, !noelle.pdg.inst.id !2840
Parallelizer: parallelizerLoop:   Environment:   Live-in 12 =   %96 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 4, !noelle.pdg.inst.id !2841
Parallelizer: parallelizerLoop:   Environment:   Live-in 13 =   %97 = bitcast %struct.jpeg_decompress_struct* %4 to %struct.jpeg_common_struct*, !noelle.pdg.inst.id !2842
Parallelizer: parallelizerLoop:   Environment:   Live-in 14 =   %98 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 2, !noelle.pdg.inst.id !2843
Parallelizer: parallelizerLoop:   Environment:   Live-in 15 =   %100 = bitcast %struct.jpeg_d_main_controller** %99 to %struct.jpeg_d_main_controller.178**, !noelle.pdg.inst.id !2845
Parallelizer: parallelizerLoop:   The loop has not been parallelized
Parallelizer: parallelizerLoop: Exit
Parallelizer: Exit
noelle-meta-clean parallelized_unoptimized.bc parallelized_unoptimized.bc
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CleanMetadata.so -CleanMetadata -clean-loop-metadata=true -clean-prof-metadata=true -clean-pdg-metadata=true parallelized_unoptimized.bc -o parallelized_unoptimized.bc
noelle/core/Clean Loop Metadata
noelle/core/Clean PDG Metadata
noelle/core/Clean profiler metadata
opt --strip-named-metadata parallelized_unoptimized.bc -o parallelized_unoptimized.bc
clang -O3 -c -emit-llvm parallelized_unoptimized.bc -o baseline_parallelized.bc
clang -O3 -c -emit-llvm baseline_parallelized.bc -o baseline_parallelized.bc
cp baseline_parallelized.bc djpeg.bc
make[1]: Leaving directory '/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/all_benchmark_suites/build/MiBench/benchmarks/djpeg'
