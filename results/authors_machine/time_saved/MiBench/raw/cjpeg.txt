noelle-parallel-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TimeSaved.so -TimeSaved tmp.bc
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TimeSaved.so -TimeSaved tmp.bc
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TimeSaved.so -TimeSaved tmp.bc
TimeSaved: Start
TimeSaved:  Fetching the program loops
Noelle:  Function "main"
Noelle:     Loop "  %118 = load i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)*, i32 (%struct.jpeg_compress_struct*, %struct.cjpeg_source_struct*)** %108, align 8, !tbaa !3536, !noelle.pdg.inst.id !166" (7.179032e+01%)
Noelle:  Function "encode_mcu_AC_refine"
Noelle:     Loop "  %40 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %38, !noelle.pdg.inst.id !6489" (5.986135e+00%)
Noelle:     Loop "  %73 = getelementptr inbounds [64 x i32], [64 x i32]* %3, i64 0, i64 %69, !noelle.pdg.inst.id !6529" (6.434918e+00%)
Noelle:     Loop "  tail call fastcc void @emit_eobrun(%struct.phuff_entropy_encoder* %6), !noelle.pdg.inst.id !6546" (9.731326e-03%)
Noelle:     Loop "  %129 = lshr i64 %127, 16, !noelle.pdg.inst.id !6599" (3.310658e-04%)
Noelle:     Loop "  %199 = icmp eq i32 %196, 0, !noelle.pdg.inst.id !6676" (3.328221e-03%)
Noelle:     Loop "  %212 = lshr i64 %210, 16, !noelle.pdg.inst.id !6695" (2.726549e-04%)
Noelle:     Loop "  %340 = lshr i64 %338, 16, !noelle.pdg.inst.id !6828" (1.702085e-02%)
Noelle:     Loop "  %416 = lshr i64 %414, 16, !noelle.pdg.inst.id !6907" (5.348385e-03%)
Noelle:     Loop "  %487 = icmp eq i32 %484, 0, !noelle.pdg.inst.id !6977" (2.083875e-01%)
Noelle:     Loop "  %500 = lshr i64 %498, 16, !noelle.pdg.inst.id !6996" (1.714804e-02%)
Noelle:  Function "encode_mcu_AC_first"
Noelle:     Loop "  %42 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %40, !noelle.pdg.inst.id !2767" (4.792309e+00%)
Noelle:     Loop "  %74 = load i32, i32* %33, align 8, !tbaa !2812, !noelle.pdg.inst.id !278" (8.888417e-04%)
Noelle:     Loop "  %118 = lshr i64 %116, 16, !noelle.pdg.inst.id !2864" (2.747108e-04%)
Noelle:     Loop "  %180 = ashr i32 %179, 1, !noelle.pdg.inst.id !2933" (2.103081e-01%)
Noelle:     Loop "  %233 = lshr i64 %231, 16, !noelle.pdg.inst.id !2986" (9.506832e-02%)
Noelle:     Loop "  %306 = lshr i64 %304, 16, !noelle.pdg.inst.id !3066" (4.571888e-02%)
Noelle:  Function "rgb_ycc_convert"
Noelle:     Loop "  %26 = load i8**, i8*** %2, align 8, !tbaa !76, !noelle.pdg.inst.id !77" (3.935545e+00%)
Noelle:     Loop "  %39 = load i8, i8* %38, align 1, !tbaa !92, !noelle.pdg.inst.id !93" (3.935433e+00%)
Noelle:  Function "forward_DCT"
Noelle:     Loop "  %28 = zext i32 %27 to i64, !noelle.pdg.inst.id !216" (2.486168e+00%)
Noelle:     Loop "  %31 = getelementptr inbounds i8*, i8** %21, i64 %29, !noelle.pdg.inst.id !221" (6.072169e-01%)
Noelle:     Loop "  %77 = getelementptr inbounds i32, i32* %18, i64 %76, !noelle.pdg.inst.id !265" (1.864010e+00%)
Noelle:  Function "jpeg_fdct_islow"
Noelle:     Loop "  %4 = load i32, i32* %3, align 4, !tbaa !34, !noelle.pdg.inst.id !38" (1.079100e+00%)
Noelle:     Loop "  %95 = load i32, i32* %94, align 4, !tbaa !34, !noelle.pdg.inst.id !142" (1.100496e+00%)
Noelle:  Function "compress_output"
Noelle:     Loop "  %16 = getelementptr inbounds %struct.jpeg_compress_struct.363, %struct.jpeg_compress_struct.363* %0, i64 0, i32 42, i64 %15, !noelle.pdg.inst.id !155" (2.039395e-04%)
Noelle:     Loop "  %54 = icmp ult i32 %52, %51, !noelle.pdg.inst.id !204" (8.181533e-01%)
Noelle:     Loop "  %56 = load i32, i32* %8, align 4, !tbaa !145, !noelle.pdg.inst.id !88" (8.179893e-01%)
Noelle:     Loop "  %62 = getelementptr inbounds %struct.jpeg_compress_struct.363, %struct.jpeg_compress_struct.363* %0, i64 0, i32 42, i64 %60, !noelle.pdg.inst.id !220" (6.427619e-01%)
Noelle:     Loop "  %131 = add nsw i64 %129, %53, !noelle.pdg.inst.id !320" (8.118708e-08%)
Noelle:     Loop "  %137 = add i64 %136, %135, !noelle.pdg.inst.id !327" (5.492067e-08%)
Noelle:     Loop "  %160 = getelementptr inbounds [64 x i16], [64 x i16]* %158, i64 1, !noelle.pdg.inst.id !354" (2.626641e-08%)
Noelle:     Loop "  %103 = add nsw i64 %101, %53, !noelle.pdg.inst.id !284" (5.492067e-08%)
Noelle:     Loop "  %109 = add i64 %108, %107, !noelle.pdg.inst.id !291" (5.492067e-08%)
Noelle:     Loop "  %85 = sext i32 %84 to i64, !noelle.pdg.inst.id !250" (2.864014e-01%)
Noelle:     Loop "  %93 = getelementptr inbounds [64 x i16], [64 x i16]* %91, i64 1, !noelle.pdg.inst.id !259" (1.326729e-01%)
Noelle:  Function "emit_eobrun"
Noelle:     Loop "  %7 = ashr i32 %5, 1, !noelle.pdg.inst.id !1441" (3.276667e-02%)
Noelle:     Loop "  %68 = lshr i64 %66, 16, !noelle.pdg.inst.id !1518" (1.749602e-02%)
Noelle:     Loop "  %154 = lshr i64 %152, 16, !noelle.pdg.inst.id !1614" (1.792058e-03%)
Noelle:     Loop "  %231 = icmp eq i32 %228, 0, !noelle.pdg.inst.id !1691" (5.123379e-01%)
Noelle:     Loop "  %246 = lshr i64 %244, 16, !noelle.pdg.inst.id !1710" (4.479996e-02%)
Noelle:  Function "h2v2_downsample"
Noelle:     Loop "  %31 = getelementptr inbounds i8*, i8** %2, i64 %29, !noelle.pdg.inst.id !343" (0.000000e+00%)
Noelle:     Loop "  %61 = getelementptr inbounds i8*, i8** %2, i64 %59, !noelle.pdg.inst.id !376" (1.402865e-04%)
Noelle:     Loop "  %75 = or i64 %74, 1, !noelle.pdg.inst.id !400" (6.950073e-01%)
Noelle:     Loop "  %86 = load i8, i8* %84, align 1, !tbaa !347, !noelle.pdg.inst.id !114" (6.949175e-01%)
Noelle:  Function "encode_mcu_DC_first"
Noelle:     Loop "  %34 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %33, !noelle.pdg.inst.id !1566" (2.132140e-01%)
Noelle:     Loop "  %105 = lshr i64 %103, 16, !noelle.pdg.inst.id !1648" (9.250578e-03%)
Noelle:     Loop "  %183 = lshr i64 %181, 16, !noelle.pdg.inst.id !1734" (9.316102e-03%)
Noelle:  Function "encode_mcu_DC_refine"
Noelle:     Loop "  %36 = load i32, i32* %30, align 8, !tbaa !370, !noelle.pdg.inst.id !93" (5.445378e-02%)
Noelle:     Loop "  %57 = lshr i64 %55, 16, !noelle.pdg.inst.id !398" (3.739181e-03%)
Noelle:  Function "compress_first_pass"
Noelle:     Loop "  %21 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %15, align 8, !tbaa !2126, !noelle.pdg.inst.id !1262" (7.514103e-05%)
Noelle:     Loop "  %198 = getelementptr inbounds [64 x i16]*, [64 x i16]** %30, i64 %197, !noelle.pdg.inst.id !2336" (1.860378e-05%)
Noelle:     Loop "  %147 = getelementptr inbounds [64 x i16]*, [64 x i16]** %30, i64 %146, !noelle.pdg.inst.id !2278" (0.000000e+00%)
Noelle:     Loop "  %162 = getelementptr inbounds [64 x i16], [64 x i16]* %155, i64 %160, !noelle.pdg.inst.id !2290" (0.000000e+00%)
Noelle:     Loop "  %190 = getelementptr inbounds [64 x i16], [64 x i16]* %155, i64 %188, !noelle.pdg.inst.id !2323" (0.000000e+00%)
Noelle:     Loop "  %67 = getelementptr inbounds [64 x i16]*, [64 x i16]** %30, i64 %66, !noelle.pdg.inst.id !2186" (0.000000e+00%)
Noelle:     Loop "  %82 = getelementptr inbounds [64 x i16], [64 x i16]* %75, i64 %80, !noelle.pdg.inst.id !2202" (0.000000e+00%)
Noelle:     Loop "  %124 = getelementptr inbounds [64 x i16]*, [64 x i16]** %30, i64 %123, !noelle.pdg.inst.id !2251" (0.000000e+00%)
Noelle:     Loop "  %139 = getelementptr inbounds [64 x i16], [64 x i16]* %132, i64 %137, !noelle.pdg.inst.id !2263" (0.000000e+00%)
Noelle:     Loop "  %111 = getelementptr inbounds [64 x i16]*, [64 x i16]** %30, i64 %110, !noelle.pdg.inst.id !2239" (0.000000e+00%)
Noelle:     Loop "  %344 = getelementptr inbounds [64 x i16]*, [64 x i16]** %30, i64 %343, !noelle.pdg.inst.id !2533" (0.000000e+00%)
Noelle:     Loop "  %298 = getelementptr inbounds [64 x i16]*, [64 x i16]** %30, i64 %297, !noelle.pdg.inst.id !2474" (0.000000e+00%)
Noelle:     Loop "  %307 = getelementptr inbounds [64 x i16], [64 x i16]* %304, i64 %221, i64 0, !noelle.pdg.inst.id !2483" (0.000000e+00%)
Noelle:     Loop "  %311 = getelementptr inbounds [64 x i16], [64 x i16]* %305, i64 %309, i64 0, !noelle.pdg.inst.id !2488" (0.000000e+00%)
Noelle:     Loop "  %323 = getelementptr inbounds [64 x i16], [64 x i16]* %305, i64 %321, i64 0, !noelle.pdg.inst.id !2505" (0.000000e+00%)
Noelle:     Loop "  %232 = getelementptr inbounds [64 x i16]*, [64 x i16]** %30, i64 %231, !noelle.pdg.inst.id !2387" (0.000000e+00%)
Noelle:     Loop "  %241 = getelementptr inbounds [64 x i16], [64 x i16]* %238, i64 %221, i64 0, !noelle.pdg.inst.id !2396" (0.000000e+00%)
Noelle:     Loop "  %245 = getelementptr inbounds [64 x i16], [64 x i16]* %239, i64 %243, i64 0, !noelle.pdg.inst.id !2401" (0.000000e+00%)
Noelle:     Loop "  %272 = getelementptr inbounds [64 x i16]*, [64 x i16]** %30, i64 %271, !noelle.pdg.inst.id !2440" (0.000000e+00%)
Noelle:     Loop "  %281 = getelementptr inbounds [64 x i16], [64 x i16]* %278, i64 %221, i64 0, !noelle.pdg.inst.id !2449" (0.000000e+00%)
Noelle:     Loop "  %285 = getelementptr inbounds [64 x i16], [64 x i16]* %279, i64 %283, i64 0, !noelle.pdg.inst.id !2454" (0.000000e+00%)
Noelle:     Loop "  %264 = getelementptr inbounds [64 x i16]*, [64 x i16]** %30, i64 %263, !noelle.pdg.inst.id !2430" (0.000000e+00%)
Noelle:     Loop "  %336 = getelementptr inbounds [64 x i16]*, [64 x i16]** %30, i64 %335, !noelle.pdg.inst.id !2524" (0.000000e+00%)
Noelle:  Function "finish_pass_gather_phuff"
Noelle:     Loop "  %46 = getelementptr inbounds %struct.jpeg_compress_struct.253, %struct.jpeg_compress_struct.253* %0, i64 0, i32 42, i64 %45, !noelle.pdg.inst.id !197" (2.508204e-03%)
Noelle:     Loop "  %19 = load i32, i32* %14, align 4, !tbaa !164, !noelle.pdg.inst.id !51" (6.270738e-04%)
Noelle:  Function "jpeg_gen_optimal_table"
Noelle:     Loop "  %17 = getelementptr inbounds i64, i64* %2, i64 %14, !noelle.pdg.inst.id !579" (2.419100e-03%)
Noelle:     Loop "  %34 = getelementptr inbounds i64, i64* %2, i64 %31, !noelle.pdg.inst.id !601" (1.011495e-03%)
Noelle:     Loop "  %66 = sext i32 %65 to i64, !noelle.pdg.inst.id !639" (1.319688e-05%)
Noelle:     Loop "  %82 = sext i32 %81 to i64, !noelle.pdg.inst.id !660" (1.301461e-05%)
Noelle:     Loop "  %90 = getelementptr inbounds [257 x i32], [257 x i32]* %5, i64 0, i64 %89, !noelle.pdg.inst.id !670" (2.269577e-05%)
Noelle:     Loop "  %108 = getelementptr inbounds [33 x i8], [33 x i8]* %4, i64 0, i64 %106, !noelle.pdg.inst.id !704" (4.918186e-06%)
Noelle:     Loop "  br label %._crit_edge47, !noelle.loop.id !714, !noelle.pdg.inst.id !715" (3.366080e-06%)
Noelle:     Loop "  %116 = getelementptr inbounds [33 x i8], [33 x i8]* %4, i64 0, i64 %115, !noelle.pdg.inst.id !717" (9.471825e-07%)
Noelle:     Loop "  %137 = getelementptr inbounds [33 x i8], [33 x i8]* %4, i64 0, i64 %136, !noelle.pdg.inst.id !746" (1.536187e-07%)
Noelle:     Loop "  br label %._crit_edge52, !noelle.loop.id !760, !noelle.pdg.inst.id !761" (6.879148e-04%)
Noelle:     Loop "  %149 = getelementptr inbounds [257 x i32], [257 x i32]* %5, i64 0, i64 %146, !noelle.pdg.inst.id !765" (6.858851e-04%)
Noelle:  Function "access_virt_barray"
Noelle:     Loop "  %80 = mul nsw i64 %77, %47, !noelle.pdg.inst.id !473" (0.000000e+00%)
Noelle:     Loop "  %162 = mul nsw i64 %159, %131, !noelle.pdg.inst.id !552" (0.000000e+00%)
Noelle:     Loop "  %226 = load [64 x i16]**, [64 x i16]*** %223, align 8, !tbaa !396, !noelle.pdg.inst.id !367" (0.000000e+00%)
Noelle:  Function "pre_process_data"
Noelle:     Loop "  %23 = load i32, i32* %5, align 4, !tbaa !251, !noelle.pdg.inst.id !57" (2.554328e-04%)
Noelle:     Loop "  %54 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %10, i64 0, i32 1, i64 %53, !noelle.pdg.inst.id !306" (1.392916e-07%)
Noelle:     Loop "  tail call void @jcopy_sample_rows(i8** %55, i32 %59, i8** %55, i32 %60, i32 1, i32 %56) #20, !noelle.pdg.inst.id !48" (9.153445e-08%)
Noelle:     Loop "  %99 = getelementptr inbounds i8**, i8*** %4, i64 %97, !noelle.pdg.inst.id !363" (4.329977e-07%)
Noelle:     Loop "  tail call void @jcopy_sample_rows(i8** %100, i32 %110, i8** %100, i32 %111, i32 1, i32 %103) #20, !noelle.pdg.inst.id !50" (3.709135e-07%)
Noelle:  Function "fullsize_downsample"
Noelle:     Loop "  %32 = getelementptr inbounds i8*, i8** %3, i64 %30, !noelle.pdg.inst.id !257" (0.000000e+00%)
Noelle:     Loop "  %62 = getelementptr inbounds i8*, i8** %3, i64 %60, !noelle.pdg.inst.id !290" (7.014324e-05%)
Noelle:  Function "sep_downsample"
Noelle:     Loop "  %18 = getelementptr inbounds i8**, i8*** %1, i64 %16, !noelle.pdg.inst.id !79" (1.823724e-04%)
Noelle:  Function "process_data_simple_main"
Noelle:     Loop "  %21 = icmp ult i32 %20, 8, !noelle.pdg.inst.id !130" (7.784806e-05%)
Noelle:  Function "jpeg_finish_compress"
Noelle:     Loop "  %42 = getelementptr inbounds %struct.jpeg_comp_master, %struct.jpeg_comp_master* %41, i64 0, i32 0, !noelle.pdg.inst.id !617" (1.203041e-04%)
Noelle:     Loop "  %48 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %37, align 8, !tbaa !629, !noelle.pdg.inst.id !148" (1.200327e-04%)
Noelle:  Function "jcopy_sample_rows"
Noelle:     Loop "  %29 = getelementptr inbounds i8*, i8** %27, i64 1, !noelle.pdg.inst.id !125" (4.489168e-05%)
Noelle:  Function "get_raw_row"
Noelle:  Function "empty_output_buffer"
Noelle:  Function "start_pass_phuff"
Noelle:     Loop "  %134 = getelementptr inbounds %struct.jpeg_compress_struct.253, %struct.jpeg_compress_struct.253* %0, i64 0, i32 42, i64 %133, !noelle.pdg.inst.id !798" (1.176178e-05%)
Noelle:     Loop "  %45 = getelementptr inbounds %struct.jpeg_compress_struct.253, %struct.jpeg_compress_struct.253* %0, i64 0, i32 42, i64 %44, !noelle.pdg.inst.id !688" (1.591903e-07%)
Noelle:     Loop "  %108 = getelementptr inbounds %struct.jpeg_compress_struct.253, %struct.jpeg_compress_struct.253* %0, i64 0, i32 42, i64 %107, !noelle.pdg.inst.id !766" (4.454942e-06%)
Noelle:     Loop "  %75 = getelementptr inbounds %struct.jpeg_compress_struct.253, %struct.jpeg_compress_struct.253* %0, i64 0, i32 42, i64 %74, !noelle.pdg.inst.id !730" (7.641136e-08%)
Noelle:  Function "jpeg_make_c_derived_tbl"
Noelle:     Loop "  %23 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %20, !noelle.pdg.inst.id !217" (4.984250e-06%)
Noelle:     Loop "  %49 = add nsw <2 x i64> %46, <i64 8, i64 8>, !noelle.pdg.inst.id !253" (0.000000e+00%)
Noelle:     Loop "  %61 = add nsw <2 x i64> %58, <i64 1, i64 1>, !noelle.pdg.inst.id !277" (2.658479e-07%)
Noelle:     Loop "  %96 = sext i8 %92 to i32, !noelle.pdg.inst.id !334" (5.938596e-06%)
Noelle:     Loop "  %102 = add nsw i64 %100, 1, !noelle.pdg.inst.id !344" (3.238728e-06%)
Noelle:     Loop "  %143 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 %141, !noelle.pdg.inst.id !396" (4.483596e-06%)
Noelle:  Function "write_scan_header"
Noelle:     Loop "  %14 = getelementptr inbounds %struct.jpeg_compress_struct.297, %struct.jpeg_compress_struct.297* %0, i64 0, i32 42, i64 %13, !noelle.pdg.inst.id !4612" (9.484561e-06%)
Noelle:     Loop "  %287 = getelementptr inbounds %struct.jpeg_compress_struct.297, %struct.jpeg_compress_struct.297* %0, i64 0, i32 42, i64 %286, !noelle.pdg.inst.id !4864" (6.152707e-07%)
Noelle:  Function "realize_virt_arrays"
Noelle:     Loop "  %11 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %8, i64 0, i32 0, !noelle.pdg.inst.id !5540" (0.000000e+00%)
Noelle:     Loop "  %41 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %38, i64 0, i32 0, !noelle.pdg.inst.id !5582" (7.083970e-08%)
Noelle:     Loop "  %92 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %91, i64 0, i32 0, !noelle.pdg.inst.id !5654" (1.116720e-06%)
Noelle:     Loop "  %143 = sub i32 %119, %141, !noelle.pdg.inst.id !5713" (0.000000e+00%)
Noelle:     Loop "  %191 = add i32 %189, 1, !noelle.pdg.inst.id !5761" (0.000000e+00%)
Noelle:     Loop "  %206 = add i32 %205, 1, !noelle.pdg.inst.id !5787" (0.000000e+00%)
Noelle:     Loop "  %234 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %233, i64 0, i32 0, !noelle.pdg.inst.id !5824" (9.879353e-06%)
Noelle:     Loop "  %288 = sub i32 %262, %286, !noelle.pdg.inst.id !5882" (9.631016e-06%)
Noelle:     Loop "  %332 = add i32 %330, 1, !noelle.pdg.inst.id !5925" (3.581783e-08%)
Noelle:     Loop "  %347 = add i32 %346, 1, !noelle.pdg.inst.id !5951" (9.453519e-06%)
Noelle:  Function "emit_dht"
Noelle:     Loop "  %202 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %11, i64 0, i32 0, i64 %201, !noelle.pdg.inst.id !1401" (2.539086e-06%)
Noelle:     Loop "  %225 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %11, i64 0, i32 1, i64 %224, !noelle.pdg.inst.id !1424" (5.456249e-06%)
Noelle:  Function "rgb_ycc_start"
Noelle:     Loop "  %15 = mul nuw nsw i64 %14, 19595, !noelle.pdg.inst.id !70" (7.742222e-06%)
Noelle:  Function "jpeg_start_compress"
Noelle:  Function "jinit_compress_master"
Noelle:  Function "jinit_c_master_control"
Noelle:     Loop "  %106 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %105, i64 0, i32 2, !noelle.pdg.inst.id !12479" (7.561541e-08%)
Noelle:     Loop "  %155 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %154, i64 0, i32 1, !noelle.pdg.inst.id !12532" (1.178009e-07%)
Noelle:     Loop "  %222 = bitcast i32* %220 to i8*, !noelle.pdg.inst.id !12615" (2.308260e-08%)
Noelle:     Loop "  %242 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %240, i64 0, i32 0, !noelle.pdg.inst.id !12640" (5.116378e-06%)
Noelle:     Loop "  %258 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %240, i64 0, i32 1, i64 %257, !noelle.pdg.inst.id !12659" (1.862527e-07%)
Noelle:     Loop "  %340 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %240, i64 0, i32 1, i64 %339, !noelle.pdg.inst.id !12751" (4.493147e-06%)
Noelle:     Loop "  %403 = getelementptr inbounds [10 x [64 x i32]], [10 x [64 x i32]]* %4, i64 0, i64 %342, i64 %402, !noelle.pdg.inst.id !12832" (0.000000e+00%)
Noelle:     Loop "  %390 = getelementptr inbounds [10 x [64 x i32]], [10 x [64 x i32]]* %4, i64 0, i64 %342, i64 %389, !noelle.pdg.inst.id !12816" (1.675478e-06%)
Noelle:     Loop "  %368 = getelementptr inbounds [10 x [64 x i32]], [10 x [64 x i32]]* %4, i64 0, i64 %342, i64 %367, !noelle.pdg.inst.id !12793" (2.633008e-06%)
Noelle:     Loop "  %355 = getelementptr inbounds [10 x [64 x i32]], [10 x [64 x i32]]* %4, i64 0, i64 %342, i64 %354, !noelle.pdg.inst.id !12779" (0.000000e+00%)
Noelle:     Loop "  %430 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %240, i64 0, i32 1, i64 %429, !noelle.pdg.inst.id !12865" (0.000000e+00%)
Noelle:     Loop "  %466 = getelementptr inbounds [10 x [64 x i32]], [10 x [64 x i32]]* %4, i64 0, i64 %465, i64 0, !noelle.pdg.inst.id !12908" (3.024617e-08%)
Noelle:     Loop "  %481 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i64 0, i64 %480, !noelle.pdg.inst.id !12924" (0.000000e+00%)
Noelle:  Function "parse_switches"
Noelle:     Loop "  %34 = sext i32 %33 to i64, !noelle.pdg.inst.id !9202" (3.323098e-06%)
Noelle:  Function "write_frame_header"
Noelle:     Loop "  %11 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %8, i64 0, i32 4, !noelle.pdg.inst.id !96" (3.464778e-06%)
Noelle:     Loop "  %43 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %40, i64 0, i32 5, !noelle.pdg.inst.id !140" (0.000000e+00%)
Noelle:  Function "jpeg_set_linear_quality"
Noelle:     Loop "  %41 = getelementptr inbounds [64 x i32], [64 x i32]* @jpeg_set_linear_quality.std_luminance_quant_tbl, i64 0, i64 %40, !noelle.pdg.inst.id !239" (9.161404e-07%)
Noelle:     Loop "  %26 = getelementptr inbounds [64 x i32], [64 x i32]* @jpeg_set_linear_quality.std_luminance_quant_tbl, i64 0, i64 %25, !noelle.pdg.inst.id !218" (9.161404e-07%)
Noelle:     Loop "  %90 = getelementptr inbounds [64 x i32], [64 x i32]* @jpeg_set_linear_quality.std_chrominance_quant_tbl, i64 0, i64 %89, !noelle.pdg.inst.id !297" (9.161404e-07%)
Noelle:     Loop "  %75 = getelementptr inbounds [64 x i32], [64 x i32]* @jpeg_set_linear_quality.std_chrominance_quant_tbl, i64 0, i64 %74, !noelle.pdg.inst.id !280" (9.161404e-07%)
Noelle:  Function "emit_dqt"
Noelle:     Loop "  %18 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %5, i64 0, i32 0, i64 %16, !noelle.pdg.inst.id !1368" (8.381372e-07%)
Noelle:     Loop "  %197 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %196, !noelle.pdg.inst.id !1535" (2.443572e-06%)
Noelle:     Loop "  %150 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %149, !noelle.pdg.inst.id !1494" (0.000000e+00%)
Noelle:  Function "keymatch"
Noelle:     Loop "  %10 = getelementptr inbounds i8, i8* %7, i64 1, !noelle.pdg.inst.id !96" (2.419693e-06%)
Noelle:  Function "jpeg_set_defaults"
Noelle:  Function "prepare_for_pass"
Noelle:  Function "jpeg_set_quality"
Noelle:  Function "alloc_small"
Noelle:     Loop "  %35 = getelementptr inbounds %union.small_pool_struct, %union.small_pool_struct* %34, i64 0, i32 0, i32 2, !noelle.pdg.inst.id !469" (2.316219e-07%)
Noelle:     Loop "  %59 = lshr i64 %58, 1, !noelle.pdg.inst.id !501" (0.000000e+00%)
Noelle:  Function "finish_pass_phuff"
Noelle:  Function "alloc_sarray"
Noelle:     Loop "  %29 = sub i32 %3, %27, !noelle.pdg.inst.id !199" (5.547783e-07%)
Noelle:     Loop "  %43 = add i32 %41, 1, !noelle.pdg.inst.id !218" (5.492067e-08%)
Noelle:     Loop "  %58 = add i32 %57, 1, !noelle.pdg.inst.id !245" (1.695377e-07%)
Noelle:  Function "per_scan_setup"
Noelle:     Loop "  %68 = getelementptr inbounds %struct.jpeg_compress_struct.275, %struct.jpeg_compress_struct.275* %0, i64 0, i32 42, i64 %67, !noelle.pdg.inst.id !268" (3.438511e-07%)
Noelle:     Loop "  %106 = load i32, i32* %60, align 8, !tbaa !214, !noelle.pdg.inst.id !125" (3.183807e-08%)
Noelle:     Loop "  %116 = load i32, i32* %60, align 8, !tbaa !214, !noelle.pdg.inst.id !133" (4.457330e-08%)
Noelle:  Function "start_pass_coef"
Noelle:  Function "select_scan_parameters"
Noelle:     Loop "  %32 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %3, i64 %11, i32 1, i64 %30, !noelle.pdg.inst.id !112" (0.000000e+00%)
Noelle:     Loop "  %84 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %3, i64 %11, i32 1, i64 %83, !noelle.pdg.inst.id !185" (1.146170e-07%)
Noelle:     Loop "  %138 = add <2 x i64> %136, <i64 2, i64 2>, !noelle.pdg.inst.id !266" (0.000000e+00%)
Noelle:     Loop "  %172 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %124, i64 %171, !noelle.pdg.inst.id !319" (0.000000e+00%)
Noelle:  Function "finish_pass_master"
Noelle:  Function "flush_bits"
Noelle:     Loop "  %23 = lshr i64 %21, 16, !noelle.pdg.inst.id !270" (1.647620e-07%)
Noelle:  Function "start_pass_fdctmgr"
Noelle:     Loop "  %17 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %16, i64 0, i32 4, !noelle.pdg.inst.id !607" (3.852406e-07%)
Noelle:     Loop "  %209 = shl i64 %208, 3, !noelle.pdg.inst.id !804" (0.000000e+00%)
Noelle:     Loop "  %170 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %33, i64 0, i32 0, i64 %169, !noelle.pdg.inst.id !768" (0.000000e+00%)
Noelle:  Function "free_pool"
Noelle:     Loop "  %22 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %21, i64 0, i32 10, !noelle.pdg.inst.id !503" (0.000000e+00%)
Noelle:     Loop "  %36 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %35, i64 0, i32 10, !noelle.pdg.inst.id !530" (2.547045e-08%)
Noelle:     Loop "  %54 = bitcast %union.large_pool_struct* %53 to i8*, !noelle.pdg.inst.id !559" (1.289442e-07%)
Noelle:     Loop "  %73 = bitcast %union.small_pool_struct* %72 to i8*, !noelle.pdg.inst.id !581" (8.516683e-08%)
Noelle:  Function "emit_sof"
Noelle:     Loop "  %250 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %248, i64 0, i32 0, !noelle.pdg.inst.id !3380" (1.424754e-07%)
Noelle:  Function "start_input_ppm"
Noelle:     Loop "  %179 = load i8*, i8** %167, align 8, !tbaa !1102, !noelle.pdg.inst.id !290" (0.000000e+00%)
Noelle:  Function "self_destruct"
Noelle:  Function "write_file_header"
Noelle:  Function "alloc_large"
Noelle:  Function "request_virt_barray"
Noelle:  Function "read_pbm_integer"
Noelle:     Loop "  %4 = tail call i32 @getc(%struct._IO_FILE* %1) #20, !noelle.pdg.inst.id !35" (3.661378e-08%)
Noelle:     Loop "  %6 = tail call i32 @getc(%struct._IO_FILE* %1) #20, !noelle.pdg.inst.id !44" (0.000000e+00%)
Noelle:     Loop "  %31 = tail call i32 @getc(%struct._IO_FILE* %1) #20, !noelle.pdg.inst.id !67" (1.074535e-07%)
Noelle:     Loop "  %33 = tail call i32 @getc(%struct._IO_FILE* %1) #20, !noelle.pdg.inst.id !70" (0.000000e+00%)
Noelle:  Function "jinit_c_coef_controller"
Noelle:     Loop "  %24 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %3, align 8, !tbaa !97, !noelle.pdg.inst.id !64" (9.392230e-08%)
Noelle:  Function "jinit_downsampler"
Noelle:     Loop "  %40 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %39, i64 0, i32 2, !noelle.pdg.inst.id !354" (6.956189e-01%)
Noelle:  Function "jpeg_simple_progression"
Noelle:     Loop "  %190 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %188, i64 0, i32 0, !noelle.pdg.inst.id !778" (0.000000e+00%)
Noelle:     Loop "  %220 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %218, i64 0, i32 0, !noelle.pdg.inst.id !817" (0.000000e+00%)
Noelle:     Loop "  %131 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %36, i64 0, i32 1, i64 %128, !noelle.pdg.inst.id !691" (0.000000e+00%)
Noelle:     Loop "  %167 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %36, i64 0, i32 1, i64 %164, !noelle.pdg.inst.id !738" (0.000000e+00%)
Noelle:     Loop "  %179 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %36, i64 0, i32 1, i64 %178, !noelle.pdg.inst.id !760" (0.000000e+00%)
Noelle:     Loop "  %240 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %238, i64 0, i32 0, !noelle.pdg.inst.id !846" (0.000000e+00%)
Noelle:     Loop "  %270 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %268, i64 0, i32 0, !noelle.pdg.inst.id !885" (0.000000e+00%)
Noelle:     Loop "  %284 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %282, i64 0, i32 0, !noelle.pdg.inst.id !907" (0.000000e+00%)
Noelle:     Loop "  %313 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %311, i64 0, i32 0, !noelle.pdg.inst.id !945" (0.000000e+00%)
Noelle:     Loop "  %327 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %325, i64 0, i32 0, !noelle.pdg.inst.id !967" (0.000000e+00%)
Noelle:     Loop "  %356 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %354, i64 0, i32 0, !noelle.pdg.inst.id !1005" (0.000000e+00%)
Noelle:     Loop "  %446 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %444, i64 0, i32 0, !noelle.pdg.inst.id !1131" (0.000000e+00%)
Noelle:     Loop "  %476 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %474, i64 0, i32 0, !noelle.pdg.inst.id !1170" (0.000000e+00%)
Noelle:     Loop "  %388 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %364, i64 0, i32 1, i64 %385, !noelle.pdg.inst.id !1048" (0.000000e+00%)
Noelle:     Loop "  %424 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %364, i64 0, i32 1, i64 %421, !noelle.pdg.inst.id !1094" (0.000000e+00%)
Noelle:     Loop "  %436 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %364, i64 0, i32 1, i64 %435, !noelle.pdg.inst.id !1115" (0.000000e+00%)
Noelle:     Loop "  %494 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %492, i64 0, i32 0, !noelle.pdg.inst.id !1197" (0.000000e+00%)
Noelle:     Loop "  %523 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %521, i64 0, i32 0, !noelle.pdg.inst.id !1235" (0.000000e+00%)
Noelle:  Function "jinit_c_prep_controller"
Noelle:     Loop "  %83 = mul i64 %62, %80, !noelle.pdg.inst.id !676" (0.000000e+00%)
Noelle:     Loop "  %140 = add nsw i64 %138, %60, !noelle.pdg.inst.id !739" (0.000000e+00%)
Noelle:     Loop "  %231 = add nsw i64 %230, %60, !noelle.pdg.inst.id !845" (0.000000e+00%)
Noelle:     Loop "  %278 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %15, align 8, !tbaa !604, !noelle.pdg.inst.id !223" (6.606399e-08%)
Noelle:  Function "jpeg_default_colorspace"
Noelle:     Loop "  %202 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %199, i64 %201, i32 0, !noelle.pdg.inst.id !780" (0.000000e+00%)
Noelle:  Function "jpeg_CreateCompress"
Noelle:  Function "jinit_c_main_controller"
Noelle:     Loop "  %34 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %3, align 8, !tbaa !99, !noelle.pdg.inst.id !76" (4.934901e-08%)
Noelle:  Function "jpeg_suppress_tables"
Noelle:  Function "jdiv_round_up"
Noelle:  Function "jinit_memory_mgr"
Noelle:  Function "jinit_color_converter"
Noelle:  Function "jpeg_alloc_huff_table"
Noelle:  Function "jround_up"
Noelle:  Function "jinit_forward_dct"
Noelle:  Function "write_file_trailer"
Noelle:  Function "jpeg_std_error"
Noelle:  Function "term_destination"
Noelle:  Function "jpeg_stdio_dest"
Noelle:  Function "start_pass_main"
Noelle:  Function "jinit_marker_writer"
Noelle:  Function "start_pass_prep"
Noelle:  Function "jpeg_alloc_quant_table"
Noelle:  Function "jpeg_free_large"
Noelle:  Function "jpeg_get_large"
Noelle:  Function "jinit_phuff_encoder"
Noelle:  Function "jpeg_destroy_compress"
Noelle:  Function "init_destination"
Noelle:  Function "jpeg_free_small"
Noelle:  Function "jpeg_get_small"
Noelle:  Function "jpeg_destroy"
Noelle:  Function "jinit_read_ppm"
Noelle:  Function "jpeg_abort"
Noelle:  Function "emit_message"
Noelle:  Function "reset_error_mgr"
Noelle:  Function "finish_input_ppm"
Noelle:  Function "jpeg_mem_available"
Noelle:  Function "start_pass_downsample"
Noelle:  Function "jzero_far"
Noelle:  Function "error_exit"
Noelle:  Function "output_message"
Noelle:  Function "jpeg_quality_scaling"
Noelle:  Function "format_message"
Noelle:     Loop "  %41 = getelementptr inbounds i8, i8* %40, i64 1, !noelle.pdg.inst.id !161" (0.000000e+00%)
Noelle:  Function "jpeg_add_quant_table"
Noelle:     Loop "  %29 = getelementptr inbounds i32, i32* %2, i64 %28, !noelle.pdg.inst.id !121" (0.000000e+00%)
Noelle:     Loop "  %44 = getelementptr inbounds i32, i32* %2, i64 %43, !noelle.pdg.inst.id !140" (0.000000e+00%)
Noelle:  Function "jpeg_write_raw_data"
Noelle:  Function "access_virt_sarray"
Noelle:     Loop "  %79 = mul nsw i64 %76, %46, !noelle.pdg.inst.id !470" (0.000000e+00%)
Noelle:     Loop "  %159 = mul nsw i64 %156, %128, !noelle.pdg.inst.id !547" (0.000000e+00%)
Noelle:     Loop "  %221 = load i8**, i8*** %218, align 8, !tbaa !394, !noelle.pdg.inst.id !366" (0.000000e+00%)
Noelle:  Function "jpeg_write_scanlines"
Noelle:  Function "forward_DCT_float"
Noelle:     Loop "  %28 = zext i32 %27 to i64, !noelle.pdg.inst.id !237" (0.000000e+00%)
Noelle:     Loop "  %31 = getelementptr inbounds i8*, i8** %21, i64 %29, !noelle.pdg.inst.id !242" (0.000000e+00%)
Noelle:     Loop "  %85 = getelementptr inbounds [64 x float], [64 x float]* %8, i64 0, i64 %84, !noelle.pdg.inst.id !293" (0.000000e+00%)
Noelle:  Function "jpeg_mem_term"
Noelle:  Function "jpeg_mem_init"
Noelle:  Function "jpeg_open_backing_store"
Noelle:  Function "pre_process_context"
Noelle:     Loop "  %27 = load i32, i32* %2, align 4, !tbaa !328, !noelle.pdg.inst.id !61" (0.000000e+00%)
Noelle:     Loop "  %90 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %10, i64 0, i32 1, i64 %89, !noelle.pdg.inst.id !415" (0.000000e+00%)
Noelle:     Loop "  tail call void @jcopy_sample_rows(i8** %91, i32 %95, i8** %91, i32 %96, i32 1, i32 %92) #20, !noelle.pdg.inst.id !49" (0.000000e+00%)
Noelle:     Loop "  %52 = icmp slt i32 %50, 1, !noelle.pdg.inst.id !372" (0.000000e+00%)
Noelle:     Loop "  %56 = load i8**, i8*** %54, align 8, !tbaa !379, !noelle.pdg.inst.id !106" (0.000000e+00%)
Noelle:  Function "null_convert"
Noelle:     Loop "  %51 = add nsw i32 %48, -1, !noelle.pdg.inst.id !116" (0.000000e+00%)
Noelle:     Loop "  %54 = getelementptr inbounds i8**, i8*** %2, i64 %53, !noelle.pdg.inst.id !123" (0.000000e+00%)
Noelle:     Loop "  %62 = getelementptr inbounds i8, i8* %60, i64 %53, !noelle.pdg.inst.id !133" (0.000000e+00%)
Noelle:     Loop "  %87 = getelementptr inbounds i8, i8* %85, i64 %53, !noelle.pdg.inst.id !168" (0.000000e+00%)
Noelle:     Loop "  %97 = getelementptr inbounds i8**, i8*** %2, i64 %96, !noelle.pdg.inst.id !184" (0.000000e+00%)
Noelle:     Loop "  %105 = getelementptr inbounds i8, i8* %103, i64 %96, !noelle.pdg.inst.id !194" (0.000000e+00%)
Noelle:     Loop "  %25 = add nsw i32 %22, -1, !noelle.pdg.inst.id !70" (0.000000e+00%)
Noelle:     Loop "  %28 = getelementptr inbounds i8**, i8*** %2, i64 %27, !noelle.pdg.inst.id !76" (0.000000e+00%)
Noelle:     Loop "  %36 = getelementptr inbounds i8, i8* %34, i64 %27, !noelle.pdg.inst.id !87" (0.000000e+00%)
Noelle:  Function "alloc_barray"
Noelle:     Loop "  %31 = sub i32 %3, %29, !noelle.pdg.inst.id !199" (0.000000e+00%)
Noelle:     Loop "  %46 = add i32 %44, 1, !noelle.pdg.inst.id !218" (0.000000e+00%)
Noelle:     Loop "  %61 = add i32 %60, 1, !noelle.pdg.inst.id !245" (0.000000e+00%)
Noelle:  Function "jcopy_block_row"
Noelle:  Function "jpeg_fdct_ifast"
Noelle:     Loop "  %4 = load i32, i32* %3, align 4, !tbaa !34, !noelle.pdg.inst.id !38" (0.000000e+00%)
Noelle:  Function "jpeg_fdct_float"
Noelle:  Function "pass_startup"
Noelle:  Function "request_virt_sarray"
Noelle:  Function "jpeg_set_colorspace"
Noelle:     Loop "  %130 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %127, i64 %129, i32 0, !noelle.pdg.inst.id !603" (0.000000e+00%)
Noelle:  Function "get_text_rgb_row"
Noelle:     Loop "  %17 = tail call fastcc i32 @read_pbm_integer(%struct.jpeg_compress_struct* %0, %struct._IO_FILE* %4), !noelle.pdg.inst.id !35" (0.000000e+00%)
Noelle:  Function "get_word_gray_row"
Noelle:     Loop "  %54 = getelementptr inbounds i8, i8* %53, i64 1, !noelle.pdg.inst.id !169" (0.000000e+00%)
Noelle:  Function "load_interlaced_image"
Noelle:     Loop "  %46 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %16, align 8, !tbaa !164, !noelle.pdg.inst.id !105" (0.000000e+00%)
Noelle:     Loop "  %58 = tail call fastcc i32 @LZWReadByte(%struct.gif_source_struct* %3), !noelle.pdg.inst.id !46" (0.000000e+00%)
Noelle:     Loop "  store i64 %20, i64* %12, align 8, !tbaa !157, !noelle.pdg.inst.id !54" (0.000000e+00%)
Noelle:     Loop "  %36 = tail call fastcc i32 @LZWReadByte(%struct.gif_source_struct* %3), !noelle.pdg.inst.id !44" (0.000000e+00%)
Noelle:  Function "get_scaled_gray_row"
Noelle:     Loop "  %38 = getelementptr inbounds i8, i8* %36, i64 1, !noelle.pdg.inst.id !161" (0.000000e+00%)
Noelle:     Loop "  %54 = getelementptr inbounds i8, i8* %53, i64 1, !noelle.pdg.inst.id !187" (0.000000e+00%)
Noelle:  Function "get_word_rgb_row"
Noelle:     Loop "  %35 = getelementptr inbounds i8, i8* %34, i64 1, !noelle.pdg.inst.id !148" (0.000000e+00%)
Noelle:  Function "get_scaled_rgb_row"
Noelle:     Loop "  %61 = getelementptr inbounds i8, i8* %60, i64 1, !noelle.pdg.inst.id !209" (0.000000e+00%)
Noelle:  Function "get_text_gray_row"
Noelle:     Loop "  %17 = tail call fastcc i32 @read_pbm_integer(%struct.jpeg_compress_struct* %0, %struct._IO_FILE* %4), !noelle.pdg.inst.id !35" (0.000000e+00%)
Noelle:  Function "jinit_read_gif"
Noelle:  Function "cmyk_ycck_convert"
Noelle:     Loop "  %27 = load i8**, i8*** %2, align 8, !tbaa !74, !noelle.pdg.inst.id !75" (0.000000e+00%)
Noelle:     Loop "  %43 = load i8, i8* %42, align 1, !tbaa !93, !noelle.pdg.inst.id !94" (0.000000e+00%)
Noelle:  Function "fullsize_smooth_downsample"
Noelle:     Loop "  %32 = getelementptr inbounds i8*, i8** %8, i64 %30, !noelle.pdg.inst.id !383" (0.000000e+00%)
Noelle:     Loop "  %61 = getelementptr inbounds i8*, i8** %8, i64 %59, !noelle.pdg.inst.id !414" (0.000000e+00%)
Noelle:     Loop "  %82 = getelementptr inbounds i8*, i8** %3, i64 %81, !noelle.pdg.inst.id !441" (0.000000e+00%)
Noelle:     Loop "  %131 = getelementptr inbounds i8, i8* %130, i64 1, !noelle.pdg.inst.id !482" (0.000000e+00%)
Noelle:  Function "h2v1_downsample"
Noelle:     Loop "  %31 = getelementptr inbounds i8*, i8** %2, i64 %29, !noelle.pdg.inst.id !311" (0.000000e+00%)
Noelle:     Loop "  %61 = getelementptr inbounds i8*, i8** %2, i64 %59, !noelle.pdg.inst.id !343" (0.000000e+00%)
Noelle:     Loop "  %74 = getelementptr inbounds i8*, i8** %2, i64 %73, !noelle.pdg.inst.id !364" (0.000000e+00%)
Noelle:     Loop "  %81 = load i8, i8* %79, align 1, !tbaa !315, !noelle.pdg.inst.id !111" (0.000000e+00%)
Noelle:  Function "h2v2_smooth_downsample"
Noelle:     Loop "  %33 = getelementptr inbounds i8*, i8** %8, i64 %31, !noelle.pdg.inst.id !510" (0.000000e+00%)
Noelle:     Loop "  %62 = getelementptr inbounds i8*, i8** %8, i64 %60, !noelle.pdg.inst.id !541" (0.000000e+00%)
Noelle:     Loop "  %84 = getelementptr inbounds i8*, i8** %3, i64 %82, !noelle.pdg.inst.id !569" (0.000000e+00%)
Noelle:     Loop "  %159 = getelementptr inbounds i8, i8* %158, i64 1, !noelle.pdg.inst.id !628" (0.000000e+00%)
Noelle:  Function "int_downsample"
Noelle:     Loop "  %41 = getelementptr inbounds i8*, i8** %2, i64 %39, !noelle.pdg.inst.id !520" (0.000000e+00%)
Noelle:     Loop "  %71 = getelementptr inbounds i8*, i8** %2, i64 %69, !noelle.pdg.inst.id !552" (0.000000e+00%)
Noelle:     Loop "  br i1 %83, label %._crit_edge40.._crit_edge36_crit_edge, label %107, !noelle.loop.id !594, !noelle.pdg.inst.id !595" (0.000000e+00%)
Noelle:     Loop "  br i1 %84, label %113, label %.loopexit2._crit_edge..loopexit2_crit_edge, !noelle.loop.id !602, !noelle.pdg.inst.id !603" (0.000000e+00%)
Noelle:     Loop "  %346 = add nsw i64 %344, %106, !noelle.pdg.inst.id !891" (0.000000e+00%)
Noelle:     Loop "  %355 = getelementptr i8, i8* %349, i64 %351, !noelle.pdg.inst.id !901" (0.000000e+00%)
Noelle:     Loop "  %397 = getelementptr inbounds i8, i8* %395, i64 1, !noelle.pdg.inst.id !944" (0.000000e+00%)
Noelle:     Loop "  %117 = add nsw i64 %115, %106, !noelle.pdg.inst.id !617" (0.000000e+00%)
Noelle:     Loop "  %126 = getelementptr i8, i8* %120, i64 %122, !noelle.pdg.inst.id !627" (0.000000e+00%)
Noelle:     Loop "  %209 = add nsw i64 %207, %106, !noelle.pdg.inst.id !721" (0.000000e+00%)
Noelle:     Loop "  %218 = getelementptr i8, i8* %212, i64 %214, !noelle.pdg.inst.id !731" (0.000000e+00%)
Noelle:     Loop "  %250 = getelementptr inbounds i8, i8* %248, i64 1, !noelle.pdg.inst.id !765" (0.000000e+00%)
Noelle:     Loop "  %168 = add nsw i64 %166, %106, !noelle.pdg.inst.id !676" (0.000000e+00%)
Noelle:     Loop "  %177 = getelementptr i8, i8* %171, i64 %173, !noelle.pdg.inst.id !686" (0.000000e+00%)
Noelle:     Loop "  %315 = add nsw i64 %313, %106, !noelle.pdg.inst.id !856" (0.000000e+00%)
Noelle:     Loop "  %336 = getelementptr inbounds i8, i8* %334, i64 1, !noelle.pdg.inst.id !876" (0.000000e+00%)
Noelle:     Loop "  %260 = add nsw i64 %258, %106, !noelle.pdg.inst.id !786" (0.000000e+00%)
Noelle:     Loop "  %280 = add nsw i64 %279, %106, !noelle.pdg.inst.id !809" (0.000000e+00%)
Noelle:     Loop "  %288 = getelementptr inbounds i8, i8* %286, i64 1, !noelle.pdg.inst.id !818" (0.000000e+00%)
Noelle:     Loop "  %298 = add nsw i64 %296, %106, !noelle.pdg.inst.id !833" (0.000000e+00%)
Noelle:     Loop "  %305 = getelementptr inbounds i8, i8* %303, i64 1, !noelle.pdg.inst.id !841" (0.000000e+00%)
Noelle:  Function "jinit_huff_encoder"
Noelle:  Function "start_pass_huff"
Noelle:     Loop "  %75 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 42, i64 %74, !noelle.pdg.inst.id !629" (4.775710e-09%)
Noelle:     Loop "  %19 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 42, i64 %18, !noelle.pdg.inst.id !571" (0.000000e+00%)
Noelle:  Function "jinit_read_targa"
Noelle:  Function "usage"
Noelle:  Function "start_input_gif"
Noelle:     Loop "  %96 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !tbaa !8303, !noelle.pdg.inst.id !444" (0.000000e+00%)
Noelle:     Loop "  %144 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !tbaa !8303, !noelle.pdg.inst.id !504" (0.000000e+00%)
Noelle:     Loop "  %193 = icmp sgt i32 %192, 0, !noelle.pdg.inst.id !8500" (0.000000e+00%)
Noelle:     Loop "  %258 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8, !tbaa !8303, !noelle.pdg.inst.id !637" (0.000000e+00%)
Noelle:  Function "finish_input_gif"
Noelle:  Function "get_pixel_rows"
Noelle:     Loop "  %18 = tail call fastcc i32 @LZWReadByte(%struct.gif_source_struct* %3), !noelle.pdg.inst.id !35" (0.000000e+00%)
Noelle:  Function "LZWReadByte"
Noelle:     Loop "  %137 = load i8*, i8** %134, align 8, !tbaa !491, !noelle.pdg.inst.id !492" (0.000000e+00%)
Noelle:     Loop "  %81 = icmp sgt i32 %80, 0, !noelle.pdg.inst.id !432" (0.000000e+00%)
Noelle:     Loop "  %39 = tail call fastcc i32 @GetCode(%struct.gif_source_struct* nonnull %0), !noelle.pdg.inst.id !39" (0.000000e+00%)
Noelle:  Function "GetCode"
Noelle:     Loop "  %18 = load i32, i32* %11, align 8, !tbaa !433, !noelle.pdg.inst.id !63" (0.000000e+00%)
Noelle:  Function "get_interlaced_row"
Noelle:     Loop "  %72 = getelementptr inbounds i8, i8* %69, i64 1, !noelle.pdg.inst.id !167" (0.000000e+00%)
Noelle:  Function "encode_mcu_gather"
Noelle:     Loop "  %18 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 1, i32 2, i64 %17, !noelle.pdg.inst.id !242" (0.000000e+00%)
Noelle:     Loop "  %32 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 46, i64 %31, !noelle.pdg.inst.id !263" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %68, !noelle.pdg.inst.id !301" (0.000000e+00%)
Noelle:  Function "start_input_tga"
Noelle:     Loop "  %214 = add nsw i32 %213, -1, !noelle.pdg.inst.id !3256" (0.000000e+00%)
Noelle:     Loop "  %274 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8, !tbaa !3026, !noelle.pdg.inst.id !358" (0.000000e+00%)
Noelle:  Function "finish_pass_gather"
Noelle:     Loop "  %15 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 42, i64 %14, !noelle.pdg.inst.id !195" (6.367614e-09%)
Noelle:  Function "finish_pass_huff"
Noelle:     Loop "  %30 = lshr i64 %29, 16, !noelle.pdg.inst.id !232" (0.000000e+00%)
Noelle:  Function "emit_restart"
Noelle:     Loop "  %76 = getelementptr inbounds %struct.phuff_entropy_encoder, %struct.phuff_entropy_encoder* %0, i64 0, i32 7, i64 %75, !noelle.pdg.inst.id !255" (0.000000e+00%)
Noelle:  Function "read_stdin"
Noelle:  Function "read_text_integer"
Noelle:     Loop "  %4 = tail call fastcc i32 @text_getc(%struct._IO_FILE* %0), !noelle.pdg.inst.id !36" (0.000000e+00%)
Noelle:     Loop "  %24 = load i16*, i16** %.lcssa20, align 8, !tbaa !80, !noelle.pdg.inst.id !54" (0.000000e+00%)
Noelle:  Function "text_getc"
Noelle:     Loop "  %4 = tail call i32 @getc(%struct._IO_FILE* %0), !noelle.pdg.inst.id !34" (0.000000e+00%)
Noelle:  Function "read_scan_script"
Noelle:     Loop "  %23 = icmp eq i32 %22, 100, !noelle.pdg.inst.id !1248" (0.000000e+00%)
Noelle:     Loop "  %36 = icmp eq i64 %35, 4, !noelle.pdg.inst.id !1264" (0.000000e+00%)
Noelle:  Function "read_scan_integer"
Noelle:     Loop "  %11 = load i16*, i16** %9, align 8, !tbaa !130, !noelle.pdg.inst.id !46" (0.000000e+00%)
Noelle:     Loop "  %20 = tail call i32 @getc(%struct._IO_FILE* %0) #21, !noelle.pdg.inst.id !53" (0.000000e+00%)
Noelle:  Function "set_quant_slots"
Noelle:     Loop "  %9 = load i8, i8* %8, align 1, !tbaa !120, !noelle.pdg.inst.id !49" (0.000000e+00%)
Noelle:     Loop "  %29 = load i8, i8* %28, align 1, !tbaa !120, !noelle.pdg.inst.id !78" (0.000000e+00%)
Noelle:  Function "set_sample_factors"
Noelle:     Loop "  %12 = load i8, i8* %11, align 1, !tbaa !136, !noelle.pdg.inst.id !34" (0.000000e+00%)
Noelle:     Loop "  %38 = load i8, i8* %37, align 1, !tbaa !136, !noelle.pdg.inst.id !79" (0.000000e+00%)
Noelle:  Function "read_quant_tables"
Noelle:     Loop "  %24 = icmp eq i32 %23, 4, !noelle.pdg.inst.id !324" (0.000000e+00%)
Noelle:     Loop "  %34 = call fastcc i32 @read_text_integer(%struct._IO_FILE* nonnull %12, i64* nonnull %6, i32* nonnull %5), !noelle.pdg.inst.id !58" (0.000000e+00%)
Noelle:  Function "compress_data"
Noelle:     Loop "  %28 = icmp ugt i32 %26, %8, !noelle.pdg.inst.id !389" (0.000000e+00%)
Noelle:     Loop "  %32 = load i32, i32* %19, align 4, !tbaa !396, !noelle.pdg.inst.id !71" (0.000000e+00%)
Noelle:     Loop "  %39 = getelementptr inbounds %struct.jpeg_compress_struct.363, %struct.jpeg_compress_struct.363* %0, i64 0, i32 42, i64 %37, !noelle.pdg.inst.id !406" (0.000000e+00%)
Noelle:     Loop "  %60 = load i32, i32* %20, align 8, !tbaa !431, !noelle.pdg.inst.id !96" (0.000000e+00%)
Noelle:     Loop "  %145 = load i16, i16* %136, align 2, !tbaa !471, !noelle.pdg.inst.id !225" (0.000000e+00%)
Noelle:     Loop "  %175 = load i16, i16* %136, align 2, !tbaa !471, !noelle.pdg.inst.id !301" (0.000000e+00%)
Noelle:     Loop "  %105 = add i64 %104, %70, !noelle.pdg.inst.id !482" (0.000000e+00%)
Noelle:  Function "null_method"
Noelle:  Function "grayscale_convert"
Noelle:     Loop "  %90 = load i8**, i8*** %2, align 8, !tbaa !68, !noelle.pdg.inst.id !167" (0.000000e+00%)
Noelle:     Loop "  %98 = load i8, i8* %96, align 1, !tbaa !79, !noelle.pdg.inst.id !177" (0.000000e+00%)
Noelle:     Loop "  %77 = load i8, i8* %75, align 1, !tbaa !79, !noelle.pdg.inst.id !148" (0.000000e+00%)
Noelle:     Loop "  %23 = load i8**, i8*** %2, align 8, !tbaa !68, !noelle.pdg.inst.id !69" (0.000000e+00%)
Noelle:     Loop "  %31 = load i8, i8* %29, align 1, !tbaa !79, !noelle.pdg.inst.id !80" (0.000000e+00%)
Noelle:     Loop "  %56 = load i8**, i8*** %2, align 8, !tbaa !68, !noelle.pdg.inst.id !117" (0.000000e+00%)
Noelle:     Loop "  %64 = load i8, i8* %62, align 1, !tbaa !79, !noelle.pdg.inst.id !127" (0.000000e+00%)
Noelle:  Function "rgb_gray_convert"
Noelle:     Loop "  %24 = load i8**, i8*** %2, align 8, !tbaa !71, !noelle.pdg.inst.id !72" (0.000000e+00%)
Noelle:     Loop "  %31 = load i8, i8* %30, align 1, !tbaa !81, !noelle.pdg.inst.id !82" (0.000000e+00%)
Noelle:  Function "write_stdout"
Noelle:  Function "jpeg_abort_compress"
Noelle:  Function "jpeg_write_marker"
Noelle:  Function "get_memory_row"
Noelle:  Function "encode_mcu_huff"
Noelle:     Loop "  %49 = lshr i64 %48, 16, !noelle.pdg.inst.id !14815" (0.000000e+00%)
Noelle:     Loop "  %140 = getelementptr inbounds %struct.working_state, %struct.working_state* %3, i64 0, i32 2, i32 2, i64 %139, !noelle.pdg.inst.id !14895" (0.000000e+00%)
Noelle:     Loop "  %156 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 46, i64 %155, !noelle.pdg.inst.id !14916" (0.000000e+00%)
Noelle:     Loop "  %219 = lshr i64 %218, 16, !noelle.pdg.inst.id !14980" (0.000000e+00%)
Noelle:     Loop "  %280 = lshr i64 %279, 16, !noelle.pdg.inst.id !15045" (0.000000e+00%)
Noelle:     Loop "  %337 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %335, !noelle.pdg.inst.id !15104" (0.000000e+00%)
Noelle:     Loop "  %352 = load i32, i32* %330, align 4, !tbaa !14778, !noelle.pdg.inst.id !818" (0.000000e+00%)
Noelle:     Loop "  %377 = lshr i64 %376, 16, !noelle.pdg.inst.id !15147" (0.000000e+00%)
Noelle:     Loop "  %469 = lshr i64 %468, 16, !noelle.pdg.inst.id !15246" (0.000000e+00%)
Noelle:     Loop "  %529 = lshr i64 %528, 16, !noelle.pdg.inst.id !15309" (0.000000e+00%)
Noelle:     Loop "  %613 = lshr i64 %612, 16, !noelle.pdg.inst.id !15399" (0.000000e+00%)
Noelle:  Function "finish_input_tga"
Noelle:  Function "read_rle_pixel"
Noelle:     Loop "  %35 = tail call i32 @getc(%struct._IO_FILE* %3), !noelle.pdg.inst.id !41" (0.000000e+00%)
Noelle:  Function "read_non_rle_pixel"
Noelle:     Loop "  %8 = tail call i32 @getc(%struct._IO_FILE* %3), !noelle.pdg.inst.id !34" (0.000000e+00%)
Noelle:  Function "get_8bit_row"
Noelle:     Loop "  %22 = load void (%struct._tga_source_struct*)*, void (%struct._tga_source_struct*)** %15, align 8, !tbaa !102, !noelle.pdg.inst.id !46" (0.000000e+00%)
Noelle:  Function "get_16bit_row"
Noelle:     Loop "  %19 = load void (%struct._tga_source_struct*)*, void (%struct._tga_source_struct*)** %12, align 8, !tbaa !93, !noelle.pdg.inst.id !44" (0.000000e+00%)
Noelle:  Function "get_24bit_row"
Noelle:     Loop "  %20 = load void (%struct._tga_source_struct*)*, void (%struct._tga_source_struct*)** %12, align 8, !tbaa !90, !noelle.pdg.inst.id !44" (0.000000e+00%)
Noelle:  Function "get_8bit_gray_row"
Noelle:     Loop "  %17 = load void (%struct._tga_source_struct*)*, void (%struct._tga_source_struct*)** %12, align 8, !tbaa !77, !noelle.pdg.inst.id !44" (0.000000e+00%)
Noelle:  Function "preload_image"
Noelle:     Loop "  %37 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %15, align 8, !tbaa !196, !noelle.pdg.inst.id !116" (0.000000e+00%)
Noelle:     Loop "  store i64 %20, i64* %11, align 8, !tbaa !189, !noelle.pdg.inst.id !57" (0.000000e+00%)
Noelle:  Function "jpeg_write_tables"
Noelle:  Function "jinit_read_bmp"
Noelle:  Function "start_input_bmp"
Noelle:     Loop "  %461 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8, !tbaa !6906, !noelle.pdg.inst.id !494" (0.000000e+00%)
Noelle:     Loop "  %411 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8, !tbaa !6906, !noelle.pdg.inst.id !428" (0.000000e+00%)
Noelle:     Loop "  %550 = add nsw i64 %549, -1, !noelle.pdg.inst.id !7413" (0.000000e+00%)
Noelle:  Function "finish_input_bmp"
Noelle:  Function "preload_image.9"
Noelle:     Loop "  %55 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %18, align 8, !tbaa !371, !noelle.pdg.inst.id !227" (0.000000e+00%)
Noelle:     Loop "  %67 = tail call i32 @getc(%struct._IO_FILE* %4), !noelle.pdg.inst.id !48" (0.000000e+00%)
Noelle:     Loop "  store i64 %23, i64* %14, align 8, !tbaa !364, !noelle.pdg.inst.id !72" (0.000000e+00%)
Noelle:     Loop "  %39 = tail call i32 @getc(%struct._IO_FILE* %4), !noelle.pdg.inst.id !44" (0.000000e+00%)
Noelle:  Function "write_any_marker"
Noelle:     Loop "  %99 = add i32 %97, -1, !noelle.pdg.inst.id !606" (0.000000e+00%)
Noelle:  Function "write_tables_only"
Noelle:  Function "get_8bit_row.10"
Noelle:     Loop "  %55 = getelementptr inbounds i8, i8* %54, i64 1, !noelle.pdg.inst.id !127" (0.000000e+00%)
Noelle:  Function "get_24bit_row.11"
Noelle:     Loop "  %44 = getelementptr inbounds i8, i8* %43, i64 1, !noelle.pdg.inst.id !114" (0.000000e+00%)
TimeSaved:    There are 353 loops in the program we are going to consider
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 45
TimeSaved: LoopSelector:      Function: "get_8bit_row.10"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %55 = getelementptr inbounds i8, i8* %54, i64 1, !noelle.pdg.inst.id !127"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 109
TimeSaved: LoopSelector:      Function: "write_any_marker"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %99 = add i32 %97, -1, !noelle.pdg.inst.id !606"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 43
TimeSaved: LoopSelector:      Function: "preload_image.9"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  store i64 %23, i64* %14, align 8, !tbaa !364, !noelle.pdg.inst.id !72"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 44
TimeSaved: LoopSelector:      Function: "preload_image.9"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %39 = tail call i32 @getc(%struct._IO_FILE* %4), !noelle.pdg.inst.id !44"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 41
TimeSaved: LoopSelector:      Function: "preload_image.9"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %55 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %18, align 8, !tbaa !371, !noelle.pdg.inst.id !227"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 42
TimeSaved: LoopSelector:      Function: "preload_image.9"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %67 = tail call i32 @getc(%struct._IO_FILE* %4), !noelle.pdg.inst.id !48"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [64 x i8], align 16, !noelle.pdg.inst.id !6899
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [14 x i8], align 1, !noelle.pdg.inst.id !6898
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [64 x i8], align 16, !noelle.pdg.inst.id !6899
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [14 x i8], align 1, !noelle.pdg.inst.id !6898
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 39
TimeSaved: LoopSelector:      Function: "start_input_bmp"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %411 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8, !tbaa !6906, !noelle.pdg.inst.id !428"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [64 x i8], align 16, !noelle.pdg.inst.id !6899
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [14 x i8], align 1, !noelle.pdg.inst.id !6898
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [64 x i8], align 16, !noelle.pdg.inst.id !6899
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [14 x i8], align 1, !noelle.pdg.inst.id !6898
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 38
TimeSaved: LoopSelector:      Function: "start_input_bmp"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %461 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8, !tbaa !6906, !noelle.pdg.inst.id !494"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 37
TimeSaved: LoopSelector:      Function: "preload_image"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  store i64 %20, i64* %11, align 8, !tbaa !189, !noelle.pdg.inst.id !57"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 35
TimeSaved: LoopSelector:      Function: "get_8bit_gray_row"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %17 = load void (%struct._tga_source_struct*)*, void (%struct._tga_source_struct*)** %12, align 8, !tbaa !77, !noelle.pdg.inst.id !44"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 34
TimeSaved: LoopSelector:      Function: "get_24bit_row"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %20 = load void (%struct._tga_source_struct*)*, void (%struct._tga_source_struct*)** %12, align 8, !tbaa !90, !noelle.pdg.inst.id !44"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 33
TimeSaved: LoopSelector:      Function: "get_16bit_row"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %19 = load void (%struct._tga_source_struct*)*, void (%struct._tga_source_struct*)** %12, align 8, !tbaa !93, !noelle.pdg.inst.id !44"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 32
TimeSaved: LoopSelector:      Function: "get_8bit_row"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %22 = load void (%struct._tga_source_struct*)*, void (%struct._tga_source_struct*)** %15, align 8, !tbaa !102, !noelle.pdg.inst.id !46"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 31
TimeSaved: LoopSelector:      Function: "read_non_rle_pixel"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %8 = tail call i32 @getc(%struct._IO_FILE* %3), !noelle.pdg.inst.id !34"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 30
TimeSaved: LoopSelector:      Function: "read_rle_pixel"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %35 = tail call i32 @getc(%struct._IO_FILE* %3), !noelle.pdg.inst.id !41"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.working_state, align 16, !noelle.pdg.inst.id !14745
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.working_state, align 16, !noelle.pdg.inst.id !14745
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 265
TimeSaved: LoopSelector:      Function: "encode_mcu_huff"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %140 = getelementptr inbounds %struct.working_state, %struct.working_state* %3, i64 0, i32 2, i32 2, i64 %139, !noelle.pdg.inst.id !14895"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.working_state, align 16, !noelle.pdg.inst.id !14745
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.working_state, align 16, !noelle.pdg.inst.id !14745
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 264
TimeSaved: LoopSelector:      Function: "encode_mcu_huff"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %49 = lshr i64 %48, 16, !noelle.pdg.inst.id !14815"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 181
TimeSaved: LoopSelector:      Function: "grayscale_convert"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %23 = load i8**, i8*** %2, align 8, !tbaa !68, !noelle.pdg.inst.id !69"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 182
TimeSaved: LoopSelector:      Function: "grayscale_convert"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %31 = load i8, i8* %29, align 1, !tbaa !79, !noelle.pdg.inst.id !80"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 178
TimeSaved: LoopSelector:      Function: "grayscale_convert"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %90 = load i8**, i8*** %2, align 8, !tbaa !68, !noelle.pdg.inst.id !167"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 179
TimeSaved: LoopSelector:      Function: "grayscale_convert"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %98 = load i8, i8* %96, align 1, !tbaa !79, !noelle.pdg.inst.id !177"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 180
TimeSaved: LoopSelector:      Function: "grayscale_convert"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %77 = load i8, i8* %75, align 1, !tbaa !79, !noelle.pdg.inst.id !148"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %7 = alloca [64 x i32], align 16, !noelle.pdg.inst.id !302
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca i32, align 4, !noelle.pdg.inst.id !300
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca i64, align 8, !noelle.pdg.inst.id !301
ClonableMemoryObject:   There are RAW memory data dependences between loop iterations
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %7 = alloca [64 x i32], align 16, !noelle.pdg.inst.id !302
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca i32, align 4, !noelle.pdg.inst.id !300
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca i64, align 8, !noelle.pdg.inst.id !301
ClonableMemoryObject:   There are RAW memory data dependences between loop iterations
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %7 = alloca [64 x i32], align 16, !noelle.pdg.inst.id !302
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca i32, align 4, !noelle.pdg.inst.id !300
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca i64, align 8, !noelle.pdg.inst.id !301
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %7 = alloca [64 x i32], align 16, !noelle.pdg.inst.id !302
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca i32, align 4, !noelle.pdg.inst.id !300
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca i64, align 8, !noelle.pdg.inst.id !301
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 47
TimeSaved: LoopSelector:      Function: "read_quant_tables"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %24 = icmp eq i32 %23, 4, !noelle.pdg.inst.id !324"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 48
TimeSaved: LoopSelector:      Function: "read_quant_tables"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %34 = call fastcc i32 @read_text_integer(%struct._IO_FILE* nonnull %12, i64* nonnull %6, i32* nonnull %5), !noelle.pdg.inst.id !58"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca i8, align 1, !noelle.pdg.inst.id !125
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca i8, align 1, !noelle.pdg.inst.id !124
ClonableMemoryObject:   There are RAW memory data dependences between loop iterations
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca i32, align 4, !noelle.pdg.inst.id !122
ClonableMemoryObject:   There are RAW memory data dependences between loop iterations
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca i32, align 4, !noelle.pdg.inst.id !123
ClonableMemoryObject:   There are RAW memory data dependences between loop iterations
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca i8, align 1, !noelle.pdg.inst.id !125
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca i8, align 1, !noelle.pdg.inst.id !124
ClonableMemoryObject:   There are RAW memory data dependences between loop iterations
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca i32, align 4, !noelle.pdg.inst.id !122
ClonableMemoryObject:   There are RAW memory data dependences between loop iterations
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca i32, align 4, !noelle.pdg.inst.id !123
ClonableMemoryObject:   There are RAW memory data dependences between loop iterations
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca i8, align 1, !noelle.pdg.inst.id !125
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca i8, align 1, !noelle.pdg.inst.id !124
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca i32, align 4, !noelle.pdg.inst.id !122
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca i32, align 4, !noelle.pdg.inst.id !123
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca i8, align 1, !noelle.pdg.inst.id !125
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca i8, align 1, !noelle.pdg.inst.id !124
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca i32, align 4, !noelle.pdg.inst.id !122
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca i32, align 4, !noelle.pdg.inst.id !123
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 58
TimeSaved: LoopSelector:      Function: "set_sample_factors"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %12 = load i8, i8* %11, align 1, !tbaa !136, !noelle.pdg.inst.id !34"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 59
TimeSaved: LoopSelector:      Function: "set_sample_factors"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %38 = load i8, i8* %37, align 1, !tbaa !136, !noelle.pdg.inst.id !79"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 54
TimeSaved: LoopSelector:      Function: "read_scan_integer"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %11 = load i16*, i16** %9, align 8, !tbaa !130, !noelle.pdg.inst.id !46"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 55
TimeSaved: LoopSelector:      Function: "read_scan_integer"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %20 = tail call i32 @getc(%struct._IO_FILE* %0) #21, !noelle.pdg.inst.id !53"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [100 x %struct.jpeg_scan_info], align 16, !noelle.pdg.inst.id !1225
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca i32, align 4, !noelle.pdg.inst.id !1223
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca i64, align 8, !noelle.pdg.inst.id !1224
ClonableMemoryObject:   There are RAW memory data dependences between loop iterations
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [100 x %struct.jpeg_scan_info], align 16, !noelle.pdg.inst.id !1225
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca i32, align 4, !noelle.pdg.inst.id !1223
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca i64, align 8, !noelle.pdg.inst.id !1224
ClonableMemoryObject:   There are RAW memory data dependences between loop iterations
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [100 x %struct.jpeg_scan_info], align 16, !noelle.pdg.inst.id !1225
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca i32, align 4, !noelle.pdg.inst.id !1223
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca i64, align 8, !noelle.pdg.inst.id !1224
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [100 x %struct.jpeg_scan_info], align 16, !noelle.pdg.inst.id !1225
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca i32, align 4, !noelle.pdg.inst.id !1223
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca i64, align 8, !noelle.pdg.inst.id !1224
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 52
TimeSaved: LoopSelector:      Function: "read_scan_script"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %23 = icmp eq i32 %22, 100, !noelle.pdg.inst.id !1248"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 53
TimeSaved: LoopSelector:      Function: "read_scan_script"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %36 = icmp eq i64 %35, 4, !noelle.pdg.inst.id !1264"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 49
TimeSaved: LoopSelector:      Function: "read_text_integer"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %4 = tail call fastcc i32 @text_getc(%struct._IO_FILE* %0), !noelle.pdg.inst.id !36"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 103
TimeSaved: LoopSelector:      Function: "select_scan_parameters"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %84 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %3, i64 %11, i32 1, i64 %83, !noelle.pdg.inst.id !185"
TimeSaved: LoopSelector:      Coverage: 1.146170e-07%
TimeSaved: LoopSelector:      Whole-program savings = 1.146170e-07%
TimeSaved: LoopSelector:      Loop savings = 1.000000e+02%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 106
TimeSaved: LoopSelector:      Function: "per_scan_setup"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %68 = getelementptr inbounds %struct.jpeg_compress_struct.275, %struct.jpeg_compress_struct.275* %0, i64 0, i32 42, i64 %67, !noelle.pdg.inst.id !268"
TimeSaved: LoopSelector:      Coverage: 3.438511e-07%
TimeSaved: LoopSelector:      Whole-program savings = 3.151969e-07%
TimeSaved: LoopSelector:      Loop savings = 9.166667e+01%
TimeSaved: LoopSelector:    Loop 108
TimeSaved: LoopSelector:      Function: "per_scan_setup"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %116 = load i32, i32* %60, align 8, !tbaa !214, !noelle.pdg.inst.id !133"
TimeSaved: LoopSelector:      Coverage: 4.457330e-08%
TimeSaved: LoopSelector:      Whole-program savings = 4.457330e-08%
TimeSaved: LoopSelector:      Loop savings = 1.000000e+02%
TimeSaved: LoopSelector:    Loop 107
TimeSaved: LoopSelector:      Function: "per_scan_setup"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %106 = load i32, i32* %60, align 8, !tbaa !214, !noelle.pdg.inst.id !125"
TimeSaved: LoopSelector:      Coverage: 3.183807e-08%
TimeSaved: LoopSelector:      Whole-program savings = 3.183807e-08%
TimeSaved: LoopSelector:      Loop savings = 1.000000e+02%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 326
TimeSaved: LoopSelector:      Function: "alloc_small"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %59 = lshr i64 %58, 1, !noelle.pdg.inst.id !501"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 126
TimeSaved: LoopSelector:      Function: "pre_process_context"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %27 = load i32, i32* %2, align 4, !tbaa !328, !noelle.pdg.inst.id !61"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 127
TimeSaved: LoopSelector:      Function: "pre_process_context"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %90 = getelementptr inbounds %struct.my_prep_controller, %struct.my_prep_controller* %10, i64 0, i32 1, i64 %89, !noelle.pdg.inst.id !415"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 129
TimeSaved: LoopSelector:      Function: "pre_process_context"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %52 = icmp slt i32 %50, 1, !noelle.pdg.inst.id !372"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 128
TimeSaved: LoopSelector:      Function: "pre_process_context"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  tail call void @jcopy_sample_rows(i8** %91, i32 %95, i8** %91, i32 %96, i32 1, i32 %92) #20, !noelle.pdg.inst.id !49"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 130
TimeSaved: LoopSelector:      Function: "pre_process_context"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %56 = load i8**, i8*** %54, align 8, !tbaa !379, !noelle.pdg.inst.id !106"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 325
TimeSaved: LoopSelector:      Function: "alloc_small"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %35 = getelementptr inbounds %union.small_pool_struct, %union.small_pool_struct* %34, i64 0, i32 0, i32 2, !noelle.pdg.inst.id !469"
TimeSaved: LoopSelector:      Coverage: 2.316219e-07%
TimeSaved: LoopSelector:      Whole-program savings = 5.571662e-09%
TimeSaved: LoopSelector:      Loop savings = 2.405498e+00%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 67
TimeSaved: LoopSelector:      Function: "jpeg_set_linear_quality"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %90 = getelementptr inbounds [64 x i32], [64 x i32]* @jpeg_set_linear_quality.std_chrominance_quant_tbl, i64 0, i64 %89, !noelle.pdg.inst.id !297"
TimeSaved: LoopSelector:      Coverage: 9.161404e-07%
TimeSaved: LoopSelector:      Whole-program savings = 9.161404e-07%
TimeSaved: LoopSelector:      Loop savings = 1.000000e+02%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 259
TimeSaved: LoopSelector:      Function: "start_pass_huff"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %75 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 42, i64 %74, !noelle.pdg.inst.id !629"
TimeSaved: LoopSelector:      Coverage: 4.775710e-09%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = 0.000000e+00%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 65
TimeSaved: LoopSelector:      Function: "jpeg_set_linear_quality"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %41 = getelementptr inbounds [64 x i32], [64 x i32]* @jpeg_set_linear_quality.std_luminance_quant_tbl, i64 0, i64 %40, !noelle.pdg.inst.id !239"
TimeSaved: LoopSelector:      Coverage: 9.161404e-07%
TimeSaved: LoopSelector:      Whole-program savings = 9.161404e-07%
TimeSaved: LoopSelector:      Loop savings = 1.000000e+02%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 111
TimeSaved: LoopSelector:      Function: "write_frame_header"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %43 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %40, i64 0, i32 5, !noelle.pdg.inst.id !140"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %10 = alloca i32, align 4, !noelle.pdg.inst.id !9162
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %10 = alloca i32, align 4, !noelle.pdg.inst.id !9162 can be cloned
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %9 = alloca i8, align 1, !noelle.pdg.inst.id !9161
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %9 = alloca i8, align 1, !noelle.pdg.inst.id !9161 can be cloned
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %8 = alloca i64, align 8, !noelle.pdg.inst.id !9160
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %8 = alloca i64, align 8, !noelle.pdg.inst.id !9160 can be cloned
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %7 = alloca i8, align 1, !noelle.pdg.inst.id !9159
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %7 = alloca i8, align 1, !noelle.pdg.inst.id !9159 can be cloned
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca i32, align 4, !noelle.pdg.inst.id !9157
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca i64, align 8, !noelle.pdg.inst.id !9158
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %6 = alloca i64, align 8, !noelle.pdg.inst.id !9158 can be cloned
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %10 = alloca i32, align 4, !noelle.pdg.inst.id !9162
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %10 = alloca i32, align 4, !noelle.pdg.inst.id !9162 can be cloned
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %9 = alloca i8, align 1, !noelle.pdg.inst.id !9161
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %9 = alloca i8, align 1, !noelle.pdg.inst.id !9161 can be cloned
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %8 = alloca i64, align 8, !noelle.pdg.inst.id !9160
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %8 = alloca i64, align 8, !noelle.pdg.inst.id !9160 can be cloned
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %7 = alloca i8, align 1, !noelle.pdg.inst.id !9159
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %7 = alloca i8, align 1, !noelle.pdg.inst.id !9159 can be cloned
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca i32, align 4, !noelle.pdg.inst.id !9157
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca i64, align 8, !noelle.pdg.inst.id !9158
ClonableMemoryObject:   It is clonable
ClonableMemoryObject: Exit
MemoryCloningAnalysis:   The stack object   %6 = alloca i64, align 8, !noelle.pdg.inst.id !9158 can be cloned
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 1
TimeSaved: LoopSelector:      Function: "parse_switches"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %34 = sext i32 %33 to i64, !noelle.pdg.inst.id !9202"
TimeSaved: LoopSelector:      Coverage: 3.323098e-06%
TimeSaved: LoopSelector:      Whole-program savings = 1.138211e-07%
TimeSaved: LoopSelector:      Loop savings = 3.425150e+00%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [10 x [64 x i32]], align 16, !noelle.pdg.inst.id !12353
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [10 x i32], align 16, !noelle.pdg.inst.id !12352
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [10 x [64 x i32]], align 16, !noelle.pdg.inst.id !12353
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [10 x i32], align 16, !noelle.pdg.inst.id !12352
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [10 x [64 x i32]], align 16, !noelle.pdg.inst.id !12353
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [10 x i32], align 16, !noelle.pdg.inst.id !12352
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [10 x [64 x i32]], align 16, !noelle.pdg.inst.id !12353
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [10 x i32], align 16, !noelle.pdg.inst.id !12352
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [10 x [64 x i32]], align 16, !noelle.pdg.inst.id !12353
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [10 x i32], align 16, !noelle.pdg.inst.id !12352
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [10 x [64 x i32]], align 16, !noelle.pdg.inst.id !12353
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [10 x i32], align 16, !noelle.pdg.inst.id !12352
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [10 x [64 x i32]], align 16, !noelle.pdg.inst.id !12353
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [10 x i32], align 16, !noelle.pdg.inst.id !12352
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [10 x [64 x i32]], align 16, !noelle.pdg.inst.id !12353
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [10 x i32], align 16, !noelle.pdg.inst.id !12352
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [10 x [64 x i32]], align 16, !noelle.pdg.inst.id !12353
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [10 x i32], align 16, !noelle.pdg.inst.id !12352
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [10 x [64 x i32]], align 16, !noelle.pdg.inst.id !12353
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [10 x i32], align 16, !noelle.pdg.inst.id !12352
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [10 x [64 x i32]], align 16, !noelle.pdg.inst.id !12353
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [10 x i32], align 16, !noelle.pdg.inst.id !12352
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [10 x [64 x i32]], align 16, !noelle.pdg.inst.id !12353
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [10 x i32], align 16, !noelle.pdg.inst.id !12352
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [10 x [64 x i32]], align 16, !noelle.pdg.inst.id !12353
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [10 x i32], align 16, !noelle.pdg.inst.id !12352
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [10 x [64 x i32]], align 16, !noelle.pdg.inst.id !12353
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [10 x i32], align 16, !noelle.pdg.inst.id !12352
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [10 x [64 x i32]], align 16, !noelle.pdg.inst.id !12353
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [10 x i32], align 16, !noelle.pdg.inst.id !12352
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [10 x [64 x i32]], align 16, !noelle.pdg.inst.id !12353
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [10 x i32], align 16, !noelle.pdg.inst.id !12352
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 94
TimeSaved: LoopSelector:      Function: "jinit_c_master_control"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %340 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %240, i64 0, i32 1, i64 %339, !noelle.pdg.inst.id !12751"
TimeSaved: LoopSelector:      Coverage: 4.493147e-06%
TimeSaved: LoopSelector:      Whole-program savings = 2.260503e-06%
TimeSaved: LoopSelector:      Loop savings = 5.031001e+01%
TimeSaved: LoopSelector:    Loop 97
TimeSaved: LoopSelector:      Function: "jinit_c_master_control"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %368 = getelementptr inbounds [10 x [64 x i32]], [10 x [64 x i32]]* %4, i64 0, i64 %342, i64 %367, !noelle.pdg.inst.id !12793"
TimeSaved: LoopSelector:      Coverage: 2.633008e-06%
TimeSaved: LoopSelector:      Whole-program savings = 1.820342e-06%
TimeSaved: LoopSelector:      Loop savings = 6.913543e+01%
TimeSaved: LoopSelector:    Loop 96
TimeSaved: LoopSelector:      Function: "jinit_c_master_control"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %390 = getelementptr inbounds [10 x [64 x i32]], [10 x [64 x i32]]* %4, i64 0, i64 %342, i64 %389, !noelle.pdg.inst.id !12816"
TimeSaved: LoopSelector:      Coverage: 1.675478e-06%
TimeSaved: LoopSelector:      Whole-program savings = 1.064187e-06%
TimeSaved: LoopSelector:      Loop savings = 6.351544e+01%
TimeSaved: LoopSelector:    Loop 92
TimeSaved: LoopSelector:      Function: "jinit_c_master_control"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %242 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %240, i64 0, i32 0, !noelle.pdg.inst.id !12640"
TimeSaved: LoopSelector:      Coverage: 5.116378e-06%
TimeSaved: LoopSelector:      Whole-program savings = 8.246060e-07%
TimeSaved: LoopSelector:      Loop savings = 1.611699e+01%
TimeSaved: LoopSelector:    Loop 93
TimeSaved: LoopSelector:      Function: "jinit_c_master_control"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %258 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %240, i64 0, i32 1, i64 %257, !noelle.pdg.inst.id !12659"
TimeSaved: LoopSelector:      Coverage: 1.862527e-07%
TimeSaved: LoopSelector:      Whole-program savings = 1.098413e-07%
TimeSaved: LoopSelector:      Loop savings = 5.897436e+01%
TimeSaved: LoopSelector:    Loop 99
TimeSaved: LoopSelector:      Function: "jinit_c_master_control"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %430 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %240, i64 0, i32 1, i64 %429, !noelle.pdg.inst.id !12865"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 95
TimeSaved: LoopSelector:      Function: "jinit_c_master_control"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %403 = getelementptr inbounds [10 x [64 x i32]], [10 x [64 x i32]]* %4, i64 0, i64 %342, i64 %402, !noelle.pdg.inst.id !12832"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 98
TimeSaved: LoopSelector:      Function: "jinit_c_master_control"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %355 = getelementptr inbounds [10 x [64 x i32]], [10 x [64 x i32]]* %4, i64 0, i64 %342, i64 %354, !noelle.pdg.inst.id !12779"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 61
TimeSaved: LoopSelector:      Function: "jpeg_finish_compress"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %42 = getelementptr inbounds %struct.jpeg_comp_master, %struct.jpeg_comp_master* %41, i64 0, i32 0, !noelle.pdg.inst.id !617"
TimeSaved: LoopSelector:      Coverage: 1.203041e-04%
TimeSaved: LoopSelector:      Whole-program savings = 1.901131e-05%
TimeSaved: LoopSelector:      Loop savings = 1.580271e+01%
TimeSaved: LoopSelector:    Loop 62
TimeSaved: LoopSelector:      Function: "jpeg_finish_compress"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %48 = load %struct.jpeg_progress_mgr*, %struct.jpeg_progress_mgr** %37, align 8, !tbaa !629, !noelle.pdg.inst.id !148"
TimeSaved: LoopSelector:      Coverage: 1.200327e-04%
TimeSaved: LoopSelector:      Whole-program savings = 1.894047e-05%
TimeSaved: LoopSelector:      Loop savings = 1.577942e+01%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 211
TimeSaved: LoopSelector:      Function: "h2v1_downsample"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %74 = getelementptr inbounds i8*, i8** %2, i64 %73, !noelle.pdg.inst.id !364"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 212
TimeSaved: LoopSelector:      Function: "h2v1_downsample"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %81 = load i8, i8* %79, align 1, !tbaa !315, !noelle.pdg.inst.id !111"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [18 x i8], align 16, !noelle.pdg.inst.id !3021
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [18 x i8], align 16, !noelle.pdg.inst.id !3021
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 28
TimeSaved: LoopSelector:      Function: "start_input_tga"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %214 = add nsw i32 %213, -1, !noelle.pdg.inst.id !3256"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 219
TimeSaved: LoopSelector:      Function: "h2v2_downsample"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %75 = or i64 %74, 1, !noelle.pdg.inst.id !400"
TimeSaved: LoopSelector:      Coverage: 6.950073e-01%
TimeSaved: LoopSelector:      Whole-program savings = 6.949737e-01%
TimeSaved: LoopSelector:      Loop savings = 9.999516e+01%
TimeSaved: LoopSelector:    Loop 220
TimeSaved: LoopSelector:      Function: "h2v2_downsample"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %86 = load i8, i8* %84, align 1, !tbaa !347, !noelle.pdg.inst.id !114"
TimeSaved: LoopSelector:      Coverage: 6.949175e-01%
TimeSaved: LoopSelector:      Whole-program savings = 6.949175e-01%
TimeSaved: LoopSelector:      Loop savings = 1.000000e+02%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %8 = alloca [64 x float], align 16, !noelle.pdg.inst.id !204
ClonableMemoryObject:   There are RAW memory data dependences between loop iterations
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %8 = alloca [64 x float], align 16, !noelle.pdg.inst.id !204
ClonableMemoryObject:   There are RAW memory data dependences between loop iterations
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %8 = alloca [64 x float], align 16, !noelle.pdg.inst.id !204
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %8 = alloca [64 x float], align 16, !noelle.pdg.inst.id !204
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %8 = alloca [64 x float], align 16, !noelle.pdg.inst.id !204
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %8 = alloca [64 x float], align 16, !noelle.pdg.inst.id !204
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 317
TimeSaved: LoopSelector:      Function: "forward_DCT_float"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %28 = zext i32 %27 to i64, !noelle.pdg.inst.id !237"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 319
TimeSaved: LoopSelector:      Function: "forward_DCT_float"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %85 = getelementptr inbounds [64 x float], [64 x float]* %8, i64 0, i64 %84, !noelle.pdg.inst.id !293"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 318
TimeSaved: LoopSelector:      Function: "forward_DCT_float"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %31 = getelementptr inbounds i8*, i8** %21, i64 %29, !noelle.pdg.inst.id !242"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 50
TimeSaved: LoopSelector:      Function: "read_text_integer"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %24 = load i16*, i16** %.lcssa20, align 8, !tbaa !80, !noelle.pdg.inst.id !54"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 115
TimeSaved: LoopSelector:      Function: "emit_dqt"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %197 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %196, !noelle.pdg.inst.id !1535"
TimeSaved: LoopSelector:      Coverage: 2.443572e-06%
TimeSaved: LoopSelector:      Whole-program savings = 2.036044e-06%
TimeSaved: LoopSelector:      Loop savings = 8.332248e+01%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 118
TimeSaved: LoopSelector:      Function: "emit_dht"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %225 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %11, i64 0, i32 1, i64 %224, !noelle.pdg.inst.id !1424"
TimeSaved: LoopSelector:      Coverage: 5.456249e-06%
TimeSaved: LoopSelector:      Whole-program savings = 4.364203e-06%
TimeSaved: LoopSelector:      Loop savings = 7.998541e+01%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 68
TimeSaved: LoopSelector:      Function: "jpeg_set_linear_quality"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %75 = getelementptr inbounds [64 x i32], [64 x i32]* @jpeg_set_linear_quality.std_chrominance_quant_tbl, i64 0, i64 %74, !noelle.pdg.inst.id !280"
TimeSaved: LoopSelector:      Coverage: 9.161404e-07%
TimeSaved: LoopSelector:      Whole-program savings = 9.161404e-07%
TimeSaved: LoopSelector:      Loop savings = 1.000000e+02%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 335
TimeSaved: LoopSelector:      Function: "realize_virt_arrays"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %92 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %91, i64 0, i32 0, !noelle.pdg.inst.id !5654"
TimeSaved: LoopSelector:      Coverage: 1.116720e-06%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = 0.000000e+00%
TimeSaved: LoopSelector:    Loop 336
TimeSaved: LoopSelector:      Function: "realize_virt_arrays"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %143 = sub i32 %119, %141, !noelle.pdg.inst.id !5713"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 337
TimeSaved: LoopSelector:      Function: "realize_virt_arrays"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %191 = add i32 %189, 1, !noelle.pdg.inst.id !5761"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 338
TimeSaved: LoopSelector:      Function: "realize_virt_arrays"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %206 = add i32 %205, 1, !noelle.pdg.inst.id !5787"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 102
TimeSaved: LoopSelector:      Function: "select_scan_parameters"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %32 = getelementptr inbounds %struct.jpeg_scan_info, %struct.jpeg_scan_info* %3, i64 %11, i32 1, i64 %30, !noelle.pdg.inst.id !112"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !325
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !325
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 25
TimeSaved: LoopSelector:      Function: "LZWReadByte"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %39 = tail call fastcc i32 @GetCode(%struct.gif_source_struct* nonnull %0), !noelle.pdg.inst.id !39"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !561
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [33 x i8], align 16, !noelle.pdg.inst.id !559
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !560
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !561
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [33 x i8], align 16, !noelle.pdg.inst.id !559
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !560
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !561
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [33 x i8], align 16, !noelle.pdg.inst.id !559
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !560
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !561
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [33 x i8], align 16, !noelle.pdg.inst.id !559
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !560
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 257
TimeSaved: LoopSelector:      Function: "jpeg_gen_optimal_table"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  br label %._crit_edge52, !noelle.loop.id !760, !noelle.pdg.inst.id !761"
TimeSaved: LoopSelector:      Coverage: 6.879148e-04%
TimeSaved: LoopSelector:      Whole-program savings = 5.893250e-04%
TimeSaved: LoopSelector:      Loop savings = 8.566832e+01%
TimeSaved: LoopSelector:    Loop 258
TimeSaved: LoopSelector:      Function: "jpeg_gen_optimal_table"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %149 = getelementptr inbounds [257 x i32], [257 x i32]* %5, i64 0, i64 %146, !noelle.pdg.inst.id !765"
TimeSaved: LoopSelector:      Coverage: 6.858851e-04%
TimeSaved: LoopSelector:      Whole-program savings = 5.554764e-04%
TimeSaved: LoopSelector:      Loop savings = 8.098680e+01%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 327
TimeSaved: LoopSelector:      Function: "alloc_sarray"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %29 = sub i32 %3, %27, !noelle.pdg.inst.id !199"
TimeSaved: LoopSelector:      Coverage: 5.547783e-07%
TimeSaved: LoopSelector:      Whole-program savings = 2.746033e-07%
TimeSaved: LoopSelector:      Loop savings = 4.949785e+01%
TimeSaved: LoopSelector:    Loop 329
TimeSaved: LoopSelector:      Function: "alloc_sarray"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %58 = add i32 %57, 1, !noelle.pdg.inst.id !245"
TimeSaved: LoopSelector:      Coverage: 1.695377e-07%
TimeSaved: LoopSelector:      Whole-program savings = 1.369037e-07%
TimeSaved: LoopSelector:      Loop savings = 8.075117e+01%
TimeSaved: LoopSelector:    Loop 328
TimeSaved: LoopSelector:      Function: "alloc_sarray"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %43 = add i32 %41, 1, !noelle.pdg.inst.id !218"
TimeSaved: LoopSelector:      Coverage: 5.492067e-08%
TimeSaved: LoopSelector:      Whole-program savings = 4.457330e-08%
TimeSaved: LoopSelector:      Loop savings = 8.115942e+01%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !184
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [257 x i8], align 16, !noelle.pdg.inst.id !183
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !184
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [257 x i8], align 16, !noelle.pdg.inst.id !183
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 247
TimeSaved: LoopSelector:      Function: "jpeg_make_c_derived_tbl"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %143 = getelementptr inbounds [257 x i8], [257 x i8]* %4, i64 0, i64 %141, !noelle.pdg.inst.id !396"
TimeSaved: LoopSelector:      Coverage: 4.483596e-06%
TimeSaved: LoopSelector:      Whole-program savings = 4.483596e-06%
TimeSaved: LoopSelector:      Loop savings = 1.000000e+02%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 51
TimeSaved: LoopSelector:      Function: "text_getc"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %4 = tail call i32 @getc(%struct._IO_FILE* %0), !noelle.pdg.inst.id !34"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 116
TimeSaved: LoopSelector:      Function: "emit_dqt"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %150 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %149, !noelle.pdg.inst.id !1494"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 3
TimeSaved: LoopSelector:      Function: "read_pbm_integer"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %4 = tail call i32 @getc(%struct._IO_FILE* %1) #20, !noelle.pdg.inst.id !35"
TimeSaved: LoopSelector:      Coverage: 3.661378e-08%
TimeSaved: LoopSelector:      Whole-program savings = 4.775710e-09%
TimeSaved: LoopSelector:      Loop savings = 1.304348e+01%
TimeSaved: LoopSelector:    Loop 4
TimeSaved: LoopSelector:      Function: "read_pbm_integer"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %6 = tail call i32 @getc(%struct._IO_FILE* %1) #20, !noelle.pdg.inst.id !44"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 333
TimeSaved: LoopSelector:      Function: "realize_virt_arrays"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %11 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %8, i64 0, i32 0, !noelle.pdg.inst.id !5540"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 144
TimeSaved: LoopSelector:      Function: "compress_first_pass"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %21 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %15, align 8, !tbaa !2126, !noelle.pdg.inst.id !1262"
TimeSaved: LoopSelector:      Coverage: 7.514103e-05%
TimeSaved: LoopSelector:      Whole-program savings = 6.882276e-05%
TimeSaved: LoopSelector:      Loop savings = 9.159146e+01%
TimeSaved: LoopSelector:    Loop 145
TimeSaved: LoopSelector:      Function: "compress_first_pass"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %198 = getelementptr inbounds [64 x i16]*, [64 x i16]** %30, i64 %197, !noelle.pdg.inst.id !2336"
TimeSaved: LoopSelector:      Coverage: 1.860378e-05%
TimeSaved: LoopSelector:      Whole-program savings = 1.719972e-05%
TimeSaved: LoopSelector:      Loop savings = 9.245283e+01%
TimeSaved: LoopSelector:    Loop 159
TimeSaved: LoopSelector:      Function: "compress_first_pass"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %232 = getelementptr inbounds [64 x i16]*, [64 x i16]** %30, i64 %231, !noelle.pdg.inst.id !2387"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 154
TimeSaved: LoopSelector:      Function: "compress_first_pass"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %344 = getelementptr inbounds [64 x i16]*, [64 x i16]** %30, i64 %343, !noelle.pdg.inst.id !2533"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 162
TimeSaved: LoopSelector:      Function: "compress_first_pass"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %272 = getelementptr inbounds [64 x i16]*, [64 x i16]** %30, i64 %271, !noelle.pdg.inst.id !2440"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 153
TimeSaved: LoopSelector:      Function: "compress_first_pass"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %111 = getelementptr inbounds [64 x i16]*, [64 x i16]** %30, i64 %110, !noelle.pdg.inst.id !2239"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 151
TimeSaved: LoopSelector:      Function: "compress_first_pass"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %124 = getelementptr inbounds [64 x i16]*, [64 x i16]** %30, i64 %123, !noelle.pdg.inst.id !2251"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 149
TimeSaved: LoopSelector:      Function: "compress_first_pass"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %67 = getelementptr inbounds [64 x i16]*, [64 x i16]** %30, i64 %66, !noelle.pdg.inst.id !2186"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 146
TimeSaved: LoopSelector:      Function: "compress_first_pass"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %147 = getelementptr inbounds [64 x i16]*, [64 x i16]** %30, i64 %146, !noelle.pdg.inst.id !2278"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 155
TimeSaved: LoopSelector:      Function: "compress_first_pass"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %298 = getelementptr inbounds [64 x i16]*, [64 x i16]** %30, i64 %297, !noelle.pdg.inst.id !2474"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 166
TimeSaved: LoopSelector:      Function: "compress_first_pass"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %336 = getelementptr inbounds [64 x i16]*, [64 x i16]** %30, i64 %335, !noelle.pdg.inst.id !2524"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 165
TimeSaved: LoopSelector:      Function: "compress_first_pass"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %264 = getelementptr inbounds [64 x i16]*, [64 x i16]** %30, i64 %263, !noelle.pdg.inst.id !2430"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 150
TimeSaved: LoopSelector:      Function: "compress_first_pass"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %82 = getelementptr inbounds [64 x i16], [64 x i16]* %75, i64 %80, !noelle.pdg.inst.id !2202"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 147
TimeSaved: LoopSelector:      Function: "compress_first_pass"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %162 = getelementptr inbounds [64 x i16], [64 x i16]* %155, i64 %160, !noelle.pdg.inst.id !2290"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 152
TimeSaved: LoopSelector:      Function: "compress_first_pass"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %139 = getelementptr inbounds [64 x i16], [64 x i16]* %132, i64 %137, !noelle.pdg.inst.id !2263"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 156
TimeSaved: LoopSelector:      Function: "compress_first_pass"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %307 = getelementptr inbounds [64 x i16], [64 x i16]* %304, i64 %221, i64 0, !noelle.pdg.inst.id !2483"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 148
TimeSaved: LoopSelector:      Function: "compress_first_pass"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %190 = getelementptr inbounds [64 x i16], [64 x i16]* %155, i64 %188, !noelle.pdg.inst.id !2323"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 163
TimeSaved: LoopSelector:      Function: "compress_first_pass"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %281 = getelementptr inbounds [64 x i16], [64 x i16]* %278, i64 %221, i64 0, !noelle.pdg.inst.id !2449"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 160
TimeSaved: LoopSelector:      Function: "compress_first_pass"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %241 = getelementptr inbounds [64 x i16], [64 x i16]* %238, i64 %221, i64 0, !noelle.pdg.inst.id !2396"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 157
TimeSaved: LoopSelector:      Function: "compress_first_pass"
TimeSaved: LoopSelector:      Loop nesting level: 4
TimeSaved: LoopSelector:      "  %311 = getelementptr inbounds [64 x i16], [64 x i16]* %305, i64 %309, i64 0, !noelle.pdg.inst.id !2488"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 158
TimeSaved: LoopSelector:      Function: "compress_first_pass"
TimeSaved: LoopSelector:      Loop nesting level: 4
TimeSaved: LoopSelector:      "  %323 = getelementptr inbounds [64 x i16], [64 x i16]* %305, i64 %321, i64 0, !noelle.pdg.inst.id !2505"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 161
TimeSaved: LoopSelector:      Function: "compress_first_pass"
TimeSaved: LoopSelector:      Loop nesting level: 4
TimeSaved: LoopSelector:      "  %245 = getelementptr inbounds [64 x i16], [64 x i16]* %239, i64 %243, i64 0, !noelle.pdg.inst.id !2401"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 164
TimeSaved: LoopSelector:      Function: "compress_first_pass"
TimeSaved: LoopSelector:      Loop nesting level: 4
TimeSaved: LoopSelector:      "  %285 = getelementptr inbounds [64 x i16], [64 x i16]* %279, i64 %283, i64 0, !noelle.pdg.inst.id !2454"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 279
TimeSaved: LoopSelector:      Function: "start_pass_phuff"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %108 = getelementptr inbounds %struct.jpeg_compress_struct.253, %struct.jpeg_compress_struct.253* %0, i64 0, i32 42, i64 %107, !noelle.pdg.inst.id !766"
TimeSaved: LoopSelector:      Coverage: 4.454942e-06%
TimeSaved: LoopSelector:      Whole-program savings = 9.869801e-08%
TimeSaved: LoopSelector:      Loop savings = 2.215473e+00%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 278
TimeSaved: LoopSelector:      Function: "start_pass_phuff"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %45 = getelementptr inbounds %struct.jpeg_compress_struct.253, %struct.jpeg_compress_struct.253* %0, i64 0, i32 42, i64 %44, !noelle.pdg.inst.id !688"
TimeSaved: LoopSelector:      Coverage: 1.591903e-07%
TimeSaved: LoopSelector:      Whole-program savings = 1.273523e-08%
TimeSaved: LoopSelector:      Loop savings = 8.000000e+00%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 112
TimeSaved: LoopSelector:      Function: "write_scan_header"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %14 = getelementptr inbounds %struct.jpeg_compress_struct.297, %struct.jpeg_compress_struct.297* %0, i64 0, i32 42, i64 %13, !noelle.pdg.inst.id !4612"
TimeSaved: LoopSelector:      Coverage: 9.484561e-06%
TimeSaved: LoopSelector:      Whole-program savings = 9.417701e-06%
TimeSaved: LoopSelector:      Loop savings = 9.929507e+01%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 290
TimeSaved: LoopSelector:      Function: "encode_mcu_DC_refine"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %36 = load i32, i32* %30, align 8, !tbaa !370, !noelle.pdg.inst.id !93"
TimeSaved: LoopSelector:      Coverage: 5.445378e-02%
TimeSaved: LoopSelector:      Whole-program savings = 3.119072e-02%
TimeSaved: LoopSelector:      Loop savings = 5.727926e+01%
TimeSaved: LoopSelector:    Loop 291
TimeSaved: LoopSelector:      Function: "encode_mcu_DC_refine"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %57 = lshr i64 %55, 16, !noelle.pdg.inst.id !398"
TimeSaved: LoopSelector:      Coverage: 3.739181e-03%
TimeSaved: LoopSelector:      Whole-program savings = 3.059970e-03%
TimeSaved: LoopSelector:      Loop savings = 8.183530e+01%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 277
TimeSaved: LoopSelector:      Function: "start_pass_phuff"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %134 = getelementptr inbounds %struct.jpeg_compress_struct.253, %struct.jpeg_compress_struct.253* %0, i64 0, i32 42, i64 %133, !noelle.pdg.inst.id !798"
TimeSaved: LoopSelector:      Coverage: 1.176178e-05%
TimeSaved: LoopSelector:      Whole-program savings = 1.464551e-07%
TimeSaved: LoopSelector:      Loop savings = 1.245178e+00%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !184
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [257 x i8], align 16, !noelle.pdg.inst.id !183
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !184
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [257 x i8], align 16, !noelle.pdg.inst.id !183
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !184
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [257 x i8], align 16, !noelle.pdg.inst.id !183
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !184
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [257 x i8], align 16, !noelle.pdg.inst.id !183
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 245
TimeSaved: LoopSelector:      Function: "jpeg_make_c_derived_tbl"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %96 = sext i8 %92 to i32, !noelle.pdg.inst.id !334"
TimeSaved: LoopSelector:      Coverage: 5.938596e-06%
TimeSaved: LoopSelector:      Whole-program savings = 2.040820e-06%
TimeSaved: LoopSelector:      Loop savings = 3.436537e+01%
TimeSaved: LoopSelector:    Loop 246
TimeSaved: LoopSelector:      Function: "jpeg_make_c_derived_tbl"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %102 = add nsw i64 %100, 1, !noelle.pdg.inst.id !344"
TimeSaved: LoopSelector:      Coverage: 3.238728e-06%
TimeSaved: LoopSelector:      Whole-program savings = 1.288646e-06%
TimeSaved: LoopSelector:      Loop savings = 3.978865e+01%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [4 x i32], align 16, !noelle.pdg.inst.id !172
ClonableMemoryObject:   There are RAW memory data dependences between loop iterations
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [4 x i32], align 16, !noelle.pdg.inst.id !171
ClonableMemoryObject:   There are RAW memory data dependences between loop iterations
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [4 x i32], align 16, !noelle.pdg.inst.id !172
ClonableMemoryObject:   There are RAW memory data dependences between loop iterations
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [4 x i32], align 16, !noelle.pdg.inst.id !171
ClonableMemoryObject:   There are RAW memory data dependences between loop iterations
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 275
TimeSaved: LoopSelector:      Function: "finish_pass_gather"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %15 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 42, i64 %14, !noelle.pdg.inst.id !195"
TimeSaved: LoopSelector:      Coverage: 6.367614e-09%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = 0.000000e+00%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 346
TimeSaved: LoopSelector:      Function: "access_virt_barray"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %80 = mul nsw i64 %77, %47, !noelle.pdg.inst.id !473"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 117
TimeSaved: LoopSelector:      Function: "emit_dht"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %202 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %11, i64 0, i32 0, i64 %201, !noelle.pdg.inst.id !1401"
TimeSaved: LoopSelector:      Coverage: 2.539086e-06%
TimeSaved: LoopSelector:      Whole-program savings = 2.029677e-06%
TimeSaved: LoopSelector:      Loop savings = 7.993730e+01%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 306
TimeSaved: LoopSelector:      Function: "emit_eobrun"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %154 = lshr i64 %152, 16, !noelle.pdg.inst.id !1614"
TimeSaved: LoopSelector:      Coverage: 1.792058e-03%
TimeSaved: LoopSelector:      Whole-program savings = 1.466269e-03%
TimeSaved: LoopSelector:      Loop savings = 8.182038e+01%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [4 x [64 x i16]**], align 16, !noelle.pdg.inst.id !131
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [4 x [64 x i16]**], align 16, !noelle.pdg.inst.id !131
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 167
TimeSaved: LoopSelector:      Function: "compress_output"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %16 = getelementptr inbounds %struct.jpeg_compress_struct.363, %struct.jpeg_compress_struct.363* %0, i64 0, i32 42, i64 %15, !noelle.pdg.inst.id !155"
TimeSaved: LoopSelector:      Coverage: 2.039395e-04%
TimeSaved: LoopSelector:      Whole-program savings = 1.951642e-04%
TimeSaved: LoopSelector:      Loop savings = 9.569707e+01%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 322
TimeSaved: LoopSelector:      Function: "jpeg_fdct_islow"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %95 = load i32, i32* %94, align 4, !tbaa !34, !noelle.pdg.inst.id !142"
TimeSaved: LoopSelector:      Coverage: 1.100496e+00%
TimeSaved: LoopSelector:      Whole-program savings = 1.100496e+00%
TimeSaved: LoopSelector:      Loop savings = 1.000000e+02%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 350
TimeSaved: LoopSelector:      Function: "free_pool"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %36 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %35, i64 0, i32 10, !noelle.pdg.inst.id !530"
TimeSaved: LoopSelector:      Coverage: 2.547045e-08%
TimeSaved: LoopSelector:      Whole-program savings = 3.183807e-09%
TimeSaved: LoopSelector:      Loop savings = 1.250000e+01%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 321
TimeSaved: LoopSelector:      Function: "jpeg_fdct_islow"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %4 = load i32, i32* %3, align 4, !tbaa !34, !noelle.pdg.inst.id !38"
TimeSaved: LoopSelector:      Coverage: 1.079100e+00%
TimeSaved: LoopSelector:      Whole-program savings = 1.079100e+00%
TimeSaved: LoopSelector:      Loop savings = 1.000000e+02%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 334
TimeSaved: LoopSelector:      Function: "realize_virt_arrays"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %41 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %38, i64 0, i32 0, !noelle.pdg.inst.id !5582"
TimeSaved: LoopSelector:      Coverage: 7.083970e-08%
TimeSaved: LoopSelector:      Whole-program savings = 5.890043e-08%
TimeSaved: LoopSelector:      Loop savings = 8.314607e+01%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 349
TimeSaved: LoopSelector:      Function: "free_pool"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %22 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %21, i64 0, i32 10, !noelle.pdg.inst.id !503"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
Referencing:   %62 = shl nsw i64 %58, 3, !noelle.pdg.inst.id !654
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
Referencing:   %62 = shl nsw i64 %58, 3, !noelle.pdg.inst.id !654
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 122
TimeSaved: LoopSelector:      Function: "jinit_c_prep_controller"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %83 = mul i64 %62, %80, !noelle.pdg.inst.id !676"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 123
TimeSaved: LoopSelector:      Function: "jinit_c_prep_controller"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %140 = add nsw i64 %138, %60, !noelle.pdg.inst.id !739"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 124
TimeSaved: LoopSelector:      Function: "jinit_c_prep_controller"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %231 = add nsw i64 %230, %60, !noelle.pdg.inst.id !845"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 110
TimeSaved: LoopSelector:      Function: "write_frame_header"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %11 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %8, i64 0, i32 4, !noelle.pdg.inst.id !96"
TimeSaved: LoopSelector:      Coverage: 3.464778e-06%
TimeSaved: LoopSelector:      Whole-program savings = 3.464778e-06%
TimeSaved: LoopSelector:      Loop savings = 1.000000e+02%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !561
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [33 x i8], align 16, !noelle.pdg.inst.id !559
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !560
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !561
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [33 x i8], align 16, !noelle.pdg.inst.id !559
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !560
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !561
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [33 x i8], align 16, !noelle.pdg.inst.id !559
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !560
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !561
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [33 x i8], align 16, !noelle.pdg.inst.id !559
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !560
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !561
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [33 x i8], align 16, !noelle.pdg.inst.id !559
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !560
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !561
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [33 x i8], align 16, !noelle.pdg.inst.id !559
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !560
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 253
TimeSaved: LoopSelector:      Function: "jpeg_gen_optimal_table"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %108 = getelementptr inbounds [33 x i8], [33 x i8]* %4, i64 0, i64 %106, !noelle.pdg.inst.id !704"
TimeSaved: LoopSelector:      Coverage: 4.918186e-06%
TimeSaved: LoopSelector:      Whole-program savings = 1.394507e-06%
TimeSaved: LoopSelector:      Loop savings = 2.835410e+01%
TimeSaved: LoopSelector:    Loop 254
TimeSaved: LoopSelector:      Function: "jpeg_gen_optimal_table"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  br label %._crit_edge47, !noelle.loop.id !714, !noelle.pdg.inst.id !715"
TimeSaved: LoopSelector:      Coverage: 3.366080e-06%
TimeSaved: LoopSelector:      Whole-program savings = 2.403774e-07%
TimeSaved: LoopSelector:      Loop savings = 7.141168e+00%
TimeSaved: LoopSelector:    Loop 255
TimeSaved: LoopSelector:      Function: "jpeg_gen_optimal_table"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %116 = getelementptr inbounds [33 x i8], [33 x i8]* %4, i64 0, i64 %115, !noelle.pdg.inst.id !717"
TimeSaved: LoopSelector:      Coverage: 9.471825e-07%
TimeSaved: LoopSelector:      Whole-program savings = 4.457330e-08%
TimeSaved: LoopSelector:      Loop savings = 4.705882e+00%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !561
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [33 x i8], align 16, !noelle.pdg.inst.id !559
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !560
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !561
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [33 x i8], align 16, !noelle.pdg.inst.id !559
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !560
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !561
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [33 x i8], align 16, !noelle.pdg.inst.id !559
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !560
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !561
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [33 x i8], align 16, !noelle.pdg.inst.id !559
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !560
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !561
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [33 x i8], align 16, !noelle.pdg.inst.id !559
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !560
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !561
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [33 x i8], align 16, !noelle.pdg.inst.id !559
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !560
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !561
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [33 x i8], align 16, !noelle.pdg.inst.id !559
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !560
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !561
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [33 x i8], align 16, !noelle.pdg.inst.id !559
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !560
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 249
TimeSaved: LoopSelector:      Function: "jpeg_gen_optimal_table"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %34 = getelementptr inbounds i64, i64* %2, i64 %31, !noelle.pdg.inst.id !601"
TimeSaved: LoopSelector:      Coverage: 1.011495e-03%
TimeSaved: LoopSelector:      Whole-program savings = 6.864112e-04%
TimeSaved: LoopSelector:      Loop savings = 6.786103e+01%
TimeSaved: LoopSelector:    Loop 248
TimeSaved: LoopSelector:      Function: "jpeg_gen_optimal_table"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %17 = getelementptr inbounds i64, i64* %2, i64 %14, !noelle.pdg.inst.id !579"
TimeSaved: LoopSelector:      Coverage: 2.419100e-03%
TimeSaved: LoopSelector:      Whole-program savings = 1.970506e-04%
TimeSaved: LoopSelector:      Loop savings = 8.145615e+00%
TimeSaved: LoopSelector:    Loop 250
TimeSaved: LoopSelector:      Function: "jpeg_gen_optimal_table"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %66 = sext i32 %65 to i64, !noelle.pdg.inst.id !639"
TimeSaved: LoopSelector:      Coverage: 1.319688e-05%
TimeSaved: LoopSelector:      Whole-program savings = 5.923473e-06%
TimeSaved: LoopSelector:      Loop savings = 4.488540e+01%
TimeSaved: LoopSelector:    Loop 251
TimeSaved: LoopSelector:      Function: "jpeg_gen_optimal_table"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %82 = sext i32 %81 to i64, !noelle.pdg.inst.id !660"
TimeSaved: LoopSelector:      Coverage: 1.301461e-05%
TimeSaved: LoopSelector:      Whole-program savings = 5.846265e-06%
TimeSaved: LoopSelector:      Loop savings = 4.492080e+01%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 218
TimeSaved: LoopSelector:      Function: "h2v2_downsample"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %61 = getelementptr inbounds i8*, i8** %2, i64 %59, !noelle.pdg.inst.id !376"
TimeSaved: LoopSelector:      Coverage: 1.402865e-04%
TimeSaved: LoopSelector:      Whole-program savings = 8.417189e-05%
TimeSaved: LoopSelector:      Loop savings = 6.000000e+01%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 304
TimeSaved: LoopSelector:      Function: "emit_eobrun"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %7 = ashr i32 %5, 1, !noelle.pdg.inst.id !1441"
TimeSaved: LoopSelector:      Coverage: 3.276667e-02%
TimeSaved: LoopSelector:      Whole-program savings = 1.178986e-02%
TimeSaved: LoopSelector:      Loop savings = 3.598127e+01%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 137
TimeSaved: LoopSelector:      Function: "compress_data"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %28 = icmp ugt i32 %26, %8, !noelle.pdg.inst.id !389"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 138
TimeSaved: LoopSelector:      Function: "compress_data"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %32 = load i32, i32* %19, align 4, !tbaa !396, !noelle.pdg.inst.id !71"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 139
TimeSaved: LoopSelector:      Function: "compress_data"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %39 = getelementptr inbounds %struct.jpeg_compress_struct.363, %struct.jpeg_compress_struct.363* %0, i64 0, i32 42, i64 %37, !noelle.pdg.inst.id !406"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 140
TimeSaved: LoopSelector:      Function: "compress_data"
TimeSaved: LoopSelector:      Loop nesting level: 4
TimeSaved: LoopSelector:      "  %60 = load i32, i32* %20, align 8, !tbaa !431, !noelle.pdg.inst.id !96"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 142
TimeSaved: LoopSelector:      Function: "compress_data"
TimeSaved: LoopSelector:      Loop nesting level: 5
TimeSaved: LoopSelector:      "  %175 = load i16, i16* %136, align 2, !tbaa !471, !noelle.pdg.inst.id !301"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 143
TimeSaved: LoopSelector:      Function: "compress_data"
TimeSaved: LoopSelector:      Loop nesting level: 5
TimeSaved: LoopSelector:      "  %105 = add i64 %104, %70, !noelle.pdg.inst.id !482"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 141
TimeSaved: LoopSelector:      Function: "compress_data"
TimeSaved: LoopSelector:      Loop nesting level: 5
TimeSaved: LoopSelector:      "  %145 = load i16, i16* %136, align 2, !tbaa !471, !noelle.pdg.inst.id !225"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [10 x [64 x i32]], align 16, !noelle.pdg.inst.id !12353
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [10 x i32], align 16, !noelle.pdg.inst.id !12352
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [10 x [64 x i32]], align 16, !noelle.pdg.inst.id !12353
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [10 x i32], align 16, !noelle.pdg.inst.id !12352
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 101
TimeSaved: LoopSelector:      Function: "jinit_c_master_control"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %481 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i64 0, i64 %480, !noelle.pdg.inst.id !12924"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [4 x i32], align 16, !noelle.pdg.inst.id !132
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [4 x i32], align 16, !noelle.pdg.inst.id !132
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 302
TimeSaved: LoopSelector:      Function: "finish_pass_gather_phuff"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %46 = getelementptr inbounds %struct.jpeg_compress_struct.253, %struct.jpeg_compress_struct.253* %0, i64 0, i32 42, i64 %45, !noelle.pdg.inst.id !197"
TimeSaved: LoopSelector:      Coverage: 2.508204e-03%
TimeSaved: LoopSelector:      Whole-program savings = 1.719256e-07%
TimeSaved: LoopSelector:      Loop savings = 6.854529e-03%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 320
TimeSaved: LoopSelector:      Function: "jpeg_fdct_ifast"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %4 = load i32, i32* %3, align 4, !tbaa !34, !noelle.pdg.inst.id !38"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 135
TimeSaved: LoopSelector:      Function: "pre_process_data"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  tail call void @jcopy_sample_rows(i8** %100, i32 %110, i8** %100, i32 %111, i32 1, i32 %103) #20, !noelle.pdg.inst.id !50"
TimeSaved: LoopSelector:      Coverage: 3.709135e-07%
TimeSaved: LoopSelector:      Whole-program savings = 3.709135e-07%
TimeSaved: LoopSelector:      Loop savings = 1.000000e+02%
TimeSaved: LoopSelector:    Loop 134
TimeSaved: LoopSelector:      Function: "pre_process_data"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %99 = getelementptr inbounds i8**, i8*** %4, i64 %97, !noelle.pdg.inst.id !363"
TimeSaved: LoopSelector:      Coverage: 4.329977e-07%
TimeSaved: LoopSelector:      Whole-program savings = 1.074535e-07%
TimeSaved: LoopSelector:      Loop savings = 2.481618e+01%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 113
TimeSaved: LoopSelector:      Function: "write_scan_header"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %287 = getelementptr inbounds %struct.jpeg_compress_struct.297, %struct.jpeg_compress_struct.297* %0, i64 0, i32 42, i64 %286, !noelle.pdg.inst.id !4864"
TimeSaved: LoopSelector:      Coverage: 6.152707e-07%
TimeSaved: LoopSelector:      Whole-program savings = 5.484107e-07%
TimeSaved: LoopSelector:      Loop savings = 8.913325e+01%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 351
TimeSaved: LoopSelector:      Function: "free_pool"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %54 = bitcast %union.large_pool_struct* %53 to i8*, !noelle.pdg.inst.id !559"
TimeSaved: LoopSelector:      Coverage: 1.289442e-07%
TimeSaved: LoopSelector:      Whole-program savings = 2.865426e-08%
TimeSaved: LoopSelector:      Loop savings = 2.222222e+01%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 104
TimeSaved: LoopSelector:      Function: "select_scan_parameters"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %138 = add <2 x i64> %136, <i64 2, i64 2>, !noelle.pdg.inst.id !266"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %8 = alloca [64 x i32], align 16, !noelle.pdg.inst.id !182
ClonableMemoryObject:   There are RAW memory data dependences between loop iterations
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %8 = alloca [64 x i32], align 16, !noelle.pdg.inst.id !182
ClonableMemoryObject:   There are RAW memory data dependences between loop iterations
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %8 = alloca [64 x i32], align 16, !noelle.pdg.inst.id !182
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %8 = alloca [64 x i32], align 16, !noelle.pdg.inst.id !182
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %8 = alloca [64 x i32], align 16, !noelle.pdg.inst.id !182
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %8 = alloca [64 x i32], align 16, !noelle.pdg.inst.id !182
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 314
TimeSaved: LoopSelector:      Function: "forward_DCT"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %28 = zext i32 %27 to i64, !noelle.pdg.inst.id !216"
TimeSaved: LoopSelector:      Coverage: 2.486168e+00%
TimeSaved: LoopSelector:      Whole-program savings = 2.312289e+00%
TimeSaved: LoopSelector:      Loop savings = 9.300616e+01%
TimeSaved: LoopSelector:    Loop 316
TimeSaved: LoopSelector:      Function: "forward_DCT"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %77 = getelementptr inbounds i32, i32* %18, i64 %76, !noelle.pdg.inst.id !265"
TimeSaved: LoopSelector:      Coverage: 1.864010e+00%
TimeSaved: LoopSelector:      Whole-program savings = 1.516252e+00%
TimeSaved: LoopSelector:      Loop savings = 8.134359e+01%
TimeSaved: LoopSelector:    Loop 315
TimeSaved: LoopSelector:      Function: "forward_DCT"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %31 = getelementptr inbounds i8*, i8** %21, i64 %29, !noelle.pdg.inst.id !221"
TimeSaved: LoopSelector:      Coverage: 6.072169e-01%
TimeSaved: LoopSelector:      Whole-program savings = 6.072169e-01%
TimeSaved: LoopSelector:      Loop savings = 1.000000e+02%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [10 x [64 x i32]], align 16, !noelle.pdg.inst.id !12353
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [10 x i32], align 16, !noelle.pdg.inst.id !12352
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [10 x [64 x i32]], align 16, !noelle.pdg.inst.id !12353
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [10 x i32], align 16, !noelle.pdg.inst.id !12352
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 100
TimeSaved: LoopSelector:      Function: "jinit_c_master_control"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %466 = getelementptr inbounds [10 x [64 x i32]], [10 x [64 x i32]]* %4, i64 0, i64 %465, i64 0, !noelle.pdg.inst.id !12908"
TimeSaved: LoopSelector:      Coverage: 3.024617e-08%
TimeSaved: LoopSelector:      Whole-program savings = 3.183807e-09%
TimeSaved: LoopSelector:      Loop savings = 1.052632e+01%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 217
TimeSaved: LoopSelector:      Function: "h2v2_downsample"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %31 = getelementptr inbounds i8*, i8** %2, i64 %29, !noelle.pdg.inst.id !343"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !184
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [257 x i8], align 16, !noelle.pdg.inst.id !183
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !184
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [257 x i8], align 16, !noelle.pdg.inst.id !183
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !184
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [257 x i8], align 16, !noelle.pdg.inst.id !183
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [257 x i32], align 16, !noelle.pdg.inst.id !184
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [257 x i8], align 16, !noelle.pdg.inst.id !183
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
opt: /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/src/core/loop_scc_attributes/src/AccumulatorOpInfo.cpp:86: Instruction::BinaryOps llvm::noelle::AccumulatorOpInfo::accumOpForType(unsigned int, llvm::Type *): Assertion `false && "Attempting to reduce unknown type!"' failed.
Stack dump:
0.	Program arguments: opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TimeSaved.so -TimeSaved tmp.bc 
1.	Running pass 'Print estimated time saved by parallelization' on module 'tmp.bc'.
#0 0x000000000219868a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (/project/extra/llvm/9.0.0/release/bin/opt+0x219868a)
#1 0x0000000002196614 llvm::sys::RunSignalHandlers() (/project/extra/llvm/9.0.0/release/bin/opt+0x2196614)
#2 0x0000000002196775 SignalHandler(int) (/project/extra/llvm/9.0.0/release/bin/opt+0x2196775)
#3 0x00007faf5e589cf0 __restore_rt (/lib64/libpthread.so.0+0x12cf0)
#4 0x00007faf5d07faff raise (/lib64/libc.so.6+0x4eaff)
#5 0x00007faf5d052ea5 abort (/lib64/libc.so.6+0x21ea5)
#6 0x00007faf5d052d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79)
#7 0x00007faf5d078456 (/lib64/libc.so.6+0x47456)
#8 0x00007faf595b584c llvm::noelle::AccumulatorOpInfo::accumOpForType(unsigned int, llvm::Type*) /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/src/core/loop_scc_attributes/src/AccumulatorOpInfo.cpp:88:1
/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/bin/noelle-load: line 50: 3802633 Aborted                 (core dumped) opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TimeSaved.so -TimeSaved tmp.bc
