noelle-parallel-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TimeSaved.so -TimeSaved tmp.bc
noelle-load -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TimeSaved.so -TimeSaved tmp.bc
opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TimeSaved.so -TimeSaved tmp.bc
TimeSaved: Start
TimeSaved:  Fetching the program loops
Noelle:  Function "main"
Noelle:     Loop "  %103 = load i8**, i8*** %92, align 8, !tbaa !2847, !noelle.pdg.inst.id !363" (8.362432e+01%)
Noelle:  Function "decode_mcu_AC_refine"
Noelle:     Loop "  %41 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %40, !noelle.pdg.inst.id !507" (0.000000e+00%)
Noelle:     Loop "  %87 = icmp slt i32 %85, 8, !noelle.pdg.inst.id !564" (8.269956e-01%)
Noelle:     Loop "  %172 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %167, !noelle.pdg.inst.id !688" (4.825221e-01%)
Noelle:     Loop "  %255 = getelementptr inbounds [80 x i32], [80 x i32]* @jpeg_natural_order, i64 0, i64 %252, !noelle.pdg.inst.id !802" (3.419604e+00%)
Noelle:     Loop "  %312 = add nsw i64 %310, -1, !noelle.pdg.inst.id !895" (0.000000e+00%)
Noelle:     Loop "  %322 = add nsw i64 %321, -1, !noelle.pdg.inst.id !915" (0.000000e+00%)
Noelle:  Function "ycc_rgb_convert"
Noelle:     Loop "  %34 = load i8**, i8*** %1, align 8, !tbaa !88, !noelle.pdg.inst.id !89" (3.460737e+00%)
Noelle:     Loop "  %47 = getelementptr inbounds i8, i8* %37, i64 %45, !noelle.pdg.inst.id !104" (3.460585e+00%)
Noelle:  Function "jpeg_idct_islow"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8, !noelle.pdg.inst.id !247" (1.444324e+00%)
Noelle:     Loop "  %177 = getelementptr inbounds i8*, i8** %3, i64 %175, !noelle.pdg.inst.id !410" (1.787002e+00%)
Noelle:  Function "h2v2_fancy_upsample"
Noelle:     Loop "  %13 = getelementptr inbounds i8*, i8** %2, i64 %11, !noelle.pdg.inst.id !55" (2.517421e+00%)
Noelle:     Loop "  %63 = getelementptr inbounds i8, i8* %62, i64 1, !noelle.pdg.inst.id !114" (1.258199e+00%)
Noelle:     Loop "  %142 = getelementptr inbounds i8, i8* %141, i64 1, !noelle.pdg.inst.id !212" (1.258199e+00%)
Noelle:  Function "decode_mcu_AC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %6, i64 0, i32 2, i32 1, i64 %36, !noelle.pdg.inst.id !271" (0.000000e+00%)
Noelle:     Loop "  %79 = icmp slt i32 %76, 8, !noelle.pdg.inst.id !340" (1.456225e+00%)
Noelle:  Function "jpeg_fill_bit_buffer"
Noelle:     Loop "  %18 = load i32, i32* %11, align 8, !tbaa !212, !noelle.pdg.inst.id !62" (4.586948e-01%)
Noelle:     Loop "  %47 = icmp eq i64 %46, 0, !noelle.pdg.inst.id !254" (2.035310e-03%)
Noelle:  Function "consume_data"
Noelle:     Loop "  %15 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %14, !noelle.pdg.inst.id !208" (1.555093e-04%)
Noelle:     Loop "  %52 = icmp ult i32 %50, %49, !noelle.pdg.inst.id !255" (5.914686e-01%)
Noelle:     Loop "  %54 = load i32, i32* %7, align 8, !tbaa !198, !noelle.pdg.inst.id !104" (5.913532e-01%)
Noelle:     Loop "  %60 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %58, !noelle.pdg.inst.id !271" (4.695188e-01%)
Noelle:     Loop "  %129 = add nsw i64 %127, %51, !noelle.pdg.inst.id !371" (7.355448e-08%)
Noelle:     Loop "  %135 = add i64 %134, %133, !noelle.pdg.inst.id !378" (4.975744e-08%)
Noelle:     Loop "  %158 = getelementptr inbounds [64 x i16], [64 x i16]* %156, i64 1, !noelle.pdg.inst.id !405" (2.379704e-08%)
Noelle:     Loop "  %101 = add nsw i64 %99, %51, !noelle.pdg.inst.id !335" (4.975744e-08%)
Noelle:     Loop "  %107 = add i64 %106, %105, !noelle.pdg.inst.id !342" (4.975744e-08%)
Noelle:     Loop "  %83 = sext i32 %82 to i64, !noelle.pdg.inst.id !301" (2.122987e-01%)
Noelle:     Loop "  %91 = getelementptr inbounds [64 x i16], [64 x i16]* %89, i64 1, !noelle.pdg.inst.id !310" (9.968811e-02%)
Noelle:  Function "decode_mcu_DC_first"
Noelle:     Loop "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %36, !noelle.pdg.inst.id !430" (0.000000e+00%)
Noelle:     Loop "  %72 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %69, !noelle.pdg.inst.id !477" (1.782945e-01%)
Noelle:  Function "decode_mcu_DC_refine"
Noelle:     Loop "  %36 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %6, i64 0, i32 2, i32 1, i64 %35, !noelle.pdg.inst.id !153" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %67, !noelle.pdg.inst.id !210" (5.289854e-02%)
Noelle:  Function "decompress_data"
Noelle:     Loop "  %14 = load i32, i32* %9, align 4, !tbaa !154, !noelle.pdg.inst.id !49" (4.770225e-06%)
Noelle:     Loop "  %39 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %38, i64 0, i32 12, !noelle.pdg.inst.id !191" (2.409156e-02%)
Noelle:     Loop "  %80 = icmp eq i32 %77, 0, !noelle.pdg.inst.id !237" (2.403191e-02%)
Noelle:     Loop "  %89 = getelementptr inbounds [64 x i16], [64 x i16]* %87, i64 0, i64 0, !noelle.pdg.inst.id !248" (2.399709e-02%)
Noelle:  Function "jpeg_huff_decode"
Noelle:     Loop "  %36 = shl i64 %33, 1, !noelle.pdg.inst.id !147" (4.577996e-03%)
Noelle:  Function "sep_upsample"
Noelle:     Loop "  %25 = getelementptr inbounds %struct.my_upsampler, %struct.my_upsampler* %10, i64 0, i32 2, i64 %23, !noelle.pdg.inst.id !120" (2.364019e-04%)
Noelle:  Function "access_virt_barray"
Noelle:     Loop "  %80 = mul nsw i64 %77, %47, !noelle.pdg.inst.id !473" (0.000000e+00%)
Noelle:     Loop "  %162 = mul nsw i64 %159, %131, !noelle.pdg.inst.id !552" (0.000000e+00%)
Noelle:     Loop "  %226 = load [64 x i16]**, [64 x i16]*** %223, align 8, !tbaa !396, !noelle.pdg.inst.id !367" (2.146709e-05%)
Noelle:  Function "process_data_context_main"
Noelle:     Loop "  %74 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %73, i64 0, i32 3, !noelle.pdg.inst.id !264" (2.001115e-07%)
Noelle:     Loop "  %103 = load i64, i64* %99, align 8, !tbaa !186, !noelle.pdg.inst.id !142" (8.328964e-08%)
Noelle:     Loop "  %151 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %150, i64 0, i32 3, !noelle.pdg.inst.id !357" (2.401338e-07%)
Noelle:     Loop "  %177 = add nsw i64 %175, %168, !noelle.pdg.inst.id !388" (6.598270e-08%)
Noelle:  Function "jpeg_start_decompress"
Noelle:     Loop "  %23 = icmp eq %struct.jpeg_progress_mgr* %22, null, !noelle.pdg.inst.id !194" (9.561109e-05%)
Noelle:  Function "fill_input_buffer"
Noelle:  Function "put_pixel_rows"
Noelle:  Function "start_pass_phuff_decoder"
Noelle:     Loop "  %101 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %100, !noelle.pdg.inst.id !974" (8.308412e-06%)
Noelle:     Loop "  %125 = getelementptr inbounds [64 x i32], [64 x i32]* %105, i64 %106, i64 %124, !noelle.pdg.inst.id !994" (8.100728e-06%)
Noelle:     Loop "  %63 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %62, !noelle.pdg.inst.id !926" (2.574407e-07%)
Noelle:     Loop "  %74 = getelementptr inbounds [64 x i32], [64 x i32]* %67, i64 %68, i64 %73, !noelle.pdg.inst.id !941" (1.038416e-07%)
Noelle:     Loop "  %194 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %193, !noelle.pdg.inst.id !1081" (2.725085e-05%)
Noelle:     Loop "  %166 = icmp eq i32 %164, 0, !noelle.pdg.inst.id !1049" (1.027059e-05%)
Noelle:  Function "jpeg_make_d_derived_tbl"
Noelle:     Loop "  %24 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %21, !noelle.pdg.inst.id !614" (6.773503e-06%)
Noelle:     Loop "  %50 = add nsw <2 x i64> %47, <i64 8, i64 8>, !noelle.pdg.inst.id !650" (0.000000e+00%)
Noelle:     Loop "  %62 = add nsw <2 x i64> %59, <i64 1, i64 1>, !noelle.pdg.inst.id !674" (3.612823e-07%)
Noelle:     Loop "  %97 = sext i8 %93 to i32, !noelle.pdg.inst.id !731" (8.070441e-06%)
Noelle:     Loop "  %103 = add nsw i64 %101, 1, !noelle.pdg.inst.id !741" (4.401370e-06%)
Noelle:     Loop "  %124 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %122, !noelle.pdg.inst.id !772" (5.110955e-06%)
Noelle:     Loop "  %155 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 %153, !noelle.pdg.inst.id !805" (1.677583e-05%)
Noelle:     Loop "  %618 = add nsw i64 %170, %615, !noelle.pdg.inst.id !1366" (0.000000e+00%)
Noelle:     Loop "  %648 = add i64 %646, %624, !noelle.pdg.inst.id !1397" (0.000000e+00%)
Noelle:     Loop "  %687 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %685, !noelle.pdg.inst.id !1441" (0.000000e+00%)
Noelle:     Loop "  %188 = add nsw i64 %170, %185, !noelle.pdg.inst.id !851" (0.000000e+00%)
Noelle:     Loop "  %218 = add i64 %216, %194, !noelle.pdg.inst.id !885" (0.000000e+00%)
Noelle:     Loop "  %254 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %252, !noelle.pdg.inst.id !931" (0.000000e+00%)
Noelle:     Loop "  %338 = add nsw i64 %170, %335, !noelle.pdg.inst.id !1035" (0.000000e+00%)
Noelle:     Loop "  %368 = add i64 %366, %344, !noelle.pdg.inst.id !1066" (0.000000e+00%)
Noelle:     Loop "  %395 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %393, !noelle.pdg.inst.id !1098" (0.000000e+00%)
Noelle:     Loop "  %269 = add nsw i64 %170, %266, !noelle.pdg.inst.id !954" (8.568016e-06%)
Noelle:     Loop "  %299 = add i64 %297, %275, !noelle.pdg.inst.id !986" (5.590141e-06%)
Noelle:     Loop "  %323 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %321, !noelle.pdg.inst.id !1014" (0.000000e+00%)
Noelle:     Loop "  %545 = add nsw i64 %170, %542, !noelle.pdg.inst.id !1281" (0.000000e+00%)
Noelle:     Loop "  %583 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %581, !noelle.pdg.inst.id !1322" (0.000000e+00%)
Noelle:     Loop "  %410 = add nsw i64 %170, %407, !noelle.pdg.inst.id !1122" (9.626984e-07%)
Noelle:     Loop "  %445 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %443, !noelle.pdg.inst.id !1160" (0.000000e+00%)
Noelle:     Loop "  %502 = add nsw i64 %170, %499, !noelle.pdg.inst.id !1233" (0.000000e+00%)
Noelle:     Loop "  %531 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %529, !noelle.pdg.inst.id !1263" (0.000000e+00%)
Noelle:     Loop "  %461 = add nsw i64 %170, %458, !noelle.pdg.inst.id !1184" (0.000000e+00%)
Noelle:     Loop "  %487 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %485, !noelle.pdg.inst.id !1213" (0.000000e+00%)
Noelle:     Loop "  %597 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 1, i64 %595, !noelle.pdg.inst.id !1339" (3.438672e-06%)
Noelle:     Loop "  %604 = getelementptr inbounds %struct.d_derived_tbl, %struct.d_derived_tbl* %19, i64 0, i32 4, i64 %602, !noelle.pdg.inst.id !1347" (2.269372e-06%)
Noelle:  Function "read_markers"
Noelle:     Loop "  %34 = icmp eq i32 %33, 0, !noelle.pdg.inst.id !35336" (1.660601e-05%)
Noelle:     Loop "  %682 = icmp eq i64 %679, 0, !noelle.pdg.inst.id !36073" (3.047103e-06%)
Noelle:     Loop "  %748 = icmp eq i64 %746, 0, !noelle.pdg.inst.id !36139" (0.000000e+00%)
Noelle:     Loop "  %725 = icmp eq i64 %723, 0, !noelle.pdg.inst.id !36114" (2.905402e-06%)
Noelle:     Loop "  %406 = icmp eq i64 %403, 0, !noelle.pdg.inst.id !35788" (0.000000e+00%)
Noelle:     Loop "  %516 = icmp eq i64 %514, 0, !noelle.pdg.inst.id !35893" (1.086227e-05%)
Noelle:     Loop "  %540 = icmp eq i64 %537, 0, !noelle.pdg.inst.id !35913" (3.450571e-06%)
Noelle:     Loop "  %597 = icmp eq i64 %595, 0, !noelle.pdg.inst.id !35969" (6.302970e-06%)
Noelle:     Loop "  br i1 %221, label %224, label %.loopexit._crit_edge.._crit_edge204_crit_edge, !prof !35603, !noelle.loop.id !35604, !noelle.pdg.inst.id !35605" (1.070867e-06%)
Noelle:     Loop "  %254 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %252, i64 0, i32 0, !noelle.pdg.inst.id !35635" (2.336437e-07%)
Noelle:  Function "realize_virt_arrays"
Noelle:     Loop "  %11 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %8, i64 0, i32 0, !noelle.pdg.inst.id !5540" (0.000000e+00%)
Noelle:     Loop "  %41 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %38, i64 0, i32 0, !noelle.pdg.inst.id !5582" (9.626984e-08%)
Noelle:     Loop "  %92 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %91, i64 0, i32 0, !noelle.pdg.inst.id !5654" (1.972991e-06%)
Noelle:     Loop "  %143 = sub i32 %119, %141, !noelle.pdg.inst.id !5713" (0.000000e+00%)
Noelle:     Loop "  %191 = add i32 %189, 1, !noelle.pdg.inst.id !5761" (0.000000e+00%)
Noelle:     Loop "  %206 = add i32 %205, 1, !noelle.pdg.inst.id !5787" (0.000000e+00%)
Noelle:     Loop "  %234 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %233, i64 0, i32 0, !noelle.pdg.inst.id !5824" (1.341937e-05%)
Noelle:     Loop "  %288 = sub i32 %262, %286, !noelle.pdg.inst.id !5882" (1.308837e-05%)
Noelle:     Loop "  %332 = add i32 %330, 1, !noelle.pdg.inst.id !5925" (4.867576e-08%)
Noelle:     Loop "  %347 = add i32 %346, 1, !noelle.pdg.inst.id !5951" (1.284716e-05%)
Noelle:  Function "jinit_master_decompress"
Noelle:  Function "fullsize_upsample"
Noelle:  Function "jinit_color_deconverter"
Noelle:     Loop "  %187 = mul nsw i64 %186, 91881, !noelle.pdg.inst.id !1572" (0.000000e+00%)
Noelle:     Loop "  %124 = mul nsw i64 %123, 91881, !noelle.pdg.inst.id !1513" (7.198604e-06%)
Noelle:     Loop "  %72 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 %70, i32 12, !noelle.pdg.inst.id !1462" (0.000000e+00%)
Noelle:     Loop "  %231 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %62, i64 %229, i32 12, !noelle.pdg.inst.id !1620" (0.000000e+00%)
Noelle:  Function "parse_switches"
Noelle:     Loop "  %27 = sext i32 %26 to i64, !noelle.pdg.inst.id !11588" (4.605809e-06%)
Noelle:  Function "keymatch"
Noelle:     Loop "  %10 = getelementptr inbounds i8, i8* %7, i64 1, !noelle.pdg.inst.id !96" (3.281828e-06%)
Noelle:  Function "jzero_far"
Noelle:  Function "alloc_small"
Noelle:     Loop "  %35 = getelementptr inbounds %union.small_pool_struct, %union.small_pool_struct* %34, i64 0, i32 0, i32 2, !noelle.pdg.inst.id !469" (3.428937e-07%)
Noelle:     Loop "  %59 = lshr i64 %58, 1, !noelle.pdg.inst.id !501" (0.000000e+00%)
Noelle:  Function "consume_markers"
Noelle:     Loop "  %76 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %74, i64 0, i32 2, !noelle.pdg.inst.id !367" (1.027599e-07%)
Noelle:     Loop "  %127 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %125, i64 0, i32 9, !noelle.pdg.inst.id !426" (1.600892e-07%)
Noelle:  Function "start_input_pass"
Noelle:     Loop "  %72 = getelementptr inbounds %struct.jpeg_decompress_struct.261, %struct.jpeg_decompress_struct.261* %0, i64 0, i32 63, i64 %71, !noelle.pdg.inst.id !918" (4.802675e-07%)
Noelle:     Loop "  %112 = load i32, i32* %64, align 8, !tbaa !864, !noelle.pdg.inst.id !492" (4.326734e-08%)
Noelle:     Loop "  %122 = load i32, i32* %64, align 8, !tbaa !864, !noelle.pdg.inst.id !525" (6.057428e-08%)
Noelle:     Loop "  %153 = getelementptr inbounds %struct.jpeg_decompress_struct.261, %struct.jpeg_decompress_struct.261* %0, i64 0, i32 63, i64 %152, !noelle.pdg.inst.id !1016" (2.844828e-07%)
Noelle:  Function "alloc_sarray"
Noelle:     Loop "  %29 = sub i32 %3, %27, !noelle.pdg.inst.id !199" (7.409532e-07%)
Noelle:     Loop "  %43 = add i32 %41, 1, !noelle.pdg.inst.id !218" (9.951489e-08%)
Noelle:     Loop "  %58 = add i32 %57, 1, !noelle.pdg.inst.id !247" (2.596041e-07%)
Noelle:  Function "next_marker"
Noelle:     Loop "  %13 = icmp eq i64 %12, 0, !noelle.pdg.inst.id !228" (6.619903e-07%)
Noelle:     Loop "  %29 = load %struct.jpeg_marker_reader.278*, %struct.jpeg_marker_reader.278** %9, align 8, !tbaa !249, !noelle.pdg.inst.id !76" (0.000000e+00%)
Noelle:     Loop "  %51 = icmp eq i64 %50, 0, !noelle.pdg.inst.id !276" (2.206634e-07%)
Noelle:  Function "start_pass_main"
Noelle:     Loop "  %28 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %27, i64 0, i32 3, !noelle.pdg.inst.id !103" (7.907107e-07%)
Noelle:     Loop "  %92 = getelementptr inbounds i8*, i8** %41, i64 %90, !noelle.pdg.inst.id !197" (1.871313e-07%)
Noelle:     Loop "  %54 = getelementptr inbounds i8*, i8** %41, i64 %52, !noelle.pdg.inst.id !143" (6.706438e-08%)
Noelle:     Loop "  %270 = getelementptr inbounds i8*, i8** %41, i64 %269, !noelle.pdg.inst.id !451" (0.000000e+00%)
Noelle:     Loop "  %195 = add nsw i64 %193, %148, !noelle.pdg.inst.id !342" (0.000000e+00%)
Noelle:     Loop "  %312 = add nsw i64 %311, %148, !noelle.pdg.inst.id !508" (8.004458e-08%)
Noelle:     Loop "  %328 = load i64, i64* %303, align 8, !tbaa !112, !noelle.pdg.inst.id !530" (0.000000e+00%)
Noelle:     Loop "  %354 = load i64, i64* %303, align 8, !tbaa !112, !noelle.pdg.inst.id !568" (4.867576e-08%)
Noelle:  Function "emit_message"
Noelle:  Function "start_pass"
Noelle:     Loop "  %18 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %15, i64 0, i32 9, !noelle.pdg.inst.id !445" (5.213715e-07%)
Noelle:     Loop "  %186 = getelementptr inbounds [8 x double], [8 x double]* @start_pass.aanscalefactor, i64 0, i64 %185, !noelle.pdg.inst.id !636" (0.000000e+00%)
Noelle:     Loop "  %155 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %50, i64 0, i32 0, i64 %154, !noelle.pdg.inst.id !607" (0.000000e+00%)
Noelle:  Function "jpeg_calc_output_dimensions"
Noelle:     Loop "  %113 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 0, i32 9, !noelle.pdg.inst.id !330" (5.624755e-08%)
Noelle:     Loop "  %85 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %83, i64 0, i32 3, !noelle.pdg.inst.id !283" (0.000000e+00%)
Noelle:     Loop "  %89 = shl i32 %88, 1, !noelle.pdg.inst.id !290" (0.000000e+00%)
Noelle:     Loop "  %118 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %116, i64 0, i32 2, !noelle.pdg.inst.id !340" (2.141733e-07%)
Noelle:  Function "get_sof"
Noelle:     Loop "  %217 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %216, i64 0, i32 1, !noelle.pdg.inst.id !1529" (2.163367e-07%)
Noelle:  Function "free_pool"
Noelle:     Loop "  %22 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %21, i64 0, i32 10, !noelle.pdg.inst.id !503" (0.000000e+00%)
Noelle:     Loop "  %36 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %35, i64 0, i32 10, !noelle.pdg.inst.id !530" (3.461387e-08%)
Noelle:     Loop "  %54 = bitcast %union.large_pool_struct* %53 to i8*, !noelle.pdg.inst.id !559" (1.557624e-07%)
Noelle:     Loop "  %73 = bitcast %union.small_pool_struct* %72 to i8*, !noelle.pdg.inst.id !581" (9.626984e-08%)
Noelle:  Function "get_app0"
Noelle:     Loop "  %47 = icmp eq i64 %45, 0, !noelle.pdg.inst.id !677" (2.563590e-07%)
Noelle:  Function "start_output_pass"
Noelle:     Loop "  %48 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 0, i32 19, !noelle.pdg.inst.id !124" (2.455422e-07%)
Noelle:  Function "jinit_write_ppm"
Noelle:  Function "self_destruct"
Noelle:  Function "jinit_d_main_controller"
Noelle:     Loop "  %65 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %64, i64 0, i32 3, !noelle.pdg.inst.id !418" (1.124951e-07%)
Noelle:     Loop "  %112 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 0, i32 3, !noelle.pdg.inst.id !465" (8.437132e-08%)
Noelle:  Function "start_input_pass.105"
Noelle:  Function "request_virt_barray"
Noelle:  Function "jinit_upsampler"
Noelle:     Loop "  %53 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %52, i64 0, i32 2, !noelle.pdg.inst.id !458" (2.517497e+00%)
Noelle:  Function "alloc_large"
Noelle:  Function "jpeg_CreateDecompress"
Noelle:  Function "jinit_d_coef_controller"
Noelle:     Loop "  %29 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %28, i64 0, i32 3, !noelle.pdg.inst.id !163" (1.406189e-07%)
Noelle:  Function "jdiv_round_up"
Noelle:  Function "jpeg_read_header"
Noelle:  Function "jinit_marker_reader"
Noelle:  Function "jinit_inverse_dct"
Noelle:     Loop "  %21 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !96, !noelle.pdg.inst.id !65" (5.732923e-08%)
Noelle:  Function "jpeg_consume_input"
Noelle:  Function "prepare_for_output_pass"
Noelle:  Function "jinit_memory_mgr"
Noelle:  Function "jinit_phuff_decoder"
Noelle:     Loop "  %29 = bitcast i32* %28 to i8*, !noelle.pdg.inst.id !138" (3.136882e-08%)
Noelle:  Function "jpeg_finish_decompress"
Noelle:     Loop "  %37 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %36, align 8, !tbaa !264, !noelle.pdg.inst.id !107" (5.408418e-09%)
Noelle:  Function "finish_input_pass"
Noelle:  Function "jpeg_alloc_huff_table"
Noelle:  Function "jround_up"
Noelle:  Function "jpeg_stdio_src"
Noelle:  Function "output_pass_setup"
Noelle:     Loop "  %25 = load i32, i32* %18, align 4, !tbaa !236, !noelle.pdg.inst.id !107" (0.000000e+00%)
Noelle:  Function "jinit_input_controller"
Noelle:  Function "start_pass_dpost"
Noelle:  Function "reset_input_controller"
Noelle:  Function "jpeg_std_error"
Noelle:  Function "jinit_d_post_controller"
Noelle:  Function "jpeg_alloc_quant_table"
Noelle:  Function "start_output_ppm"
Noelle:  Function "jpeg_get_large"
Noelle:  Function "jpeg_free_large"
Noelle:  Function "jpeg_destroy_decompress"
Noelle:  Function "reset_marker_reader"
Noelle:  Function "jpeg_destroy"
Noelle:  Function "finish_output_pass"
Noelle:  Function "jpeg_abort"
Noelle:  Function "start_pass_upsample"
Noelle:  Function "jpeg_free_small"
Noelle:  Function "jpeg_get_small"
Noelle:  Function "finish_output_ppm"
Noelle:  Function "jpeg_set_marker_processor"
Noelle:  Function "reset_error_mgr"
Noelle:  Function "init_source"
Noelle:  Function "term_source"
Noelle:  Function "start_pass_dcolor"
Noelle:  Function "jpeg_mem_available"
Noelle:  Function "jpeg_mem_term"
Noelle:  Function "get_app14"
Noelle:     Loop "  %47 = icmp eq i64 %45, 0, !noelle.pdg.inst.id !337" (0.000000e+00%)
Noelle:  Function "skip_variable"
Noelle:  Function "read_restart_marker"
Noelle:  Function "jpeg_mem_init"
Noelle:  Function "jcopy_sample_rows"
Noelle:     Loop "  %29 = getelementptr inbounds i8*, i8** %27, i64 1, !noelle.pdg.inst.id !121" (0.000000e+00%)
Noelle:  Function "jcopy_block_row"
Noelle:  Function "jpeg_resync_to_restart"
Noelle:     Loop "  %28 = icmp slt i32 %27, 192, !noelle.pdg.inst.id !204" (0.000000e+00%)
Noelle:  Function "error_exit"
Noelle:  Function "output_message"
Noelle:  Function "format_message"
Noelle:     Loop "  %41 = getelementptr inbounds i8, i8* %40, i64 1, !noelle.pdg.inst.id !161" (0.000000e+00%)
Noelle:  Function "jpeg_idct_float"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8, !noelle.pdg.inst.id !237" (0.000000e+00%)
Noelle:     Loop "  %132 = getelementptr inbounds i8*, i8** %3, i64 %130, !noelle.pdg.inst.id !354" (0.000000e+00%)
Noelle:  Function "jpeg_open_backing_store"
Noelle:  Function "process_data_simple_main"
Noelle:  Function "access_virt_sarray"
Noelle:     Loop "  %79 = mul nsw i64 %76, %46, !noelle.pdg.inst.id !470" (0.000000e+00%)
Noelle:     Loop "  %159 = mul nsw i64 %156, %128, !noelle.pdg.inst.id !547" (0.000000e+00%)
Noelle:     Loop "  %221 = load i8**, i8*** %218, align 8, !tbaa !394, !noelle.pdg.inst.id !366" (0.000000e+00%)
Noelle:  Function "process_data_crank_post"
Noelle:  Function "request_virt_sarray"
Noelle:  Function "dummy_consume_data"
Noelle:  Function "alloc_barray"
Noelle:     Loop "  %31 = sub i32 %3, %29, !noelle.pdg.inst.id !199" (0.000000e+00%)
Noelle:     Loop "  %46 = add i32 %44, 1, !noelle.pdg.inst.id !218" (0.000000e+00%)
Noelle:     Loop "  %61 = add i32 %60, 1, !noelle.pdg.inst.id !245" (0.000000e+00%)
Noelle:  Function "start_pass_huff_decoder"
Noelle:     Loop "  %33 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 63, i64 %32, !noelle.pdg.inst.id !305" (7.571785e-09%)
Noelle:  Function "jinit_huff_decoder"
Noelle:  Function "jpeg_idct_ifast"
Noelle:     Loop "  %21 = getelementptr inbounds i16, i16* %20, i64 8, !noelle.pdg.inst.id !399" (0.000000e+00%)
Noelle:     Loop "  %151 = getelementptr inbounds i8*, i8** %3, i64 %149, !noelle.pdg.inst.id !516" (0.000000e+00%)
Noelle:  Function "h2v1_merged_upsample"
Noelle:     Loop "  %40 = getelementptr inbounds i8, i8* %37, i64 1, !noelle.pdg.inst.id !89" (0.000000e+00%)
Noelle:  Function "prescan_quantize"
Noelle:     Loop "  %17 = getelementptr inbounds i8*, i8** %1, i64 %16, !noelle.pdg.inst.id !62" (0.000000e+00%)
Noelle:     Loop "  %21 = load i8, i8* %19, align 1, !tbaa !69, !noelle.pdg.inst.id !70" (0.000000e+00%)
Noelle:  Function "finish_pass1"
Noelle:     Loop "  %32 = add nuw i64 %29, 1, !noelle.pdg.inst.id !233" (0.000000e+00%)
Noelle:     Loop "  %50 = getelementptr inbounds %struct.box, %struct.box* %48, i64 0, i32 7, !noelle.pdg.inst.id !255" (0.000000e+00%)
Noelle:     Loop "  %68 = getelementptr inbounds %struct.box, %struct.box* %66, i64 0, i32 6, !noelle.pdg.inst.id !277" (0.000000e+00%)
Noelle:     Loop "  %103 = getelementptr inbounds %struct.box, %struct.box* %101, i64 0, i32 6, !noelle.pdg.inst.id !318" (0.000000e+00%)
Noelle:     Loop "  %181 = load %struct.my_cquantizer.611*, %struct.my_cquantizer.611** %3, align 8, !tbaa !187, !noelle.pdg.inst.id !128" (0.000000e+00%)
Noelle:     Loop "  %211 = getelementptr inbounds [32 x i16]*, [32 x i16]** %183, i64 %206, !noelle.pdg.inst.id !446" (0.000000e+00%)
Noelle:     Loop "  %222 = getelementptr inbounds [32 x i16], [32 x i16]* %212, i64 %217, i64 %199, !noelle.pdg.inst.id !459" (0.000000e+00%)
Noelle:     Loop "  %233 = getelementptr inbounds i16, i16* %232, i64 1, !noelle.pdg.inst.id !472" (0.000000e+00%)
Noelle:  Function "pass2_fs_dither"
Noelle:     Loop "  %48 = getelementptr inbounds i8*, i8** %1, i64 %47, !noelle.pdg.inst.id !196" (0.000000e+00%)
Noelle:     Loop "  %86 = getelementptr inbounds i16, i16* %83, i64 %68, !noelle.pdg.inst.id !231" (0.000000e+00%)
Noelle:     Loop "  %40 = icmp eq i32 %38, 0, !noelle.pdg.inst.id !178" (0.000000e+00%)
Noelle:  Function "pass2_no_dither"
Noelle:     Loop "  %17 = getelementptr inbounds i8*, i8** %2, i64 %16, !noelle.pdg.inst.id !91" (0.000000e+00%)
Noelle:     Loop "  %24 = getelementptr inbounds i8, i8* %21, i64 1, !noelle.pdg.inst.id !99" (0.000000e+00%)
Noelle:  Function "finish_pass2"
Noelle:  Function "fill_inverse_cmap"
Noelle:     Loop "  %49 = getelementptr inbounds i8, i8* %41, i64 %47, !noelle.pdg.inst.id !5868" (0.000000e+00%)
Noelle:     Loop "  %179 = getelementptr inbounds [256 x i64], [256 x i64]* %6, i64 0, i64 %176, !noelle.pdg.inst.id !6006" (0.000000e+00%)
Noelle:     Loop "  %340 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %339, !noelle.pdg.inst.id !6179" (0.000000e+00%)
Noelle:     Loop "  %382 = load i64, i64* %380, align 8, !tbaa !5988, !noelle.pdg.inst.id !184" (0.000000e+00%)
Noelle:     Loop "  %599 = load i64, i64* %597, align 8, !tbaa !5988, !noelle.pdg.inst.id !200" (0.000000e+00%)
Noelle:     Loop "  %634 = load i64, i64* %632, align 8, !tbaa !5988, !noelle.pdg.inst.id !216" (0.000000e+00%)
Noelle:     Loop "  %669 = load i64, i64* %667, align 8, !tbaa !5988, !noelle.pdg.inst.id !232" (0.000000e+00%)
Noelle:     Loop "  %428 = add nuw nsw i64 %426, %418, !noelle.pdg.inst.id !6280" (0.000000e+00%)
Noelle:  Function "update_box"
Noelle:     Loop "  %30 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %29, !noelle.pdg.inst.id !83" (0.000000e+00%)
Noelle:     Loop "  %33 = getelementptr inbounds [32 x i16], [32 x i16]* %31, i64 %32, i64 %23, !noelle.pdg.inst.id !89" (0.000000e+00%)
Noelle:     Loop "  %36 = load i16, i16* %34, align 2, !tbaa !94, !noelle.pdg.inst.id !95" (0.000000e+00%)
Noelle:     Loop "  %57 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %56, !noelle.pdg.inst.id !133" (0.000000e+00%)
Noelle:     Loop "  %60 = getelementptr inbounds [32 x i16], [32 x i16]* %58, i64 %59, i64 %50, !noelle.pdg.inst.id !138" (0.000000e+00%)
Noelle:     Loop "  %63 = load i16, i16* %61, align 2, !tbaa !94, !noelle.pdg.inst.id !143" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader18, !noelle.loop.id !181, !noelle.pdg.inst.id !182" (0.000000e+00%)
Noelle:     Loop "  %86 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %85, !noelle.pdg.inst.id !184" (0.000000e+00%)
Noelle:     Loop "  %91 = load i16, i16* %89, align 2, !tbaa !94, !noelle.pdg.inst.id !191" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader14, !noelle.loop.id !229, !noelle.pdg.inst.id !230" (0.000000e+00%)
Noelle:     Loop "  %112 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %111, !noelle.pdg.inst.id !232" (0.000000e+00%)
Noelle:     Loop "  %117 = load i16, i16* %115, align 2, !tbaa !94, !noelle.pdg.inst.id !239" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader10, !noelle.loop.id !277, !noelle.pdg.inst.id !278" (0.000000e+00%)
Noelle:     Loop "  %139 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %138, !noelle.pdg.inst.id !280" (0.000000e+00%)
Noelle:     Loop "  %144 = load i16, i16* %142, align 2, !tbaa !94, !noelle.pdg.inst.id !287" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader6, !noelle.loop.id !325, !noelle.pdg.inst.id !326" (0.000000e+00%)
Noelle:     Loop "  %165 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %164, !noelle.pdg.inst.id !328" (0.000000e+00%)
Noelle:     Loop "  %170 = load i16, i16* %168, align 2, !tbaa !94, !noelle.pdg.inst.id !335" (0.000000e+00%)
Noelle:     Loop "  %263 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %261, !noelle.pdg.inst.id !481" (0.000000e+00%)
Noelle:     Loop "  %269 = load i16, i16* %267, align 2, !tbaa !94, !noelle.pdg.inst.id !489" (0.000000e+00%)
Noelle:     Loop "  %278 = getelementptr inbounds [32 x i16], [32 x i16]* %264, i64 %276, i64 %199, !noelle.pdg.inst.id !503" (0.000000e+00%)
Noelle:     Loop "  %282 = load i16, i16* %280, align 2, !tbaa !94, !noelle.pdg.inst.id !509" (0.000000e+00%)
Noelle:     Loop "  %297 = load i16, i16* %295, align 2, !tbaa !94, !noelle.pdg.inst.id !542" (0.000000e+00%)
Noelle:     Loop "  %215 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %213, !noelle.pdg.inst.id !402" (0.000000e+00%)
Noelle:     Loop "  %221 = load i16, i16* %219, align 2, !tbaa !94, !noelle.pdg.inst.id !410" (0.000000e+00%)
Noelle:     Loop "  %231 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %229, !noelle.pdg.inst.id !430" (0.000000e+00%)
Noelle:     Loop "  %235 = getelementptr inbounds [32 x i16], [32 x i16]* %232, i64 %233, i64 %199, !noelle.pdg.inst.id !436" (0.000000e+00%)
Noelle:     Loop "  %239 = load i16, i16* %237, align 2, !tbaa !94, !noelle.pdg.inst.id !442" (0.000000e+00%)
Noelle:     Loop "  %251 = load i16, i16* %249, align 2, !tbaa !94, !noelle.pdg.inst.id !459" (0.000000e+00%)
Noelle:  Function "jinit_merged_upsampler"
Noelle:     Loop "  %75 = mul nsw i64 %74, 91881, !noelle.pdg.inst.id !319" (0.000000e+00%)
Noelle:  Function "start_pass_merged_upsample"
Noelle:  Function "merged_2v_upsample"
Noelle:  Function "h2v2_merged_upsample"
Noelle:     Loop "  %50 = getelementptr inbounds i8, i8* %45, i64 1, !noelle.pdg.inst.id !99" (0.000000e+00%)
Noelle:  Function "merged_1v_upsample"
Noelle:  Function "jpeg_idct_2x2"
Noelle:     Loop "  %Pivot6 = icmp ult i32 %32, 4, !noelle.pdg.inst.id !149" (0.000000e+00%)
Noelle:  Function "jinit_2pass_quantizer"
Noelle:     Loop "  %34 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !469, !noelle.pdg.inst.id !215" (0.000000e+00%)
Noelle:  Function "start_pass_2_quant"
Noelle:     Loop "  %80 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %79, !noelle.pdg.inst.id !311" (0.000000e+00%)
Noelle:  Function "new_color_map_2_quant"
Noelle:  Function "init_error_limit"
Noelle:     Loop "  %37 = getelementptr inbounds i32, i32* %12, i64 %35, !noelle.pdg.inst.id !101" (0.000000e+00%)
Noelle:     Loop "  %49 = getelementptr inbounds i32, i32* %12, i64 %48, !noelle.pdg.inst.id !121" (0.000000e+00%)
Noelle:  Function "jpeg_idct_4x4"
Noelle:     Loop "  %21 = icmp eq i32 %17, 4, !noelle.pdg.inst.id !179" (0.000000e+00%)
Noelle:     Loop "  %132 = getelementptr inbounds i8*, i8** %3, i64 %130, !noelle.pdg.inst.id !297" (0.000000e+00%)
Noelle:  Function "quantize_fs_dither"
Noelle:     Loop "  %129 = getelementptr inbounds i8*, i8** %2, i64 %128, !noelle.pdg.inst.id !282" (0.000000e+00%)
Noelle:     Loop "  %50 = getelementptr inbounds i8*, i8** %2, i64 %49, !noelle.pdg.inst.id !203" (0.000000e+00%)
Noelle:     Loop "  %54 = load i8*, i8** %52, align 8, !tbaa !170, !noelle.pdg.inst.id !79" (0.000000e+00%)
Noelle:     Loop "  %88 = getelementptr inbounds i16, i16* %85, i64 %72, !noelle.pdg.inst.id !237" (0.000000e+00%)
Noelle:     Loop "  %32 = getelementptr inbounds i8*, i8** %2, i64 %31, !noelle.pdg.inst.id !169" (0.000000e+00%)
Noelle:     Loop "  %36 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %7, i64 0, i32 8, i64 %35, !noelle.pdg.inst.id !180" (0.000000e+00%)
Noelle:     Loop "  %42 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %7, i64 0, i32 8, i64 %41, !noelle.pdg.inst.id !189" (0.000000e+00%)
Noelle:  Function "jpeg_idct_1x1"
Noelle:  Function "noop_upsample"
Noelle:  Function "h2v1_fancy_upsample"
Noelle:     Loop "  %12 = getelementptr inbounds i8*, i8** %2, i64 %11, !noelle.pdg.inst.id !52" (0.000000e+00%)
Noelle:     Loop "  %48 = shl i64 %47, 1, !noelle.pdg.inst.id !98" (0.000000e+00%)
Noelle:     Loop "  %121 = getelementptr inbounds i8, i8* %120, i64 1, !noelle.pdg.inst.id !189" (0.000000e+00%)
Noelle:  Function "h2v1_upsample"
Noelle:     Loop "  %13 = getelementptr inbounds i8*, i8** %5, i64 %12, !noelle.pdg.inst.id !53" (0.000000e+00%)
Noelle:     Loop "  %24 = getelementptr inbounds i8, i8* %22, i64 1, !noelle.pdg.inst.id !68" (0.000000e+00%)
Noelle:  Function "h2v2_upsample"
Noelle:     Loop "  %14 = getelementptr inbounds i8*, i8** %5, i64 %12, !noelle.pdg.inst.id !81" (0.000000e+00%)
Noelle:     Loop "  %25 = getelementptr inbounds i8, i8* %23, i64 1, !noelle.pdg.inst.id !93" (0.000000e+00%)
Noelle:  Function "int_upsample"
Noelle:     Loop "  %138 = getelementptr inbounds i8*, i8** %8, i64 %137, !noelle.pdg.inst.id !379" (0.000000e+00%)
Noelle:     Loop "  %148 = load i8, i8* %146, align 1, !tbaa !209, !noelle.pdg.inst.id !182" (0.000000e+00%)
Noelle:     Loop "  %62 = getelementptr inbounds i8*, i8** %8, i64 %60, !noelle.pdg.inst.id !275" (0.000000e+00%)
Noelle:     Loop "  %72 = load i8, i8* %70, align 1, !tbaa !209, !noelle.pdg.inst.id !107" (0.000000e+00%)
Noelle:     Loop "  %113 = getelementptr inbounds i8*, i8** %8, i64 %112, !noelle.pdg.inst.id !340" (0.000000e+00%)
Noelle:     Loop "  %123 = getelementptr inbounds i8, i8* %121, i64 1, !noelle.pdg.inst.id !351" (0.000000e+00%)
Noelle:     Loop "  %88 = getelementptr inbounds i8*, i8** %8, i64 %86, !noelle.pdg.inst.id !309" (0.000000e+00%)
Noelle:     Loop "  %98 = getelementptr inbounds i8, i8* %96, i64 1, !noelle.pdg.inst.id !320" (0.000000e+00%)
Noelle:     Loop "  %132 = add i64 %131, %27, !noelle.pdg.inst.id !366" (0.000000e+00%)
Noelle:     Loop "  %33 = load i32, i32* %22, align 8, !tbaa !229, !noelle.pdg.inst.id !94" (0.000000e+00%)
Noelle:     Loop "  br label %.loopexit.us.us, !noelle.loop.id !374, !noelle.pdg.inst.id !375" (0.000000e+00%)
Noelle:  Function "grayscale_convert"
Noelle:  Function "start_output_tga"
Noelle:     Loop "  %114 = load i8**, i8*** %111, align 8, !tbaa !952, !noelle.pdg.inst.id !315" (0.000000e+00%)
Noelle:  Function "put_demapped_rgb"
Noelle:     Loop "  %44 = getelementptr inbounds i8, i8* %43, i64 1, !noelle.pdg.inst.id !163" (0.000000e+00%)
Noelle:  Function "ycck_cmyk_convert"
Noelle:     Loop "  %35 = load i8**, i8*** %1, align 8, !tbaa !86, !noelle.pdg.inst.id !87" (0.000000e+00%)
Noelle:     Loop "  %51 = getelementptr inbounds i8, i8* %38, i64 %49, !noelle.pdg.inst.id !105" (0.000000e+00%)
Noelle:  Function "COM_handler"
Noelle:     Loop "  %115 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %7, align 8, !tbaa !1065, !noelle.pdg.inst.id !560" (0.000000e+00%)
Noelle:     Loop "  %65 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %7, align 8, !tbaa !1065, !noelle.pdg.inst.id !507" (0.000000e+00%)
Noelle:  Function "usage"
Noelle:  Function "copy_pixel_rows"
Noelle:     Loop "  %40 = getelementptr i8, i8* %14, i64 %38, !noelle.pdg.inst.id !197" (0.000000e+00%)
Noelle:     Loop "  %90 = getelementptr i8, i8* %14, i64 %88, !noelle.pdg.inst.id !255" (0.000000e+00%)
Noelle:     Loop "  %112 = getelementptr inbounds i8, i8* %109, i64 1, !noelle.pdg.inst.id !289" (0.000000e+00%)
Noelle:     Loop "  %125 = getelementptr inbounds i8, i8* %123, i64 1, !noelle.pdg.inst.id !311" (0.000000e+00%)
Noelle:  Function "put_demapped_gray"
Noelle:     Loop "  %23 = getelementptr inbounds i8, i8* %21, i64 1, !noelle.pdg.inst.id !125" (0.000000e+00%)
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %38, i64 1, !noelle.pdg.inst.id !151" (0.000000e+00%)
Noelle:  Function "null_convert"
Noelle:     Loop "  %70 = add nsw i32 %67, -1, !noelle.pdg.inst.id !140" (0.000000e+00%)
Noelle:     Loop "  %73 = getelementptr inbounds i8**, i8*** %1, i64 %72, !noelle.pdg.inst.id !147" (0.000000e+00%)
Noelle:     Loop "  %82 = getelementptr inbounds i8, i8* %80, i64 1, !noelle.pdg.inst.id !158" (0.000000e+00%)
Noelle:     Loop "  %90 = getelementptr inbounds i8, i8* %89, i64 1, !noelle.pdg.inst.id !175" (0.000000e+00%)
Noelle:     Loop "  %119 = getelementptr inbounds i8**, i8*** %1, i64 %118, !noelle.pdg.inst.id !217" (0.000000e+00%)
Noelle:     Loop "  %128 = getelementptr inbounds i8, i8* %126, i64 1, !noelle.pdg.inst.id !228" (0.000000e+00%)
Noelle:     Loop "  %24 = add nsw i32 %21, -1, !noelle.pdg.inst.id !69" (0.000000e+00%)
Noelle:     Loop "  %27 = getelementptr inbounds i8**, i8*** %1, i64 %26, !noelle.pdg.inst.id !75" (0.000000e+00%)
Noelle:     Loop "  %36 = getelementptr inbounds i8, i8* %35, i64 1, !noelle.pdg.inst.id !87" (0.000000e+00%)
Noelle:  Function "jinit_1pass_quantizer"
Noelle:     Loop "  %78 = add nuw i64 %77, 1, !noelle.pdg.inst.id !1790" (0.000000e+00%)
Noelle:     Loop "  %81 = mul nsw i64 %79, %78, !noelle.pdg.inst.id !1795" (0.000000e+00%)
Noelle:     Loop "  %93 = mul nsw i64 %91, %78, !noelle.pdg.inst.id !1812" (0.000000e+00%)
Noelle:     Loop "  %55 = add nuw i64 %54, 1, !noelle.pdg.inst.id !1744" (0.000000e+00%)
Noelle:     Loop "  %58 = mul nsw i64 %56, %55, !noelle.pdg.inst.id !1749" (0.000000e+00%)
Noelle:     Loop "  %70 = add nuw i64 %69, 1, !noelle.pdg.inst.id !1772" (0.000000e+00%)
Noelle:     Loop "  %74 = mul nsw i64 %72, %70, !noelle.pdg.inst.id !1781" (0.000000e+00%)
Noelle:     Loop "  %130 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %126, !noelle.pdg.inst.id !1870" (0.000000e+00%)
Noelle:     Loop "  %170 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %166, !noelle.pdg.inst.id !1923" (0.000000e+00%)
Noelle:     Loop "  %235 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %233, !noelle.pdg.inst.id !2028" (0.000000e+00%)
Noelle:     Loop "  br label %._crit_edge132, !noelle.loop.id !1995, !noelle.pdg.inst.id !1996" (0.000000e+00%)
Noelle:     Loop "  %sext = shl i64 %214, 32, !noelle.pdg.inst.id !2000" (0.000000e+00%)
Noelle:     Loop "  br label %._crit_edge133.us, !noelle.loop.id !1963, !noelle.pdg.inst.id !1964" (0.000000e+00%)
Noelle:     Loop "  %195 = getelementptr inbounds [3 x i32], [3 x i32]* @select_ncolors.RGB_order, i64 0, i64 %192, !noelle.pdg.inst.id !1968" (0.000000e+00%)
Noelle:     Loop "  %276 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %42, i64 0, i32 5, i64 %274, !noelle.pdg.inst.id !2069" (0.000000e+00%)
Noelle:     Loop "  %297 = trunc i64 %295 to i32, !noelle.pdg.inst.id !2092" (0.000000e+00%)
Noelle:     Loop "  %375 = add i64 %374, %287, !noelle.pdg.inst.id !2201" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader3.us, !noelle.loop.id !2163, !noelle.pdg.inst.id !2164" (0.000000e+00%)
Noelle:     Loop "  %346 = load i8*, i8** %286, align 8, !tbaa !1694, !noelle.pdg.inst.id !422" (0.000000e+00%)
Noelle:     Loop "  %366 = load i8*, i8** %286, align 8, !tbaa !1694, !noelle.pdg.inst.id !442" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader3.us.us, !noelle.loop.id !2110, !noelle.pdg.inst.id !2111" (0.000000e+00%)
Noelle:     Loop "  %309 = load i8*, i8** %286, align 8, !tbaa !1694, !noelle.pdg.inst.id !397" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader1.us.us, !noelle.loop.id !2145, !noelle.pdg.inst.id !2146" (0.000000e+00%)
Noelle:     Loop "  %335 = load i8*, i8** %286, align 8, !tbaa !1694, !noelle.pdg.inst.id !417" (0.000000e+00%)
Noelle:     Loop "  %330 = add i64 %329, %287, !noelle.pdg.inst.id !2139" (0.000000e+00%)
Noelle:     Loop "  %401 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !1672, !noelle.pdg.inst.id !464" (0.000000e+00%)
Noelle:     Loop "  br label %.loopexit15.us.us.us, !noelle.loop.id !1769, !noelle.pdg.inst.id !1770" (0.000000e+00%)
Noelle:  Function "start_pass_1_quant"
Noelle:     Loop "  %115 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %112, align 8, !tbaa !289, !noelle.pdg.inst.id !169" (0.000000e+00%)
Noelle:     Loop "  %134 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 8, i64 %133, !noelle.pdg.inst.id !375" (0.000000e+00%)
Noelle:     Loop "  %45 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %37, i64 0, i32 5, i64 %44, !noelle.pdg.inst.id !265" (0.000000e+00%)
Noelle:     Loop "  %51 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %37, i64 0, i32 5, i64 %50, !noelle.pdg.inst.id !276" (0.000000e+00%)
Noelle:     Loop "  br label %._crit_edge27, !noelle.loop.id !300, !noelle.pdg.inst.id !301" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds [16 x [16 x i8]], [16 x [16 x i8]]* @base_dither_matrix, i64 0, i64 %68, i64 %69, !noelle.pdg.inst.id !303" (0.000000e+00%)
Noelle:  Function "finish_pass_1_quant"
Noelle:  Function "new_color_map_1_quant"
Noelle:  Function "create_colorindex"
Noelle:     Loop "  %98 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 5, i64 %96, !noelle.pdg.inst.id !234" (0.000000e+00%)
Noelle:     Loop "  %113 = sext i32 %112 to i64, !noelle.pdg.inst.id !249" (0.000000e+00%)
Noelle:     Loop "  %118 = add i64 %117, 1, !noelle.pdg.inst.id !257" (0.000000e+00%)
Noelle:     Loop "  %28 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %4, i64 0, i32 5, i64 %26, !noelle.pdg.inst.id !155" (0.000000e+00%)
Noelle:     Loop "  %47 = sext i32 %46 to i64, !noelle.pdg.inst.id !174" (0.000000e+00%)
Noelle:     Loop "  %52 = add i64 %51, 1, !noelle.pdg.inst.id !182" (0.000000e+00%)
Noelle:     Loop "  %76 = load i8, i8* %36, align 1, !tbaa !205, !noelle.pdg.inst.id !74" (0.000000e+00%)
Noelle:  Function "color_quantize3"
Noelle:     Loop "  %97 = getelementptr inbounds i8*, i8** %2, i64 %96, !noelle.pdg.inst.id !163" (0.000000e+00%)
Noelle:     Loop "  %122 = getelementptr inbounds i8, i8* %119, i64 1, !noelle.pdg.inst.id !191" (0.000000e+00%)
Noelle:     Loop "  %26 = getelementptr inbounds i8*, i8** %2, i64 %25, !noelle.pdg.inst.id !75" (0.000000e+00%)
Noelle:     Loop "  %49 = getelementptr inbounds i8*, i8** %1, i64 %48, !noelle.pdg.inst.id !106" (0.000000e+00%)
Noelle:     Loop "  %56 = getelementptr inbounds i8, i8* %53, i64 1, !noelle.pdg.inst.id !115" (0.000000e+00%)
Noelle:  Function "color_quantize"
Noelle:     Loop "  %191 = getelementptr inbounds i8*, i8** %2, i64 %190, !noelle.pdg.inst.id !295" (0.000000e+00%)
Noelle:     Loop "  %195 = getelementptr inbounds i8, i8* %194, i64 1, !noelle.pdg.inst.id !301" (0.000000e+00%)
Noelle:     Loop "  %60 = getelementptr inbounds i8*, i8** %2, i64 %59, !noelle.pdg.inst.id !131" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader1.us.us17, !noelle.loop.id !142, !noelle.pdg.inst.id !143" (0.000000e+00%)
Noelle:     Loop "  %71 = getelementptr inbounds i8*, i8** %9, i64 %67, !noelle.pdg.inst.id !148" (0.000000e+00%)
Noelle:     Loop "  %117 = getelementptr inbounds i8*, i8** %9, i64 %113, !noelle.pdg.inst.id !201" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader1.us.us.us, !noelle.loop.id !228, !noelle.pdg.inst.id !229" (0.000000e+00%)
Noelle:     Loop "  %141 = getelementptr inbounds i8*, i8** %9, i64 %137, !noelle.pdg.inst.id !234" (0.000000e+00%)
Noelle:     Loop "  br i1 %26, label %..split11_crit_edge.us.us..loopexit3.loopexit.us.us_crit_edge, label %.loopexit.us._crit_edge.us.us.preheader.us, !noelle.loop.id !79, !noelle.pdg.inst.id !80" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader.us.us.us.us, !noelle.loop.id !85, !noelle.pdg.inst.id !86" (0.000000e+00%)
Noelle:     Loop "  %36 = getelementptr inbounds i8*, i8** %9, i64 %32, !noelle.pdg.inst.id !91" (0.000000e+00%)
Noelle:  Function "quantize3_ord_dither"
Noelle:     Loop "  %34 = load [16 x i32]*, [16 x i32]** %20, align 8, !tbaa !50, !noelle.pdg.inst.id !87" (0.000000e+00%)
Noelle:     Loop "  %46 = getelementptr inbounds i8, i8* %42, i64 1, !noelle.pdg.inst.id !101" (0.000000e+00%)
Noelle:     Loop "  %28 = add nsw i32 %26, 1, !noelle.pdg.inst.id !75" (0.000000e+00%)
Noelle:  Function "quantize_ord_dither"
Noelle:     Loop "  %25 = getelementptr inbounds i8*, i8** %2, i64 %24, !noelle.pdg.inst.id !182" (0.000000e+00%)
Noelle:     Loop "  %78 = load i8*, i8** %25, align 8, !tbaa !183, !noelle.pdg.inst.id !84" (0.000000e+00%)
Noelle:     Loop "  %99 = load i8**, i8*** %17, align 8, !tbaa !205, !noelle.pdg.inst.id !105" (0.000000e+00%)
Noelle:     Loop "  %111 = load i8, i8* %107, align 1, !tbaa !215, !noelle.pdg.inst.id !115" (0.000000e+00%)
Noelle:     Loop "  %31 = load i8**, i8*** %17, align 8, !tbaa !205, !noelle.pdg.inst.id !50" (0.000000e+00%)
Noelle:     Loop "  %43 = load i8, i8* %39, align 1, !tbaa !215, !noelle.pdg.inst.id !60" (0.000000e+00%)
Noelle:  Function "jpeg_start_output"
Noelle:  Function "read_pbm_integer"
Noelle:     Loop "  %4 = tail call i32 @getc(%struct._IO_FILE* %1) #18, !noelle.pdg.inst.id !34" (0.000000e+00%)
Noelle:     Loop "  %6 = tail call i32 @getc(%struct._IO_FILE* %1) #18, !noelle.pdg.inst.id !43" (0.000000e+00%)
Noelle:     Loop "  %31 = tail call i32 @getc(%struct._IO_FILE* %1) #18, !noelle.pdg.inst.id !66" (0.000000e+00%)
Noelle:     Loop "  %33 = tail call i32 @getc(%struct._IO_FILE* %1) #18, !noelle.pdg.inst.id !69" (0.000000e+00%)
Noelle:  Function "read_stdin"
Noelle:  Function "decode_mcu"
Noelle:     Loop "  %35 = getelementptr inbounds %struct.huff_entropy_decoder, %struct.huff_entropy_decoder* %7, i64 0, i32 2, i32 0, i64 %34, !noelle.pdg.inst.id !10307" (0.000000e+00%)
Noelle:     Loop "  %70 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %67, !noelle.pdg.inst.id !10353" (3.252623e-05%)
Noelle:     Loop "  %97 = icmp eq i32 %92, 0, !noelle.pdg.inst.id !10379" (0.000000e+00%)
Noelle:     Loop "  %123 = icmp eq i64 %122, 0, !noelle.pdg.inst.id !10408" (0.000000e+00%)
Noelle:     Loop "  %214 = icmp eq i32 %209, 0, !noelle.pdg.inst.id !10524" (0.000000e+00%)
Noelle:     Loop "  %240 = icmp eq i64 %239, 0, !noelle.pdg.inst.id !10549" (0.000000e+00%)
Noelle:     Loop "  %327 = icmp slt i32 %326, 8, !noelle.pdg.inst.id !10668" (0.000000e+00%)
Noelle:     Loop "  %337 = icmp eq i32 %332, 0, !noelle.pdg.inst.id !10678" (0.000000e+00%)
Noelle:     Loop "  %363 = icmp eq i64 %362, 0, !noelle.pdg.inst.id !10703" (0.000000e+00%)
Noelle:     Loop "  %457 = icmp eq i32 %452, 0, !noelle.pdg.inst.id !10815" (0.000000e+00%)
Noelle:     Loop "  %483 = icmp eq i64 %482, 0, !noelle.pdg.inst.id !10840" (0.000000e+00%)
Noelle:     Loop "  %572 = icmp slt i32 %571, 8, !noelle.pdg.inst.id !10963" (0.000000e+00%)
Noelle:     Loop "  %582 = icmp eq i32 %577, 0, !noelle.pdg.inst.id !10973" (0.000000e+00%)
Noelle:     Loop "  %608 = icmp eq i64 %607, 0, !noelle.pdg.inst.id !10998" (0.000000e+00%)
Noelle:     Loop "  %701 = icmp eq i32 %696, 0, !noelle.pdg.inst.id !11109" (0.000000e+00%)
Noelle:     Loop "  %727 = icmp eq i64 %726, 0, !noelle.pdg.inst.id !11134" (0.000000e+00%)
Noelle:  Function "write_stdout"
Noelle:  Function "jpeg_abort_decompress"
Noelle:  Function "jpeg_input_complete"
Noelle:  Function "jpeg_has_multiple_scans"
Noelle:  Function "jpeg_read_scanlines"
Noelle:  Function "jpeg_read_raw_data"
Noelle:  Function "jpeg_finish_output"
Noelle:     Loop "  %28 = load i32, i32* %25, align 4, !tbaa !129, !noelle.pdg.inst.id !77" (0.000000e+00%)
Noelle:  Function "decompress_onepass"
Noelle:     Loop "  %31 = icmp ugt i32 %29, %8, !noelle.pdg.inst.id !403" (0.000000e+00%)
Noelle:     Loop "  %33 = load i8*, i8** %21, align 8, !tbaa !409, !noelle.pdg.inst.id !78" (0.000000e+00%)
Noelle:     Loop "  %132 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %130, !noelle.pdg.inst.id !534" (0.000000e+00%)
Noelle:     Loop "  %173 = load i32, i32* %26, align 8, !tbaa !466, !noelle.pdg.inst.id !282" (0.000000e+00%)
Noelle:     Loop "  %182 = add nsw i64 %180, %179, !noelle.pdg.inst.id !581" (0.000000e+00%)
Noelle:     Loop "  %51 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %49, !noelle.pdg.inst.id !432" (0.000000e+00%)
Noelle:     Loop "  %83 = load i32, i32* %26, align 8, !tbaa !466, !noelle.pdg.inst.id !162" (0.000000e+00%)
Noelle:     Loop "  %92 = add nsw i64 %90, %89, !noelle.pdg.inst.id !481" (0.000000e+00%)
Noelle:  Function "decompress_smooth_data"
Noelle:     Loop "  %17 = load i32, i32* %11, align 4, !tbaa !552, !noelle.pdg.inst.id !54" (0.000000e+00%)
Noelle:     Loop "  %57 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %56, i64 0, i32 12, !noelle.pdg.inst.id !603" (0.000000e+00%)
Noelle:     Loop "  %163 = getelementptr inbounds [64 x i16]*, [64 x i16]** %104, i64 %161, !noelle.pdg.inst.id !703" (0.000000e+00%)
Noelle:     Loop "  call void @jcopy_block_row([64 x i16]* nonnull %197, [64 x i16]* nonnull %3, i32 1) #18, !noelle.pdg.inst.id !46" (0.000000e+00%)
Noelle:  Function "post_process_1pass"
Noelle:  Function "post_process_prepass"
Noelle:  Function "post_process_2pass"
Noelle:  Function "skip_input_data"
Noelle:     Loop "  %18 = sub nsw i64 %17, %16, !noelle.pdg.inst.id !214" (0.000000e+00%)
Noelle:  Function "jpeg_new_colormap"
Noelle:  Function "put_demapped_gray.55"
Noelle:     Loop "  %23 = getelementptr inbounds i8, i8* %20, i64 1, !noelle.pdg.inst.id !124" (0.000000e+00%)
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %37, i64 1, !noelle.pdg.inst.id !150" (0.000000e+00%)
Noelle:  Function "jinit_write_gif"
Noelle:  Function "start_output_gif"
Noelle:  Function "put_pixel_rows.52"
Noelle:     Loop "  %39 = getelementptr inbounds i8, i8* %38, i64 1, !noelle.pdg.inst.id !1133" (0.000000e+00%)
Noelle:     Loop "  %74 = sub nsw i32 %73, %72, !noelle.pdg.inst.id !1171" (0.000000e+00%)
Noelle:     Loop "  %100 = trunc i64 %99 to i8, !noelle.pdg.inst.id !1203" (0.000000e+00%)
Noelle:     Loop "  %165 = trunc i64 %164 to i8, !noelle.pdg.inst.id !1269" (0.000000e+00%)
Noelle:  Function "finish_output_gif"
Noelle:     Loop "  %42 = trunc i64 %41 to i8, !noelle.pdg.inst.id !1711" (0.000000e+00%)
Noelle:     Loop "  %113 = trunc i64 %112 to i8, !noelle.pdg.inst.id !1793" (0.000000e+00%)
Noelle:  Function "emit_header"
Noelle:     Loop "  %22 = shl i32 1, %21, !noelle.pdg.inst.id !7286" (0.000000e+00%)
Noelle:     Loop "  %104 = icmp slt i64 %103, %78, !noelle.pdg.inst.id !7340" (0.000000e+00%)
Noelle:     Loop "  %81 = icmp slt i64 %80, %78, !noelle.pdg.inst.id !7326" (0.000000e+00%)
Noelle:     Loop "  %218 = trunc i64 %217 to i8, !noelle.pdg.inst.id !7417" (0.000000e+00%)
Noelle:  Function "jinit_write_targa"
Noelle:  Function "finish_output_tga"
Noelle:  Function "put_gray_rows"
Noelle:     Loop "  %39 = getelementptr i8, i8* %6, i64 %37, !noelle.pdg.inst.id !198" (0.000000e+00%)
Noelle:     Loop "  %89 = getelementptr i8, i8* %6, i64 %87, !noelle.pdg.inst.id !256" (0.000000e+00%)
Noelle:     Loop "  %111 = getelementptr inbounds i8, i8* %109, i64 1, !noelle.pdg.inst.id !290" (0.000000e+00%)
Noelle:     Loop "  %124 = getelementptr inbounds i8, i8* %123, i64 1, !noelle.pdg.inst.id !312" (0.000000e+00%)
Noelle:  Function "put_pixel_rows.56"
Noelle:     Loop "  %34 = getelementptr inbounds i8, i8* %33, i64 2, !noelle.pdg.inst.id !142" (0.000000e+00%)
Noelle:  Function "jinit_write_bmp"
Noelle:  Function "start_output_bmp"
Noelle:  Function "finish_output_bmp"
Noelle:     Loop "  %272 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %241, align 8, !tbaa !3338, !noelle.pdg.inst.id !948" (0.000000e+00%)
Noelle:     Loop "  %284 = load i8, i8* %282, align 1, !tbaa !3118, !noelle.pdg.inst.id !958" (0.000000e+00%)
Noelle:     Loop "  %247 = sub i32 %245, %246, !noelle.pdg.inst.id !3330" (0.000000e+00%)
Noelle:     Loop "  %263 = load i8, i8* %261, align 1, !tbaa !3118, !noelle.pdg.inst.id !942" (0.000000e+00%)
Noelle:  Function "put_gray_rows.59"
Noelle:     Loop "  %51 = getelementptr i8, i8* %18, i64 %49, !noelle.pdg.inst.id !223" (0.000000e+00%)
Noelle:     Loop "  %101 = getelementptr i8, i8* %18, i64 %99, !noelle.pdg.inst.id !281" (0.000000e+00%)
Noelle:     Loop "  %123 = getelementptr inbounds i8, i8* %121, i64 1, !noelle.pdg.inst.id !315" (0.000000e+00%)
Noelle:     Loop "  %137 = getelementptr inbounds i8, i8* %136, i64 1, !noelle.pdg.inst.id !338" (0.000000e+00%)
Noelle:  Function "put_pixel_rows.60"
Noelle:     Loop "  %47 = getelementptr inbounds i8, i8* %46, i64 1, !noelle.pdg.inst.id !168" (0.000000e+00%)
Noelle:  Function "write_colormap"
Noelle:     Loop "  %93 = load i8*, i8** %6, align 8, !tbaa !1378, !noelle.pdg.inst.id !956" (0.000000e+00%)
Noelle:     Loop "  %31 = load i8*, i8** %6, align 8, !tbaa !1378, !noelle.pdg.inst.id !316" (0.000000e+00%)
Noelle:     Loop "  %75 = load i8*, i8** %51, align 8, !tbaa !1378, !noelle.pdg.inst.id !776" (0.000000e+00%)
Noelle:     Loop "  %56 = load i8*, i8** %51, align 8, !tbaa !1378, !noelle.pdg.inst.id !546" (0.000000e+00%)
Noelle:     Loop "  %111 = tail call i32 @putc(i32 %110, %struct._IO_FILE* %10), !noelle.pdg.inst.id !76" (0.000000e+00%)
Noelle:     Loop "  %15 = tail call i32 @putc(i32 %14, %struct._IO_FILE* %10), !noelle.pdg.inst.id !37" (0.000000e+00%)
Noelle:     Loop "  %138 = tail call i32 @putc(i32 0, %struct._IO_FILE* %10), !noelle.pdg.inst.id !92" (0.000000e+00%)
Noelle:     Loop "  %131 = tail call i32 @putc(i32 0, %struct._IO_FILE* %10), !noelle.pdg.inst.id !84" (0.000000e+00%)
Noelle:  Function "read_color_map"
Noelle:     Loop "  br label %.preheader13, !noelle.loop.id !3421, !noelle.pdg.inst.id !3422" (0.000000e+00%)
Noelle:     Loop "  %196 = tail call i32 @getc(%struct._IO_FILE* %1) #18, !noelle.pdg.inst.id !80" (0.000000e+00%)
Noelle:     Loop "  %198 = tail call i32 @getc(%struct._IO_FILE* %1) #18, !noelle.pdg.inst.id !82" (0.000000e+00%)
Noelle:     Loop "  %202 = tail call i32 @getc(%struct._IO_FILE* %1) #18, !noelle.pdg.inst.id !86" (0.000000e+00%)
Noelle:     Loop "  %206 = tail call i32 @getc(%struct._IO_FILE* %1) #18, !noelle.pdg.inst.id !90" (0.000000e+00%)
Noelle:     Loop "  %229 = getelementptr inbounds i8, i8* %219, i64 %228, !noelle.pdg.inst.id !3506" (0.000000e+00%)
Noelle:     Loop "  br label %.preheader3, !noelle.loop.id !3363, !noelle.pdg.inst.id !3364" (0.000000e+00%)
Noelle:     Loop "  %142 = tail call fastcc i32 @read_pbm_integer(%struct.jpeg_decompress_struct* %0, %struct._IO_FILE* %1) #18, !noelle.pdg.inst.id !72" (0.000000e+00%)
Noelle:     Loop "  %156 = getelementptr inbounds i8, i8* %146, i64 %155, !noelle.pdg.inst.id !3375" (0.000000e+00%)
Noelle:     Loop "  %16 = tail call i32 @getc(%struct._IO_FILE* %1) #18, !noelle.pdg.inst.id !42" (0.000000e+00%)
Noelle:     Loop "  %51 = tail call i32 @getc(%struct._IO_FILE* %1) #18, !noelle.pdg.inst.id !50" (0.000000e+00%)
Noelle:     Loop "  %75 = getelementptr inbounds i8, i8* %65, i64 %74, !noelle.pdg.inst.id !3279" (0.000000e+00%)
TimeSaved:    There are 420 loops in the program we are going to consider
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [13 x i32], align 16, !noelle.pdg.inst.id !3183
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [13 x i32], align 16, !noelle.pdg.inst.id !3183
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [13 x i32], align 16, !noelle.pdg.inst.id !3183
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [13 x i32], align 16, !noelle.pdg.inst.id !3183
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 56
TimeSaved: LoopSelector:      Function: "read_color_map"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %51 = tail call i32 @getc(%struct._IO_FILE* %1) #18, !noelle.pdg.inst.id !50"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 57
TimeSaved: LoopSelector:      Function: "read_color_map"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %75 = getelementptr inbounds i8, i8* %65, i64 %74, !noelle.pdg.inst.id !3279"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 44
TimeSaved: LoopSelector:      Function: "write_colormap"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %138 = tail call i32 @putc(i32 0, %struct._IO_FILE* %10), !noelle.pdg.inst.id !92"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 43
TimeSaved: LoopSelector:      Function: "write_colormap"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %15 = tail call i32 @putc(i32 %14, %struct._IO_FILE* %10), !noelle.pdg.inst.id !37"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 42
TimeSaved: LoopSelector:      Function: "write_colormap"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %111 = tail call i32 @putc(i32 %110, %struct._IO_FILE* %10), !noelle.pdg.inst.id !76"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 35
TimeSaved: LoopSelector:      Function: "put_gray_rows.59"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %123 = getelementptr inbounds i8, i8* %121, i64 1, !noelle.pdg.inst.id !315"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 33
TimeSaved: LoopSelector:      Function: "put_gray_rows.59"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %51 = getelementptr i8, i8* %18, i64 %49, !noelle.pdg.inst.id !223"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [12 x i8], align 1, !noelle.pdg.inst.id !3065
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [40 x i8], align 16, !noelle.pdg.inst.id !3063
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [14 x i8], align 1, !noelle.pdg.inst.id !3064
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [12 x i8], align 1, !noelle.pdg.inst.id !3065
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [40 x i8], align 16, !noelle.pdg.inst.id !3063
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [14 x i8], align 1, !noelle.pdg.inst.id !3064
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [12 x i8], align 1, !noelle.pdg.inst.id !3065
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [40 x i8], align 16, !noelle.pdg.inst.id !3063
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [14 x i8], align 1, !noelle.pdg.inst.id !3064
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [12 x i8], align 1, !noelle.pdg.inst.id !3065
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [40 x i8], align 16, !noelle.pdg.inst.id !3063
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [14 x i8], align 1, !noelle.pdg.inst.id !3064
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 31
TimeSaved: LoopSelector:      Function: "finish_output_bmp"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %247 = sub i32 %245, %246, !noelle.pdg.inst.id !3330"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 32
TimeSaved: LoopSelector:      Function: "finish_output_bmp"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %263 = load i8, i8* %261, align 1, !tbaa !3118, !noelle.pdg.inst.id !942"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 28
TimeSaved: LoopSelector:      Function: "put_pixel_rows.56"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %34 = getelementptr inbounds i8, i8* %33, i64 2, !noelle.pdg.inst.id !142"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 26
TimeSaved: LoopSelector:      Function: "put_gray_rows"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %111 = getelementptr inbounds i8, i8* %109, i64 1, !noelle.pdg.inst.id !290"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 24
TimeSaved: LoopSelector:      Function: "put_gray_rows"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %39 = getelementptr i8, i8* %6, i64 %37, !noelle.pdg.inst.id !198"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 20
TimeSaved: LoopSelector:      Function: "emit_header"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %218 = trunc i64 %217 to i8, !noelle.pdg.inst.id !7417"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 18
TimeSaved: LoopSelector:      Function: "emit_header"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %104 = icmp slt i64 %103, %78, !noelle.pdg.inst.id !7340"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 34
TimeSaved: LoopSelector:      Function: "put_gray_rows.59"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %101 = getelementptr i8, i8* %18, i64 %99, !noelle.pdg.inst.id !281"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 11
TimeSaved: LoopSelector:      Function: "put_pixel_rows.52"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %39 = getelementptr inbounds i8, i8* %38, i64 1, !noelle.pdg.inst.id !1133"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 12
TimeSaved: LoopSelector:      Function: "put_pixel_rows.52"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %74 = sub nsw i32 %73, %72, !noelle.pdg.inst.id !1171"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 14
TimeSaved: LoopSelector:      Function: "put_pixel_rows.52"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %165 = trunc i64 %164 to i8, !noelle.pdg.inst.id !1269"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 13
TimeSaved: LoopSelector:      Function: "put_pixel_rows.52"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %100 = trunc i64 %99 to i8, !noelle.pdg.inst.id !1203"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 23
TimeSaved: LoopSelector:      Function: "put_demapped_gray.55"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %39 = getelementptr inbounds i8, i8* %37, i64 1, !noelle.pdg.inst.id !150"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 67
TimeSaved: LoopSelector:      Function: "skip_input_data"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %18 = sub nsw i64 %17, %16, !noelle.pdg.inst.id !214"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [64 x i16], align 16, !noelle.pdg.inst.id !529
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [64 x i16], align 16, !noelle.pdg.inst.id !529
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 202
TimeSaved: LoopSelector:      Function: "decompress_smooth_data"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %17 = load i32, i32* %11, align 4, !tbaa !552, !noelle.pdg.inst.id !54"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 194
TimeSaved: LoopSelector:      Function: "decompress_onepass"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %31 = icmp ugt i32 %29, %8, !noelle.pdg.inst.id !403"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 195
TimeSaved: LoopSelector:      Function: "decompress_onepass"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %33 = load i8*, i8** %21, align 8, !tbaa !409, !noelle.pdg.inst.id !78"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 199
TimeSaved: LoopSelector:      Function: "decompress_onepass"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %51 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %49, !noelle.pdg.inst.id !432"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 196
TimeSaved: LoopSelector:      Function: "decompress_onepass"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %132 = getelementptr inbounds %struct.jpeg_decompress_struct.380, %struct.jpeg_decompress_struct.380* %0, i64 0, i32 63, i64 %130, !noelle.pdg.inst.id !534"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 197
TimeSaved: LoopSelector:      Function: "decompress_onepass"
TimeSaved: LoopSelector:      Loop nesting level: 4
TimeSaved: LoopSelector:      "  %173 = load i32, i32* %26, align 8, !tbaa !466, !noelle.pdg.inst.id !282"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 200
TimeSaved: LoopSelector:      Function: "decompress_onepass"
TimeSaved: LoopSelector:      Loop nesting level: 4
TimeSaved: LoopSelector:      "  %83 = load i32, i32* %26, align 8, !tbaa !466, !noelle.pdg.inst.id !162"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 201
TimeSaved: LoopSelector:      Function: "decompress_onepass"
TimeSaved: LoopSelector:      Loop nesting level: 5
TimeSaved: LoopSelector:      "  %92 = add nsw i64 %90, %89, !noelle.pdg.inst.id !481"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 198
TimeSaved: LoopSelector:      Function: "decompress_onepass"
TimeSaved: LoopSelector:      Loop nesting level: 5
TimeSaved: LoopSelector:      "  %182 = add nsw i64 %180, %179, !noelle.pdg.inst.id !581"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state, align 4, !noelle.pdg.inst.id !10256
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state, align 16, !noelle.pdg.inst.id !10255
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 129
TimeSaved: LoopSelector:      Function: "decode_mcu"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %70 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %67, !noelle.pdg.inst.id !10353"
TimeSaved: LoopSelector:      Coverage: 3.252623e-05%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = 0.000000e+00%
TimeSaved: LoopSelector:    Loop 134
TimeSaved: LoopSelector:      Function: "decode_mcu"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %327 = icmp slt i32 %326, 8, !noelle.pdg.inst.id !10668"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 132
TimeSaved: LoopSelector:      Function: "decode_mcu"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %214 = icmp eq i32 %209, 0, !noelle.pdg.inst.id !10524"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 139
TimeSaved: LoopSelector:      Function: "decode_mcu"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %572 = icmp slt i32 %571, 8, !noelle.pdg.inst.id !10963"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 130
TimeSaved: LoopSelector:      Function: "decode_mcu"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %97 = icmp eq i32 %92, 0, !noelle.pdg.inst.id !10379"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 133
TimeSaved: LoopSelector:      Function: "decode_mcu"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %240 = icmp eq i64 %239, 0, !noelle.pdg.inst.id !10549"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 131
TimeSaved: LoopSelector:      Function: "decode_mcu"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %123 = icmp eq i64 %122, 0, !noelle.pdg.inst.id !10408"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 142
TimeSaved: LoopSelector:      Function: "decode_mcu"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %701 = icmp eq i32 %696, 0, !noelle.pdg.inst.id !11109"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 140
TimeSaved: LoopSelector:      Function: "decode_mcu"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %582 = icmp eq i32 %577, 0, !noelle.pdg.inst.id !10973"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 135
TimeSaved: LoopSelector:      Function: "decode_mcu"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %337 = icmp eq i32 %332, 0, !noelle.pdg.inst.id !10678"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 137
TimeSaved: LoopSelector:      Function: "decode_mcu"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %457 = icmp eq i32 %452, 0, !noelle.pdg.inst.id !10815"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 138
TimeSaved: LoopSelector:      Function: "decode_mcu"
TimeSaved: LoopSelector:      Loop nesting level: 4
TimeSaved: LoopSelector:      "  %483 = icmp eq i64 %482, 0, !noelle.pdg.inst.id !10840"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 143
TimeSaved: LoopSelector:      Function: "decode_mcu"
TimeSaved: LoopSelector:      Loop nesting level: 4
TimeSaved: LoopSelector:      "  %727 = icmp eq i64 %726, 0, !noelle.pdg.inst.id !11134"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 141
TimeSaved: LoopSelector:      Function: "decode_mcu"
TimeSaved: LoopSelector:      Loop nesting level: 4
TimeSaved: LoopSelector:      "  %608 = icmp eq i64 %607, 0, !noelle.pdg.inst.id !10998"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 136
TimeSaved: LoopSelector:      Function: "decode_mcu"
TimeSaved: LoopSelector:      Loop nesting level: 4
TimeSaved: LoopSelector:      "  %363 = icmp eq i64 %362, 0, !noelle.pdg.inst.id !10703"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 60
TimeSaved: LoopSelector:      Function: "read_pbm_integer"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %31 = tail call i32 @getc(%struct._IO_FILE* %1) #18, !noelle.pdg.inst.id !66"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 61
TimeSaved: LoopSelector:      Function: "read_pbm_integer"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %33 = tail call i32 @getc(%struct._IO_FILE* %1) #18, !noelle.pdg.inst.id !69"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 318
TimeSaved: LoopSelector:      Function: "quantize_ord_dither"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %25 = getelementptr inbounds i8*, i8** %2, i64 %24, !noelle.pdg.inst.id !182"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 320
TimeSaved: LoopSelector:      Function: "quantize_ord_dither"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %99 = load i8**, i8*** %17, align 8, !tbaa !205, !noelle.pdg.inst.id !105"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 319
TimeSaved: LoopSelector:      Function: "quantize_ord_dither"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %78 = load i8*, i8** %25, align 8, !tbaa !183, !noelle.pdg.inst.id !84"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 322
TimeSaved: LoopSelector:      Function: "quantize_ord_dither"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %31 = load i8**, i8*** %17, align 8, !tbaa !205, !noelle.pdg.inst.id !50"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 321
TimeSaved: LoopSelector:      Function: "quantize_ord_dither"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %111 = load i8, i8* %107, align 1, !tbaa !215, !noelle.pdg.inst.id !115"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 323
TimeSaved: LoopSelector:      Function: "quantize_ord_dither"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %43 = load i8, i8* %39, align 1, !tbaa !215, !noelle.pdg.inst.id !60"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 317
TimeSaved: LoopSelector:      Function: "quantize3_ord_dither"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %28 = add nsw i32 %26, 1, !noelle.pdg.inst.id !75"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 315
TimeSaved: LoopSelector:      Function: "quantize3_ord_dither"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %34 = load [16 x i32]*, [16 x i32]** %20, align 8, !tbaa !50, !noelle.pdg.inst.id !87"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 316
TimeSaved: LoopSelector:      Function: "quantize3_ord_dither"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %46 = getelementptr inbounds i8, i8* %42, i64 1, !noelle.pdg.inst.id !101"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 63
TimeSaved: LoopSelector:      Function: "jpeg_finish_decompress"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %37 = load %struct.jpeg_input_controller*, %struct.jpeg_input_controller** %36, align 8, !tbaa !264, !noelle.pdg.inst.id !107"
TimeSaved: LoopSelector:      Coverage: 5.408418e-09%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = 0.000000e+00%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 219
TimeSaved: LoopSelector:      Function: "jinit_upsampler"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %53 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %52, i64 0, i32 2, !noelle.pdg.inst.id !458"
TimeSaved: LoopSelector:      Coverage: 2.517497e+00%
TimeSaved: LoopSelector:      Whole-program savings = 7.571785e-09%
TimeSaved: LoopSelector:      Loop savings = 3.007664e-07%
TimeSaved: LoopSelector: End
Referencing:   %19 = add nuw nsw i64 %18, 1, !noelle.pdg.inst.id !62
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
Referencing:   %19 = add nuw nsw i64 %18, 1, !noelle.pdg.inst.id !62
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
Referencing:   %19 = add nuw nsw i64 %18, 1, !noelle.pdg.inst.id !62
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
Referencing:   %19 = add nuw nsw i64 %18, 1, !noelle.pdg.inst.id !62
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 312
TimeSaved: LoopSelector:      Function: "color_quantize"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  br i1 %26, label %..split11_crit_edge.us.us..loopexit3.loopexit.us.us_crit_edge, label %.loopexit.us._crit_edge.us.us.preheader.us, !noelle.loop.id !79, !noelle.pdg.inst.id !80"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 313
TimeSaved: LoopSelector:      Function: "color_quantize"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  br label %.preheader.us.us.us.us, !noelle.loop.id !85, !noelle.pdg.inst.id !86"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 314
TimeSaved: LoopSelector:      Function: "color_quantize"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %36 = getelementptr inbounds i8*, i8** %9, i64 %32, !noelle.pdg.inst.id !91"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 164
TimeSaved: LoopSelector:      Function: "jinit_d_main_controller"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %112 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 0, i32 3, !noelle.pdg.inst.id !465"
TimeSaved: LoopSelector:      Coverage: 8.437132e-08%
TimeSaved: LoopSelector:      Whole-program savings = 2.163367e-09%
TimeSaved: LoopSelector:      Loop savings = 2.564103e+00%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 126
TimeSaved: LoopSelector:      Function: "jpeg_huff_decode"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %36 = shl i64 %33, 1, !noelle.pdg.inst.id !147"
TimeSaved: LoopSelector:      Coverage: 4.577996e-03%
TimeSaved: LoopSelector:      Whole-program savings = 2.686794e-04%
TimeSaved: LoopSelector:      Loop savings = 5.868930e+00%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 370
TimeSaved: LoopSelector:      Function: "update_box"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  br label %.preheader10, !noelle.loop.id !277, !noelle.pdg.inst.id !278"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 371
TimeSaved: LoopSelector:      Function: "update_box"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %139 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %138, !noelle.pdg.inst.id !280"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 372
TimeSaved: LoopSelector:      Function: "update_box"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %144 = load i16, i16* %142, align 2, !tbaa !94, !noelle.pdg.inst.id !287"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 233
TimeSaved: LoopSelector:      Function: "int_upsample"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %62 = getelementptr inbounds i8*, i8** %8, i64 %60, !noelle.pdg.inst.id !275"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 234
TimeSaved: LoopSelector:      Function: "int_upsample"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %72 = load i8, i8* %70, align 1, !tbaa !209, !noelle.pdg.inst.id !107"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 178
TimeSaved: LoopSelector:      Function: "start_output_pass"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %48 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i64 0, i32 19, !noelle.pdg.inst.id !124"
TimeSaved: LoopSelector:      Coverage: 2.455422e-07%
TimeSaved: LoopSelector:      Whole-program savings = 1.124951e-07%
TimeSaved: LoopSelector:      Loop savings = 4.581498e+01%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [13 x i32], align 16, !noelle.pdg.inst.id !3183
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [13 x i32], align 16, !noelle.pdg.inst.id !3183
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 55
TimeSaved: LoopSelector:      Function: "read_color_map"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %16 = tail call i32 @getc(%struct._IO_FILE* %1) #18, !noelle.pdg.inst.id !42"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 367
TimeSaved: LoopSelector:      Function: "update_box"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  br label %.preheader14, !noelle.loop.id !229, !noelle.pdg.inst.id !230"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 368
TimeSaved: LoopSelector:      Function: "update_box"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %112 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %111, !noelle.pdg.inst.id !232"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 369
TimeSaved: LoopSelector:      Function: "update_box"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %117 = load i16, i16* %115, align 2, !tbaa !94, !noelle.pdg.inst.id !239"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 418
TimeSaved: LoopSelector:      Function: "free_pool"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %54 = bitcast %union.large_pool_struct* %53 to i8*, !noelle.pdg.inst.id !559"
TimeSaved: LoopSelector:      Coverage: 1.557624e-07%
TimeSaved: LoopSelector:      Whole-program savings = 3.461387e-08%
TimeSaved: LoopSelector:      Loop savings = 2.222222e+01%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [13 x i32], align 16, !noelle.pdg.inst.id !3183
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [13 x i32], align 16, !noelle.pdg.inst.id !3183
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [13 x i32], align 16, !noelle.pdg.inst.id !3183
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [13 x i32], align 16, !noelle.pdg.inst.id !3183
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [13 x i32], align 16, !noelle.pdg.inst.id !3183
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [13 x i32], align 16, !noelle.pdg.inst.id !3183
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 52
TimeSaved: LoopSelector:      Function: "read_color_map"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  br label %.preheader3, !noelle.loop.id !3363, !noelle.pdg.inst.id !3364"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 53
TimeSaved: LoopSelector:      Function: "read_color_map"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %142 = tail call fastcc i32 @read_pbm_integer(%struct.jpeg_decompress_struct* %0, %struct._IO_FILE* %1) #18, !noelle.pdg.inst.id !72"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 54
TimeSaved: LoopSelector:      Function: "read_color_map"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %156 = getelementptr inbounds i8, i8* %146, i64 %155, !noelle.pdg.inst.id !3375"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 364
TimeSaved: LoopSelector:      Function: "update_box"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  br label %.preheader18, !noelle.loop.id !181, !noelle.pdg.inst.id !182"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 365
TimeSaved: LoopSelector:      Function: "update_box"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %86 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %85, !noelle.pdg.inst.id !184"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 366
TimeSaved: LoopSelector:      Function: "update_box"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %91 = load i16, i16* %89, align 2, !tbaa !94, !noelle.pdg.inst.id !191"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 147
TimeSaved: LoopSelector:      Function: "start_pass_phuff_decoder"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %63 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %62, !noelle.pdg.inst.id !926"
TimeSaved: LoopSelector:      Coverage: 2.574407e-07%
TimeSaved: LoopSelector:      Whole-program savings = 1.200669e-07%
TimeSaved: LoopSelector:      Loop savings = 4.663866e+01%
TimeSaved: LoopSelector:    Loop 148
TimeSaved: LoopSelector:      Function: "start_pass_phuff_decoder"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %74 = getelementptr inbounds [64 x i32], [64 x i32]* %67, i64 %68, i64 %73, !noelle.pdg.inst.id !941"
TimeSaved: LoopSelector:      Coverage: 1.038416e-07%
TimeSaved: LoopSelector:      Whole-program savings = 6.490101e-08%
TimeSaved: LoopSelector:      Loop savings = 6.250000e+01%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 302
TimeSaved: LoopSelector:      Function: "color_quantize3"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %49 = getelementptr inbounds i8*, i8** %1, i64 %48, !noelle.pdg.inst.id !106"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 303
TimeSaved: LoopSelector:      Function: "color_quantize3"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %56 = getelementptr inbounds i8, i8* %53, i64 1, !noelle.pdg.inst.id !115"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 69
TimeSaved: LoopSelector:      Function: "jpeg_calc_output_dimensions"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %85 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %83, i64 0, i32 3, !noelle.pdg.inst.id !283"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 70
TimeSaved: LoopSelector:      Function: "jpeg_calc_output_dimensions"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %89 = shl i32 %88, 1, !noelle.pdg.inst.id !290"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 68
TimeSaved: LoopSelector:      Function: "jpeg_calc_output_dimensions"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %113 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %111, i64 0, i32 9, !noelle.pdg.inst.id !330"
TimeSaved: LoopSelector:      Coverage: 5.624755e-08%
TimeSaved: LoopSelector:      Whole-program savings = 5.624755e-08%
TimeSaved: LoopSelector:      Loop savings = 1.000000e+02%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 175
TimeSaved: LoopSelector:      Function: "process_data_context_main"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %151 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %150, i64 0, i32 3, !noelle.pdg.inst.id !357"
TimeSaved: LoopSelector:      Coverage: 2.401338e-07%
TimeSaved: LoopSelector:      Whole-program savings = 2.271536e-07%
TimeSaved: LoopSelector:      Loop savings = 9.459459e+01%
TimeSaved: LoopSelector:    Loop 176
TimeSaved: LoopSelector:      Function: "process_data_context_main"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %177 = add nsw i64 %175, %168, !noelle.pdg.inst.id !388"
TimeSaved: LoopSelector:      Coverage: 6.598270e-08%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = 0.000000e+00%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 391
TimeSaved: LoopSelector:      Function: "format_message"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %41 = getelementptr inbounds i8, i8* %40, i64 1, !noelle.pdg.inst.id !161"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 2
TimeSaved: LoopSelector:      Function: "COM_handler"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %65 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %7, align 8, !tbaa !1065, !noelle.pdg.inst.id !507"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 415
TimeSaved: LoopSelector:      Function: "access_virt_barray"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %226 = load [64 x i16]**, [64 x i16]*** %223, align 8, !tbaa !396, !noelle.pdg.inst.id !367"
TimeSaved: LoopSelector:      Coverage: 2.146709e-05%
TimeSaved: LoopSelector:      Whole-program savings = 1.192664e-05%
TimeSaved: LoopSelector:      Loop savings = 5.555780e+01%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 77
TimeSaved: LoopSelector:      Function: "start_input_pass"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %153 = getelementptr inbounds %struct.jpeg_decompress_struct.261, %struct.jpeg_decompress_struct.261* %0, i64 0, i32 63, i64 %152, !noelle.pdg.inst.id !1016"
TimeSaved: LoopSelector:      Coverage: 2.844828e-07%
TimeSaved: LoopSelector:      Whole-program savings = 2.271536e-08%
TimeSaved: LoopSelector:      Loop savings = 7.984791e+00%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 163
TimeSaved: LoopSelector:      Function: "jinit_d_main_controller"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %65 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %64, i64 0, i32 3, !noelle.pdg.inst.id !418"
TimeSaved: LoopSelector:      Coverage: 1.124951e-07%
TimeSaved: LoopSelector:      Whole-program savings = 9.302479e-08%
TimeSaved: LoopSelector:      Loop savings = 8.269231e+01%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 271
TimeSaved: LoopSelector:      Function: "jinit_1pass_quantizer"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  br label %._crit_edge133.us, !noelle.loop.id !1963, !noelle.pdg.inst.id !1964"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 272
TimeSaved: LoopSelector:      Function: "jinit_1pass_quantizer"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %195 = getelementptr inbounds [3 x i32], [3 x i32]* @select_ncolors.RGB_order, i64 0, i64 %192, !noelle.pdg.inst.id !1968"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 392
TimeSaved: LoopSelector:      Function: "alloc_small"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %35 = getelementptr inbounds %union.small_pool_struct, %union.small_pool_struct* %34, i64 0, i32 0, i32 2, !noelle.pdg.inst.id !469"
TimeSaved: LoopSelector:      Coverage: 3.428937e-07%
TimeSaved: LoopSelector:      Whole-program savings = 6.490101e-09%
TimeSaved: LoopSelector:      Loop savings = 1.892744e+00%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 331
TimeSaved: LoopSelector:      Function: "jinit_2pass_quantizer"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %34 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !469, !noelle.pdg.inst.id !215"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 242
TimeSaved: LoopSelector:      Function: "jinit_color_deconverter"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %187 = mul nsw i64 %186, 91881, !noelle.pdg.inst.id !1572"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
Referencing:   %267 = shl nuw nsw i64 %266, 7, !noelle.pdg.inst.id !5854
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
Referencing:   %267 = shl nuw nsw i64 %266, 7, !noelle.pdg.inst.id !5854
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 409
TimeSaved: LoopSelector:      Function: "realize_virt_arrays"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %347 = add i32 %346, 1, !noelle.pdg.inst.id !5951"
TimeSaved: LoopSelector:      Coverage: 1.284716e-05%
TimeSaved: LoopSelector:      Whole-program savings = 1.046637e-05%
TimeSaved: LoopSelector:      Loop savings = 8.146838e+01%
TimeSaved: LoopSelector:    Loop 407
TimeSaved: LoopSelector:      Function: "realize_virt_arrays"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %288 = sub i32 %262, %286, !noelle.pdg.inst.id !5882"
TimeSaved: LoopSelector:      Coverage: 1.308837e-05%
TimeSaved: LoopSelector:      Whole-program savings = 8.706471e-06%
TimeSaved: LoopSelector:      Loop savings = 6.652066e+01%
TimeSaved: LoopSelector:    Loop 406
TimeSaved: LoopSelector:      Function: "realize_virt_arrays"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %234 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %233, i64 0, i32 0, !noelle.pdg.inst.id !5824"
TimeSaved: LoopSelector:      Coverage: 1.341937e-05%
TimeSaved: LoopSelector:      Whole-program savings = 5.105546e-07%
TimeSaved: LoopSelector:      Loop savings = 3.804611e+00%
TimeSaved: LoopSelector:    Loop 408
TimeSaved: LoopSelector:      Function: "realize_virt_arrays"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %332 = add i32 %330, 1, !noelle.pdg.inst.id !5925"
TimeSaved: LoopSelector:      Coverage: 4.867576e-08%
TimeSaved: LoopSelector:      Whole-program savings = 4.002229e-08%
TimeSaved: LoopSelector:      Loop savings = 8.222222e+01%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 40
TimeSaved: LoopSelector:      Function: "write_colormap"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %75 = load i8*, i8** %51, align 8, !tbaa !1378, !noelle.pdg.inst.id !776"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 17
TimeSaved: LoopSelector:      Function: "emit_header"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %22 = shl i32 1, %21, !noelle.pdg.inst.id !7286"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %8 = alloca [128 x i8], align 16, !noelle.pdg.inst.id !5808
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %7 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !5807
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [128 x i64], align 16, !noelle.pdg.inst.id !5805
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [256 x i64], align 16, !noelle.pdg.inst.id !5806
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %8 = alloca [128 x i8], align 16, !noelle.pdg.inst.id !5808
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %7 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !5807
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [128 x i64], align 16, !noelle.pdg.inst.id !5805
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [256 x i64], align 16, !noelle.pdg.inst.id !5806
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %8 = alloca [128 x i8], align 16, !noelle.pdg.inst.id !5808
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %7 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !5807
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [128 x i64], align 16, !noelle.pdg.inst.id !5805
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [256 x i64], align 16, !noelle.pdg.inst.id !5806
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %8 = alloca [128 x i8], align 16, !noelle.pdg.inst.id !5808
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %7 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !5807
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [128 x i64], align 16, !noelle.pdg.inst.id !5805
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [256 x i64], align 16, !noelle.pdg.inst.id !5806
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %8 = alloca [128 x i8], align 16, !noelle.pdg.inst.id !5808
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %7 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !5807
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [128 x i64], align 16, !noelle.pdg.inst.id !5805
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [256 x i64], align 16, !noelle.pdg.inst.id !5806
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %8 = alloca [128 x i8], align 16, !noelle.pdg.inst.id !5808
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %7 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !5807
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [128 x i64], align 16, !noelle.pdg.inst.id !5805
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [256 x i64], align 16, !noelle.pdg.inst.id !5806
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %8 = alloca [128 x i8], align 16, !noelle.pdg.inst.id !5808
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %7 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !5807
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [128 x i64], align 16, !noelle.pdg.inst.id !5805
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [256 x i64], align 16, !noelle.pdg.inst.id !5806
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %8 = alloca [128 x i8], align 16, !noelle.pdg.inst.id !5808
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %7 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !5807
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [128 x i64], align 16, !noelle.pdg.inst.id !5805
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [256 x i64], align 16, !noelle.pdg.inst.id !5806
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %8 = alloca [128 x i8], align 16, !noelle.pdg.inst.id !5808
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %7 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !5807
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [128 x i64], align 16, !noelle.pdg.inst.id !5805
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [256 x i64], align 16, !noelle.pdg.inst.id !5806
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %8 = alloca [128 x i8], align 16, !noelle.pdg.inst.id !5808
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %7 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !5807
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %5 = alloca [128 x i64], align 16, !noelle.pdg.inst.id !5805
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [256 x i64], align 16, !noelle.pdg.inst.id !5806
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 352
TimeSaved: LoopSelector:      Function: "fill_inverse_cmap"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %340 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %339, !noelle.pdg.inst.id !6179"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 354
TimeSaved: LoopSelector:      Function: "fill_inverse_cmap"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %599 = load i64, i64* %597, align 8, !tbaa !5988, !noelle.pdg.inst.id !200"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 356
TimeSaved: LoopSelector:      Function: "fill_inverse_cmap"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %669 = load i64, i64* %667, align 8, !tbaa !5988, !noelle.pdg.inst.id !232"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 355
TimeSaved: LoopSelector:      Function: "fill_inverse_cmap"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %634 = load i64, i64* %632, align 8, !tbaa !5988, !noelle.pdg.inst.id !216"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 353
TimeSaved: LoopSelector:      Function: "fill_inverse_cmap"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %382 = load i64, i64* %380, align 8, !tbaa !5988, !noelle.pdg.inst.id !184"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 402
TimeSaved: LoopSelector:      Function: "realize_virt_arrays"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %92 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %91, i64 0, i32 0, !noelle.pdg.inst.id !5654"
TimeSaved: LoopSelector:      Coverage: 1.972991e-06%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = 0.000000e+00%
TimeSaved: LoopSelector:    Loop 403
TimeSaved: LoopSelector:      Function: "realize_virt_arrays"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %143 = sub i32 %119, %141, !noelle.pdg.inst.id !5713"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 404
TimeSaved: LoopSelector:      Function: "realize_virt_arrays"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %191 = add i32 %189, 1, !noelle.pdg.inst.id !5761"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 405
TimeSaved: LoopSelector:      Function: "realize_virt_arrays"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %206 = add i32 %205, 1, !noelle.pdg.inst.id !5787"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 150
TimeSaved: LoopSelector:      Function: "start_pass_phuff_decoder"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %166 = icmp eq i32 %164, 0, !noelle.pdg.inst.id !1049"
TimeSaved: LoopSelector:      Coverage: 1.027059e-05%
TimeSaved: LoopSelector:      Whole-program savings = 1.308837e-07%
TimeSaved: LoopSelector:      Loop savings = 1.274355e+00%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 149
TimeSaved: LoopSelector:      Function: "start_pass_phuff_decoder"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %194 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %193, !noelle.pdg.inst.id !1081"
TimeSaved: LoopSelector:      Coverage: 2.725085e-05%
TimeSaved: LoopSelector:      Whole-program savings = 2.163367e-07%
TimeSaved: LoopSelector:      Loop savings = 7.938713e-01%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 66
TimeSaved: LoopSelector:      Function: "jpeg_finish_output"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %28 = load i32, i32* %25, align 4, !tbaa !129, !noelle.pdg.inst.id !77"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 400
TimeSaved: LoopSelector:      Function: "realize_virt_arrays"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %11 = getelementptr inbounds %struct.jvirt_sarray_control, %struct.jvirt_sarray_control* %8, i64 0, i32 0, !noelle.pdg.inst.id !5540"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 74
TimeSaved: LoopSelector:      Function: "start_input_pass"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %72 = getelementptr inbounds %struct.jpeg_decompress_struct.261, %struct.jpeg_decompress_struct.261* %0, i64 0, i32 63, i64 %71, !noelle.pdg.inst.id !918"
TimeSaved: LoopSelector:      Coverage: 4.802675e-07%
TimeSaved: LoopSelector:      Whole-program savings = 4.413269e-07%
TimeSaved: LoopSelector:      Loop savings = 9.189189e+01%
TimeSaved: LoopSelector:    Loop 76
TimeSaved: LoopSelector:      Function: "start_input_pass"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %122 = load i32, i32* %64, align 8, !tbaa !864, !noelle.pdg.inst.id !525"
TimeSaved: LoopSelector:      Coverage: 6.057428e-08%
TimeSaved: LoopSelector:      Whole-program savings = 6.057428e-08%
TimeSaved: LoopSelector:      Loop savings = 1.000000e+02%
TimeSaved: LoopSelector:    Loop 75
TimeSaved: LoopSelector:      Function: "start_input_pass"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %112 = load i32, i32* %64, align 8, !tbaa !864, !noelle.pdg.inst.id !492"
TimeSaved: LoopSelector:      Coverage: 4.326734e-08%
TimeSaved: LoopSelector:      Whole-program savings = 4.326734e-08%
TimeSaved: LoopSelector:      Loop savings = 1.000000e+02%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 328
TimeSaved: LoopSelector:      Function: "quantize_fs_dither"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %32 = getelementptr inbounds i8*, i8** %2, i64 %31, !noelle.pdg.inst.id !169"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 330
TimeSaved: LoopSelector:      Function: "quantize_fs_dither"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %42 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %7, i64 0, i32 8, i64 %41, !noelle.pdg.inst.id !189"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 329
TimeSaved: LoopSelector:      Function: "quantize_fs_dither"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %36 = getelementptr inbounds %struct.my_cquantizer, %struct.my_cquantizer* %7, i64 0, i32 8, i64 %35, !noelle.pdg.inst.id !180"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !35298
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [17 x i8], align 16, !noelle.pdg.inst.id !35297
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !35298
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [17 x i8], align 16, !noelle.pdg.inst.id !35297
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !35298
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [17 x i8], align 16, !noelle.pdg.inst.id !35297
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !35298
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [17 x i8], align 16, !noelle.pdg.inst.id !35297
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 90
TimeSaved: LoopSelector:      Function: "read_markers"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  br i1 %221, label %224, label %.loopexit._crit_edge.._crit_edge204_crit_edge, !prof !35603, !noelle.loop.id !35604, !noelle.pdg.inst.id !35605"
TimeSaved: LoopSelector:      Coverage: 1.070867e-06%
TimeSaved: LoopSelector:      Whole-program savings = 9.302479e-08%
TimeSaved: LoopSelector:      Loop savings = 8.686869e+00%
TimeSaved: LoopSelector:    Loop 91
TimeSaved: LoopSelector:      Function: "read_markers"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %254 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %252, i64 0, i32 0, !noelle.pdg.inst.id !35635"
TimeSaved: LoopSelector:      Coverage: 2.336437e-07%
TimeSaved: LoopSelector:      Whole-program savings = 1.298020e-08%
TimeSaved: LoopSelector:      Loop savings = 5.555556e+00%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 417
TimeSaved: LoopSelector:      Function: "free_pool"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %36 = getelementptr inbounds %struct.jvirt_barray_control, %struct.jvirt_barray_control* %35, i64 0, i32 10, !noelle.pdg.inst.id !530"
TimeSaved: LoopSelector:      Coverage: 3.461387e-08%
TimeSaved: LoopSelector:      Whole-program savings = 4.326734e-09%
TimeSaved: LoopSelector:      Loop savings = 1.250000e+01%
TimeSaved: LoopSelector: End
Referencing:   %9 = shl nuw nsw i64 %8, 7, !noelle.pdg.inst.id !163
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
Referencing:   %9 = shl nuw nsw i64 %8, 7, !noelle.pdg.inst.id !163
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 397
TimeSaved: LoopSelector:      Function: "alloc_barray"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %31 = sub i32 %3, %29, !noelle.pdg.inst.id !199"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 399
TimeSaved: LoopSelector:      Function: "alloc_barray"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %61 = add i32 %60, 1, !noelle.pdg.inst.id !245"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 398
TimeSaved: LoopSelector:      Function: "alloc_barray"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %46 = add i32 %44, 1, !noelle.pdg.inst.id !218"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !35298
ClonableMemoryObject:   There are RAW memory data dependences between loop iterations
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [17 x i8], align 16, !noelle.pdg.inst.id !35297
ClonableMemoryObject:   There are RAW memory data dependences between loop iterations
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !35298
ClonableMemoryObject:   There are RAW memory data dependences between loop iterations
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [17 x i8], align 16, !noelle.pdg.inst.id !35297
ClonableMemoryObject:   There are RAW memory data dependences between loop iterations
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !35298
ClonableMemoryObject:   There are RAW memory data dependences between loop iterations
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [17 x i8], align 16, !noelle.pdg.inst.id !35297
ClonableMemoryObject:   There are RAW memory data dependences between loop iterations
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !35298
ClonableMemoryObject:   There are RAW memory data dependences between loop iterations
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [17 x i8], align 16, !noelle.pdg.inst.id !35297
ClonableMemoryObject:   There are RAW memory data dependences between loop iterations
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !35298
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [17 x i8], align 16, !noelle.pdg.inst.id !35297
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !35298
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [17 x i8], align 16, !noelle.pdg.inst.id !35297
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !35298
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [17 x i8], align 16, !noelle.pdg.inst.id !35297
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !35298
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [17 x i8], align 16, !noelle.pdg.inst.id !35297
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !35298
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [17 x i8], align 16, !noelle.pdg.inst.id !35297
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !35298
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [17 x i8], align 16, !noelle.pdg.inst.id !35297
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !35298
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [17 x i8], align 16, !noelle.pdg.inst.id !35297
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !35298
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [17 x i8], align 16, !noelle.pdg.inst.id !35297
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !35298
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [17 x i8], align 16, !noelle.pdg.inst.id !35297
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !35298
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [17 x i8], align 16, !noelle.pdg.inst.id !35297
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !35298
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [17 x i8], align 16, !noelle.pdg.inst.id !35297
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca [256 x i8], align 16, !noelle.pdg.inst.id !35298
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [17 x i8], align 16, !noelle.pdg.inst.id !35297
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 82
TimeSaved: LoopSelector:      Function: "read_markers"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %34 = icmp eq i32 %33, 0, !noelle.pdg.inst.id !35336"
TimeSaved: LoopSelector:      Coverage: 1.660601e-05%
TimeSaved: LoopSelector:      Whole-program savings = 1.624689e-06%
TimeSaved: LoopSelector:      Loop savings = 9.783742e+00%
TimeSaved: LoopSelector:    Loop 89
TimeSaved: LoopSelector:      Function: "read_markers"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %597 = icmp eq i64 %595, 0, !noelle.pdg.inst.id !35969"
TimeSaved: LoopSelector:      Coverage: 6.302970e-06%
TimeSaved: LoopSelector:      Whole-program savings = 1.473253e-06%
TimeSaved: LoopSelector:      Loop savings = 2.337395e+01%
TimeSaved: LoopSelector:    Loop 88
TimeSaved: LoopSelector:      Function: "read_markers"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %540 = icmp eq i64 %537, 0, !noelle.pdg.inst.id !35913"
TimeSaved: LoopSelector:      Coverage: 3.450571e-06%
TimeSaved: LoopSelector:      Whole-program savings = 1.200669e-06%
TimeSaved: LoopSelector:      Loop savings = 3.479624e+01%
TimeSaved: LoopSelector:    Loop 87
TimeSaved: LoopSelector:      Function: "read_markers"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %516 = icmp eq i64 %514, 0, !noelle.pdg.inst.id !35893"
TimeSaved: LoopSelector:      Coverage: 1.086227e-05%
TimeSaved: LoopSelector:      Whole-program savings = 1.174708e-06%
TimeSaved: LoopSelector:      Loop savings = 1.081458e+01%
TimeSaved: LoopSelector:    Loop 83
TimeSaved: LoopSelector:      Function: "read_markers"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %682 = icmp eq i64 %679, 0, !noelle.pdg.inst.id !36073"
TimeSaved: LoopSelector:      Coverage: 3.047103e-06%
TimeSaved: LoopSelector:      Whole-program savings = 2.898912e-07%
TimeSaved: LoopSelector:      Loop savings = 9.513667e+00%
TimeSaved: LoopSelector:    Loop 85
TimeSaved: LoopSelector:      Function: "read_markers"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %725 = icmp eq i64 %723, 0, !noelle.pdg.inst.id !36114"
TimeSaved: LoopSelector:      Coverage: 2.905402e-06%
TimeSaved: LoopSelector:      Whole-program savings = 2.747476e-07%
TimeSaved: LoopSelector:      Loop savings = 9.456441e+00%
TimeSaved: LoopSelector:    Loop 86
TimeSaved: LoopSelector:      Function: "read_markers"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %406 = icmp eq i64 %403, 0, !noelle.pdg.inst.id !35788"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 84
TimeSaved: LoopSelector:      Function: "read_markers"
TimeSaved: LoopSelector:      Loop nesting level: 3
TimeSaved: LoopSelector:      "  %748 = icmp eq i64 %746, 0, !noelle.pdg.inst.id !36139"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 206
TimeSaved: LoopSelector:      Function: "jinit_inverse_dct"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %21 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8, !tbaa !96, !noelle.pdg.inst.id !65"
TimeSaved: LoopSelector:      Coverage: 5.732923e-08%
TimeSaved: LoopSelector:      Whole-program savings = 2.163367e-09%
TimeSaved: LoopSelector:      Loop savings = 3.773585e+00%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 22
TimeSaved: LoopSelector:      Function: "put_demapped_gray.55"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %23 = getelementptr inbounds i8, i8* %20, i64 1, !noelle.pdg.inst.id !124"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [64 x i32], align 16, !noelle.pdg.inst.id !220
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %6 = alloca [64 x i32], align 16, !noelle.pdg.inst.id !220
ClonableMemoryObject:   There is no need to clone it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 215
TimeSaved: LoopSelector:      Function: "jpeg_idct_islow"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %177 = getelementptr inbounds i8*, i8** %3, i64 %175, !noelle.pdg.inst.id !410"
TimeSaved: LoopSelector:      Coverage: 1.787002e+00%
TimeSaved: LoopSelector:      Whole-program savings = 1.728851e+00%
TimeSaved: LoopSelector:      Loop savings = 9.674587e+01%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 71
TimeSaved: LoopSelector:      Function: "jpeg_calc_output_dimensions"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %118 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %116, i64 0, i32 2, !noelle.pdg.inst.id !340"
TimeSaved: LoopSelector:      Coverage: 2.141733e-07%
TimeSaved: LoopSelector:      Whole-program savings = 2.141733e-07%
TimeSaved: LoopSelector:      Loop savings = 1.000000e+02%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 145
TimeSaved: LoopSelector:      Function: "start_pass_phuff_decoder"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %101 = getelementptr inbounds %struct.jpeg_decompress_struct.238, %struct.jpeg_decompress_struct.238* %0, i64 0, i32 63, i64 %100, !noelle.pdg.inst.id !974"
TimeSaved: LoopSelector:      Coverage: 8.308412e-06%
TimeSaved: LoopSelector:      Whole-program savings = 5.446277e-06%
TimeSaved: LoopSelector:      Loop savings = 6.555136e+01%
TimeSaved: LoopSelector:    Loop 146
TimeSaved: LoopSelector:      Function: "start_pass_phuff_decoder"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %125 = getelementptr inbounds [64 x i32], [64 x i32]* %105, i64 %106, i64 %124, !noelle.pdg.inst.id !994"
TimeSaved: LoopSelector:      Coverage: 8.100728e-06%
TimeSaved: LoopSelector:      Whole-program savings = 5.238594e-06%
TimeSaved: LoopSelector:      Loop savings = 6.466818e+01%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state.334, align 4, !noelle.pdg.inst.id !376
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state.332, align 16, !noelle.pdg.inst.id !375
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca %struct.savable_state.334, align 4, !noelle.pdg.inst.id !376
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state.332, align 16, !noelle.pdg.inst.id !375
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 151
TimeSaved: LoopSelector:      Function: "decode_mcu_DC_first"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %37 = getelementptr inbounds %struct.phuff_entropy_decoder, %struct.phuff_entropy_decoder* %7, i64 0, i32 2, i32 1, i64 %36, !noelle.pdg.inst.id !430"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 173
TimeSaved: LoopSelector:      Function: "process_data_context_main"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %74 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %73, i64 0, i32 3, !noelle.pdg.inst.id !264"
TimeSaved: LoopSelector:      Coverage: 2.001115e-07%
TimeSaved: LoopSelector:      Whole-program savings = 1.871313e-07%
TimeSaved: LoopSelector:      Loop savings = 9.351351e+01%
TimeSaved: LoopSelector:    Loop 174
TimeSaved: LoopSelector:      Function: "process_data_context_main"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %103 = load i64, i64* %99, align 8, !tbaa !186, !noelle.pdg.inst.id !142"
TimeSaved: LoopSelector:      Coverage: 8.328964e-08%
TimeSaved: LoopSelector:      Whole-program savings = 8.328964e-08%
TimeSaved: LoopSelector:      Loop savings = 1.000000e+02%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [64 x i32], align 16, !noelle.pdg.inst.id !449
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state.332, align 16, !noelle.pdg.inst.id !448
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %4 = alloca [64 x i32], align 16, !noelle.pdg.inst.id !449
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %3 = alloca %struct.bitread_working_state.332, align 16, !noelle.pdg.inst.id !448
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 161
TimeSaved: LoopSelector:      Function: "decode_mcu_AC_refine"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %312 = add nsw i64 %310, -1, !noelle.pdg.inst.id !895"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 124
TimeSaved: LoopSelector:      Function: "jpeg_fill_bit_buffer"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %18 = load i32, i32* %11, align 8, !tbaa !212, !noelle.pdg.inst.id !62"
TimeSaved: LoopSelector:      Coverage: 4.586948e-01%
TimeSaved: LoopSelector:      Whole-program savings = 1.268240e-01%
TimeSaved: LoopSelector:      Loop savings = 2.764889e+01%
TimeSaved: LoopSelector:    Loop 125
TimeSaved: LoopSelector:      Function: "jpeg_fill_bit_buffer"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %47 = icmp eq i64 %46, 0, !noelle.pdg.inst.id !254"
TimeSaved: LoopSelector:      Coverage: 2.035310e-03%
TimeSaved: LoopSelector:      Whole-program savings = 1.695604e-04%
TimeSaved: LoopSelector:      Loop savings = 8.330937e+00%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 243
TimeSaved: LoopSelector:      Function: "jinit_color_deconverter"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %124 = mul nsw i64 %123, 91881, !noelle.pdg.inst.id !1513"
TimeSaved: LoopSelector:      Coverage: 7.198604e-06%
TimeSaved: LoopSelector:      Whole-program savings = 7.198604e-06%
TimeSaved: LoopSelector:      Loop savings = 1.000000e+02%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 332
TimeSaved: LoopSelector:      Function: "start_pass_2_quant"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %80 = getelementptr inbounds [32 x i16]*, [32 x i16]** %7, i64 %79, !noelle.pdg.inst.id !311"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 25
TimeSaved: LoopSelector:      Function: "put_gray_rows"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %89 = getelementptr i8, i8* %6, i64 %87, !noelle.pdg.inst.id !256"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
MemoryCloningAnalysis: Exit
TimeSaved: LoopSelector: Start
TimeSaved: LoopSelector:   Order of loops and their maximum savings
TimeSaved: LoopSelector:    Loop 259
TimeSaved: LoopSelector:      Function: "jinit_1pass_quantizer"
TimeSaved: LoopSelector:      Loop nesting level: 1
TimeSaved: LoopSelector:      "  %78 = add nuw i64 %77, 1, !noelle.pdg.inst.id !1790"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 260
TimeSaved: LoopSelector:      Function: "jinit_1pass_quantizer"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %81 = mul nsw i64 %79, %78, !noelle.pdg.inst.id !1795"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector:    Loop 261
TimeSaved: LoopSelector:      Function: "jinit_1pass_quantizer"
TimeSaved: LoopSelector:      Loop nesting level: 2
TimeSaved: LoopSelector:      "  %93 = mul nsw i64 %91, %78, !noelle.pdg.inst.id !1812"
TimeSaved: LoopSelector:      Coverage: 0.000000e+00%
TimeSaved: LoopSelector:      Whole-program savings = 0.000000e+00%
TimeSaved: LoopSelector:      Loop savings = nan%
TimeSaved: LoopSelector: End
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [4 x [64 x i16]**], align 16, !noelle.pdg.inst.id !184
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [4 x [64 x i16]**], align 16, !noelle.pdg.inst.id !184
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [4 x [64 x i16]**], align 16, !noelle.pdg.inst.id !184
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [4 x [64 x i16]**], align 16, !noelle.pdg.inst.id !184
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [4 x [64 x i16]**], align 16, !noelle.pdg.inst.id !184
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [4 x [64 x i16]**], align 16, !noelle.pdg.inst.id !184
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [4 x [64 x i16]**], align 16, !noelle.pdg.inst.id !184
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
MemoryCloningAnalysis: Start
ClonableMemoryObject: Start
ClonableMemoryObject:   Object =   %2 = alloca [4 x [64 x i16]**], align 16, !noelle.pdg.inst.id !184
ClonableMemoryObject:   We cannot identify memory accesses to it
ClonableMemoryObject: Exit
MemoryCloningAnalysis: Exit
opt: /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/src/tools/time_saved/src/TimingModel.cpp:57: uint64_t llvm::noelle::LoopTimingModel::getTimeSavedByParallelizingLoop(): Assertion `instsInBiggestSCCPerIteration <= instsPerIteration' failed.
Stack dump:
0.	Program arguments: opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TimeSaved.so -TimeSaved tmp.bc 
1.	Running pass 'Print estimated time saved by parallelization' on module 'tmp.bc'.
#0 0x000000000219868a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (/project/extra/llvm/9.0.0/release/bin/opt+0x219868a)
#1 0x0000000002196614 llvm::sys::RunSignalHandlers() (/project/extra/llvm/9.0.0/release/bin/opt+0x2196614)
#2 0x0000000002196775 SignalHandler(int) (/project/extra/llvm/9.0.0/release/bin/opt+0x2196775)
#3 0x00007f2cb90bbcf0 __restore_rt (/lib64/libpthread.so.0+0x12cf0)
#4 0x00007f2cb7bb1aff raise (/lib64/libc.so.6+0x4eaff)
#5 0x00007f2cb7b84ea5 abort (/lib64/libc.so.6+0x21ea5)
#6 0x00007f2cb7b84d79 _nl_load_domain.cold.0 (/lib64/libc.so.6+0x21d79)
#7 0x00007f2cb7baa456 (/lib64/libc.so.6+0x47456)
#8 0x00007f2cb1d3f51d llvm::noelle::LoopTimingModel::getTimeSavedByParallelizingLoop() /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/src/tools/time_saved/src/TimingModel.cpp:59:16
/nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/bin/noelle-load: line 50: 3802695 Aborted                 (core dumped) opt -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSvf.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libCudd.so -stat=false -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libSCAFUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/libMemoryAnalysisModules.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/AllocAA.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TalkDown.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CallGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDG.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/PDGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MemoryCloningAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Architecture.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/BasicUtilities.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TypesManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ConstantsManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Dominators.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Task.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DataFlow.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HotProfiler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopStructure.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopEnvironment.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Forest.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Invariants.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/InductionVariables.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopCarriedDependencies.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopSCCDAGAttributes.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopContent.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopNestingGraph.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Scheduler.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/OutlinerPass.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/MetadataManager.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/LoopTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGAnalysis.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/CFGTransformer.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Noelle.so -disable-basicaa -globals-aa -cfl-steens-aa -tbaa -scev-aa -cfl-anders-aa --objc-arc-aa -basic-loop-aa -scev-loop-aa -auto-restrict-aa -intrinsic-aa -global-malloc-aa -pure-fun-aa -semi-local-fun-aa -phi-maze-aa -no-capture-global-aa -no-capture-src-aa -type-aa -no-escape-fields-aa -acyclic-aa -disjoint-fields-aa -field-malloc-aa -loop-variant-allocation-aa -std-in-out-err-aa -array-of-structures-aa -kill-flow-aa -callsite-depth-combinator-aa -unique-access-paths-aa -llvm-aa-results -scalar-evolution -loops -domtree -postdomtree -noellescaf -noellesvf -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/Heuristics.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/ParallelizationTechnique.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DSWP.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/DOALL.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/HELIX.so -load /nfs-scratch/simonec/parallelism/parallelization/Gyms/0/NOELLE/install/lib/TimeSaved.so -TimeSaved tmp.bc
