#!/bin/bash -e

prefixString="### NOELLE Gym ###" ;
echo "${prefixString} All benchmarks from all benchmark suites will be compiled, and statistics will be collected" ;
echo "${prefixString} Results will be stored in `pwd`/results/current_machine" ;
echo "${prefixString} The output of each step will be stored in `pwd`/output.txt" ;
echo "${prefixString}     (you can run \"tail -f output.txt\" to see the current state at finer granularity)" ;
echo "" ;

# Compile NOELLE
echo "${prefixString} Start compiling NOELLE" ;
./scripts/compile_NOELLE.sh >> output.txt 2>&1 ;
echo "${prefixString}   NOELLE has been compiled succesfully" ;

# Configure NOELLE
source NOELLE/enable ;
export NOELLE_CORES=8 ;

# Compile all benchmarks
echo "${prefixString} Start compiling all benchmarks for all configurations";
./scripts/compile_benchmarks.sh >> output.txt 2>&1 ;
echo "${prefixString}   All benchmarks have been compiled for all configurations" ;

# Generate statistics about loops
echo "${prefixString} Start generating statistics about loops" ;
./scripts/loops.sh >> output.txt 2>&1 ;
echo "${prefixString}   All loop statistics are generated" ;

# Generate statistics about dependences
echo "${prefixString} Start generating statistics about dependences" ;
./scripts/compute_dependences.sh >> output.txt 2>&1 ;
echo "${prefixString}   Dependences statistics are generated" ;

# Generate times of baseline binaries for all benchmarks
echo "${prefixString} Start running baseline binaries";
./scripts/generate_baseline_binaries.sh >> output.txt 2>&1 ;
echo "${prefixString}   Binaries for baseline are generated" ;

# Check if we need to run HELIX and DSWP
run_HELIX_DSWP="0";
if ! test -z ${NOELLE_SUBMISSION} ; then
  run_HELIX_DSWP="1";
fi
if ! test -z ${NOELLE_FINAL} ; then
  run_HELIX_DSWP="1";
fi
if test "${run_HELIX_DSWP}" == "1" ; then

    # Generate times of HELIX parallelized binaries for all benchmarks
    echo "${prefixString} Start running NOELLE HELIX binaries";
    ./scripts/optimize_benchmarks.sh "HELIX" >> output.txt 2>&1 ;
    echo "${prefixString}   NOELLE HELIX IR files are generated" ;

    # Generate times of DSWP parallelized binaries for all benchmarks
    echo "${prefixString} Start running NOELLE DSWP binaries";
    ./scripts/optimize_benchmarks.sh "DSWP" >> output.txt 2>&1 ;
    echo "${prefixString}   NOELLE DSWP IR files are generated" ;
fi

# Compute the parallelization statistics
echo "${prefixString} Compute the impact of the parallelization techniques" ;
./scripts/parallelization_stats.sh "./results/current_machine/IR" "./results/current_machine/parallelization" >> output.txt 2>&1 ;

# Clean
echo "${prefixString} Clean" ;
./scripts/clean.sh >> output.txt 2>&1 ;
