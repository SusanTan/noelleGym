#!/bin/bash -e

prefixString="### NOELLE Gym: Run ###" ;
echo "${prefixString} All benchmarks from all benchmark suites will run" ;
echo "${prefixString} Results will be stored in `pwd`/results/current_machine" ;
echo "${prefixString} The output of each step will be stored in `pwd`/output.txt" ;
echo "${prefixString}     (you can run \"tail -f output.txt\" to see the current state at finer granularity)" ;
echo "" ;

# Configure NOELLE
source NOELLE/enable ;
export NOELLE_CORES=8 ;

# Generate and run the baseline binaries
./bin/runBaseline

# Generate times for parallelization enablers
echo "${prefixString} Start running NOELLE enablers binaries";
./scripts/copy_NOELLE_enablers.sh >> output.txt 2>&1 ;
./scripts/generate_NOELLE_binaries.sh "NONE" >> output.txt 2>&1 ;
echo "${prefixString}   Binaries are generated" ;
./scripts/run_NOELLE_binaries.sh "NONE" >> output.txt 2>&1 ;
echo "${prefixString}   Binaries have run" ;

# Generate times of DOALL parallelized binaries for all benchmarks
echo "${prefixString} Start running NOELLE DOALL binaries";
./scripts/generate_NOELLE_binaries.sh "DOALL" >> output.txt 2>&1 ;
echo "${prefixString}   NOELLE DOALL binaries are generated" ;
./scripts/run_NOELLE_binaries.sh "DOALL" >> output.txt 2>&1 ;
echo "${prefixString}   All NOELLE DOALL binaries have run" ;

# Generate times of HELIX parallelized binaries for all benchmarks
echo "${prefixString} Start running NOELLE HELIX binaries";
./scripts/generate_NOELLE_binaries.sh "HELIX" >> output.txt 2>&1 ;
echo "${prefixString}   NOELLE HELIX binaries are generated" ;
./scripts/run_NOELLE_binaries.sh "HELIX" >> output.txt 2>&1 ;
echo "${prefixString}   All NOELLE HELIX binaries have run" ;

# Generate times of DSWP parallelized binaries for all benchmarks
echo "${prefixString} Start running NOELLE DSWP binaries";
./scripts/generate_NOELLE_binaries.sh "DSWP" >> output.txt 2>&1 ;
echo "${prefixString}   NOELLE DSWP binaries are generated" ;
./scripts/run_NOELLE_binaries.sh "DSWP" >> output.txt 2>&1 ;
echo "${prefixString}   All NOELLE DSWP binaries have run" ;

# Compute the parallelization statistics
echo "${prefixString} Compute the impact of the parallelization techniques" ;
./scripts/compute_speedups.sh "`pwd`/results/current_machine/time" "`pwd`/results/current_machine/plots" >> output.txt 2>&1 ;
